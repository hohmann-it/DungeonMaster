{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CheckBoxToggleKeyStroke, Device, fields, KeyStrokeContext, styles, tooltips, ValueField } from '../../../index';\nexport default class CheckBoxField extends ValueField {\n  constructor() {\n    super();\n    this.triStateEnabled = false;\n    this.wrapText = false;\n    this.keyStroke = null;\n    this.checkBoxKeyStroke = new CheckBoxToggleKeyStroke(this);\n    this.$checkBox = null;\n    this.$checkBoxLabel = null;\n  }\n  _init(model) {\n    super._init(model);\n    this._setKeyStroke(this.keyStroke);\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.registerKeyStroke(new CheckBoxToggleKeyStroke(this));\n\n    // The key stroke configured by this.keyStroke has form scope\n    this.formKeyStrokeContext = new KeyStrokeContext();\n    this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.formKeyStrokeContext.registerKeyStroke(this.checkBoxKeyStroke);\n    this.formKeyStrokeContext.$bindTarget = function () {\n      // use form if available\n      let form = this.getForm();\n      if (form) {\n        return form.$container;\n      }\n      // use desktop otherwise\n      return this.session.desktop.$container;\n    }.bind(this);\n  }\n  _render() {\n    this.addContainer(this.$parent, 'check-box-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addFieldContainer(this.$parent.makeDiv());\n    this.$checkBox = this.$fieldContainer.appendDiv('check-box').on('mousedown', this._onMouseDown.bind(this)).data('valuefield', this);\n    this.addField(this.$checkBox);\n    this.$checkBoxLabel = this.$fieldContainer.appendDiv('label').on('mousedown', this._onMouseDown.bind(this));\n    fields.linkElementWithLabel(this.$checkBox, this.$checkBoxLabel);\n    tooltips.installForEllipsis(this.$checkBoxLabel, {\n      parent: this\n    });\n    this.addStatus();\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderValue();\n    this._renderWrapText();\n  }\n  _remove() {\n    tooltips.uninstall(this.$checkBoxLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    super._remove();\n  }\n  _renderDisplayText() {\n    // NOP\n  }\n  setValue(value) {\n    this.setProperty('value', value);\n  }\n\n  /**\n   * The value may be false, true (and null in tri-state mode)\n   */\n  _renderValue() {\n    this.$fieldContainer.toggleClass('checked', this.value === true);\n    this.$checkBox.toggleClass('checked', this.value === true);\n    this.$checkBox.toggleClass('undefined', this.triStateEnabled && this.value !== true && this.value !== false);\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$checkBox.setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch()).setEnabled(this.enabledComputed);\n  }\n  setTriStateEnabled(triStateEnabled) {\n    this.setProperty('triStateEnabled', triStateEnabled);\n    if (this.rendered) {\n      this._renderValue();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this.$checkBoxLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n    this._renderEmptyLabel();\n  }\n\n  /**\n   * @override\n   */\n  _renderFont() {\n    styles.legacyFont(this, this.$fieldContainer);\n    // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  _renderForegroundColor() {\n    styles.legacyForegroundColor(this, this.$fieldContainer);\n  }\n\n  /**\n   * @override\n   */\n  _renderBackgroundColor() {\n    styles.legacyBackgroundColor(this, this.$fieldContainer);\n  }\n  _renderGridData() {\n    super._renderGridData();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n  _setKeyStroke(keyStroke) {\n    this._setProperty('keyStroke', keyStroke);\n    this.checkBoxKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n  }\n  setWrapText(wrapText) {\n    this.setProperty('wrapText', wrapText);\n  }\n  _renderWrapText() {\n    this.$checkBoxLabel.toggleClass('white-space-nowrap', !this.wrapText);\n    this.invalidateLayoutTree();\n  }\n  acceptInput(whileTyping, forceSend) {\n    // NOP\n  }\n  toggleChecked() {\n    if (!this.enabledComputed) {\n      return;\n    }\n    if (this.triStateEnabled) {\n      if (this.value === false) {\n        this.setValue(true);\n      } else if (this.value === true) {\n        this.setValue(null);\n      } else {\n        this.setValue(false);\n      }\n    } else {\n      this.setValue(!this.value);\n    }\n  }\n  prepareForCellEdit(opts) {\n    super.prepareForCellEdit(opts);\n    this.$checkBoxLabel.hide();\n  }\n  _onMouseDown(event) {\n    if (!this.enabledComputed) {\n      return;\n    }\n    this.toggleChecked();\n    // Also focus when check box is clicked otherwise firefox would loose the focus (see device.loosesFocusIfPseudoElementIsRemoved)\n    let onCheckBox = this.$checkBox.is(event.currentTarget),\n      onLabel = this.$checkBoxLabel.isOrHas(event.currentTarget); // isOrHas is required for HTML enabled labels with nested elements\n    if (onCheckBox || onLabel) {\n      this.focusAndPreventDefault(event);\n    }\n  }\n}","map":{"version":3,"names":["CheckBoxToggleKeyStroke","Device","fields","KeyStrokeContext","styles","tooltips","ValueField","CheckBoxField","constructor","triStateEnabled","wrapText","keyStroke","checkBoxKeyStroke","$checkBox","$checkBoxLabel","_init","model","_setKeyStroke","_initKeyStrokeContext","keyStrokeContext","registerKeyStroke","formKeyStrokeContext","invokeAcceptInputOnActiveValueField","$bindTarget","form","getForm","$container","session","desktop","bind","_render","addContainer","$parent","addLabel","addMandatoryIndicator","addFieldContainer","makeDiv","$fieldContainer","appendDiv","on","_onMouseDown","data","addField","linkElementWithLabel","installForEllipsis","parent","addStatus","keyStrokeManager","installKeyStrokeContext","_renderProperties","_renderValue","_renderWrapText","_remove","uninstall","uninstallKeyStrokeContext","_renderDisplayText","setValue","value","setProperty","toggleClass","_renderEnabled","setTabbable","enabledComputed","get","supportsOnlyTouch","setEnabled","setTriStateEnabled","rendered","_renderLabel","contentOrNbsp","labelHtmlEnabled","label","_renderEmptyLabel","_renderFont","legacyFont","invalidateLayoutTree","_renderForegroundColor","legacyForegroundColor","_renderBackgroundColor","legacyBackgroundColor","_renderGridData","updateInnerAlignment","useHorizontalAlignment","_renderGridDataHints","setKeyStroke","_setProperty","parseAndSetKeyStroke","setWrapText","acceptInput","whileTyping","forceSend","toggleChecked","prepareForCellEdit","opts","hide","event","onCheckBox","is","currentTarget","onLabel","isOrHas","focusAndPreventDefault"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/checkbox/CheckBoxField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {CheckBoxToggleKeyStroke, Device, fields, KeyStrokeContext, styles, tooltips, ValueField} from '../../../index';\n\nexport default class CheckBoxField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.triStateEnabled = false;\n    this.wrapText = false;\n    this.keyStroke = null;\n    this.checkBoxKeyStroke = new CheckBoxToggleKeyStroke(this);\n\n    this.$checkBox = null;\n    this.$checkBoxLabel = null;\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setKeyStroke(this.keyStroke);\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.registerKeyStroke(new CheckBoxToggleKeyStroke(this));\n\n    // The key stroke configured by this.keyStroke has form scope\n    this.formKeyStrokeContext = new KeyStrokeContext();\n    this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.formKeyStrokeContext.registerKeyStroke(this.checkBoxKeyStroke);\n    this.formKeyStrokeContext.$bindTarget = function() {\n      // use form if available\n      let form = this.getForm();\n      if (form) {\n        return form.$container;\n      }\n      // use desktop otherwise\n      return this.session.desktop.$container;\n    }.bind(this);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'check-box-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addFieldContainer(this.$parent.makeDiv());\n\n    this.$checkBox = this.$fieldContainer\n      .appendDiv('check-box')\n      .on('mousedown', this._onMouseDown.bind(this))\n      .data('valuefield', this);\n    this.addField(this.$checkBox);\n\n    this.$checkBoxLabel = this.$fieldContainer\n      .appendDiv('label')\n      .on('mousedown', this._onMouseDown.bind(this));\n\n    fields.linkElementWithLabel(this.$checkBox, this.$checkBoxLabel);\n    tooltips.installForEllipsis(this.$checkBoxLabel, {\n      parent: this\n    });\n    this.addStatus();\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderValue();\n    this._renderWrapText();\n  }\n\n  _remove() {\n    tooltips.uninstall(this.$checkBoxLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    super._remove();\n  }\n\n  _renderDisplayText() {\n    // NOP\n  }\n\n  setValue(value) {\n    this.setProperty('value', value);\n  }\n\n  /**\n   * The value may be false, true (and null in tri-state mode)\n   */\n  _renderValue() {\n    this.$fieldContainer.toggleClass('checked', this.value === true);\n    this.$checkBox.toggleClass('checked', this.value === true);\n    this.$checkBox.toggleClass('undefined', this.triStateEnabled && this.value !== true && this.value !== false);\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$checkBox\n      .setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch())\n      .setEnabled(this.enabledComputed);\n  }\n\n  setTriStateEnabled(triStateEnabled) {\n    this.setProperty('triStateEnabled', triStateEnabled);\n    if (this.rendered) {\n      this._renderValue();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this.$checkBoxLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n    this._renderEmptyLabel();\n  }\n\n  /**\n   * @override\n   */\n  _renderFont() {\n    styles.legacyFont(this, this.$fieldContainer);\n    // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  _renderForegroundColor() {\n    styles.legacyForegroundColor(this, this.$fieldContainer);\n  }\n\n  /**\n   * @override\n   */\n  _renderBackgroundColor() {\n    styles.legacyBackgroundColor(this, this.$fieldContainer);\n  }\n\n  _renderGridData() {\n    super._renderGridData();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n\n  _setKeyStroke(keyStroke) {\n    this._setProperty('keyStroke', keyStroke);\n    this.checkBoxKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n  }\n\n  setWrapText(wrapText) {\n    this.setProperty('wrapText', wrapText);\n  }\n\n  _renderWrapText() {\n    this.$checkBoxLabel.toggleClass('white-space-nowrap', !this.wrapText);\n    this.invalidateLayoutTree();\n  }\n\n  acceptInput(whileTyping, forceSend) {\n    // NOP\n  }\n\n  toggleChecked() {\n    if (!this.enabledComputed) {\n      return;\n    }\n    if (this.triStateEnabled) {\n      if (this.value === false) {\n        this.setValue(true);\n      } else if (this.value === true) {\n        this.setValue(null);\n      } else {\n        this.setValue(false);\n      }\n    } else {\n      this.setValue(!this.value);\n    }\n  }\n\n  prepareForCellEdit(opts) {\n    super.prepareForCellEdit(opts);\n    this.$checkBoxLabel.hide();\n  }\n\n  _onMouseDown(event) {\n    if (!this.enabledComputed) {\n      return;\n    }\n    this.toggleChecked();\n    // Also focus when check box is clicked otherwise firefox would loose the focus (see device.loosesFocusIfPseudoElementIsRemoved)\n    let onCheckBox = this.$checkBox.is(event.currentTarget),\n      onLabel = this.$checkBoxLabel.isOrHas(event.currentTarget); // isOrHas is required for HTML enabled labels with nested elements\n    if (onCheckBox || onLabel) {\n      this.focusAndPreventDefault(event);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}