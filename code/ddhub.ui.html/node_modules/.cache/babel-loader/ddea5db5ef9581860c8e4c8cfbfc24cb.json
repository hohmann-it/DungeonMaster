{"ast":null,"code":"/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nimport { CachedElement, strings } from '../index';\n\n/**\n * Replaces character HTML entities (e.g. &amp;nbsp;, &amp;gt;, etc.).\n */\nexport default class PlainTextEncoder {\n  constructor() {\n    this.cache = new CachedElement('textarea');\n  }\n  encode(text, options) {\n    options = options || {};\n    if (!text) {\n      return text;\n    }\n    text = strings.asString(text);\n\n    // Regexp is used to replace the tags.\n    // It is not possible to use jquery's text() function or to create a html element and use textContent, because the new lines get omitted.\n    // Node.innerText would preserve the new lines but it is not supported by firefox\n\n    // Preserve new lines\n    text = text.replace(/<br>|<br\\/>|<\\/p>|<p\\/>|<\\/div>|<\\/li>|<\\/tr>/gi, '\\n');\n\n    // Separate td with ' '\n    text = text.replace(/<\\/td>/gi, ' ');\n    if (options.removeFontIcons) {\n      text = text.replace(/<span\\s+class=\"[^\"]*font-icon[^\"]*\">[^<]*<\\/span>/gmi, '');\n    }\n\n    // Replace remaining tags\n    text = text.replace(/<[^>]+>/gi, '');\n\n    // Remove spaces at the beginning and end of each line\n    text = text.replace(/^[ ]+/gm, '');\n    text = text.replace(/[ ]+$/gm, '');\n    if (options.compact) {\n      // Compact consecutive empty lines. One is enough\n      text = text.replace(/\\n{3,}/gm, '\\n\\n');\n    }\n    if (options.trim) {\n      text = text.trim();\n    }\n    let textarea = this.cache.get();\n    textarea.innerHTML = text;\n    return textarea.value;\n  }\n}","map":{"version":3,"names":["CachedElement","strings","PlainTextEncoder","constructor","cache","encode","text","options","asString","replace","removeFontIcons","compact","trim","textarea","get","innerHTML","value"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/encoder/PlainTextEncoder.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nimport {CachedElement, strings} from '../index';\n\n/**\n * Replaces character HTML entities (e.g. &amp;nbsp;, &amp;gt;, etc.).\n */\nexport default class PlainTextEncoder {\n  constructor() {\n    this.cache = new CachedElement('textarea');\n  }\n\n  encode(text, options) {\n    options = options || {};\n    if (!text) {\n      return text;\n    }\n    text = strings.asString(text);\n\n    // Regexp is used to replace the tags.\n    // It is not possible to use jquery's text() function or to create a html element and use textContent, because the new lines get omitted.\n    // Node.innerText would preserve the new lines but it is not supported by firefox\n\n    // Preserve new lines\n    text = text.replace(/<br>|<br\\/>|<\\/p>|<p\\/>|<\\/div>|<\\/li>|<\\/tr>/gi, '\\n');\n\n    // Separate td with ' '\n    text = text.replace(/<\\/td>/gi, ' ');\n\n    if (options.removeFontIcons) {\n      text = text.replace(/<span\\s+class=\"[^\"]*font-icon[^\"]*\">[^<]*<\\/span>/gmi, '');\n    }\n\n    // Replace remaining tags\n    text = text.replace(/<[^>]+>/gi, '');\n\n    // Remove spaces at the beginning and end of each line\n    text = text.replace(/^[ ]+/gm, '');\n    text = text.replace(/[ ]+$/gm, '');\n\n    if (options.compact) {\n      // Compact consecutive empty lines. One is enough\n      text = text.replace(/\\n{3,}/gm, '\\n\\n');\n    }\n    if (options.trim) {\n      text = text.trim();\n    }\n\n    let textarea = this.cache.get();\n    textarea.innerHTML = text;\n    return textarea.value;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,aAAa,EAAEC,OAAO,QAAO,UAAU;;AAE/C;AACA;AACA;AACA,eAAe,MAAMC,gBAAgB,CAAC;EACpCC,WAAW,GAAG;IACZ,IAAI,CAACC,KAAK,GAAG,IAAIJ,aAAa,CAAC,UAAU,CAAC;EAC5C;EAEAK,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAE;IACpBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAI,CAACD,IAAI,EAAE;MACT,OAAOA,IAAI;IACb;IACAA,IAAI,GAAGL,OAAO,CAACO,QAAQ,CAACF,IAAI,CAAC;;IAE7B;IACA;IACA;;IAEA;IACAA,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,iDAAiD,EAAE,IAAI,CAAC;;IAE5E;IACAH,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;IAEpC,IAAIF,OAAO,CAACG,eAAe,EAAE;MAC3BJ,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,sDAAsD,EAAE,EAAE,CAAC;IACjF;;IAEA;IACAH,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;;IAEpC;IACAH,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAClCH,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAElC,IAAIF,OAAO,CAACI,OAAO,EAAE;MACnB;MACAL,IAAI,GAAGA,IAAI,CAACG,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IACzC;IACA,IAAIF,OAAO,CAACK,IAAI,EAAE;MAChBN,IAAI,GAAGA,IAAI,CAACM,IAAI,EAAE;IACpB;IAEA,IAAIC,QAAQ,GAAG,IAAI,CAACT,KAAK,CAACU,GAAG,EAAE;IAC/BD,QAAQ,CAACE,SAAS,GAAGT,IAAI;IACzB,OAAOO,QAAQ,CAACG,KAAK;EACvB;AACF"},"metadata":{},"sourceType":"module"}