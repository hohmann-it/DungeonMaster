{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ButtonKeyStroke, ButtonLayout, Device, DoubleClickSupport, FormField, icons, KeyStrokeContext, LoadingSupport, scout, styles, tooltips } from '../../../index';\nexport default class Button extends FormField {\n  constructor() {\n    super();\n    this.adaptedBy = null;\n    this.defaultButton = false;\n    this.displayStyle = Button.DisplayStyle.DEFAULT;\n    this.gridDataHints.fillHorizontal = false;\n    this.iconId = null;\n    this.keyStroke = null;\n    this.keyStrokeScope = null;\n    this.processButton = true;\n    this.selected = false;\n    this.statusVisible = false;\n    this.systemType = Button.SystemType.NONE;\n    this.preventDoubleClick = false;\n    this.stackable = true;\n    this.shrinkable = false;\n    this.$buttonLabel = null;\n    this.buttonKeyStroke = new ButtonKeyStroke(this, null);\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['defaultButton', 'displayStyle', 'iconId', 'keyStroke', 'processButton', 'selected', 'systemType', 'preventDoubleClick', 'stackable', 'shrinkable']);\n  }\n  _init(model) {\n    super._init(model);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n    this._setKeyStrokeScope(this.keyStrokeScope);\n    this._setInheritAccessibility(this.inheritAccessibility && !this._isIgnoreAccessibilityFlags());\n  }\n  getContextMenuItems() {\n    let onlyVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return [];\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this._initDefaultKeyStrokes();\n    this.formKeyStrokeContext = new KeyStrokeContext();\n    this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.formKeyStrokeContext.registerKeyStroke(this.buttonKeyStroke);\n    this.formKeyStrokeContext.$bindTarget = function () {\n      if (this.keyStrokeScope) {\n        return this.keyStrokeScope.$container;\n      }\n      // use form if available\n      let form = this.getForm();\n      if (form) {\n        return form.$container;\n      }\n      // use desktop otherwise\n      return this.session.desktop.$container;\n    }.bind(this);\n  }\n  _isIgnoreAccessibilityFlags() {\n    return this.systemType === Button.SystemType.CANCEL || this.systemType === Button.SystemType.CLOSE;\n  }\n  _initDefaultKeyStrokes() {\n    this.keyStrokeContext.registerKeyStroke([new ButtonKeyStroke(this, 'ENTER'), new ButtonKeyStroke(this, 'SPACE')]);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function () {\n        return this.$field;\n      }.bind(this)\n    });\n  }\n\n  /**\n   * The button form-field has no label and no status. Additionally it also has no container.\n   * Container and field are the same thing.\n   */\n  _render() {\n    let $button;\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      // Render as link-button\n      $button = this.$parent.makeDiv('link-button menu-item');\n      this.$buttonLabel = $button.appendSpan('button-label text');\n    } else {\n      // render as button\n      $button = this.$parent.makeElement('<button>').addClass('button');\n      if (this.displayStyle === Button.DisplayStyle.BORDERLESS) {\n        $button.addClass('borderless');\n      }\n      this.$buttonLabel = $button.appendSpan('button-label text');\n      if (Device.get().supportsOnlyTouch()) {\n        $button.setTabbable(false);\n      }\n    }\n    this.addContainer(this.$parent, 'button-field', new ButtonLayout(this));\n    this.addField($button);\n    // TODO [10.0] cgu: should we add a label? -> would make it possible to control the space left of the button using labelVisible, like it is possible with checkboxes\n    this.addStatus();\n    $button.on('mousedown', event => this._doubleClickSupport.mousedown(event)).on('click', this._onClick.bind(this)).unfocusable();\n    if (this.menus && this.menus.length > 0) {\n      this.menus.forEach(function (menu) {\n        this.keyStrokeContext.registerKeyStroke(menu);\n      }, this);\n      if (this.label || !this.iconId) {\n        // no indicator when _only_ the icon is visible\n        let icon = icons.parseIconId(Button.SUBMENU_ICON);\n        this.$submenuIcon = $button.appendSpan('submenu-icon').text(icon.iconCharacter);\n      }\n    }\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n    tooltips.installForEllipsis(this.$buttonLabel, {\n      parent: this\n    });\n  }\n  _remove() {\n    super._remove();\n    tooltips.uninstall(this.$buttonLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    this.$submenuIcon = null;\n  }\n\n  /**\n   * @override\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderSelected();\n    this._renderDefaultButton();\n  }\n  _renderForegroundColor() {\n    super._renderForegroundColor();\n    // Color button label as well, otherwise the color would not be visible because button label has already a color set using css\n    styles.legacyForegroundColor(this, this.$buttonLabel);\n    styles.legacyForegroundColor(this, this.get$Icon());\n    styles.legacyForegroundColor(this, this.$submenuIcon);\n  }\n  _renderBackgroundColor() {\n    super._renderBackgroundColor();\n    styles.legacyBackgroundColor(this, this.$fieldContainer);\n  }\n  _renderFont() {\n    super._renderFont();\n    styles.legacyFont(this, this.$buttonLabel);\n    // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @returns {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabled).\n   */\n  doAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.setSelected(!this.selected);\n    } else if (this.menus.length > 0) {\n      this.togglePopup();\n    }\n    this._doAction();\n    return true;\n  }\n  _doAction() {\n    this.trigger('click');\n  }\n  togglePopup() {\n    if (this.popup) {\n      this.popup.close();\n    } else {\n      this.popup = this._openPopup();\n      this.popup.one('destroy', event => {\n        this.popup = null;\n      });\n    }\n  }\n  _openPopup() {\n    let popup = scout.create('ContextMenuPopup', {\n      parent: this,\n      menuItems: this.menus,\n      cloneMenuItems: false,\n      closeOnAnchorMouseDown: false,\n      $anchor: this.$field\n    });\n    popup.open();\n    return popup;\n  }\n  _doActionTogglesSubMenu() {\n    return false;\n  }\n  setDefaultButton(defaultButton) {\n    this.setProperty('defaultButton', defaultButton);\n  }\n  _renderDefaultButton() {\n    this.$field.toggleClass('default', this.defaultButton);\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      this.$field.setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch());\n    }\n  }\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n  _renderSelected() {\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.$field.toggleClass('selected', this.selected);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this.$buttonLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n    this._updateLabelAndIconStyle();\n\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n  }\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the button by adding either an IMG or SPAN element to the button.\n   */\n  _renderIconId() {\n    let $iconTarget = this.$fieldContainer;\n    $iconTarget.icon(this.iconId);\n    let $icon = $iconTarget.data('$icon');\n    if ($icon) {\n      // <img>s are loaded asynchronously. The real image size is not known until the image is loaded.\n      // We add a listener to revalidate the button layout after this has happened. The 'loading' and\n      // 'broken' classes ensure the incomplete icon is not taking any space.\n      $icon.removeClass('loading broken');\n      if ($icon.is('img')) {\n        $icon.addClass('loading');\n        $icon.off('load error').on('load', updateButtonLayoutAfterImageLoaded.bind(this, true)).on('error', updateButtonLayoutAfterImageLoaded.bind(this, false));\n      }\n      if (!this.rendered) {\n        styles.legacyForegroundColor(this, $icon);\n      }\n    }\n    this._updateLabelAndIconStyle();\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n\n    // ----- Helper functions -----\n\n    function updateButtonLayoutAfterImageLoaded(success) {\n      $icon.removeClass('loading');\n      $icon.toggleClass('broken', !success);\n      this.invalidateLayoutTree();\n    }\n  }\n  get$Icon() {\n    let $iconTarget = this.$fieldContainer;\n    return $iconTarget.children('.icon');\n  }\n  _updateLabelAndIconStyle() {\n    let hasText = !!this.label;\n    this.$buttonLabel.setVisible(hasText || !this.iconId);\n    this.get$Icon().toggleClass('with-label', hasText);\n  }\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n  _setKeyStroke(keyStroke) {\n    this._setProperty('keyStroke', keyStroke);\n    this.buttonKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n  }\n  _setKeyStrokeScope(keyStrokeScope) {\n    if (typeof keyStrokeScope === 'string') {\n      keyStrokeScope = this._resolveKeyStrokeScope(keyStrokeScope);\n      if (!keyStrokeScope) {\n        // Will be resolved later\n        return;\n      }\n    }\n    this._setProperty('keyStrokeScope', keyStrokeScope);\n  }\n  _resolveKeyStrokeScope(keyStrokeScope) {\n    // Basically, the desktop could be used to find the scope, but that would mean to traverse the whole widget tree.\n    // To make it faster the form is used instead but that limits the resolving to the form.\n    // This should be acceptable because the scope can still be set explicitly without using an id.\n    let form = this.findNonWrappedForm();\n    if (!form) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' because no form has been found.');\n    }\n    if (!form.initialized) {\n      // KeyStrokeScope is another widget (form or formfield) which may not be initialized yet.\n      // The widget must be on the same form as the button, so once that form is initialized the keyStrokeScope has to be available\n      form.one('init', this._setKeyStrokeScope.bind(this, keyStrokeScope));\n      return;\n    }\n    keyStrokeScope = form.widget(keyStrokeScope);\n    if (!keyStrokeScope) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' using form ' + form);\n    }\n    return keyStrokeScope;\n  }\n  _onClick(event) {\n    if (event.which !== 1) {\n      return; // Other button than left mouse button --> nop\n    }\n\n    if (this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return; // More than one consecutive click --> nop\n    }\n\n    // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n    // If it is already displayed it will stay\n    tooltips.cancel(this.$buttonLabel);\n    tooltips.cancel(this.$fieldContainer);\n    if (this.enabledComputed) {\n      this.doAction();\n    }\n  }\n  setStackable(stackable) {\n    this.setProperty('stackable', stackable);\n  }\n  setShrinkable(shrinkable) {\n    this.setProperty('shrinkable', shrinkable);\n  }\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.getFocusableElement();\n    }\n    return super.getFocusableElement();\n  }\n\n  /**\n   * @override\n   */\n  isFocusable() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.isFocusable();\n    }\n    return super.isFocusable();\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.focus();\n    }\n    return super.focus();\n  }\n}\n_defineProperty(Button, \"SystemType\", {\n  NONE: 0,\n  CANCEL: 1,\n  CLOSE: 2,\n  OK: 3,\n  RESET: 4,\n  SAVE: 5,\n  SAVE_WITHOUT_MARKER_CHANGE: 6\n});\n_defineProperty(Button, \"DisplayStyle\", {\n  DEFAULT: 0,\n  TOGGLE: 1,\n  RADIO: 2,\n  LINK: 3,\n  BORDERLESS: 4\n});\n_defineProperty(Button, \"SUBMENU_ICON\", icons.ANGLE_DOWN_BOLD);","map":{"version":3,"names":["ButtonKeyStroke","ButtonLayout","Device","DoubleClickSupport","FormField","icons","KeyStrokeContext","LoadingSupport","scout","styles","tooltips","Button","constructor","adaptedBy","defaultButton","displayStyle","DisplayStyle","DEFAULT","gridDataHints","fillHorizontal","iconId","keyStroke","keyStrokeScope","processButton","selected","statusVisible","systemType","SystemType","NONE","preventDoubleClick","stackable","shrinkable","$buttonLabel","buttonKeyStroke","_doubleClickSupport","_addCloneProperties","_init","model","resolveIconIds","_setKeyStroke","_setKeyStrokeScope","_setInheritAccessibility","inheritAccessibility","_isIgnoreAccessibilityFlags","getContextMenuItems","onlyVisible","_initKeyStrokeContext","_initDefaultKeyStrokes","formKeyStrokeContext","invokeAcceptInputOnActiveValueField","registerKeyStroke","$bindTarget","$container","form","getForm","session","desktop","bind","CANCEL","CLOSE","keyStrokeContext","_createLoadingSupport","widget","$field","_render","$button","LINK","$parent","makeDiv","appendSpan","makeElement","addClass","BORDERLESS","get","supportsOnlyTouch","setTabbable","addContainer","addField","addStatus","on","event","mousedown","_onClick","unfocusable","menus","length","forEach","menu","label","icon","parseIconId","SUBMENU_ICON","$submenuIcon","text","iconCharacter","keyStrokeManager","installKeyStrokeContext","installForEllipsis","parent","_remove","uninstall","uninstallKeyStrokeContext","_renderProperties","_renderIconId","_renderSelected","_renderDefaultButton","_renderForegroundColor","legacyForegroundColor","get$Icon","_renderBackgroundColor","legacyBackgroundColor","$fieldContainer","_renderFont","legacyFont","invalidateLayoutTree","doAction","enabledComputed","visible","TOGGLE","setSelected","togglePopup","_doAction","trigger","popup","close","_openPopup","one","create","menuItems","cloneMenuItems","closeOnAnchorMouseDown","$anchor","open","_doActionTogglesSubMenu","setDefaultButton","setProperty","toggleClass","_renderEnabled","_renderLabel","contentOrNbsp","labelHtmlEnabled","_updateLabelAndIconStyle","setIconId","$iconTarget","$icon","data","removeClass","is","off","updateButtonLayoutAfterImageLoaded","rendered","success","children","hasText","setVisible","setKeyStroke","_setProperty","parseAndSetKeyStroke","_resolveKeyStrokeScope","findNonWrappedForm","Error","initialized","which","doubleClicked","cancel","setStackable","setShrinkable","setPreventDoubleClick","getFocusableElement","isFocusable","focus","OK","RESET","SAVE","SAVE_WITHOUT_MARKER_CHANGE","RADIO","ANGLE_DOWN_BOLD"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/button/Button.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ButtonKeyStroke, ButtonLayout, Device, DoubleClickSupport, FormField, icons, KeyStrokeContext, LoadingSupport, scout, styles, tooltips} from '../../../index';\n\nexport default class Button extends FormField {\n\n  constructor() {\n    super();\n\n    this.adaptedBy = null;\n    this.defaultButton = false;\n    this.displayStyle = Button.DisplayStyle.DEFAULT;\n    this.gridDataHints.fillHorizontal = false;\n    this.iconId = null;\n    this.keyStroke = null;\n    this.keyStrokeScope = null;\n    this.processButton = true;\n    this.selected = false;\n    this.statusVisible = false;\n    this.systemType = Button.SystemType.NONE;\n    this.preventDoubleClick = false;\n    this.stackable = true;\n    this.shrinkable = false;\n\n    this.$buttonLabel = null;\n    this.buttonKeyStroke = new ButtonKeyStroke(this, null);\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['defaultButton', 'displayStyle', 'iconId', 'keyStroke', 'processButton', 'selected', 'systemType', 'preventDoubleClick', 'stackable', 'shrinkable']);\n  }\n\n  static SystemType = {\n    NONE: 0,\n    CANCEL: 1,\n    CLOSE: 2,\n    OK: 3,\n    RESET: 4,\n    SAVE: 5,\n    SAVE_WITHOUT_MARKER_CHANGE: 6\n  };\n\n  static DisplayStyle = {\n    DEFAULT: 0,\n    TOGGLE: 1,\n    RADIO: 2,\n    LINK: 3,\n    BORDERLESS: 4\n  };\n\n  static SUBMENU_ICON = icons.ANGLE_DOWN_BOLD;\n\n  _init(model) {\n    super._init(model);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n    this._setKeyStrokeScope(this.keyStrokeScope);\n    this._setInheritAccessibility(this.inheritAccessibility && !this._isIgnoreAccessibilityFlags());\n  }\n\n  getContextMenuItems(onlyVisible = true) {\n    return [];\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this._initDefaultKeyStrokes();\n\n    this.formKeyStrokeContext = new KeyStrokeContext();\n    this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.formKeyStrokeContext.registerKeyStroke(this.buttonKeyStroke);\n    this.formKeyStrokeContext.$bindTarget = function() {\n      if (this.keyStrokeScope) {\n        return this.keyStrokeScope.$container;\n      }\n      // use form if available\n      let form = this.getForm();\n      if (form) {\n        return form.$container;\n      }\n      // use desktop otherwise\n      return this.session.desktop.$container;\n    }.bind(this);\n  }\n\n  _isIgnoreAccessibilityFlags() {\n    return this.systemType === Button.SystemType.CANCEL || this.systemType === Button.SystemType.CLOSE;\n  }\n\n  _initDefaultKeyStrokes() {\n    this.keyStrokeContext.registerKeyStroke([\n      new ButtonKeyStroke(this, 'ENTER'),\n      new ButtonKeyStroke(this, 'SPACE')\n    ]);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$field;\n      }.bind(this)\n    });\n  }\n\n  /**\n   * The button form-field has no label and no status. Additionally it also has no container.\n   * Container and field are the same thing.\n   */\n  _render() {\n    let $button;\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      // Render as link-button\n      $button = this.$parent.makeDiv('link-button menu-item');\n      this.$buttonLabel = $button.appendSpan('button-label text');\n    } else {\n      // render as button\n      $button = this.$parent.makeElement('<button>')\n        .addClass('button');\n      if (this.displayStyle === Button.DisplayStyle.BORDERLESS) {\n        $button.addClass('borderless');\n      }\n      this.$buttonLabel = $button.appendSpan('button-label text');\n\n      if (Device.get().supportsOnlyTouch()) {\n        $button.setTabbable(false);\n      }\n    }\n    this.addContainer(this.$parent, 'button-field', new ButtonLayout(this));\n    this.addField($button);\n    // TODO [10.0] cgu: should we add a label? -> would make it possible to control the space left of the button using labelVisible, like it is possible with checkboxes\n    this.addStatus();\n\n    $button\n      .on('mousedown', event => this._doubleClickSupport.mousedown(event))\n      .on('click', this._onClick.bind(this))\n      .unfocusable();\n\n    if (this.menus && this.menus.length > 0) {\n      this.menus.forEach(function(menu) {\n        this.keyStrokeContext.registerKeyStroke(menu);\n      }, this);\n      if (this.label || !this.iconId) { // no indicator when _only_ the icon is visible\n        let icon = icons.parseIconId(Button.SUBMENU_ICON);\n        this.$submenuIcon = $button\n          .appendSpan('submenu-icon')\n          .text(icon.iconCharacter);\n      }\n    }\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n\n    tooltips.installForEllipsis(this.$buttonLabel, {\n      parent: this\n    });\n  }\n\n  _remove() {\n    super._remove();\n    tooltips.uninstall(this.$buttonLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    this.$submenuIcon = null;\n  }\n\n  /**\n   * @override\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderSelected();\n    this._renderDefaultButton();\n  }\n\n  _renderForegroundColor() {\n    super._renderForegroundColor();\n    // Color button label as well, otherwise the color would not be visible because button label has already a color set using css\n    styles.legacyForegroundColor(this, this.$buttonLabel);\n    styles.legacyForegroundColor(this, this.get$Icon());\n    styles.legacyForegroundColor(this, this.$submenuIcon);\n  }\n\n  _renderBackgroundColor() {\n    super._renderBackgroundColor();\n    styles.legacyBackgroundColor(this, this.$fieldContainer);\n  }\n\n  _renderFont() {\n    super._renderFont();\n    styles.legacyFont(this, this.$buttonLabel);\n    // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @returns {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabled).\n   */\n  doAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.setSelected(!this.selected);\n    } else if (this.menus.length > 0) {\n      this.togglePopup();\n    }\n    this._doAction();\n    return true;\n  }\n\n  _doAction() {\n    this.trigger('click');\n  }\n\n  togglePopup() {\n    if (this.popup) {\n      this.popup.close();\n    } else {\n      this.popup = this._openPopup();\n      this.popup.one('destroy', event => {\n        this.popup = null;\n      });\n    }\n  }\n\n  _openPopup() {\n    let popup = scout.create('ContextMenuPopup', {\n      parent: this,\n      menuItems: this.menus,\n      cloneMenuItems: false,\n      closeOnAnchorMouseDown: false,\n      $anchor: this.$field\n    });\n    popup.open();\n    return popup;\n  }\n\n  _doActionTogglesSubMenu() {\n    return false;\n  }\n\n  setDefaultButton(defaultButton) {\n    this.setProperty('defaultButton', defaultButton);\n  }\n\n  _renderDefaultButton() {\n    this.$field.toggleClass('default', this.defaultButton);\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      this.$field.setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch());\n    }\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.$field.toggleClass('selected', this.selected);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this.$buttonLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n    this._updateLabelAndIconStyle();\n\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the button by adding either an IMG or SPAN element to the button.\n   */\n  _renderIconId() {\n    let $iconTarget = this.$fieldContainer;\n    $iconTarget.icon(this.iconId);\n    let $icon = $iconTarget.data('$icon');\n    if ($icon) {\n      // <img>s are loaded asynchronously. The real image size is not known until the image is loaded.\n      // We add a listener to revalidate the button layout after this has happened. The 'loading' and\n      // 'broken' classes ensure the incomplete icon is not taking any space.\n      $icon.removeClass('loading broken');\n      if ($icon.is('img')) {\n        $icon.addClass('loading');\n        $icon\n          .off('load error')\n          .on('load', updateButtonLayoutAfterImageLoaded.bind(this, true))\n          .on('error', updateButtonLayoutAfterImageLoaded.bind(this, false));\n      }\n      if (!this.rendered) {\n        styles.legacyForegroundColor(this, $icon);\n      }\n    }\n\n    this._updateLabelAndIconStyle();\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n\n    // ----- Helper functions -----\n\n    function updateButtonLayoutAfterImageLoaded(success) {\n      $icon.removeClass('loading');\n      $icon.toggleClass('broken', !success);\n      this.invalidateLayoutTree();\n    }\n  }\n\n  get$Icon() {\n    let $iconTarget = this.$fieldContainer;\n    return $iconTarget.children('.icon');\n  }\n\n  _updateLabelAndIconStyle() {\n    let hasText = !!this.label;\n    this.$buttonLabel.setVisible(hasText || !this.iconId);\n    this.get$Icon().toggleClass('with-label', hasText);\n  }\n\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n\n  _setKeyStroke(keyStroke) {\n    this._setProperty('keyStroke', keyStroke);\n    this.buttonKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n  }\n\n  _setKeyStrokeScope(keyStrokeScope) {\n    if (typeof keyStrokeScope === 'string') {\n      keyStrokeScope = this._resolveKeyStrokeScope(keyStrokeScope);\n      if (!keyStrokeScope) {\n        // Will be resolved later\n        return;\n      }\n    }\n\n    this._setProperty('keyStrokeScope', keyStrokeScope);\n  }\n\n  _resolveKeyStrokeScope(keyStrokeScope) {\n    // Basically, the desktop could be used to find the scope, but that would mean to traverse the whole widget tree.\n    // To make it faster the form is used instead but that limits the resolving to the form.\n    // This should be acceptable because the scope can still be set explicitly without using an id.\n    let form = this.findNonWrappedForm();\n    if (!form) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' because no form has been found.');\n    }\n    if (!form.initialized) {\n      // KeyStrokeScope is another widget (form or formfield) which may not be initialized yet.\n      // The widget must be on the same form as the button, so once that form is initialized the keyStrokeScope has to be available\n      form.one('init', this._setKeyStrokeScope.bind(this, keyStrokeScope));\n      return;\n    }\n    keyStrokeScope = form.widget(keyStrokeScope);\n    if (!keyStrokeScope) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' using form ' + form);\n    }\n    return keyStrokeScope;\n  }\n\n  _onClick(event) {\n    if (event.which !== 1) {\n      return; // Other button than left mouse button --> nop\n    }\n    if (this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return; // More than one consecutive click --> nop\n    }\n\n    // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n    // If it is already displayed it will stay\n    tooltips.cancel(this.$buttonLabel);\n    tooltips.cancel(this.$fieldContainer);\n\n    if (this.enabledComputed) {\n      this.doAction();\n    }\n  }\n\n  setStackable(stackable) {\n    this.setProperty('stackable', stackable);\n  }\n\n  setShrinkable(shrinkable) {\n    this.setProperty('shrinkable', shrinkable);\n  }\n\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.getFocusableElement();\n    }\n    return super.getFocusableElement();\n  }\n\n  /**\n   * @override\n   */\n  isFocusable() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.isFocusable();\n    }\n    return super.isFocusable();\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.focus();\n    }\n    return super.focus();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}