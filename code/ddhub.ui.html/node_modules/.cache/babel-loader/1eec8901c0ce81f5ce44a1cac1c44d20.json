{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ContextMenuPopup, Device, Form, FormMenuActionKeyStroke, GroupBox, Menu, scout, WidgetPopup } from '../index';\nexport default class FormMenu extends Menu {\n  constructor() {\n    super();\n    this.form = null;\n    this.toggleAction = true;\n    this.popupStyle = null;\n    this.popupClosable = false;\n    this.popupMovable = false;\n    this.popupResizable = false;\n    this._addWidgetProperties('form');\n    this._formDestroyHandler = this._onFormDestroy.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    if (!this.popupStyle) {\n      if (this.session.userAgent.deviceType === Device.Type.MOBILE) {\n        this.popupStyle = FormMenu.PopupStyle.MOBILE;\n      } else {\n        this.popupStyle = FormMenu.PopupStyle.DEFAULT;\n      }\n    }\n    this._setSelected(this.selected);\n    this._setForm(this.form);\n  }\n  _renderForm() {\n    if (!this.rendered) {\n      // Don't execute initially since _renderSelected will be executed\n      return;\n    }\n    this._renderSelected();\n  }\n\n  /**\n   * @override\n   */\n  clone(modelOverride, options) {\n    modelOverride = modelOverride || {};\n    // If the FormMenu is put into a context menu it will be cloned.\n    // Cloning a form is not possible because it may non clonable components (Table, TabBox, etc.) -> exclude\n    // Luckily, it is not necessary to clone it since the form is never shown multiple times at once -> Just use the same instance\n    modelOverride.form = this.form;\n    return super.clone(modelOverride, options);\n  }\n  setForm(form) {\n    this.setProperty('form', form);\n  }\n  _setForm(form) {\n    if (this.form) {\n      this.form.off('destroy', this._formDestroyHandler);\n    }\n    this._setProperty('form', form);\n    if (this.form) {\n      this._adaptForm(this.form);\n      this.form.one('destroy', this._formDestroyHandler);\n    }\n  }\n  _adaptForm(form) {\n    form.setDisplayHint(Form.DisplayHint.VIEW);\n    form.setModal(false);\n    form.setClosable(false);\n  }\n\n  /**\n   * Called when the popup form is destroyed (e.g. form.close() was called) -> ensure menu is unselected and popup closed.\n   */\n  _onFormDestroy(event) {\n    if (!this.popup || !this.popup.destroying) {\n      // Unselect if form is closed (e.g. if a close button on the form itself is pressed. Mainly necessary for Scout JS only)\n      // Don't interfere with regular popup lifecycle. If popup is being closed already it will be or is already unselected anyway.\n      // Maybe the user already selected the menu again while the close animation runs -> the menu must not be unselected because the user selected it.\n      this.setSelected(false);\n    }\n    this.setForm(null);\n    let parentContextMenuPopup = this.findParent(p => p instanceof ContextMenuPopup);\n    if (parentContextMenuPopup && !(parentContextMenuPopup.destroying || parentContextMenuPopup.removing)) {\n      // only explicitly close the popup if it is not already being closed. Otherwise it is removed twice.\n      parentContextMenuPopup.close();\n    }\n  }\n  _setSelected(selected) {\n    this._setProperty('selected', selected);\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE && this._doActionTogglesPopup()) {\n      // Mobile Popup can be rendered even if menu is not. This is useful if a tool form menu should be opened while the desktop bench is open instead of the outline\n      // Open will be called in renderSelected again but won't do anything\n      if (this.selected) {\n        this._openPopup();\n      } else {\n        this._closePopup();\n      }\n    }\n  }\n  _renderSelected() {\n    super._renderSelected();\n\n    // Form menu always has a popup (form could be set later, so super call cannot set the class correctly)\n    this.$container.addClass('has-popup');\n  }\n  _canOpenPopup() {\n    // A menu can be opened in the menu bar but also in a context menu, where it will be cloned.\n    // The form itself won't be cloned, so there can always be only one rendered form.\n    // If the menus use a remove animation and a new menu is opened while the other one is still removing, the form rendering will fail\n    // (either by an exception if its already open, or it may be rendered into the wrong menu).\n    // To prevent that, we ensure the other popup is really closed before opening the new one.\n    this._closeOtherPopupsForSameMenu();\n    return super._canOpenPopup();\n  }\n  _closeOtherPopupsForSameMenu() {\n    this._findOtherPopupsForSameMenu().forEach(popup => {\n      if (popup.isRemovalPending()) {\n        popup.removeImmediately();\n        return;\n      }\n      // If popup is open but remove animation has not started yet (can only be triggered programmatically, see test FormMenuSpec.js)\n      if (popup._rendered) {\n        let currentAnimateRemoval = popup.animateRemoval;\n        popup.animateRemoval = false;\n        popup.close();\n        popup.animateRemoval = currentAnimateRemoval;\n      }\n    });\n  }\n  _findOtherPopupsForSameMenu() {\n    return this.session.desktop.getPopups().filter(popup => {\n      if (popup === this.popup || popup.has(this)) {\n        return false;\n      }\n      return this._popupBelongsToMenu(popup);\n    });\n  }\n  _popupBelongsToMenu(popup) {\n    // Check if the widget popup containing the form is open (parent is always the form menu, if it's in a context menu the parent is a clone)\n    if (popup.parent.original() === this.original()) {\n      return true;\n    }\n    // Check if the context menu containing this menu is open (context menus contain clones of the original)\n    if (popup.findChild(w => w.original() === this.original())) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override Menu.js\n   */\n  _createPopup() {\n    // Menu bar should always be on the bottom\n    this.form.rootGroupBox.setMenuBarPosition(GroupBox.MenuBarPosition.BOTTOM);\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE) {\n      return scout.create('MobilePopup', {\n        parent: this.session.desktop,\n        // use desktop to make _handleSelectedInEllipsis work (if parent is this and this were not rendered, popup.entryPoint would not work)\n        widget: this.form,\n        title: this.form.title\n      });\n    }\n    return scout.create('WidgetPopup', {\n      parent: this,\n      widget: this.form,\n      anchor: this,\n      closeOnAnchorMouseDown: false,\n      cssClass: 'form-menu-popup',\n      horizontalAlignment: this.popupHorizontalAlignment,\n      verticalAlignment: this.popupVerticalAlignment,\n      closable: this.popupClosable,\n      movable: this.popupMovable,\n      resizable: this.popupResizable\n    });\n  }\n\n  /**\n   * @override\n   */\n  _doActionTogglesPopup() {\n    return !!this.form;\n  }\n  _handleSelectedInEllipsis() {\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE) {\n      // The mobile popup is not attached to a header -> no need to open the overflow menu (popup is already open due to _setSelected)\n      return;\n    }\n    super._handleSelectedInEllipsis();\n  }\n\n  /**\n   * @return {FormMenuActionKeyStroke}\n   */\n  _createActionKeyStroke() {\n    return new FormMenuActionKeyStroke(this);\n  }\n}\n_defineProperty(FormMenu, \"PopupStyle\", {\n  DEFAULT: 'default',\n  MOBILE: 'mobile'\n});","map":{"version":3,"names":["ContextMenuPopup","Device","Form","FormMenuActionKeyStroke","GroupBox","Menu","scout","WidgetPopup","FormMenu","constructor","form","toggleAction","popupStyle","popupClosable","popupMovable","popupResizable","_addWidgetProperties","_formDestroyHandler","_onFormDestroy","bind","_init","model","session","userAgent","deviceType","Type","MOBILE","PopupStyle","DEFAULT","_setSelected","selected","_setForm","_renderForm","rendered","_renderSelected","clone","modelOverride","options","setForm","setProperty","off","_setProperty","_adaptForm","one","setDisplayHint","DisplayHint","VIEW","setModal","setClosable","event","popup","destroying","setSelected","parentContextMenuPopup","findParent","p","removing","close","_doActionTogglesPopup","_openPopup","_closePopup","$container","addClass","_canOpenPopup","_closeOtherPopupsForSameMenu","_findOtherPopupsForSameMenu","forEach","isRemovalPending","removeImmediately","_rendered","currentAnimateRemoval","animateRemoval","desktop","getPopups","filter","has","_popupBelongsToMenu","parent","original","findChild","w","_createPopup","rootGroupBox","setMenuBarPosition","MenuBarPosition","BOTTOM","create","widget","title","anchor","closeOnAnchorMouseDown","cssClass","horizontalAlignment","popupHorizontalAlignment","verticalAlignment","popupVerticalAlignment","closable","movable","resizable","_handleSelectedInEllipsis","_createActionKeyStroke"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/FormMenu.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ContextMenuPopup, Device, Form, FormMenuActionKeyStroke, GroupBox, Menu, scout, WidgetPopup} from '../index';\n\nexport default class FormMenu extends Menu {\n\n  constructor() {\n    super();\n    this.form = null;\n    this.toggleAction = true;\n    this.popupStyle = null;\n    this.popupClosable = false;\n    this.popupMovable = false;\n    this.popupResizable = false;\n    this._addWidgetProperties('form');\n    this._formDestroyHandler = this._onFormDestroy.bind(this);\n  }\n\n  static PopupStyle = {\n    DEFAULT: 'default',\n    MOBILE: 'mobile'\n  };\n\n  _init(model) {\n    super._init(model);\n\n    if (!this.popupStyle) {\n      if (this.session.userAgent.deviceType === Device.Type.MOBILE) {\n        this.popupStyle = FormMenu.PopupStyle.MOBILE;\n      } else {\n        this.popupStyle = FormMenu.PopupStyle.DEFAULT;\n      }\n    }\n    this._setSelected(this.selected);\n    this._setForm(this.form);\n  }\n\n  _renderForm() {\n    if (!this.rendered) {\n      // Don't execute initially since _renderSelected will be executed\n      return;\n    }\n    this._renderSelected();\n  }\n\n  /**\n   * @override\n   */\n  clone(modelOverride, options) {\n    modelOverride = modelOverride || {};\n    // If the FormMenu is put into a context menu it will be cloned.\n    // Cloning a form is not possible because it may non clonable components (Table, TabBox, etc.) -> exclude\n    // Luckily, it is not necessary to clone it since the form is never shown multiple times at once -> Just use the same instance\n    modelOverride.form = this.form;\n    return super.clone(modelOverride, options);\n  }\n\n  setForm(form) {\n    this.setProperty('form', form);\n  }\n\n  _setForm(form) {\n    if (this.form) {\n      this.form.off('destroy', this._formDestroyHandler);\n    }\n    this._setProperty('form', form);\n    if (this.form) {\n      this._adaptForm(this.form);\n      this.form.one('destroy', this._formDestroyHandler);\n    }\n  }\n\n  _adaptForm(form) {\n    form.setDisplayHint(Form.DisplayHint.VIEW);\n    form.setModal(false);\n    form.setClosable(false);\n  }\n\n  /**\n   * Called when the popup form is destroyed (e.g. form.close() was called) -> ensure menu is unselected and popup closed.\n   */\n  _onFormDestroy(event) {\n    if (!this.popup || !this.popup.destroying) {\n      // Unselect if form is closed (e.g. if a close button on the form itself is pressed. Mainly necessary for Scout JS only)\n      // Don't interfere with regular popup lifecycle. If popup is being closed already it will be or is already unselected anyway.\n      // Maybe the user already selected the menu again while the close animation runs -> the menu must not be unselected because the user selected it.\n      this.setSelected(false);\n    }\n    this.setForm(null);\n\n    let parentContextMenuPopup = this.findParent(p => p instanceof ContextMenuPopup);\n    if (parentContextMenuPopup && !(parentContextMenuPopup.destroying || parentContextMenuPopup.removing)) {\n      // only explicitly close the popup if it is not already being closed. Otherwise it is removed twice.\n      parentContextMenuPopup.close();\n    }\n  }\n\n  _setSelected(selected) {\n    this._setProperty('selected', selected);\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE && this._doActionTogglesPopup()) {\n      // Mobile Popup can be rendered even if menu is not. This is useful if a tool form menu should be opened while the desktop bench is open instead of the outline\n      // Open will be called in renderSelected again but won't do anything\n      if (this.selected) {\n        this._openPopup();\n      } else {\n        this._closePopup();\n      }\n    }\n  }\n\n  _renderSelected() {\n    super._renderSelected();\n\n    // Form menu always has a popup (form could be set later, so super call cannot set the class correctly)\n    this.$container.addClass('has-popup');\n  }\n\n  _canOpenPopup() {\n    // A menu can be opened in the menu bar but also in a context menu, where it will be cloned.\n    // The form itself won't be cloned, so there can always be only one rendered form.\n    // If the menus use a remove animation and a new menu is opened while the other one is still removing, the form rendering will fail\n    // (either by an exception if its already open, or it may be rendered into the wrong menu).\n    // To prevent that, we ensure the other popup is really closed before opening the new one.\n    this._closeOtherPopupsForSameMenu();\n    return super._canOpenPopup();\n  }\n\n  _closeOtherPopupsForSameMenu() {\n    this._findOtherPopupsForSameMenu().forEach(popup => {\n      if (popup.isRemovalPending()) {\n        popup.removeImmediately();\n        return;\n      }\n      // If popup is open but remove animation has not started yet (can only be triggered programmatically, see test FormMenuSpec.js)\n      if (popup._rendered) {\n        let currentAnimateRemoval = popup.animateRemoval;\n        popup.animateRemoval = false;\n        popup.close();\n        popup.animateRemoval = currentAnimateRemoval;\n      }\n    });\n  }\n\n  _findOtherPopupsForSameMenu() {\n    return this.session.desktop.getPopups().filter(popup => {\n      if (popup === this.popup || popup.has(this)) {\n        return false;\n      }\n      return this._popupBelongsToMenu(popup);\n    });\n  }\n\n  _popupBelongsToMenu(popup) {\n    // Check if the widget popup containing the form is open (parent is always the form menu, if it's in a context menu the parent is a clone)\n    if (popup.parent.original() === this.original()) {\n      return true;\n    }\n    // Check if the context menu containing this menu is open (context menus contain clones of the original)\n    if (popup.findChild(w => w.original() === this.original())) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override Menu.js\n   */\n  _createPopup() {\n    // Menu bar should always be on the bottom\n    this.form.rootGroupBox.setMenuBarPosition(GroupBox.MenuBarPosition.BOTTOM);\n\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE) {\n      return scout.create('MobilePopup', {\n        parent: this.session.desktop, // use desktop to make _handleSelectedInEllipsis work (if parent is this and this were not rendered, popup.entryPoint would not work)\n        widget: this.form,\n        title: this.form.title\n      });\n    }\n\n    return scout.create('WidgetPopup', {\n      parent: this,\n      widget: this.form,\n      anchor: this,\n      closeOnAnchorMouseDown: false,\n      cssClass: 'form-menu-popup',\n      horizontalAlignment: this.popupHorizontalAlignment,\n      verticalAlignment: this.popupVerticalAlignment,\n      closable: this.popupClosable,\n      movable: this.popupMovable,\n      resizable: this.popupResizable\n    });\n  }\n\n  /**\n   * @override\n   */\n  _doActionTogglesPopup() {\n    return !!this.form;\n  }\n\n  _handleSelectedInEllipsis() {\n    if (this.popupStyle === FormMenu.PopupStyle.MOBILE) {\n      // The mobile popup is not attached to a header -> no need to open the overflow menu (popup is already open due to _setSelected)\n      return;\n    }\n    super._handleSelectedInEllipsis();\n  }\n\n  /**\n   * @return {FormMenuActionKeyStroke}\n   */\n  _createActionKeyStroke() {\n    return new FormMenuActionKeyStroke(this);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}