{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, HtmlComponent, scout, TabArea } from '../../../index';\nimport $ from 'jquery';\nexport default class TabAreaLayout extends AbstractLayout {\n  /**\n   * @param {TabArea} tabArea\n   */\n  constructor(tabArea) {\n    super();\n    this.tabArea = tabArea;\n    this.overflowTabs = [];\n    this.visibleTabs = [];\n    this._tabAreaPropertyChangeHandler = this._onTabAreaPropertyChange.bind(this);\n    this.tabArea.on('propertyChange', this._tabAreaPropertyChangeHandler);\n    this.tabArea.one('remove', () => {\n      this.tabArea.off('propertyChange', this._tabAreaPropertyChangeHandler);\n    });\n  }\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container),\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n\n    // compute visible and overflown tabs\n    this.preferredLayoutSize($container, {\n      widthHint: containerSize.width\n    });\n    this._layoutSelectionMarker();\n  }\n  _layoutSelectionMarker() {\n    let $selectionMarker = this.tabArea.$selectionMarker,\n      selectedTab = this.tabArea.selectedTab,\n      selectedItemBounds;\n    if (selectedTab) {\n      $selectionMarker.setVisible(true);\n      selectedItemBounds = graphics.bounds(selectedTab.$container);\n      $selectionMarker.cssLeft(selectedItemBounds.x);\n      $selectionMarker.cssWidth(selectedItemBounds.width);\n    } else {\n      $selectionMarker.setVisible(false);\n    }\n  }\n  _updateEllipsis() {\n    let ellipsis = this.tabArea.ellipsis;\n    ellipsis.setHidden(this.overflowTabs.length < 1);\n    ellipsis.setText(this.overflowTabs.length + '');\n    this.visibleTabs.forEach(tabItem => tabItem.setOverflown(false));\n    this.overflowTabs.forEach(tabItem => tabItem.setOverflown(true));\n    ellipsis.setChildActions(this.overflowTabs.map(tab => {\n      let menu = scout.create('Menu', {\n        parent: ellipsis,\n        text: tab.label,\n        tab: tab,\n        visible: tab.visible\n      });\n      menu.on('action', event => {\n        $.log.isDebugEnabled() && $.log.debug('(TabAreaLayout#_onClickEllipsis) tabItem=' + tab);\n        // first close popup to ensure the focus is handled in the correct focus context.\n        ellipsis.popup.close();\n        tab.select();\n        tab.focus();\n      });\n      return menu;\n    }, this));\n  }\n  preferredLayoutSize($container, options) {\n    let htmlComp = HtmlComponent.get($container),\n      prefSize = new Dimension(0, 0),\n      prefWidth = Number.MAX_VALUE;\n    this.visibleTabs = this.tabArea.visibleTabs();\n    let overflowableIndexes = this.visibleTabs.map((tabItem, index) => {\n      if (tabItem.selected) {\n        return -1;\n      }\n      return index;\n    }).filter(index => index >= 0);\n    this.overflowTabs = [];\n\n    // consider avoid falsy 0 in tab-boxes a 0 withHint will be used to calculate the minimum width\n    if (options.widthHint === 0 || options.widthHint) {\n      prefWidth = options.widthHint - htmlComp.insets().horizontal();\n    }\n\n    // shortcut for minimum size.\n    if (prefWidth <= 0) {\n      return this._minSize(this.visibleTabs).add(htmlComp.insets());\n    }\n    this._setFirstLastMarker(this.visibleTabs);\n    this._updateEllipsis();\n    prefSize = this._prefSize(this.visibleTabs);\n    while (prefSize.width > prefWidth && overflowableIndexes.length > 0) {\n      let overflowIndex = overflowableIndexes.splice(-1)[0];\n      this.overflowTabs.splice(0, 0, this.visibleTabs[overflowIndex]);\n      this.visibleTabs.splice(overflowIndex, 1);\n      this._setFirstLastMarker(this.visibleTabs);\n      this._updateEllipsis(); // update ellipsis here already so that the prefSize on the next line is correct\n      prefSize = this._prefSize(this.visibleTabs);\n    }\n\n    // Use the total available space if spreading tabs evenly.\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      return graphics.prefSize($container, options);\n    }\n    return graphics.exactPrefSize(prefSize.add(htmlComp.insets()), options);\n  }\n  _minSize(tabItems) {\n    let visibleTabItems = [];\n    this.overflowTabs = tabItems.filter(tabItem => {\n      if (tabItem.selected) {\n        visibleTabItems.push(tabItem);\n        return false;\n      }\n      return true;\n    }, this);\n    this.visibleTabs = visibleTabItems;\n    this._setFirstLastMarker(visibleTabItems);\n    return this._prefSize(visibleTabItems);\n  }\n  _prefSize(tabItems, considerEllipsis) {\n    let prefSize = tabItems.map(tabItem => this._tabItemSize(tabItem)).reduce((prefSize, itemSize) => {\n      prefSize.height = Math.max(prefSize.height, itemSize.height);\n      prefSize.width += itemSize.width;\n      return prefSize;\n    }, new Dimension(0, 0));\n    considerEllipsis = scout.nvl(considerEllipsis, this.overflowTabs.length > 0);\n    if (considerEllipsis) {\n      let ellipsisSize = this._tabItemSize(this.tabArea.ellipsis);\n      prefSize.height = Math.max(prefSize.height, ellipsisSize.height);\n      prefSize.width += ellipsisSize.width;\n    }\n    return prefSize;\n  }\n  _setFirstLastMarker(tabItems, considerEllipsis) {\n    considerEllipsis = scout.nvl(considerEllipsis, this.overflowTabs.length > 0);\n\n    // reset\n    this.tabArea.tabs.forEach(tabItem => {\n      tabItem.htmlComp.$comp.removeClass('first last');\n    });\n    this.tabArea.ellipsis.$container.removeClass('first last');\n\n    // set first and last\n    if (tabItems.length > 0) {\n      tabItems[0].$container.addClass('first');\n      if (considerEllipsis) {\n        this.tabArea.ellipsis.$container.addClass('last');\n      } else {\n        tabItems[tabItems.length - 1].$container.addClass('last');\n      }\n    }\n  }\n  _tabItemSize(item) {\n    let htmlComp = item.htmlComp,\n      prefSize,\n      classList = htmlComp.$comp.attr('class');\n\n    // temporarily revert display style to default. otherwise the pref size of the tab item will be the size of the container.\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      this.tabArea.$container.removeClass('spread-even');\n    }\n    htmlComp.$comp.removeClass('overflown');\n    htmlComp.$comp.removeClass('hidden');\n    prefSize = htmlComp.prefSize({\n      exact: true\n    }).add(graphics.margins(htmlComp.$comp));\n    if (item.fieldStatus && item.fieldStatus.htmlComp) {\n      let statusOverflownAndHidden = item.overflown && !item.fieldStatus.visible;\n      if (statusOverflownAndHidden) {\n        // overflown tabs have no fieldStatus: explicitly set to visible so that the real consumed space can be computed\n        item.fieldStatus.setVisible(true);\n      }\n      let statusWidth = item.fieldStatus.htmlComp.prefSize({\n        includeMargin: true\n      }).width;\n      if (statusOverflownAndHidden) {\n        // restore\n        item.fieldStatus.setVisible(false);\n      }\n      prefSize.width += statusWidth;\n    }\n    htmlComp.$comp.attrOrRemove('class', classList);\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      this.tabArea.$container.addClass('spread-even');\n    }\n    return prefSize;\n  }\n  _onTabAreaPropertyChange(event) {\n    if (event.propertyName === 'selectedTab') {\n      this._layoutSelectionMarker();\n    }\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","graphics","HtmlComponent","scout","TabArea","$","TabAreaLayout","constructor","tabArea","overflowTabs","visibleTabs","_tabAreaPropertyChangeHandler","_onTabAreaPropertyChange","bind","on","one","off","layout","$container","htmlContainer","get","containerSize","availableSize","subtract","insets","preferredLayoutSize","widthHint","width","_layoutSelectionMarker","$selectionMarker","selectedTab","selectedItemBounds","setVisible","bounds","cssLeft","x","cssWidth","_updateEllipsis","ellipsis","setHidden","length","setText","forEach","tabItem","setOverflown","setChildActions","map","tab","menu","create","parent","text","label","visible","event","log","isDebugEnabled","debug","popup","close","select","focus","options","htmlComp","prefSize","prefWidth","Number","MAX_VALUE","overflowableIndexes","index","selected","filter","horizontal","_minSize","add","_setFirstLastMarker","_prefSize","overflowIndex","splice","displayStyle","DisplayStyle","SPREAD_EVEN","exactPrefSize","tabItems","visibleTabItems","push","considerEllipsis","_tabItemSize","reduce","itemSize","height","Math","max","nvl","ellipsisSize","tabs","$comp","removeClass","addClass","item","classList","attr","exact","margins","fieldStatus","statusOverflownAndHidden","overflown","statusWidth","includeMargin","attrOrRemove","propertyName"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/tabbox/TabAreaLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, HtmlComponent, scout, TabArea} from '../../../index';\nimport $ from 'jquery';\n\nexport default class TabAreaLayout extends AbstractLayout {\n\n  /**\n   * @param {TabArea} tabArea\n   */\n  constructor(tabArea) {\n    super();\n    this.tabArea = tabArea;\n    this.overflowTabs = [];\n    this.visibleTabs = [];\n    this._tabAreaPropertyChangeHandler = this._onTabAreaPropertyChange.bind(this);\n\n    this.tabArea.on('propertyChange', this._tabAreaPropertyChangeHandler);\n    this.tabArea.one('remove', () => {\n      this.tabArea.off('propertyChange', this._tabAreaPropertyChangeHandler);\n    });\n  }\n\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container),\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n\n    // compute visible and overflown tabs\n    this.preferredLayoutSize($container, {\n      widthHint: containerSize.width\n    });\n    this._layoutSelectionMarker();\n  }\n\n  _layoutSelectionMarker() {\n    let $selectionMarker = this.tabArea.$selectionMarker,\n      selectedTab = this.tabArea.selectedTab,\n      selectedItemBounds;\n\n    if (selectedTab) {\n      $selectionMarker.setVisible(true);\n      selectedItemBounds = graphics.bounds(selectedTab.$container);\n      $selectionMarker.cssLeft(selectedItemBounds.x);\n      $selectionMarker.cssWidth(selectedItemBounds.width);\n    } else {\n      $selectionMarker.setVisible(false);\n    }\n  }\n\n  _updateEllipsis() {\n    let ellipsis = this.tabArea.ellipsis;\n    ellipsis.setHidden(this.overflowTabs.length < 1);\n    ellipsis.setText(this.overflowTabs.length + '');\n    this.visibleTabs.forEach(tabItem => tabItem.setOverflown(false));\n    this.overflowTabs.forEach(tabItem => tabItem.setOverflown(true));\n\n    ellipsis.setChildActions(this.overflowTabs.map(tab => {\n      let menu = scout.create('Menu', {\n        parent: ellipsis,\n        text: tab.label,\n        tab: tab,\n        visible: tab.visible\n      });\n      menu.on('action', event => {\n        $.log.isDebugEnabled() && $.log.debug('(TabAreaLayout#_onClickEllipsis) tabItem=' + tab);\n        // first close popup to ensure the focus is handled in the correct focus context.\n        ellipsis.popup.close();\n        tab.select();\n        tab.focus();\n      });\n      return menu;\n    }, this));\n  }\n\n  preferredLayoutSize($container, options) {\n    let htmlComp = HtmlComponent.get($container),\n      prefSize = new Dimension(0, 0),\n      prefWidth = Number.MAX_VALUE;\n    this.visibleTabs = this.tabArea.visibleTabs();\n    let overflowableIndexes = this.visibleTabs.map((tabItem, index) => {\n      if (tabItem.selected) {\n        return -1;\n      }\n      return index;\n    }).filter(index => index >= 0);\n\n    this.overflowTabs = [];\n\n    // consider avoid falsy 0 in tab-boxes a 0 withHint will be used to calculate the minimum width\n    if (options.widthHint === 0 || options.widthHint) {\n      prefWidth = options.widthHint - htmlComp.insets().horizontal();\n    }\n\n    // shortcut for minimum size.\n    if (prefWidth <= 0) {\n      return this._minSize(this.visibleTabs).add(htmlComp.insets());\n    }\n\n    this._setFirstLastMarker(this.visibleTabs);\n    this._updateEllipsis();\n    prefSize = this._prefSize(this.visibleTabs);\n\n    while (prefSize.width > prefWidth && overflowableIndexes.length > 0) {\n      let overflowIndex = overflowableIndexes.splice(-1)[0];\n      this.overflowTabs.splice(0, 0, this.visibleTabs[overflowIndex]);\n      this.visibleTabs.splice(overflowIndex, 1);\n      this._setFirstLastMarker(this.visibleTabs);\n      this._updateEllipsis(); // update ellipsis here already so that the prefSize on the next line is correct\n      prefSize = this._prefSize(this.visibleTabs);\n    }\n\n    // Use the total available space if spreading tabs evenly.\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      return graphics.prefSize($container, options);\n    }\n    return graphics.exactPrefSize(prefSize.add(htmlComp.insets()), options);\n  }\n\n  _minSize(tabItems) {\n    let visibleTabItems = [];\n    this.overflowTabs = tabItems.filter(tabItem => {\n      if (tabItem.selected) {\n        visibleTabItems.push(tabItem);\n        return false;\n      }\n      return true;\n    }, this);\n\n    this.visibleTabs = visibleTabItems;\n    this._setFirstLastMarker(visibleTabItems);\n    return this._prefSize(visibleTabItems);\n  }\n\n  _prefSize(tabItems, considerEllipsis) {\n    let prefSize = tabItems\n      .map(tabItem => this._tabItemSize(tabItem))\n      .reduce((prefSize, itemSize) => {\n        prefSize.height = Math.max(prefSize.height, itemSize.height);\n        prefSize.width += itemSize.width;\n        return prefSize;\n      }, new Dimension(0, 0));\n\n    considerEllipsis = scout.nvl(considerEllipsis, this.overflowTabs.length > 0);\n    if (considerEllipsis) {\n      let ellipsisSize = this._tabItemSize(this.tabArea.ellipsis);\n      prefSize.height = Math.max(prefSize.height, ellipsisSize.height);\n      prefSize.width += ellipsisSize.width;\n    }\n    return prefSize;\n  }\n\n  _setFirstLastMarker(tabItems, considerEllipsis) {\n    considerEllipsis = scout.nvl(considerEllipsis, this.overflowTabs.length > 0);\n\n    // reset\n    this.tabArea.tabs.forEach(tabItem => {\n      tabItem.htmlComp.$comp.removeClass('first last');\n    });\n    this.tabArea.ellipsis.$container.removeClass('first last');\n\n    // set first and last\n    if (tabItems.length > 0) {\n      tabItems[0].$container.addClass('first');\n      if (considerEllipsis) {\n        this.tabArea.ellipsis.$container.addClass('last');\n      } else {\n        tabItems[tabItems.length - 1].$container.addClass('last');\n      }\n    }\n  }\n\n  _tabItemSize(item) {\n    let htmlComp = item.htmlComp, prefSize,\n      classList = htmlComp.$comp.attr('class');\n\n    // temporarily revert display style to default. otherwise the pref size of the tab item will be the size of the container.\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      this.tabArea.$container.removeClass('spread-even');\n    }\n\n    htmlComp.$comp.removeClass('overflown');\n    htmlComp.$comp.removeClass('hidden');\n\n    prefSize = htmlComp.prefSize({\n      exact: true\n    }).add(graphics.margins(htmlComp.$comp));\n    if (item.fieldStatus && item.fieldStatus.htmlComp) {\n      let statusOverflownAndHidden = item.overflown && !item.fieldStatus.visible;\n      if (statusOverflownAndHidden) {\n        // overflown tabs have no fieldStatus: explicitly set to visible so that the real consumed space can be computed\n        item.fieldStatus.setVisible(true);\n      }\n      let statusWidth = item.fieldStatus.htmlComp.prefSize({includeMargin: true}).width;\n      if (statusOverflownAndHidden) {\n        // restore\n        item.fieldStatus.setVisible(false);\n      }\n      prefSize.width += statusWidth;\n    }\n\n    htmlComp.$comp.attrOrRemove('class', classList);\n\n    if (this.tabArea.displayStyle === TabArea.DisplayStyle.SPREAD_EVEN) {\n      this.tabArea.$container.addClass('spread-even');\n    }\n    return prefSize;\n  }\n\n  _onTabAreaPropertyChange(event) {\n    if (event.propertyName === 'selectedTab') {\n      this._layoutSelectionMarker();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}