{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FocusContext } from '../index';\n\n/**\n * Rule describing how to resolve a focusable element.\n *\n * @see FocusManager.js\n */\nconst FocusRule = {\n  /**\n   * Indicates to focus the first focusable element.\n   */\n  AUTO: 'auto',\n  /**\n   * Indicates to not focus any element.\n   */\n  NONE: 'none',\n  /**\n   * If prepare is used when installing a focus context, the context won't be ready until explicitly told. During that time, focus context listeners are not attached yet and focus requests are not allowed to be executed.\n   * But: the element of the focused request will be stored as usual in lastValidFocusedElement. So as soon as the context is ready, a call to restoreFocus would focus that element.\n   *\n   * This is useful to disable focus requests during a preparation phase without losing the element which should be focused.\n   *\n   * <b>Important</b>: {@link FocusContext#ready()} must be called manually as soon as the focus context is ready.\n   */\n  PREPARE: 'prepare'\n};\nexport default FocusRule;","map":{"version":3,"names":["FocusContext","FocusRule","AUTO","NONE","PREPARE"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/focus/FocusRule.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FocusContext} from '../index';\n\n/**\n * Rule describing how to resolve a focusable element.\n *\n * @see FocusManager.js\n */\nconst FocusRule = {\n  /**\n   * Indicates to focus the first focusable element.\n   */\n  AUTO: 'auto',\n  /**\n   * Indicates to not focus any element.\n   */\n  NONE: 'none',\n  /**\n   * If prepare is used when installing a focus context, the context won't be ready until explicitly told. During that time, focus context listeners are not attached yet and focus requests are not allowed to be executed.\n   * But: the element of the focused request will be stored as usual in lastValidFocusedElement. So as soon as the context is ready, a call to restoreFocus would focus that element.\n   *\n   * This is useful to disable focus requests during a preparation phase without losing the element which should be focused.\n   *\n   * <b>Important</b>: {@link FocusContext#ready()} must be called manually as soon as the focus context is ready.\n   */\n  PREPARE: 'prepare'\n};\n\nexport default FocusRule;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAY,QAAO,UAAU;;AAErC;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG;EAChB;AACF;AACA;EACEC,IAAI,EAAE,MAAM;EACZ;AACF;AACA;EACEC,IAAI,EAAE,MAAM;EACZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE;AACX,CAAC;AAED,eAAeH,SAAS"},"metadata":{},"sourceType":"module"}