{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, BenchColumnLayoutData, cookies, DeferredGlassPaneTarget, DesktopLayout, DesktopNavigation, Device, DisableBrowserF5ReloadKeyStroke, DisableBrowserTabSwitchingKeyStroke, Event, FileChooserController, Form, HtmlComponent, HtmlEnvironment, KeyStrokeContext, MessageBoxController, objects, Outline, Popup, scout, SimpleTabArea, strings, styles, Tree, URL, webstorage, Widget, widgets } from '../index';\nimport $ from 'jquery';\nexport default class Desktop extends Widget {\n  constructor() {\n    super();\n    this.desktopStyle = Desktop.DisplayStyle.DEFAULT;\n    this.title = null;\n    this.selectViewTabsKeyStrokesEnabled = true;\n    this.selectViewTabsKeyStrokeModifier = 'control';\n    this.cacheSplitterPosition = true;\n    this.browserHistoryEntry = null;\n    this.logoId = null;\n    this.navigationVisible = true;\n    this.navigationHandleVisible = true;\n    this.logoActionEnabled = false;\n    this.benchVisible = true;\n    this.headerVisible = true;\n    this.geolocationServiceAvailable = Device.get().supportsGeolocation();\n    this.benchLayoutData = null;\n    /** @type NativeNotificationDefaults|null */\n    this.nativeNotificationDefaults = null;\n    this.menus = [];\n    this.addOns = [];\n    this.dialogs = [];\n    this.views = [];\n    this.keyStrokes = [];\n    this.viewButtons = [];\n    this.messageBoxes = [];\n    this.fileChoosers = [];\n    this.outline = null;\n    this.activeForm = null;\n    this.selectedViewTabs = [];\n    this.notifications = [];\n    this.navigation = null;\n    this.header = null;\n    this.bench = null;\n    this.splitter = null;\n    this.splitterVisible = false;\n    this.formController = null;\n    this.messageBoxController = null;\n    this.fileChooserController = null;\n    this.initialFormRendering = false;\n    this.offline = false;\n    this.inBackground = false;\n    this.openUriHandler = null;\n    this.theme = null;\n    this.dense = false;\n    this._glassPaneTargetFilters = [];\n    this.url = null;\n    this._addWidgetProperties(['viewButtons', 'menus', 'views', 'selectedViewTabs', 'dialogs', 'outline', 'messageBoxes', 'notifications', 'fileChoosers', 'addOns', 'keyStrokes', 'activeForm', 'focusedElement']);\n    this._addPreserveOnPropertyChangeProperties(['focusedElement']);\n\n    // event listeners\n    this._benchActiveViewChangedHandler = this._onBenchActivateViewChanged.bind(this);\n  }\n  _init(model) {\n    // Note: session and desktop are tightly coupled. Because a lot of widgets want to register\n    // a listener on the desktop in their init phase, they access the desktop by calling 'this.session.desktop'\n    // that's why we need this instance as early as possible. When that happens they access a desktop which is\n    // not yet fully initialized. But anyway, it's already possible to attach a listener, for instance.\n    // Because of this line of code here, we don't have to set the variable in App.js, after the desktop has been\n    // created. Also note that Scout Java uses a different pattern to solve the same problem, there a VirtualDesktop\n    // is used during initialization. When initialization is done, all registered listeners on the virtual desktop\n    // are copied to the real desktop instance.\n    let session = model.session || model.parent.session;\n    session.desktop = this;\n\n    // Needs to be initialized before notifications are created because notifications read this value during init\n    model.nativeNotificationDefaults = this._createNativeNotificationDefaults(model);\n    super._init(model);\n    this.url = new URL();\n    this._initTheme();\n    this.formController = scout.create('DesktopFormController', {\n      displayParent: this,\n      session: this.session\n    });\n    this.messageBoxController = new MessageBoxController(this, this.session);\n    this.fileChooserController = new FileChooserController(this, this.session);\n    this._resizeHandler = this.onResize.bind(this);\n    this._popstateHandler = this.onPopstate.bind(this);\n    this.updateSplitterVisibility();\n    this.resolveTextKeys(['title']);\n    this._setViews(this.views);\n    this._setViewButtons(this.viewButtons);\n    this._setMenus(this.menus);\n    this._setKeyStrokes(this.keyStrokes);\n    this._setBenchLayoutData(this.benchLayoutData);\n    this._setDisplayStyle(this.displayStyle);\n    this._setDense(this.dense);\n    this.openUriHandler = scout.create('OpenUriHandler', {\n      session: this.session\n    });\n    this._glassPaneTargetFilters.push((targetElem, element) => {\n      // Exclude all child elements of the given widget\n      // Use case: element is a popup and has tooltip open. The tooltip is displayed in the desktop and considered as glass pane target by the selector above\n      let target = scout.widget(targetElem);\n      return !element.has(target);\n    });\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.keyStrokeContext.registerKeyStroke([new DisableBrowserF5ReloadKeyStroke(this), new DisableBrowserTabSwitchingKeyStroke(this)]);\n  }\n\n  /**\n   * @param {object} model desktop model\n   * @return {NativeNotificationDefaults}\n   */\n  _createNativeNotificationDefaults(model) {\n    return $.extend({\n      title: model.title,\n      iconId: model.logoId\n    }, model.nativeNotificationDefaults);\n  }\n\n  /**\n   * @param {NativeNotificationDefaults} defaults\n   */\n  setNativeNotificationDefaults(defaults) {\n    this.setProperty('nativeNotificationDefaults', defaults);\n  }\n  _onBenchActivateViewChanged(event) {\n    if (this.initialFormRendering) {\n      return;\n    }\n    let view = event.view;\n    if (view instanceof Form && this.bench.outlineContent !== view && !view.detailForm) {\n      // Notify model that this form is active (only for regular views, not detail forms)\n      this._setFormActivated(view);\n    }\n  }\n  _render() {\n    this.$container = this.$parent;\n    this.$container.addClass('desktop');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n\n    // Attach resize listener before other elements can add their own resize listener (e.g. an addon) to make sure it is executed first\n    this.$container.window().on('resize', this._resizeHandler).on('popstate', this._popstateHandler);\n\n    // Desktop elements are added before this separator, all overlays are opened after (dialogs, popups, tooltips etc.)\n    this.$overlaySeparator = this.$container.appendDiv('overlay-separator').setVisible(false);\n    this._renderDense();\n    this._renderNavigationVisible();\n    this._renderHeaderVisible();\n    this._renderBenchVisible();\n    this._renderTitle();\n    this._renderLogoUrl();\n    this._renderSplitterVisible();\n    this._renderInBackground();\n    this._renderNavigationHandleVisible();\n    this._renderNotifications();\n    this._renderBrowserHistoryEntry();\n    this.addOns.forEach(addOn => {\n      addOn.render();\n    }, this);\n\n    // prevent general drag and drop, dropping a file anywhere in the application must not open this file in browser\n    this._setupDragAndDrop();\n    this._disableContextMenu();\n  }\n  _remove() {\n    this.formController.remove();\n    this.messageBoxController.remove();\n    this.fileChooserController.remove();\n    this.$container.window().off('resize', this._resizeHandler).off('popstate', this._popstateHandler);\n    super._remove();\n  }\n  _postRender() {\n    super._postRender();\n\n    // Render attached forms, message boxes and file choosers.\n    this.initialFormRendering = true;\n    this._renderDisplayChildrenOfOutline();\n    this.formController.render();\n    this.messageBoxController.render();\n    this.fileChooserController.render();\n    this.initialFormRendering = false;\n  }\n  _setDisplayStyle(displayStyle) {\n    this._setProperty('displayStyle', displayStyle);\n    let compact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n    if (this.header) {\n      if (this.header.tabArea) {\n        const DisplayStyle = SimpleTabArea.DisplayStyle;\n        this.header.tabArea.setDisplayStyle(compact ? DisplayStyle.SPREAD_EVEN : DisplayStyle.DEFAULT);\n      }\n      this.header.setToolBoxVisible(!compact);\n      this.header.animateRemoval = compact;\n    }\n    if (this.navigation) {\n      this.navigation.setToolBoxVisible(compact);\n      this.navigation.htmlComp.layoutData.fullWidth = compact;\n    }\n    if (this.bench) {\n      this.bench.setOutlineContentVisible(!compact);\n    }\n    if (this.outline) {\n      this.outline.setCompact(compact);\n      this.outline.setEmbedDetailContent(compact);\n    }\n  }\n  setDense(dense) {\n    this.setProperty('dense', dense);\n  }\n  _setDense(dense) {\n    this._setProperty('dense', dense);\n    styles.clearCache();\n    HtmlEnvironment.get().init(this.dense ? 'dense' : null);\n  }\n  _renderDense() {\n    this.$container.toggleClass('dense', this.dense);\n  }\n  _createLayout() {\n    return new DesktopLayout(this);\n  }\n\n  /**\n   * Displays attached forms, message boxes and file choosers.\n   * Outline does not need to be rendered to show the child elements, it needs to be active (necessary if navigation is invisible)\n   */\n  _renderDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.render();\n    this.outline.messageBoxController.render();\n    this.outline.fileChooserController.render();\n\n    // this restores the selected view after a page refresh. selectedViewTabs is only set by the model.\n    if (this.outline.selectedViewTabs) {\n      this.outline.selectedViewTabs.forEach(selectedView => {\n        this.formController._activateView(selectedView);\n      });\n    } else {\n      // views on the outline are not activated by default. Check for modal views on this outline\n      let modalViews = this.outline.views.filter(view => view.modal);\n      // activate each modal view in the order it was originally activated\n      modalViews.forEach(this.formController._activateView.bind(this.formController));\n    }\n  }\n  _removeDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.remove();\n    this.outline.messageBoxController.remove();\n    this.outline.fileChooserController.remove();\n  }\n  computeParentForDisplayParent(displayParent) {\n    // Outline must not be used as parent, otherwise the children (form, messageboxes etc.) would be removed if navigation is made invisible\n    // The functions _render/removeDisplayChildrenOfOutline take care that the elements are correctly rendered/removed on an outline switch\n    let parent = displayParent;\n    if (displayParent instanceof Outline) {\n      parent = this;\n    }\n    return parent;\n  }\n  _renderTitle() {\n    let title = this.title;\n    if (title === undefined || title === null) {\n      return;\n    }\n    let $scoutDivs = $('div.scout');\n    if ($scoutDivs.length <= 1) {\n      // only set document title in non-portlet case\n      $scoutDivs.document(true).title = title;\n    }\n  }\n  _renderActiveForm() {\n    // NOP -> is handled in _setFormActivated when ui changes active form or if model changes form in _onFormShow/_onFormActivate\n  }\n  _renderBench() {\n    if (this.bench) {\n      return;\n    }\n    this.bench = this._createBench();\n    this.bench.on('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.render();\n    this.bench.$container.insertBefore(this.$overlaySeparator);\n    this.invalidateLayoutTree();\n  }\n  _createBench() {\n    return scout.create('DesktopBench', {\n      parent: this,\n      animateRemoval: true,\n      headerTabArea: this.header ? this.header.tabArea : undefined,\n      outlineContentVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n    });\n  }\n  _removeBench() {\n    if (!this.bench) {\n      return;\n    }\n    this.bench.off('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.on('destroy', () => {\n      this.bench = null;\n      this.invalidateLayoutTree();\n    });\n    this.bench.destroy();\n  }\n  _renderBenchVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.benchVisible) {\n      this._renderBench();\n      this._renderInBackground();\n    } else {\n      this._removeBench();\n    }\n  }\n  _renderNavigation() {\n    if (this.navigation) {\n      return;\n    }\n    this.navigation = this._createNavigation();\n    this.navigation.render();\n    this.navigation.$container.prependTo(this.$container);\n    this.$container.removeClass('navigation-invisible');\n    this.invalidateLayoutTree();\n  }\n  _createNavigation() {\n    return scout.create('DesktopNavigation', {\n      parent: this,\n      outline: this.outline,\n      toolBoxVisible: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n      layoutData: {\n        fullWidth: this.displayStyle === Desktop.DisplayStyle.COMPACT\n      }\n    });\n  }\n  _removeNavigation() {\n    this.$container.addClass('navigation-invisible');\n    if (!this.navigation) {\n      return;\n    }\n    this.navigation.destroy();\n    this.navigation = null;\n    this.invalidateLayoutTree();\n  }\n  _renderNavigationVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.navigationVisible) {\n      this._renderNavigation();\n    } else {\n      if (!this.animateLayoutChange) {\n        this._removeNavigation();\n      } else {\n        // re layout to trigger animation\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n  _renderHeader() {\n    if (this.header) {\n      return;\n    }\n    this.header = this._createHeader();\n    this.header.render();\n    if (this.navigation && this.navigation.rendered) {\n      this.header.$container.insertAfter(this.navigation.$container);\n    } else {\n      this.header.$container.prependTo(this.$container);\n    }\n    // register header tab area\n    if (this.bench) {\n      this.bench._setTabArea(this.header.tabArea);\n    }\n    this.invalidateLayoutTree();\n  }\n  _createHeader() {\n    let compact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n    return scout.create('DesktopHeader', {\n      parent: this,\n      logoUrl: this.logoUrl,\n      animateRemoval: compact,\n      toolBoxVisible: !compact,\n      tabArea: {\n        displayStyle: compact ? SimpleTabArea.DisplayStyle.SPREAD_EVEN : SimpleTabArea.DisplayStyle.DEFAULT\n      }\n    });\n  }\n  _removeHeader() {\n    if (!this.header) {\n      return;\n    }\n    this.header.on('destroy', () => {\n      this.invalidateLayoutTree();\n      this.header = null;\n    });\n    this.header.destroy();\n  }\n  _renderHeaderVisible() {\n    if (this.headerVisible) {\n      this._renderHeader();\n    } else {\n      this._removeHeader();\n    }\n  }\n  _renderLogoUrl() {\n    if (this.header) {\n      this.header.setLogoUrl(this.logoUrl);\n    }\n  }\n  _renderSplitterVisible() {\n    if (this.splitterVisible) {\n      this._renderSplitter();\n    } else {\n      this._removeSplitter();\n    }\n  }\n  _renderSplitter() {\n    if (this.splitter || !this.navigation) {\n      return;\n    }\n    this.splitter = scout.create('Splitter', {\n      parent: this,\n      $anchor: this.navigation.$container,\n      $root: this.$container\n    });\n    this.splitter.render();\n    this.splitter.$container.insertBefore(this.$overlaySeparator);\n    this.splitter.on('move', this._onSplitterMove.bind(this));\n    this.splitter.on('moveEnd', this._onSplitterMoveEnd.bind(this));\n    this.splitter.on('positionChange', this._onSplitterPositionChange.bind(this));\n    this.updateSplitterPosition();\n  }\n  _removeSplitter() {\n    if (!this.splitter) {\n      return;\n    }\n    this.splitter.destroy();\n    this.splitter = null;\n  }\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.inBackground && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n    if (this.bench) {\n      this.bench.$container.toggleClass('drop-shadow', this.inBackground);\n    }\n  }\n  _renderBrowserHistoryEntry() {\n    if (!Device.get().supportsHistoryApi()) {\n      return;\n    }\n    let myWindow = this.$container.window(true),\n      history = this.browserHistoryEntry;\n    if (history) {\n      let historyPath = this._createHistoryPath(history);\n      let setStateFunc = (this.rendered ? myWindow.history.pushState : myWindow.history.replaceState).bind(myWindow.history);\n      setStateFunc({\n        deepLinkPath: history.deepLinkPath\n      }, history.title, historyPath);\n    }\n  }\n\n  /**\n   * Takes the history.path provided by the browserHistoryEvent and appends additional URL parameters.\n   */\n  _createHistoryPath(history) {\n    if (!history.pathVisible) {\n      return '';\n    }\n    let historyPath = history.path;\n    let cloneUrl = this.url.clone();\n    cloneUrl.removeParameter('dl');\n    cloneUrl.removeParameter('i');\n    if (objects.countOwnProperties(cloneUrl.parameterMap) > 0) {\n      let pathUrl = new URL(historyPath);\n      for (let paramName in cloneUrl.parameterMap) {\n        pathUrl.addParameter(paramName, cloneUrl.getParameter(paramName));\n      }\n      historyPath = pathUrl.toString({\n        alwaysFirst: ['dl', 'i']\n      });\n    }\n    return historyPath;\n  }\n  _setupDragAndDrop() {\n    let dragEnterOrOver = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      // change cursor to forbidden (no dropping allowed)\n      event.originalEvent.dataTransfer.dropEffect = 'none';\n    };\n    this.$container.on('dragenter', dragEnterOrOver);\n    this.$container.on('dragover', dragEnterOrOver);\n    this.$container.on('drop', event => {\n      event.stopPropagation();\n      event.preventDefault();\n    });\n  }\n  updateSplitterVisibility() {\n    // Splitter should only be visible if navigation and bench are visible, but never in compact mode (to prevent unnecessary splitter rendering)\n    this.setSplitterVisible(this.navigationVisible && this.benchVisible && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n  setSplitterVisible(visible) {\n    this.setProperty('splitterVisible', visible);\n  }\n  updateSplitterPosition() {\n    if (!this.splitter) {\n      return;\n    }\n    let storedSplitterPosition = this.cacheSplitterPosition && this._loadCachedSplitterPosition();\n    if (storedSplitterPosition) {\n      // Restore splitter position\n      let splitterPosition = parseInt(storedSplitterPosition, 10);\n      this.splitter.setPosition(splitterPosition);\n      this.invalidateLayoutTree();\n    } else {\n      // Set initial splitter position (default defined by css)\n      this.splitter.setPosition();\n      this.invalidateLayoutTree();\n    }\n  }\n  _disableContextMenu() {\n    // Switch off browser's default context menu for the entire scout desktop (except input fields)\n    this.$container.on('contextmenu', event => {\n      if (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA' && !event.target.isContentEditable) {\n        event.preventDefault();\n      }\n    });\n  }\n  setOutline(outline) {\n    if (this.outline === outline) {\n      return;\n    }\n    try {\n      if (this.bench) {\n        this.bench.setChanging(true);\n      }\n      if (this.rendered) {\n        this._removeDisplayChildrenOfOutline();\n      }\n      this.outline = outline;\n      this._setDisplayStyle(this.displayStyle);\n      this._setOutlineActivated();\n      if (this.navigation) {\n        this.navigation.setOutline(this.outline);\n      }\n      // call render after triggering event so glasspane rendering taking place can refer to the current outline content\n      this.trigger('outlineChange');\n      if (this.rendered) {\n        this._renderDisplayChildrenOfOutline();\n      }\n    } finally {\n      if (this.bench) {\n        this.bench.setChanging(false);\n      }\n    }\n  }\n  _setViews(views) {\n    if (views) {\n      views.forEach(view => {\n        view.setDisplayParent(this);\n      });\n    }\n    this._setProperty('views', views);\n  }\n  _setViewButtons(viewButtons) {\n    this.updateKeyStrokes(viewButtons, this.viewButtons);\n    this._setProperty('viewButtons', viewButtons);\n  }\n  setMenus(menus) {\n    if (this.header) {\n      this.header.setMenus(menus);\n    }\n  }\n  _setMenus(menus) {\n    this.updateKeyStrokes(menus, this.menus);\n    this._setProperty('menus', menus);\n  }\n  _setKeyStrokes(keyStrokes) {\n    this.updateKeyStrokes(keyStrokes, this.keyStrokes);\n    this._setProperty('keyStrokes', keyStrokes);\n  }\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n  _renderNavigationHandleVisible() {\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n  setNavigationVisible(visible) {\n    this.setProperty('navigationVisible', visible);\n    this.updateSplitterVisibility();\n  }\n  setBenchVisible(visible) {\n    this.setProperty('benchVisible', visible);\n    this.updateSplitterVisibility();\n  }\n  setHeaderVisible(visible) {\n    this.setProperty('headerVisible', visible);\n  }\n  _setBenchLayoutData(layoutData) {\n    layoutData = BenchColumnLayoutData.ensure(layoutData);\n    this._setProperty('benchLayoutData', layoutData);\n  }\n  _setInBackground(inBackground) {\n    this._setProperty('inBackground', inBackground);\n  }\n  outlineDisplayStyle() {\n    if (this.outline) {\n      return this.outline.displayStyle;\n    }\n  }\n  shrinkNavigation() {\n    if (this.outline && this.outline.toggleBreadcrumbStyleEnabled && this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.DEFAULT) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.BREADCRUMB);\n    } else {\n      this.setNavigationVisible(false);\n    }\n  }\n  enlargeNavigation() {\n    if (this.outline && this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.DEFAULT);\n      if (this.cacheSplitterPosition && this.splitter) {\n        this.validateLayoutTree();\n        this._storeCachedSplitterPosition(this.splitter.position);\n      }\n    } else {\n      this.setNavigationVisible(true);\n    }\n  }\n\n  /**\n   * @param {boolean} headerVisible whether the desktop header should be made visible\n   */\n  switchToBench(headerVisible) {\n    this.setHeaderVisible(scout.nvl(headerVisible, true));\n    this.setBenchVisible(true);\n    this.setNavigationVisible(false);\n  }\n  switchToNavigation() {\n    this.setNavigationVisible(true);\n    this.setHeaderVisible(false);\n    this.setBenchVisible(false);\n  }\n  revalidateHeaderLayout() {\n    if (this.header) {\n      this.header.revalidateLayout();\n    }\n  }\n  goOffline() {\n    if (this.offline) {\n      return;\n    }\n    this.offline = true;\n    this._removeOfflineNotification();\n    this._offlineNotification = scout.create('DesktopNotification:Offline', {\n      parent: this\n    });\n    this._offlineNotification.show();\n  }\n  goOnline() {\n    this._removeOfflineNotification();\n  }\n  _removeOfflineNotification() {\n    if (this._offlineNotification) {\n      setTimeout(this.removeNotification.bind(this, this._offlineNotification), 3000);\n      this._offlineNotification = null;\n    }\n  }\n  addNotification(notification) {\n    if (!notification) {\n      return;\n    }\n    this.notifications.push(notification);\n    if (this.rendered) {\n      this._renderNotification(notification);\n    }\n  }\n  _renderNotification(notification) {\n    if (this.$notifications) {\n      // Bring to front\n      this.$notifications.appendTo(this.$container);\n    } else {\n      this.$notifications = this.$container.appendDiv('desktop-notifications');\n    }\n    notification.fadeIn(this.$notifications);\n    if (notification.duration > 0) {\n      notification.removeTimeout = setTimeout(notification.hide.bind(notification), notification.duration);\n      notification.one('remove', () => {\n        this.removeNotification(notification);\n      });\n    }\n  }\n  _renderNotifications() {\n    this.notifications.forEach(notification => {\n      this._renderNotification(notification);\n    });\n  }\n\n  /**\n   * Removes the given notification.\n   * @param {DesktopNotification|string} notification Either an instance of DesktopNavigation or a String containing an ID of a notification instance.\n   */\n  removeNotification(notification) {\n    if (typeof notification === 'string') {\n      let notificationId = notification;\n      notification = arrays.find(this.notifications, n => {\n        return notificationId === n.id;\n      });\n    }\n    if (!notification) {\n      return;\n    }\n    if (notification.removeTimeout) {\n      clearTimeout(notification.removeTimeout);\n    }\n    arrays.remove(this.notifications, notification);\n    if (!this.rendered) {\n      return;\n    }\n    if (notification.rendered) {\n      notification.one('remove', this._onNotificationRemove.bind(this, notification));\n    }\n    notification.fadeOut();\n  }\n  getPopups() {\n    if (!this.$container) {\n      return [];\n    }\n    let popups = [];\n    this.$container.children('.popup').each((i, elem) => {\n      let $popup = $(elem);\n      let popup = widgets.get($popup);\n      if (popup instanceof Popup) {\n        popups.push(popup);\n      }\n    });\n    return popups;\n  }\n  getPopupsFor(widget) {\n    return this.getPopups().filter(popup => widget.has(popup));\n  }\n\n  /**\n   * Removes every popup which is a descendant of the given widget.\n   */\n  removePopupsFor(widget) {\n    this.getPopupsFor(widget).forEach(popup => {\n      popup.remove();\n    });\n  }\n\n  /**\n   * Opens the uri using {@link OpenUriHandler}\n   * @param {string} uri the uri to open\n   * @param {Desktop.UriAction} [action] the action to be performed on the given uri. Default is Desktop.UriAction.OPEN.\n   */\n  openUri(uri, action) {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.openUri.bind(this, uri, action));\n      return;\n    }\n    this.openUriHandler.openUri(uri, action);\n  }\n  bringOutlineToFront() {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.bringOutlineToFront.bind(this));\n      return;\n    }\n    if (!this.inBackground || this.displayStyle === Desktop.DisplayStyle.BENCH) {\n      return;\n    }\n    this._setInBackground(false);\n    this._setOutlineActivated();\n    if (this.navigationVisible) {\n      this.navigation.bringToFront();\n    }\n    if (this.benchVisible) {\n      this.bench.bringToFront();\n    }\n    if (this.headerVisible) {\n      this.header.bringToFront();\n    }\n    this._renderInBackground();\n  }\n  sendOutlineToBack() {\n    if (this.inBackground) {\n      return;\n    }\n    this._setInBackground(true);\n    if (this.navigationVisible) {\n      this.navigation.sendToBack();\n    }\n    if (this.benchVisible) {\n      this.bench.sendToBack();\n    }\n    if (this.headerVisible) {\n      this.header.sendToBack();\n    }\n    this._renderInBackground();\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns 'true' if the Desktop is currently accessible to the user.\n   */\n  inFront() {\n    return true; // Desktop is always available to the user.\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns the DOM elements to paint a glassPanes over, once a modal Form, message-box, file-chooser or wait-dialog is showed with the Desktop as its 'displayParent'.\n   */\n  _glassPaneTargets(element) {\n    // Do not return $container, because this is the parent of all forms and message boxes. Otherwise, no form could gain focus, even the form requested desktop modality.\n    let $glassPaneTargets = this.$container.children().not('.splitter') // exclude splitter to be locked\n    .not('.desktop-notifications') // exclude notification box like 'connection interrupted' to be locked\n    .not('.overlay-separator'); // exclude overlay separator (marker element)\n\n    if (element) {\n      if (element.$container) {\n        $glassPaneTargets = $glassPaneTargets.not(element.$container);\n      }\n      let overlays = this.$overlaySeparator.nextAll().toArray();\n      let nextSiblings = [];\n      // If the element is an overlay, get all next siblings and exclude them because they must not be covered\n      if (element.$container && overlays.indexOf(element.$container[0]) > -1) {\n        nextSiblings = element.$container.nextAll().toArray();\n      }\n\n      // The top-most element should not have a glass-pane (#274353)\n      let topMostElement = null;\n      if (overlays.length) {\n        for (let i = overlays.length - 1; i >= 0; i--) {\n          // Don't consider filtered glass-pane targets like the HelpPopup.js\n          // These targets stand outside the regular modality hierarchy.\n          let overlay = overlays[i];\n          if (!this._isGlassPaneTargetFiltered(overlay, element)) {\n            continue;\n          }\n          topMostElement = overlay;\n          break; // stop looking further\n        }\n      }\n\n      $glassPaneTargets = $glassPaneTargets.filter((i, targetElem) => {\n        if (nextSiblings.indexOf(targetElem) > -1) {\n          return false;\n        }\n        if (targetElem === topMostElement) {\n          return false;\n        }\n        return this._isGlassPaneTargetFiltered(targetElem, element);\n      });\n    }\n    let glassPaneTargets;\n    if (element instanceof Form && element.displayHint === Form.DisplayHint.VIEW) {\n      $glassPaneTargets = $glassPaneTargets.not('.desktop-bench').not('.desktop-header');\n      if (this.header && this.header.toolBox && this.header.toolBox.$container) {\n        $glassPaneTargets.push(this.header.toolBox.$container);\n      }\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n      arrays.pushAll(glassPaneTargets, this._getBenchGlassPaneTargetsForView(element));\n    } else {\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n    }\n\n    // When a popup-window is opened its container must also be added to the result\n    this._pushPopupWindowGlassPaneTargets(glassPaneTargets, element);\n    return glassPaneTargets;\n  }\n  _isGlassPaneTargetFiltered(targetElem, element) {\n    return this._glassPaneTargetFilters.every(filter => {\n      return filter(targetElem, element);\n    }, this);\n  }\n\n  /**\n   * Adds a filter which is applied when the glass pane targets are collected.\n   * If the filter returns <code>false</code>, the target won't be accepted and not covered by a glass pane.\n   * This filter should be used primarily for elements like the help-popup which stand outside\n   * of the regular modality hierarchy.\n   *\n   * @param {function} filter a function with the parameter target and element. Target is the element which\n   *     would be covered by a glass pane, element is the element the user interacts with (e.g. the modal dialog).\n   * @see _glassPaneTargets\n   */\n  addGlassPaneTargetFilter(filter) {\n    this._glassPaneTargetFilters.push(filter);\n  }\n  removeGlassPaneTargetFilter(filter) {\n    arrays.remove(this._glassPaneTargetFilters, filter);\n  }\n\n  /**\n   * This 'deferred' object is used because popup windows are not immediately usable when they're opened.\n   * That's why we must render the glass-pane of a popup window later. Which means, at the point in time\n   * when its $container is created and ready for usage. To avoid race conditions we must also wait until\n   * the glass pane renderer is ready. Only when both conditions are fullfilled, we can render the glass\n   * pane.\n   */\n  _deferredGlassPaneTarget(popupWindow) {\n    let deferred = new DeferredGlassPaneTarget();\n    popupWindow.one('init', () => {\n      deferred.ready([popupWindow.$container]);\n    });\n    return deferred;\n  }\n  _getBenchGlassPaneTargetsForView(view) {\n    let $glassPanes = [];\n    $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, this.header));\n    if (this.bench) {\n      this.bench.visibleTabBoxes().forEach(function (tabBox) {\n        if (!tabBox.rendered) {\n          return;\n        }\n        if (tabBox.hasView(view)) {\n          $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, tabBox));\n        } else {\n          $glassPanes.push(tabBox.$container);\n        }\n      }, this);\n    }\n    return $glassPanes;\n  }\n  _getTabGlassPaneTargetsForView(view, tabBox) {\n    let $glassPanes = [];\n    if (tabBox && tabBox.tabArea) {\n      tabBox.tabArea.tabs.forEach(tab => {\n        if (tab.view !== view) {\n          $glassPanes.push(tab.$container);\n          // Workaround for javascript not being able to prevent hover event propagation:\n          // In case of tabs, the hover selector is defined on the element that is the direct parent\n          // of the glass pane. Under these circumstances, the hover style isn't be prevented by the glass pane.\n          tab.$container.addClass('glasspane-parent');\n        }\n      });\n    }\n    return $glassPanes;\n  }\n  _pushPopupWindowGlassPaneTargets(glassPaneTargets, element) {\n    this.formController._popupWindows.forEach(function (popupWindow) {\n      if (element === popupWindow.form) {\n        // Don't block form itself\n        return;\n      }\n      glassPaneTargets.push(popupWindow.initialized ? popupWindow.$container[0] : this._deferredGlassPaneTarget(popupWindow));\n    }, this);\n  }\n  showForm(form, position) {\n    let displayParent = form.displayParent || this;\n    form.setDisplayParent(displayParent);\n    this._setFormActivated(form);\n    // register listener to recover active form when child dialog is removed\n    displayParent.formController.registerAndRender(form, position, true);\n  }\n  hideForm(form) {\n    if (!form.displayParent) {\n      // showForm has probably never been called -> nothing to do here\n      // May happen if form.close() is called immediately after form.open() without waiting for the open promise to resolve\n      // Hint: it is not possible to check whether the form is rendered and then return (which would be the obvious thing to do).\n      // Reason: Forms in popup windows are removed before getting closed, see DesktopFormController._onPopupWindowUnload\n      return;\n    }\n    if (this.displayStyle === Desktop.DisplayStyle.COMPACT && form.isView() && this.benchVisible) {\n      let openViews = this.bench.getViews().slice();\n      arrays.remove(openViews, form);\n      if (openViews.length === 0) {\n        // Hide bench and show navigation if this is the last view to be hidden\n        this.switchToNavigation();\n      }\n    }\n    form.displayParent.formController.unregisterAndRemove(form);\n    if (!this.benchVisible || this.bench.getViews().length === 0) {\n      // Bring outline to front if last view has been closed,\n      // even if bench is invisible (compact case) to update state correctly and reshow elements (dialog etc.) linked to the outline\n      this.bringOutlineToFront();\n    }\n  }\n\n  /**\n   * @see {@link Form.isShown}\n   * @param {Form} form\n   */\n  isFormShown(form) {\n    let displayParent = form.displayParent || this;\n    return displayParent.formController.isFormShown(form);\n  }\n  activateForm(form) {\n    if (!form) {\n      this._setFormActivated(null);\n      return;\n    }\n    let displayParent = form.displayParent || this;\n    displayParent.formController.activateForm(form);\n    this._setFormActivated(form);\n\n    // If the form has a modal child dialog, this dialog needs to be activated as well.\n    form.dialogs.forEach(function (dialog) {\n      if (dialog.modal) {\n        this.activateForm(dialog);\n      }\n    }, this);\n  }\n  _setOutlineActivated() {\n    this._setFormActivated(null);\n    if (this.outline) {\n      this.outline.activateCurrentPage();\n    }\n  }\n  _setFormActivated(form) {\n    // If desktop is in rendering process the can not set a new active form. instead the active form from the model is set selected.\n    if (!this.rendered || this.initialFormRendering) {\n      return;\n    }\n    if (this.activeForm === form) {\n      return;\n    }\n    this.activeForm = form;\n    if (!form) {\n      // no form is activated -> show outline\n      this.bringOutlineToFront();\n    } else if (form.displayHint === Form.DisplayHint.VIEW && !form.detailForm && this.bench && this.bench.hasView(form)) {\n      // view form was activated. send the outline to back to ensure the form is attached\n      // exclude detail forms even though detail forms usually are not activated\n      // Also only consider \"real\" views used in the bench and ignore other views (e.g. used in a form menu)\n      this.sendOutlineToBack();\n    }\n    this.triggerFormActivate(form);\n  }\n  triggerFormActivate(form) {\n    this.trigger('formActivate', {\n      form: form\n    });\n  }\n  cancelViews(forms) {\n    let event = new Event();\n    event.forms = forms;\n    this.trigger('cancelForms', event);\n    if (!event.defaultPrevented) {\n      this._cancelViews(forms);\n    }\n  }\n  _cancelViews(forms) {\n    // do not cancel forms when the form child hierarchy does not get canceled.\n    forms = forms.filter(form => {\n      return !arrays.find(form.views, view => {\n        return view.modal;\n      });\n    });\n\n    // if there's only one form simply cancel it directly\n    if (forms.length === 1) {\n      forms[0].cancel();\n      return;\n    }\n\n    // collect all forms in the display child hierarchy with unsaved changes.\n    let unsavedForms = forms.filter(form => {\n      let requiresSaveChildDialogs = false;\n      form.visitDisplayChildren(dialog => {\n        if (dialog.lifecycle.requiresSave()) {\n          requiresSaveChildDialogs = true;\n        }\n      }, displayChild => {\n        return displayChild instanceof Form;\n      });\n      return form.lifecycle.requiresSave() || requiresSaveChildDialogs;\n    });\n\n    // initialize with a resolved promise in case there are no unsaved forms.\n    let waitFor = $.resolvedPromise();\n    if (unsavedForms.length > 0) {\n      let unsavedFormChangesForm = scout.create('scout.UnsavedFormChangesForm', {\n        parent: this,\n        session: this.session,\n        displayParent: this,\n        unsavedForms: unsavedForms\n      });\n      unsavedFormChangesForm.open();\n      // promise that is resolved when the UnsavedFormChangesForm is stored\n      waitFor = unsavedFormChangesForm.whenSave().then(() => {\n        let formsToSave = unsavedFormChangesForm.openFormsField.value;\n        formsToSave.forEach(form => {\n          form.visitDisplayChildren(dialog => {\n            // forms should be stored with ok(). Other display children can simply be closed.\n            if (dialog instanceof Form) {\n              dialog.ok();\n            } else {\n              dialog.close();\n            }\n          });\n          form.ok();\n        });\n        return formsToSave;\n      });\n    }\n    waitFor.then(formsToSave => {\n      if (formsToSave) {\n        // already saved & closed forms (handled by the UnsavedFormChangesForm)\n        arrays.removeAll(forms, formsToSave);\n      }\n      // close the remaining forms that don't require saving.\n      forms.forEach(form => {\n        form.visitDisplayChildren(dialog => {\n          dialog.close();\n        });\n        form.close();\n      });\n    });\n  }\n\n  /**\n   * Called when the animation triggered by animationLayoutChange is complete (e.g. navigation or bench got visible/invisible)\n   */\n  onLayoutAnimationComplete() {\n    if (!this.headerVisible) {\n      this._removeHeader();\n    }\n    if (!this.navigationVisible) {\n      this._removeNavigation();\n    }\n    if (!this.benchVisible) {\n      this._removeBench();\n    }\n    this.trigger('animationEnd');\n    this.animateLayoutChange = false;\n  }\n  onLayoutAnimationStep() {\n    this.repositionTooltips();\n  }\n  onResize(event) {\n    this.revalidateLayoutTree();\n  }\n  resetPopstateHandler() {\n    this.setPopstateHandler(this.onPopstate.bind(this));\n  }\n  setPopstateHandler(handler) {\n    if (this.rendered || this.rendering) {\n      let window = this.$container.window();\n      if (this._popstateHandler) {\n        window.off('popstate', this._popstateHandler);\n      }\n      if (handler) {\n        window.on('popstate', handler);\n      }\n    }\n    this._popstateHandler = handler;\n  }\n  onPopstate(event) {\n    let historyState = event.originalEvent.state;\n    if (historyState && historyState.deepLinkPath) {\n      this.trigger('historyEntryActivate', historyState);\n    }\n  }\n  _onSplitterMove(event) {\n    // disallow a position greater than 50%\n    this.resizing = true;\n    let max = Math.floor(this.$container.outerWidth(true) / 2);\n    if (event.position > max) {\n      event.setPosition(max);\n    }\n  }\n  _onSplitterPositionChange(event) {\n    // No need to revalidate while layouting (desktop layout sets the splitter position and would trigger a relayout)\n    if (!this.htmlComp.layouting) {\n      this.revalidateLayout();\n    }\n  }\n  _onSplitterMoveEnd(event) {\n    let splitterPosition = event.position;\n\n    // Store size\n    if (this.cacheSplitterPosition) {\n      this._storeCachedSplitterPosition(this.splitter.position);\n    }\n\n    // Check if splitter is smaller than min size\n    if (splitterPosition < DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n      // Set width of navigation to BREADCRUMB_STYLE_WIDTH, using an animation.\n      // While animating, update the desktop layout.\n      // At the end of the animation, update the desktop layout, and store the splitter position.\n      this.navigation.$container.animate({\n        width: DesktopNavigation.BREADCRUMB_STYLE_WIDTH\n      }, {\n        progress: function () {\n          this.resizing = true;\n          this.splitter.setPosition();\n          this.revalidateLayout();\n          this.resizing = false; // progress seems to be called after complete again -> layout requires flag to be properly set\n        }.bind(this),\n        complete: function () {\n          this.resizing = true;\n          this.splitter.setPosition();\n          // Store size\n          if (this.cacheSplitterPosition) {\n            this._storeCachedSplitterPosition(this.splitter.position);\n          }\n          this.revalidateLayout();\n          this.resizing = false;\n        }.bind(this)\n      });\n    } else {\n      this.resizing = false;\n    }\n  }\n  _loadCachedSplitterPosition() {\n    return webstorage.getItemFromSessionStorage('scout:desktopSplitterPosition') || webstorage.getItemFromLocalStorage('scout:desktopSplitterPosition:' + window.location.pathname);\n  }\n  _storeCachedSplitterPosition(splitterPosition) {\n    webstorage.setItemToSessionStorage('scout:desktopSplitterPosition', splitterPosition);\n    webstorage.setItemToLocalStorage('scout:desktopSplitterPosition:' + window.location.pathname, splitterPosition);\n  }\n  _onNotificationRemove(notification) {\n    if (this.notifications.length === 0 && this.$notifications) {\n      this.$notifications.remove();\n      this.$notifications = null;\n    }\n  }\n  onReconnecting() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnect();\n  }\n  onReconnectingSucceeded() {\n    if (!this.offline) {\n      return;\n    }\n    this.offline = false;\n    this._offlineNotification.reconnectSucceeded();\n    this._removeOfflineNotification();\n  }\n  onReconnectingFailed() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnectFailed();\n  }\n  dataChange(dataType) {\n    this.events.trigger('dataChange', dataType);\n  }\n  _activeTheme() {\n    return cookies.get('scout.ui.theme') || Desktop.DEFAULT_THEME;\n  }\n  logoAction() {\n    if (this.logoActionEnabled) {\n      this.trigger('logoAction');\n    }\n  }\n  _initTheme() {\n    let theme = this.theme;\n    if (this.url.hasParameter('theme')) {\n      theme = strings.nullIfEmpty(this.url.getParameter('theme')) || Desktop.DEFAULT_THEME;\n    } else if (theme === null) {\n      theme = this._activeTheme();\n    }\n    this.setTheme(theme);\n  }\n\n  /**\n   * Changes the current theme.\n   * <p>\n   * The theme name is stored in a persistent cookie called scout.ui.theme.\n   * In order to activate it, the browser is reloaded so that the CSS files for the new theme can be downloaded.\n   * <p>\n   * Since it is a persistent cookie, the theme will be activated again the next time the app is started, unless the cookie is deleted.\n   */\n  setTheme(theme) {\n    this.setProperty('theme', theme);\n    if (this.theme !== this._activeTheme()) {\n      this._switchTheme(theme);\n    }\n  }\n  _switchTheme(theme) {\n    // Add a persistent cookie which expires in 30 days\n    cookies.set('scout.ui.theme', theme, 30 * 24 * 3600);\n\n    // Reload page in order to download the CSS files for the new theme\n    // Don't remove body but make it invisible, otherwise JS exceptions might be thrown if body is removed while an action executed\n    $('body').setVisible(false);\n    let reloadOptions = {\n      clearBody: false\n    };\n    // If parameter 'theme' exists in the URL, remove it now - otherwise the parameter would overrule the cookie settings\n    if (this.url.hasParameter('theme')) {\n      this.url.removeParameter('theme');\n      reloadOptions.redirectUrl = this.url.toString();\n    }\n    scout.reloadPage(reloadOptions);\n  }\n\n  /**\n   * Moves all the given overlays (popups, dialogs, message boxes etc.) before the target overlay and activates the focus context of the target overlay.\n   *\n   * @param overlaysToMove {HTMLElement[]} the overlays which should be moved before the target overlay\n   * @param $targetOverlay {$|HTMLElement} the overlay which should eventually be on top of the movable overlays\n   */\n  moveOverlaysBehindAndFocus(overlaysToMove, $targetOverlay) {\n    $targetOverlay = $.ensure($targetOverlay);\n    $targetOverlay.nextAll().toArray().forEach(overlay => {\n      if (arrays.containsAll(overlaysToMove, [overlay])) {\n        $(overlay).insertBefore($targetOverlay);\n      }\n    });\n\n    // Activate the focus context of the form (will restore the previously focused field)\n    // This must not be done when the currently focused element is part of this dialog's DOM\n    // subtree, even if it has a separate focus context. Otherwise, the dialog would be\n    // (unnecessarily) activated, causing the current focus context to lose the focus.\n    // Example: editable table with a cell editor popup --> editor should keep the focus\n    // when the user clicks the clear icon (\"x\") inside the editor field.\n    if (!$targetOverlay.isOrHas($targetOverlay.activeElement())) {\n      this.session.focusManager.activateFocusContext($targetOverlay);\n    }\n  }\n  repositionTooltips() {\n    this.$container.children('.tooltip').each(function () {\n      scout.widget($(this)).position();\n    });\n  }\n  _renderTrackFocus() {\n    if (this.trackFocus) {\n      // Use capture phase because FocusContext stops propagation\n      this.$container[0].addEventListener('focusin', this._focusInListener, true);\n    } else {\n      this.$container[0].removeEventListener('focusin', this._focusInListener, true);\n    }\n  }\n  _onFocusIn(event) {\n    super._onFocusIn(event);\n    let $target = $(event.target);\n    let focusedElement = scout.widget($target);\n    this.setProperty('focusedElement', focusedElement);\n  }\n}\n_defineProperty(Desktop, \"DisplayStyle\", {\n  DEFAULT: 'default',\n  BENCH: 'bench',\n  COMPACT: 'compact'\n});\n_defineProperty(Desktop, \"UriAction\", {\n  /**\n   * The object represented by the URI should be downloaded rather then be handled by the browser's rendering engine.\n   * It should make the \"Save as...\" dialog appear which allows the user to store the resource to his local file system.<br>\n   * The application's location does not change, and no browser windows or tabs are opened.<br>\n   * <br>\n   *<b>Important:</b> This action only works if the HTTP header <i>Content-Disposition: attachment</i> is present on the response of the object to be downloaded.<br>\n   */\n  DOWNLOAD: 'download',\n  /**\n   * The object represented by the URI should be opened by the browser rather than just be downloaded.\n   * This will only work if the browser knows how to handle the given URI.\n   * E.g. if it points to a pdf file, most browsers will be able to display it using their pdf viewer. Other files may just be downloaded.\n   * If the URI points to a website, it will be opened in a separate window or tab.\n   * <br>\n   * This is also the preferred action to open URIs with <b>special protocols</b> that are registered in the user's system and delegated to some \"protocol\n   * handler\". This handler may then perform actions in a third party application (e.g. <i>mailto:xyz@example.com</i>\n   * would open the system's mail application).<br>\n   * Note that this action may open the object in a new window or tab tab which may be prevented by\n   * the browser's popup blocker mechanism.\n   */\n  OPEN: 'open',\n  /**\n   * The content represented by the URI should be rendered by the browser and displayed in a new window or tab.<br>\n   * The application's location does not change. Note that this action may be prevented by the browser's popup blocker mechanism.\n   */\n  NEW_WINDOW: 'newWindow',\n  /**\n   * The content represented by the URI should be rendered by the browser and displayed in a new non-modal popup\n   * window.\n   * Unlike {@link UriAction.NEW_WINDOW} the newly opened window is limited, i.e. it does not contain the location, the toolbar and the menubar.\n   * This may not work on every browser (e.g. on a mobile browser the action {@link UriAction.POPUP_WINDOW} will likely behave the same way as {@link UriAction.NEW_WINDOW}).<br>\n   * The application's location does not change. Note that this action may be prevented by the browser's popup blocker\n   * mechanism.\n   */\n  POPUP_WINDOW: 'popupWindow',\n  /**\n   * The content represented by the URI should be opened in the same window.\n   * This will mainly just replace the location of the current window.\n   * If the URI points to another website, the current application will be unloaded and replaced.\n   * If it points to a file or uses a special protocol, the handling depends on the used browser.\n   */\n  SAME_WINDOW: 'sameWindow'\n});\n_defineProperty(Desktop, \"DEFAULT_THEME\", 'default');","map":{"version":3,"names":["arrays","BenchColumnLayoutData","cookies","DeferredGlassPaneTarget","DesktopLayout","DesktopNavigation","Device","DisableBrowserF5ReloadKeyStroke","DisableBrowserTabSwitchingKeyStroke","Event","FileChooserController","Form","HtmlComponent","HtmlEnvironment","KeyStrokeContext","MessageBoxController","objects","Outline","Popup","scout","SimpleTabArea","strings","styles","Tree","URL","webstorage","Widget","widgets","$","Desktop","constructor","desktopStyle","DisplayStyle","DEFAULT","title","selectViewTabsKeyStrokesEnabled","selectViewTabsKeyStrokeModifier","cacheSplitterPosition","browserHistoryEntry","logoId","navigationVisible","navigationHandleVisible","logoActionEnabled","benchVisible","headerVisible","geolocationServiceAvailable","get","supportsGeolocation","benchLayoutData","nativeNotificationDefaults","menus","addOns","dialogs","views","keyStrokes","viewButtons","messageBoxes","fileChoosers","outline","activeForm","selectedViewTabs","notifications","navigation","header","bench","splitter","splitterVisible","formController","messageBoxController","fileChooserController","initialFormRendering","offline","inBackground","openUriHandler","theme","dense","_glassPaneTargetFilters","url","_addWidgetProperties","_addPreserveOnPropertyChangeProperties","_benchActiveViewChangedHandler","_onBenchActivateViewChanged","bind","_init","model","session","parent","desktop","_createNativeNotificationDefaults","_initTheme","create","displayParent","_resizeHandler","onResize","_popstateHandler","onPopstate","updateSplitterVisibility","resolveTextKeys","_setViews","_setViewButtons","_setMenus","_setKeyStrokes","_setBenchLayoutData","_setDisplayStyle","displayStyle","_setDense","push","targetElem","element","target","widget","has","_createKeyStrokeContext","_initKeyStrokeContext","keyStrokeContext","invokeAcceptInputOnActiveValueField","registerKeyStroke","extend","iconId","setNativeNotificationDefaults","defaults","setProperty","event","view","outlineContent","detailForm","_setFormActivated","_render","$container","$parent","addClass","htmlComp","install","setLayout","_createLayout","window","on","$overlaySeparator","appendDiv","setVisible","_renderDense","_renderNavigationVisible","_renderHeaderVisible","_renderBenchVisible","_renderTitle","_renderLogoUrl","_renderSplitterVisible","_renderInBackground","_renderNavigationHandleVisible","_renderNotifications","_renderBrowserHistoryEntry","forEach","addOn","render","_setupDragAndDrop","_disableContextMenu","_remove","remove","off","_postRender","_renderDisplayChildrenOfOutline","_setProperty","compact","COMPACT","tabArea","setDisplayStyle","SPREAD_EVEN","setToolBoxVisible","animateRemoval","layoutData","fullWidth","setOutlineContentVisible","setCompact","setEmbedDetailContent","setDense","clearCache","init","toggleClass","selectedView","_activateView","modalViews","filter","modal","_removeDisplayChildrenOfOutline","computeParentForDisplayParent","undefined","$scoutDivs","length","document","_renderActiveForm","_renderBench","_createBench","insertBefore","invalidateLayoutTree","headerTabArea","outlineContentVisible","_removeBench","destroy","animateLayoutChange","rendered","_renderNavigation","_createNavigation","prependTo","removeClass","toolBoxVisible","_removeNavigation","_renderHeader","_createHeader","insertAfter","_setTabArea","logoUrl","_removeHeader","setLogoUrl","_renderSplitter","_removeSplitter","$anchor","$root","_onSplitterMove","_onSplitterMoveEnd","_onSplitterPositionChange","updateSplitterPosition","supportsHistoryApi","myWindow","history","historyPath","_createHistoryPath","setStateFunc","pushState","replaceState","deepLinkPath","pathVisible","path","cloneUrl","clone","removeParameter","countOwnProperties","parameterMap","pathUrl","paramName","addParameter","getParameter","toString","alwaysFirst","dragEnterOrOver","stopPropagation","preventDefault","originalEvent","dataTransfer","dropEffect","setSplitterVisible","visible","storedSplitterPosition","_loadCachedSplitterPosition","splitterPosition","parseInt","setPosition","nodeName","isContentEditable","setOutline","setChanging","_setOutlineActivated","trigger","setDisplayParent","updateKeyStrokes","setMenus","setNavigationHandleVisible","setNavigationVisible","setBenchVisible","setHeaderVisible","ensure","_setInBackground","outlineDisplayStyle","shrinkNavigation","toggleBreadcrumbStyleEnabled","BREADCRUMB","enlargeNavigation","validateLayoutTree","_storeCachedSplitterPosition","position","switchToBench","nvl","switchToNavigation","revalidateHeaderLayout","revalidateLayout","goOffline","_removeOfflineNotification","_offlineNotification","show","goOnline","setTimeout","removeNotification","addNotification","notification","_renderNotification","$notifications","appendTo","fadeIn","duration","removeTimeout","hide","one","notificationId","find","n","id","clearTimeout","_onNotificationRemove","fadeOut","getPopups","popups","children","each","i","elem","$popup","popup","getPopupsFor","removePopupsFor","openUri","uri","action","_postRenderActions","bringOutlineToFront","BENCH","bringToFront","sendOutlineToBack","sendToBack","inFront","_glassPaneTargets","$glassPaneTargets","not","overlays","nextAll","toArray","nextSiblings","indexOf","topMostElement","overlay","_isGlassPaneTargetFiltered","glassPaneTargets","displayHint","DisplayHint","VIEW","toolBox","makeArray","pushAll","_getBenchGlassPaneTargetsForView","_pushPopupWindowGlassPaneTargets","every","addGlassPaneTargetFilter","removeGlassPaneTargetFilter","_deferredGlassPaneTarget","popupWindow","deferred","ready","$glassPanes","concat","_getTabGlassPaneTargetsForView","visibleTabBoxes","tabBox","hasView","tabs","tab","_popupWindows","form","initialized","showForm","registerAndRender","hideForm","isView","openViews","getViews","slice","unregisterAndRemove","isFormShown","activateForm","dialog","activateCurrentPage","triggerFormActivate","cancelViews","forms","defaultPrevented","_cancelViews","cancel","unsavedForms","requiresSaveChildDialogs","visitDisplayChildren","lifecycle","requiresSave","displayChild","waitFor","resolvedPromise","unsavedFormChangesForm","open","whenSave","then","formsToSave","openFormsField","value","ok","close","removeAll","onLayoutAnimationComplete","onLayoutAnimationStep","repositionTooltips","revalidateLayoutTree","resetPopstateHandler","setPopstateHandler","handler","rendering","historyState","state","resizing","max","Math","floor","outerWidth","layouting","BREADCRUMB_STYLE_WIDTH","animate","width","progress","complete","getItemFromSessionStorage","getItemFromLocalStorage","location","pathname","setItemToSessionStorage","setItemToLocalStorage","onReconnecting","reconnect","onReconnectingSucceeded","reconnectSucceeded","onReconnectingFailed","reconnectFailed","dataChange","dataType","events","_activeTheme","DEFAULT_THEME","logoAction","hasParameter","nullIfEmpty","setTheme","_switchTheme","set","reloadOptions","clearBody","redirectUrl","reloadPage","moveOverlaysBehindAndFocus","overlaysToMove","$targetOverlay","containsAll","isOrHas","activeElement","focusManager","activateFocusContext","_renderTrackFocus","trackFocus","addEventListener","_focusInListener","removeEventListener","_onFocusIn","$target","focusedElement","DOWNLOAD","OPEN","NEW_WINDOW","POPUP_WINDOW","SAME_WINDOW"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/Desktop.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, BenchColumnLayoutData, cookies, DeferredGlassPaneTarget, DesktopLayout, DesktopNavigation, Device, DisableBrowserF5ReloadKeyStroke, DisableBrowserTabSwitchingKeyStroke, Event, FileChooserController, Form, HtmlComponent, HtmlEnvironment, KeyStrokeContext, MessageBoxController, objects, Outline, Popup, scout, SimpleTabArea, strings, styles, Tree, URL, webstorage, Widget, widgets} from '../index';\nimport $ from 'jquery';\n\nexport default class Desktop extends Widget {\n\n  constructor() {\n    super();\n\n    this.desktopStyle = Desktop.DisplayStyle.DEFAULT;\n\n    this.title = null;\n    this.selectViewTabsKeyStrokesEnabled = true;\n    this.selectViewTabsKeyStrokeModifier = 'control';\n    this.cacheSplitterPosition = true;\n    this.browserHistoryEntry = null;\n    this.logoId = null;\n    this.navigationVisible = true;\n    this.navigationHandleVisible = true;\n    this.logoActionEnabled = false;\n    this.benchVisible = true;\n    this.headerVisible = true;\n    this.geolocationServiceAvailable = Device.get().supportsGeolocation();\n    this.benchLayoutData = null;\n    /** @type NativeNotificationDefaults|null */\n    this.nativeNotificationDefaults = null;\n\n    this.menus = [];\n    this.addOns = [];\n    this.dialogs = [];\n    this.views = [];\n    this.keyStrokes = [];\n    this.viewButtons = [];\n    this.messageBoxes = [];\n    this.fileChoosers = [];\n    this.outline = null;\n    this.activeForm = null;\n    this.selectedViewTabs = [];\n    this.notifications = [];\n\n    this.navigation = null;\n    this.header = null;\n    this.bench = null;\n    this.splitter = null;\n    this.splitterVisible = false;\n    this.formController = null;\n    this.messageBoxController = null;\n    this.fileChooserController = null;\n    this.initialFormRendering = false;\n    this.offline = false;\n    this.inBackground = false;\n    this.openUriHandler = null;\n    this.theme = null;\n    this.dense = false;\n    this._glassPaneTargetFilters = [];\n    this.url = null;\n\n    this._addWidgetProperties(['viewButtons', 'menus', 'views', 'selectedViewTabs', 'dialogs', 'outline', 'messageBoxes', 'notifications', 'fileChoosers', 'addOns', 'keyStrokes', 'activeForm', 'focusedElement']);\n    this._addPreserveOnPropertyChangeProperties(['focusedElement']);\n\n    // event listeners\n    this._benchActiveViewChangedHandler = this._onBenchActivateViewChanged.bind(this);\n  }\n\n  static DisplayStyle = {\n    DEFAULT: 'default',\n    BENCH: 'bench',\n    COMPACT: 'compact'\n  };\n\n  /**\n   * The action that should be performed when handling an \"open URI\" event.\n   */\n  static UriAction = {\n    /**\n     * The object represented by the URI should be downloaded rather then be handled by the browser's rendering engine.\n     * It should make the \"Save as...\" dialog appear which allows the user to store the resource to his local file system.<br>\n     * The application's location does not change, and no browser windows or tabs are opened.<br>\n     * <br>\n     *<b>Important:</b> This action only works if the HTTP header <i>Content-Disposition: attachment</i> is present on the response of the object to be downloaded.<br>\n     */\n    DOWNLOAD: 'download',\n    /**\n     * The object represented by the URI should be opened by the browser rather than just be downloaded.\n     * This will only work if the browser knows how to handle the given URI.\n     * E.g. if it points to a pdf file, most browsers will be able to display it using their pdf viewer. Other files may just be downloaded.\n     * If the URI points to a website, it will be opened in a separate window or tab.\n     * <br>\n     * This is also the preferred action to open URIs with <b>special protocols</b> that are registered in the user's system and delegated to some \"protocol\n     * handler\". This handler may then perform actions in a third party application (e.g. <i>mailto:xyz@example.com</i>\n     * would open the system's mail application).<br>\n     * Note that this action may open the object in a new window or tab tab which may be prevented by\n     * the browser's popup blocker mechanism.\n     */\n    OPEN: 'open',\n    /**\n     * The content represented by the URI should be rendered by the browser and displayed in a new window or tab.<br>\n     * The application's location does not change. Note that this action may be prevented by the browser's popup blocker mechanism.\n     */\n    NEW_WINDOW: 'newWindow',\n    /**\n     * The content represented by the URI should be rendered by the browser and displayed in a new non-modal popup\n     * window.\n     * Unlike {@link UriAction.NEW_WINDOW} the newly opened window is limited, i.e. it does not contain the location, the toolbar and the menubar.\n     * This may not work on every browser (e.g. on a mobile browser the action {@link UriAction.POPUP_WINDOW} will likely behave the same way as {@link UriAction.NEW_WINDOW}).<br>\n     * The application's location does not change. Note that this action may be prevented by the browser's popup blocker\n     * mechanism.\n     */\n    POPUP_WINDOW: 'popupWindow',\n    /**\n     * The content represented by the URI should be opened in the same window.\n     * This will mainly just replace the location of the current window.\n     * If the URI points to another website, the current application will be unloaded and replaced.\n     * If it points to a file or uses a special protocol, the handling depends on the used browser.\n     */\n    SAME_WINDOW: 'sameWindow'\n  };\n\n  static DEFAULT_THEME = 'default';\n\n  _init(model) {\n    // Note: session and desktop are tightly coupled. Because a lot of widgets want to register\n    // a listener on the desktop in their init phase, they access the desktop by calling 'this.session.desktop'\n    // that's why we need this instance as early as possible. When that happens they access a desktop which is\n    // not yet fully initialized. But anyway, it's already possible to attach a listener, for instance.\n    // Because of this line of code here, we don't have to set the variable in App.js, after the desktop has been\n    // created. Also note that Scout Java uses a different pattern to solve the same problem, there a VirtualDesktop\n    // is used during initialization. When initialization is done, all registered listeners on the virtual desktop\n    // are copied to the real desktop instance.\n    let session = model.session || model.parent.session;\n    session.desktop = this;\n\n    // Needs to be initialized before notifications are created because notifications read this value during init\n    model.nativeNotificationDefaults = this._createNativeNotificationDefaults(model);\n\n    super._init(model);\n    this.url = new URL();\n    this._initTheme();\n    this.formController = scout.create('DesktopFormController', {\n      displayParent: this,\n      session: this.session\n    });\n    this.messageBoxController = new MessageBoxController(this, this.session);\n    this.fileChooserController = new FileChooserController(this, this.session);\n    this._resizeHandler = this.onResize.bind(this);\n    this._popstateHandler = this.onPopstate.bind(this);\n    this.updateSplitterVisibility();\n    this.resolveTextKeys(['title']);\n    this._setViews(this.views);\n    this._setViewButtons(this.viewButtons);\n    this._setMenus(this.menus);\n    this._setKeyStrokes(this.keyStrokes);\n    this._setBenchLayoutData(this.benchLayoutData);\n    this._setDisplayStyle(this.displayStyle);\n    this._setDense(this.dense);\n    this.openUriHandler = scout.create('OpenUriHandler', {\n      session: this.session\n    });\n    this._glassPaneTargetFilters.push((targetElem, element) => {\n      // Exclude all child elements of the given widget\n      // Use case: element is a popup and has tooltip open. The tooltip is displayed in the desktop and considered as glass pane target by the selector above\n      let target = scout.widget(targetElem);\n      return !element.has(target);\n    });\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.keyStrokeContext.registerKeyStroke([\n      new DisableBrowserF5ReloadKeyStroke(this),\n      new DisableBrowserTabSwitchingKeyStroke(this)\n    ]);\n  }\n\n  /**\n   * @param {object} model desktop model\n   * @return {NativeNotificationDefaults}\n   */\n  _createNativeNotificationDefaults(model) {\n    return $.extend({\n      title: model.title,\n      iconId: model.logoId\n    }, model.nativeNotificationDefaults);\n  }\n\n  /**\n   * @param {NativeNotificationDefaults} defaults\n   */\n  setNativeNotificationDefaults(defaults) {\n    this.setProperty('nativeNotificationDefaults', defaults);\n  }\n\n  _onBenchActivateViewChanged(event) {\n    if (this.initialFormRendering) {\n      return;\n    }\n    let view = event.view;\n    if (view instanceof Form && this.bench.outlineContent !== view && !view.detailForm) {\n      // Notify model that this form is active (only for regular views, not detail forms)\n      this._setFormActivated(view);\n    }\n  }\n\n  _render() {\n    this.$container = this.$parent;\n    this.$container.addClass('desktop');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n\n    // Attach resize listener before other elements can add their own resize listener (e.g. an addon) to make sure it is executed first\n    this.$container.window()\n      .on('resize', this._resizeHandler)\n      .on('popstate', this._popstateHandler);\n\n    // Desktop elements are added before this separator, all overlays are opened after (dialogs, popups, tooltips etc.)\n    this.$overlaySeparator = this.$container.appendDiv('overlay-separator').setVisible(false);\n\n    this._renderDense();\n    this._renderNavigationVisible();\n    this._renderHeaderVisible();\n    this._renderBenchVisible();\n    this._renderTitle();\n    this._renderLogoUrl();\n    this._renderSplitterVisible();\n    this._renderInBackground();\n    this._renderNavigationHandleVisible();\n    this._renderNotifications();\n    this._renderBrowserHistoryEntry();\n    this.addOns.forEach(addOn => {\n      addOn.render();\n    }, this);\n\n    // prevent general drag and drop, dropping a file anywhere in the application must not open this file in browser\n    this._setupDragAndDrop();\n\n    this._disableContextMenu();\n  }\n\n  _remove() {\n    this.formController.remove();\n    this.messageBoxController.remove();\n    this.fileChooserController.remove();\n    this.$container.window()\n      .off('resize', this._resizeHandler)\n      .off('popstate', this._popstateHandler);\n    super._remove();\n  }\n\n  _postRender() {\n    super._postRender();\n\n    // Render attached forms, message boxes and file choosers.\n    this.initialFormRendering = true;\n    this._renderDisplayChildrenOfOutline();\n    this.formController.render();\n    this.messageBoxController.render();\n    this.fileChooserController.render();\n    this.initialFormRendering = false;\n  }\n\n  _setDisplayStyle(displayStyle) {\n    this._setProperty('displayStyle', displayStyle);\n\n    let compact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n    if (this.header) {\n      if (this.header.tabArea) {\n        const DisplayStyle = SimpleTabArea.DisplayStyle;\n        this.header.tabArea.setDisplayStyle(compact ? DisplayStyle.SPREAD_EVEN : DisplayStyle.DEFAULT);\n      }\n      this.header.setToolBoxVisible(!compact);\n      this.header.animateRemoval = compact;\n    }\n    if (this.navigation) {\n      this.navigation.setToolBoxVisible(compact);\n      this.navigation.htmlComp.layoutData.fullWidth = compact;\n    }\n    if (this.bench) {\n      this.bench.setOutlineContentVisible(!compact);\n    }\n    if (this.outline) {\n      this.outline.setCompact(compact);\n      this.outline.setEmbedDetailContent(compact);\n    }\n  }\n\n  setDense(dense) {\n    this.setProperty('dense', dense);\n  }\n\n  _setDense(dense) {\n    this._setProperty('dense', dense);\n\n    styles.clearCache();\n    HtmlEnvironment.get().init(this.dense ? 'dense' : null);\n  }\n\n  _renderDense() {\n    this.$container.toggleClass('dense', this.dense);\n  }\n\n  _createLayout() {\n    return new DesktopLayout(this);\n  }\n\n  /**\n   * Displays attached forms, message boxes and file choosers.\n   * Outline does not need to be rendered to show the child elements, it needs to be active (necessary if navigation is invisible)\n   */\n  _renderDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.render();\n    this.outline.messageBoxController.render();\n    this.outline.fileChooserController.render();\n\n    // this restores the selected view after a page refresh. selectedViewTabs is only set by the model.\n    if (this.outline.selectedViewTabs) {\n      this.outline.selectedViewTabs.forEach(selectedView => {\n        this.formController._activateView(selectedView);\n      });\n    } else {\n      // views on the outline are not activated by default. Check for modal views on this outline\n      let modalViews = this.outline.views.filter(view => view.modal);\n      // activate each modal view in the order it was originally activated\n      modalViews.forEach(this.formController._activateView.bind(this.formController));\n    }\n  }\n\n  _removeDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.remove();\n    this.outline.messageBoxController.remove();\n    this.outline.fileChooserController.remove();\n  }\n\n  computeParentForDisplayParent(displayParent) {\n    // Outline must not be used as parent, otherwise the children (form, messageboxes etc.) would be removed if navigation is made invisible\n    // The functions _render/removeDisplayChildrenOfOutline take care that the elements are correctly rendered/removed on an outline switch\n    let parent = displayParent;\n    if (displayParent instanceof Outline) {\n      parent = this;\n    }\n    return parent;\n  }\n\n  _renderTitle() {\n    let title = this.title;\n    if (title === undefined || title === null) {\n      return;\n    }\n    let $scoutDivs = $('div.scout');\n    if ($scoutDivs.length <= 1) { // only set document title in non-portlet case\n      $scoutDivs.document(true).title = title;\n    }\n  }\n\n  _renderActiveForm() {\n    // NOP -> is handled in _setFormActivated when ui changes active form or if model changes form in _onFormShow/_onFormActivate\n  }\n\n  _renderBench() {\n    if (this.bench) {\n      return;\n    }\n    this.bench = this._createBench();\n    this.bench.on('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.render();\n    this.bench.$container.insertBefore(this.$overlaySeparator);\n    this.invalidateLayoutTree();\n  }\n\n  _createBench() {\n    return scout.create('DesktopBench', {\n      parent: this,\n      animateRemoval: true,\n      headerTabArea: this.header ? this.header.tabArea : undefined,\n      outlineContentVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n    });\n  }\n\n  _removeBench() {\n    if (!this.bench) {\n      return;\n    }\n    this.bench.off('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.on('destroy', () => {\n      this.bench = null;\n      this.invalidateLayoutTree();\n    });\n    this.bench.destroy();\n  }\n\n  _renderBenchVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.benchVisible) {\n      this._renderBench();\n      this._renderInBackground();\n    } else {\n      this._removeBench();\n    }\n  }\n\n  _renderNavigation() {\n    if (this.navigation) {\n      return;\n    }\n    this.navigation = this._createNavigation();\n    this.navigation.render();\n    this.navigation.$container.prependTo(this.$container);\n    this.$container.removeClass('navigation-invisible');\n    this.invalidateLayoutTree();\n  }\n\n  _createNavigation() {\n    return scout.create('DesktopNavigation', {\n      parent: this,\n      outline: this.outline,\n      toolBoxVisible: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n      layoutData: {\n        fullWidth: this.displayStyle === Desktop.DisplayStyle.COMPACT\n      }\n    });\n  }\n\n  _removeNavigation() {\n    this.$container.addClass('navigation-invisible');\n    if (!this.navigation) {\n      return;\n    }\n    this.navigation.destroy();\n    this.navigation = null;\n    this.invalidateLayoutTree();\n  }\n\n  _renderNavigationVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.navigationVisible) {\n      this._renderNavigation();\n    } else {\n      if (!this.animateLayoutChange) {\n        this._removeNavigation();\n      } else {\n        // re layout to trigger animation\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n\n  _renderHeader() {\n    if (this.header) {\n      return;\n    }\n    this.header = this._createHeader();\n    this.header.render();\n    if (this.navigation && this.navigation.rendered) {\n      this.header.$container.insertAfter(this.navigation.$container);\n    } else {\n      this.header.$container.prependTo(this.$container);\n    }\n    // register header tab area\n    if (this.bench) {\n      this.bench._setTabArea(this.header.tabArea);\n    }\n    this.invalidateLayoutTree();\n  }\n\n  _createHeader() {\n    let compact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n    return scout.create('DesktopHeader', {\n      parent: this,\n      logoUrl: this.logoUrl,\n      animateRemoval: compact,\n      toolBoxVisible: !compact,\n      tabArea: {\n        displayStyle: compact ? SimpleTabArea.DisplayStyle.SPREAD_EVEN : SimpleTabArea.DisplayStyle.DEFAULT\n      }\n    });\n  }\n\n  _removeHeader() {\n    if (!this.header) {\n      return;\n    }\n    this.header.on('destroy', () => {\n      this.invalidateLayoutTree();\n      this.header = null;\n    });\n    this.header.destroy();\n  }\n\n  _renderHeaderVisible() {\n    if (this.headerVisible) {\n      this._renderHeader();\n    } else {\n      this._removeHeader();\n    }\n  }\n\n  _renderLogoUrl() {\n    if (this.header) {\n      this.header.setLogoUrl(this.logoUrl);\n    }\n  }\n\n  _renderSplitterVisible() {\n    if (this.splitterVisible) {\n      this._renderSplitter();\n    } else {\n      this._removeSplitter();\n    }\n  }\n\n  _renderSplitter() {\n    if (this.splitter || !this.navigation) {\n      return;\n    }\n    this.splitter = scout.create('Splitter', {\n      parent: this,\n      $anchor: this.navigation.$container,\n      $root: this.$container\n    });\n    this.splitter.render();\n    this.splitter.$container.insertBefore(this.$overlaySeparator);\n    this.splitter.on('move', this._onSplitterMove.bind(this));\n    this.splitter.on('moveEnd', this._onSplitterMoveEnd.bind(this));\n    this.splitter.on('positionChange', this._onSplitterPositionChange.bind(this));\n    this.updateSplitterPosition();\n  }\n\n  _removeSplitter() {\n    if (!this.splitter) {\n      return;\n    }\n    this.splitter.destroy();\n    this.splitter = null;\n  }\n\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.inBackground && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n    if (this.bench) {\n      this.bench.$container.toggleClass('drop-shadow', this.inBackground);\n    }\n  }\n\n  _renderBrowserHistoryEntry() {\n    if (!Device.get().supportsHistoryApi()) {\n      return;\n    }\n    let myWindow = this.$container.window(true),\n      history = this.browserHistoryEntry;\n    if (history) {\n      let historyPath = this._createHistoryPath(history);\n      let setStateFunc = (this.rendered ? myWindow.history.pushState : myWindow.history.replaceState).bind(myWindow.history);\n      setStateFunc({\n        deepLinkPath: history.deepLinkPath\n      }, history.title, historyPath);\n    }\n  }\n\n  /**\n   * Takes the history.path provided by the browserHistoryEvent and appends additional URL parameters.\n   */\n  _createHistoryPath(history) {\n    if (!history.pathVisible) {\n      return '';\n    }\n    let historyPath = history.path;\n    let cloneUrl = this.url.clone();\n    cloneUrl.removeParameter('dl');\n    cloneUrl.removeParameter('i');\n    if (objects.countOwnProperties(cloneUrl.parameterMap) > 0) {\n      let pathUrl = new URL(historyPath);\n      for (let paramName in cloneUrl.parameterMap) {\n        pathUrl.addParameter(paramName, cloneUrl.getParameter(paramName));\n      }\n      historyPath = pathUrl.toString({alwaysFirst: ['dl', 'i']});\n    }\n    return historyPath;\n  }\n\n  _setupDragAndDrop() {\n    let dragEnterOrOver = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      // change cursor to forbidden (no dropping allowed)\n      event.originalEvent.dataTransfer.dropEffect = 'none';\n    };\n\n    this.$container.on('dragenter', dragEnterOrOver);\n    this.$container.on('dragover', dragEnterOrOver);\n    this.$container.on('drop', event => {\n      event.stopPropagation();\n      event.preventDefault();\n    });\n  }\n\n  updateSplitterVisibility() {\n    // Splitter should only be visible if navigation and bench are visible, but never in compact mode (to prevent unnecessary splitter rendering)\n    this.setSplitterVisible(this.navigationVisible && this.benchVisible && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n\n  setSplitterVisible(visible) {\n    this.setProperty('splitterVisible', visible);\n  }\n\n  updateSplitterPosition() {\n    if (!this.splitter) {\n      return;\n    }\n    let storedSplitterPosition = this.cacheSplitterPosition && this._loadCachedSplitterPosition();\n    if (storedSplitterPosition) {\n      // Restore splitter position\n      let splitterPosition = parseInt(storedSplitterPosition, 10);\n      this.splitter.setPosition(splitterPosition);\n      this.invalidateLayoutTree();\n    } else {\n      // Set initial splitter position (default defined by css)\n      this.splitter.setPosition();\n      this.invalidateLayoutTree();\n    }\n  }\n\n  _disableContextMenu() {\n    // Switch off browser's default context menu for the entire scout desktop (except input fields)\n    this.$container.on('contextmenu', event => {\n      if (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA' && !event.target.isContentEditable) {\n        event.preventDefault();\n      }\n    });\n  }\n\n  setOutline(outline) {\n    if (this.outline === outline) {\n      return;\n    }\n    try {\n      if (this.bench) {\n        this.bench.setChanging(true);\n      }\n      if (this.rendered) {\n        this._removeDisplayChildrenOfOutline();\n      }\n\n      this.outline = outline;\n      this._setDisplayStyle(this.displayStyle);\n      this._setOutlineActivated();\n      if (this.navigation) {\n        this.navigation.setOutline(this.outline);\n      }\n      // call render after triggering event so glasspane rendering taking place can refer to the current outline content\n      this.trigger('outlineChange');\n\n      if (this.rendered) {\n        this._renderDisplayChildrenOfOutline();\n      }\n    } finally {\n      if (this.bench) {\n        this.bench.setChanging(false);\n      }\n    }\n  }\n\n  _setViews(views) {\n    if (views) {\n      views.forEach(view => {\n        view.setDisplayParent(this);\n      });\n    }\n    this._setProperty('views', views);\n  }\n\n  _setViewButtons(viewButtons) {\n    this.updateKeyStrokes(viewButtons, this.viewButtons);\n    this._setProperty('viewButtons', viewButtons);\n  }\n\n  setMenus(menus) {\n    if (this.header) {\n      this.header.setMenus(menus);\n    }\n  }\n\n  _setMenus(menus) {\n    this.updateKeyStrokes(menus, this.menus);\n    this._setProperty('menus', menus);\n  }\n\n  _setKeyStrokes(keyStrokes) {\n    this.updateKeyStrokes(keyStrokes, this.keyStrokes);\n    this._setProperty('keyStrokes', keyStrokes);\n  }\n\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n\n  _renderNavigationHandleVisible() {\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n\n  setNavigationVisible(visible) {\n    this.setProperty('navigationVisible', visible);\n    this.updateSplitterVisibility();\n  }\n\n  setBenchVisible(visible) {\n    this.setProperty('benchVisible', visible);\n    this.updateSplitterVisibility();\n  }\n\n  setHeaderVisible(visible) {\n    this.setProperty('headerVisible', visible);\n  }\n\n  _setBenchLayoutData(layoutData) {\n    layoutData = BenchColumnLayoutData.ensure(layoutData);\n    this._setProperty('benchLayoutData', layoutData);\n  }\n\n  _setInBackground(inBackground) {\n    this._setProperty('inBackground', inBackground);\n  }\n\n  outlineDisplayStyle() {\n    if (this.outline) {\n      return this.outline.displayStyle;\n    }\n  }\n\n  shrinkNavigation() {\n    if (this.outline && this.outline.toggleBreadcrumbStyleEnabled && this.navigationVisible &&\n      this.outlineDisplayStyle() === Tree.DisplayStyle.DEFAULT) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.BREADCRUMB);\n    } else {\n      this.setNavigationVisible(false);\n    }\n  }\n\n  enlargeNavigation() {\n    if (this.outline && this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.DEFAULT);\n      if (this.cacheSplitterPosition && this.splitter) {\n        this.validateLayoutTree();\n        this._storeCachedSplitterPosition(this.splitter.position);\n      }\n    } else {\n      this.setNavigationVisible(true);\n    }\n  }\n\n  /**\n   * @param {boolean} headerVisible whether the desktop header should be made visible\n   */\n  switchToBench(headerVisible) {\n    this.setHeaderVisible(scout.nvl(headerVisible, true));\n    this.setBenchVisible(true);\n    this.setNavigationVisible(false);\n  }\n\n  switchToNavigation() {\n    this.setNavigationVisible(true);\n    this.setHeaderVisible(false);\n    this.setBenchVisible(false);\n  }\n\n  revalidateHeaderLayout() {\n    if (this.header) {\n      this.header.revalidateLayout();\n    }\n  }\n\n  goOffline() {\n    if (this.offline) {\n      return;\n    }\n    this.offline = true;\n    this._removeOfflineNotification();\n    this._offlineNotification = scout.create('DesktopNotification:Offline', {\n      parent: this\n    });\n    this._offlineNotification.show();\n  }\n\n  goOnline() {\n    this._removeOfflineNotification();\n  }\n\n  _removeOfflineNotification() {\n    if (this._offlineNotification) {\n      setTimeout(this.removeNotification.bind(this, this._offlineNotification), 3000);\n      this._offlineNotification = null;\n    }\n  }\n\n  addNotification(notification) {\n    if (!notification) {\n      return;\n    }\n    this.notifications.push(notification);\n    if (this.rendered) {\n      this._renderNotification(notification);\n    }\n  }\n\n  _renderNotification(notification) {\n    if (this.$notifications) {\n      // Bring to front\n      this.$notifications.appendTo(this.$container);\n    } else {\n      this.$notifications = this.$container.appendDiv('desktop-notifications');\n    }\n    notification.fadeIn(this.$notifications);\n    if (notification.duration > 0) {\n      notification.removeTimeout = setTimeout(notification.hide.bind(notification), notification.duration);\n      notification.one('remove', () => {\n        this.removeNotification(notification);\n      });\n    }\n  }\n\n  _renderNotifications() {\n    this.notifications.forEach(notification => {\n      this._renderNotification(notification);\n    });\n  }\n\n  /**\n   * Removes the given notification.\n   * @param {DesktopNotification|string} notification Either an instance of DesktopNavigation or a String containing an ID of a notification instance.\n   */\n  removeNotification(notification) {\n    if (typeof notification === 'string') {\n      let notificationId = notification;\n      notification = arrays.find(this.notifications, n => {\n        return notificationId === n.id;\n      });\n    }\n    if (!notification) {\n      return;\n    }\n    if (notification.removeTimeout) {\n      clearTimeout(notification.removeTimeout);\n    }\n    arrays.remove(this.notifications, notification);\n    if (!this.rendered) {\n      return;\n    }\n    if (notification.rendered) {\n      notification.one('remove', this._onNotificationRemove.bind(this, notification));\n    }\n    notification.fadeOut();\n  }\n\n  getPopups() {\n    if (!this.$container) {\n      return [];\n    }\n    let popups = [];\n    this.$container.children('.popup').each((i, elem) => {\n      let $popup = $(elem);\n      let popup = widgets.get($popup);\n      if (popup instanceof Popup) {\n        popups.push(popup);\n      }\n    });\n    return popups;\n  }\n\n  getPopupsFor(widget) {\n    return this.getPopups().filter(popup => widget.has(popup));\n  }\n\n  /**\n   * Removes every popup which is a descendant of the given widget.\n   */\n  removePopupsFor(widget) {\n    this.getPopupsFor(widget).forEach(popup => {\n      popup.remove();\n    });\n  }\n\n  /**\n   * Opens the uri using {@link OpenUriHandler}\n   * @param {string} uri the uri to open\n   * @param {Desktop.UriAction} [action] the action to be performed on the given uri. Default is Desktop.UriAction.OPEN.\n   */\n  openUri(uri, action) {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.openUri.bind(this, uri, action));\n      return;\n    }\n    this.openUriHandler.openUri(uri, action);\n  }\n\n  bringOutlineToFront() {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.bringOutlineToFront.bind(this));\n      return;\n    }\n\n    if (!this.inBackground || this.displayStyle === Desktop.DisplayStyle.BENCH) {\n      return;\n    }\n\n    this._setInBackground(false);\n    this._setOutlineActivated();\n\n    if (this.navigationVisible) {\n      this.navigation.bringToFront();\n    }\n    if (this.benchVisible) {\n      this.bench.bringToFront();\n    }\n    if (this.headerVisible) {\n      this.header.bringToFront();\n    }\n\n    this._renderInBackground();\n  }\n\n  sendOutlineToBack() {\n    if (this.inBackground) {\n      return;\n    }\n    this._setInBackground(true);\n    if (this.navigationVisible) {\n      this.navigation.sendToBack();\n    }\n    if (this.benchVisible) {\n      this.bench.sendToBack();\n    }\n    if (this.headerVisible) {\n      this.header.sendToBack();\n    }\n    this._renderInBackground();\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns 'true' if the Desktop is currently accessible to the user.\n   */\n  inFront() {\n    return true; // Desktop is always available to the user.\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns the DOM elements to paint a glassPanes over, once a modal Form, message-box, file-chooser or wait-dialog is showed with the Desktop as its 'displayParent'.\n   */\n  _glassPaneTargets(element) {\n    // Do not return $container, because this is the parent of all forms and message boxes. Otherwise, no form could gain focus, even the form requested desktop modality.\n    let $glassPaneTargets = this.$container\n      .children()\n      .not('.splitter') // exclude splitter to be locked\n      .not('.desktop-notifications') // exclude notification box like 'connection interrupted' to be locked\n      .not('.overlay-separator'); // exclude overlay separator (marker element)\n\n    if (element) {\n      if (element.$container) {\n        $glassPaneTargets = $glassPaneTargets.not(element.$container);\n      }\n      let overlays = this.$overlaySeparator.nextAll().toArray();\n      let nextSiblings = [];\n      // If the element is an overlay, get all next siblings and exclude them because they must not be covered\n      if (element.$container && overlays.indexOf(element.$container[0]) > -1) {\n        nextSiblings = element.$container.nextAll().toArray();\n      }\n\n      // The top-most element should not have a glass-pane (#274353)\n      let topMostElement = null;\n      if (overlays.length) {\n        for (let i = overlays.length - 1; i >= 0; i--) {\n          // Don't consider filtered glass-pane targets like the HelpPopup.js\n          // These targets stand outside the regular modality hierarchy.\n          let overlay = overlays[i];\n          if (!this._isGlassPaneTargetFiltered(overlay, element)) {\n            continue;\n          }\n          topMostElement = overlay;\n          break; // stop looking further\n        }\n      }\n\n      $glassPaneTargets = $glassPaneTargets.filter((i, targetElem) => {\n        if (nextSiblings.indexOf(targetElem) > -1) {\n          return false;\n        }\n        if (targetElem === topMostElement) {\n          return false;\n        }\n        return this._isGlassPaneTargetFiltered(targetElem, element);\n      });\n    }\n\n    let glassPaneTargets;\n    if (element instanceof Form && element.displayHint === Form.DisplayHint.VIEW) {\n      $glassPaneTargets = $glassPaneTargets\n        .not('.desktop-bench')\n        .not('.desktop-header');\n\n      if (this.header && this.header.toolBox && this.header.toolBox.$container) {\n        $glassPaneTargets.push(this.header.toolBox.$container);\n      }\n\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n      arrays.pushAll(glassPaneTargets, this._getBenchGlassPaneTargetsForView(element));\n    } else {\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n    }\n\n    // When a popup-window is opened its container must also be added to the result\n    this._pushPopupWindowGlassPaneTargets(glassPaneTargets, element);\n\n    return glassPaneTargets;\n  }\n\n  _isGlassPaneTargetFiltered(targetElem, element) {\n    return this._glassPaneTargetFilters.every(filter => {\n      return filter(targetElem, element);\n    }, this);\n  }\n\n  /**\n   * Adds a filter which is applied when the glass pane targets are collected.\n   * If the filter returns <code>false</code>, the target won't be accepted and not covered by a glass pane.\n   * This filter should be used primarily for elements like the help-popup which stand outside\n   * of the regular modality hierarchy.\n   *\n   * @param {function} filter a function with the parameter target and element. Target is the element which\n   *     would be covered by a glass pane, element is the element the user interacts with (e.g. the modal dialog).\n   * @see _glassPaneTargets\n   */\n  addGlassPaneTargetFilter(filter) {\n    this._glassPaneTargetFilters.push(filter);\n  }\n\n  removeGlassPaneTargetFilter(filter) {\n    arrays.remove(this._glassPaneTargetFilters, filter);\n  }\n\n  /**\n   * This 'deferred' object is used because popup windows are not immediately usable when they're opened.\n   * That's why we must render the glass-pane of a popup window later. Which means, at the point in time\n   * when its $container is created and ready for usage. To avoid race conditions we must also wait until\n   * the glass pane renderer is ready. Only when both conditions are fullfilled, we can render the glass\n   * pane.\n   */\n  _deferredGlassPaneTarget(popupWindow) {\n    let deferred = new DeferredGlassPaneTarget();\n    popupWindow.one('init', () => {\n      deferred.ready([popupWindow.$container]);\n    });\n    return deferred;\n  }\n\n  _getBenchGlassPaneTargetsForView(view) {\n    let $glassPanes = [];\n\n    $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, this.header));\n\n    if (this.bench) {\n      this.bench.visibleTabBoxes().forEach(function(tabBox) {\n        if (!tabBox.rendered) {\n          return;\n        }\n        if (tabBox.hasView(view)) {\n          $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, tabBox));\n        } else {\n          $glassPanes.push(tabBox.$container);\n        }\n      }, this);\n    }\n    return $glassPanes;\n  }\n\n  _getTabGlassPaneTargetsForView(view, tabBox) {\n    let $glassPanes = [];\n    if (tabBox && tabBox.tabArea) {\n      tabBox.tabArea.tabs.forEach(tab => {\n        if (tab.view !== view) {\n          $glassPanes.push(tab.$container);\n          // Workaround for javascript not being able to prevent hover event propagation:\n          // In case of tabs, the hover selector is defined on the element that is the direct parent\n          // of the glass pane. Under these circumstances, the hover style isn't be prevented by the glass pane.\n          tab.$container.addClass('glasspane-parent');\n        }\n      });\n    }\n    return $glassPanes;\n  }\n\n  _pushPopupWindowGlassPaneTargets(glassPaneTargets, element) {\n    this.formController._popupWindows.forEach(function(popupWindow) {\n      if (element === popupWindow.form) {\n        // Don't block form itself\n        return;\n      }\n      glassPaneTargets.push(popupWindow.initialized ?\n        popupWindow.$container[0] : this._deferredGlassPaneTarget(popupWindow));\n    }, this);\n  }\n\n  showForm(form, position) {\n    let displayParent = form.displayParent || this;\n    form.setDisplayParent(displayParent);\n\n    this._setFormActivated(form);\n    // register listener to recover active form when child dialog is removed\n    displayParent.formController.registerAndRender(form, position, true);\n  }\n\n  hideForm(form) {\n    if (!form.displayParent) {\n      // showForm has probably never been called -> nothing to do here\n      // May happen if form.close() is called immediately after form.open() without waiting for the open promise to resolve\n      // Hint: it is not possible to check whether the form is rendered and then return (which would be the obvious thing to do).\n      // Reason: Forms in popup windows are removed before getting closed, see DesktopFormController._onPopupWindowUnload\n      return;\n    }\n\n    if (this.displayStyle === Desktop.DisplayStyle.COMPACT && form.isView() && this.benchVisible) {\n      let openViews = this.bench.getViews().slice();\n      arrays.remove(openViews, form);\n      if (openViews.length === 0) {\n        // Hide bench and show navigation if this is the last view to be hidden\n        this.switchToNavigation();\n      }\n    }\n    form.displayParent.formController.unregisterAndRemove(form);\n    if (!this.benchVisible || this.bench.getViews().length === 0) {\n      // Bring outline to front if last view has been closed,\n      // even if bench is invisible (compact case) to update state correctly and reshow elements (dialog etc.) linked to the outline\n      this.bringOutlineToFront();\n    }\n  }\n\n  /**\n   * @see {@link Form.isShown}\n   * @param {Form} form\n   */\n  isFormShown(form) {\n    let displayParent = form.displayParent || this;\n    return displayParent.formController.isFormShown(form);\n  }\n\n  activateForm(form) {\n    if (!form) {\n      this._setFormActivated(null);\n      return;\n    }\n    let displayParent = form.displayParent || this;\n    displayParent.formController.activateForm(form);\n    this._setFormActivated(form);\n\n    // If the form has a modal child dialog, this dialog needs to be activated as well.\n    form.dialogs.forEach(function(dialog) {\n      if (dialog.modal) {\n        this.activateForm(dialog);\n      }\n    }, this);\n  }\n\n  _setOutlineActivated() {\n    this._setFormActivated(null);\n    if (this.outline) {\n      this.outline.activateCurrentPage();\n    }\n  }\n\n  _setFormActivated(form) {\n    // If desktop is in rendering process the can not set a new active form. instead the active form from the model is set selected.\n    if (!this.rendered || this.initialFormRendering) {\n      return;\n    }\n    if (this.activeForm === form) {\n      return;\n    }\n\n    this.activeForm = form;\n\n    if (!form) {\n      // no form is activated -> show outline\n      this.bringOutlineToFront();\n    } else if (form.displayHint === Form.DisplayHint.VIEW && !form.detailForm && this.bench && this.bench.hasView(form)) {\n      // view form was activated. send the outline to back to ensure the form is attached\n      // exclude detail forms even though detail forms usually are not activated\n      // Also only consider \"real\" views used in the bench and ignore other views (e.g. used in a form menu)\n      this.sendOutlineToBack();\n    }\n\n    this.triggerFormActivate(form);\n  }\n\n  triggerFormActivate(form) {\n    this.trigger('formActivate', {\n      form: form\n    });\n  }\n\n  cancelViews(forms) {\n    let event = new Event();\n    event.forms = forms;\n    this.trigger('cancelForms', event);\n    if (!event.defaultPrevented) {\n      this._cancelViews(forms);\n    }\n  }\n\n  _cancelViews(forms) {\n    // do not cancel forms when the form child hierarchy does not get canceled.\n    forms = forms.filter(form => {\n      return !arrays.find(form.views, view => {\n        return view.modal;\n      });\n    });\n\n    // if there's only one form simply cancel it directly\n    if (forms.length === 1) {\n      forms[0].cancel();\n      return;\n    }\n\n    // collect all forms in the display child hierarchy with unsaved changes.\n    let unsavedForms = forms.filter(form => {\n      let requiresSaveChildDialogs = false;\n      form.visitDisplayChildren(dialog => {\n        if (dialog.lifecycle.requiresSave()) {\n          requiresSaveChildDialogs = true;\n        }\n      }, displayChild => {\n        return displayChild instanceof Form;\n      });\n      return form.lifecycle.requiresSave() || requiresSaveChildDialogs;\n    });\n\n    // initialize with a resolved promise in case there are no unsaved forms.\n    let waitFor = $.resolvedPromise();\n    if (unsavedForms.length > 0) {\n      let unsavedFormChangesForm = scout.create('scout.UnsavedFormChangesForm', {\n        parent: this,\n        session: this.session,\n        displayParent: this,\n        unsavedForms: unsavedForms\n      });\n      unsavedFormChangesForm.open();\n      // promise that is resolved when the UnsavedFormChangesForm is stored\n      waitFor = unsavedFormChangesForm.whenSave().then(() => {\n        let formsToSave = unsavedFormChangesForm.openFormsField.value;\n        formsToSave.forEach(form => {\n          form.visitDisplayChildren(dialog => {\n            // forms should be stored with ok(). Other display children can simply be closed.\n            if (dialog instanceof Form) {\n              dialog.ok();\n            } else {\n              dialog.close();\n            }\n          });\n          form.ok();\n        });\n        return formsToSave;\n      });\n    }\n    waitFor.then(formsToSave => {\n      if (formsToSave) {\n        // already saved & closed forms (handled by the UnsavedFormChangesForm)\n        arrays.removeAll(forms, formsToSave);\n      }\n      // close the remaining forms that don't require saving.\n      forms.forEach(form => {\n        form.visitDisplayChildren(dialog => {\n          dialog.close();\n        });\n        form.close();\n      });\n    });\n  }\n\n  /**\n   * Called when the animation triggered by animationLayoutChange is complete (e.g. navigation or bench got visible/invisible)\n   */\n  onLayoutAnimationComplete() {\n    if (!this.headerVisible) {\n      this._removeHeader();\n    }\n    if (!this.navigationVisible) {\n      this._removeNavigation();\n    }\n    if (!this.benchVisible) {\n      this._removeBench();\n    }\n    this.trigger('animationEnd');\n    this.animateLayoutChange = false;\n  }\n\n  onLayoutAnimationStep() {\n    this.repositionTooltips();\n  }\n\n  onResize(event) {\n    this.revalidateLayoutTree();\n  }\n\n  resetPopstateHandler() {\n    this.setPopstateHandler(this.onPopstate.bind(this));\n  }\n\n  setPopstateHandler(handler) {\n    if (this.rendered || this.rendering) {\n      let window = this.$container.window();\n      if (this._popstateHandler) {\n        window.off('popstate', this._popstateHandler);\n      }\n      if (handler) {\n        window.on('popstate', handler);\n      }\n    }\n    this._popstateHandler = handler;\n  }\n\n  onPopstate(event) {\n    let historyState = event.originalEvent.state;\n    if (historyState && historyState.deepLinkPath) {\n      this.trigger('historyEntryActivate', historyState);\n    }\n  }\n\n  _onSplitterMove(event) {\n    // disallow a position greater than 50%\n    this.resizing = true;\n    let max = Math.floor(this.$container.outerWidth(true) / 2);\n    if (event.position > max) {\n      event.setPosition(max);\n    }\n  }\n\n  _onSplitterPositionChange(event) {\n    // No need to revalidate while layouting (desktop layout sets the splitter position and would trigger a relayout)\n    if (!this.htmlComp.layouting) {\n      this.revalidateLayout();\n    }\n  }\n\n  _onSplitterMoveEnd(event) {\n    let splitterPosition = event.position;\n\n    // Store size\n    if (this.cacheSplitterPosition) {\n      this._storeCachedSplitterPosition(this.splitter.position);\n    }\n\n    // Check if splitter is smaller than min size\n    if (splitterPosition < DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n      // Set width of navigation to BREADCRUMB_STYLE_WIDTH, using an animation.\n      // While animating, update the desktop layout.\n      // At the end of the animation, update the desktop layout, and store the splitter position.\n      this.navigation.$container.animate({\n        width: DesktopNavigation.BREADCRUMB_STYLE_WIDTH\n      }, {\n        progress: function() {\n          this.resizing = true;\n          this.splitter.setPosition();\n          this.revalidateLayout();\n          this.resizing = false; // progress seems to be called after complete again -> layout requires flag to be properly set\n        }.bind(this),\n        complete: function() {\n          this.resizing = true;\n          this.splitter.setPosition();\n          // Store size\n          if (this.cacheSplitterPosition) {\n            this._storeCachedSplitterPosition(this.splitter.position);\n          }\n          this.revalidateLayout();\n          this.resizing = false;\n        }.bind(this)\n      });\n    } else {\n      this.resizing = false;\n    }\n  }\n\n  _loadCachedSplitterPosition() {\n    return webstorage.getItemFromSessionStorage('scout:desktopSplitterPosition') ||\n      webstorage.getItemFromLocalStorage('scout:desktopSplitterPosition:' + window.location.pathname);\n  }\n\n  _storeCachedSplitterPosition(splitterPosition) {\n    webstorage.setItemToSessionStorage('scout:desktopSplitterPosition', splitterPosition);\n    webstorage.setItemToLocalStorage('scout:desktopSplitterPosition:' + window.location.pathname, splitterPosition);\n  }\n\n  _onNotificationRemove(notification) {\n    if (this.notifications.length === 0 && this.$notifications) {\n      this.$notifications.remove();\n      this.$notifications = null;\n    }\n  }\n\n  onReconnecting() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnect();\n  }\n\n  onReconnectingSucceeded() {\n    if (!this.offline) {\n      return;\n    }\n    this.offline = false;\n    this._offlineNotification.reconnectSucceeded();\n    this._removeOfflineNotification();\n  }\n\n  onReconnectingFailed() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnectFailed();\n  }\n\n  dataChange(dataType) {\n    this.events.trigger('dataChange', dataType);\n  }\n\n  _activeTheme() {\n    return cookies.get('scout.ui.theme') || Desktop.DEFAULT_THEME;\n  }\n\n  logoAction() {\n    if (this.logoActionEnabled) {\n      this.trigger('logoAction');\n    }\n  }\n\n  _initTheme() {\n    let theme = this.theme;\n    if (this.url.hasParameter('theme')) {\n      theme = strings.nullIfEmpty(this.url.getParameter('theme')) || Desktop.DEFAULT_THEME;\n    } else if (theme === null) {\n      theme = this._activeTheme();\n    }\n    this.setTheme(theme);\n  }\n\n  /**\n   * Changes the current theme.\n   * <p>\n   * The theme name is stored in a persistent cookie called scout.ui.theme.\n   * In order to activate it, the browser is reloaded so that the CSS files for the new theme can be downloaded.\n   * <p>\n   * Since it is a persistent cookie, the theme will be activated again the next time the app is started, unless the cookie is deleted.\n   */\n  setTheme(theme) {\n    this.setProperty('theme', theme);\n    if (this.theme !== this._activeTheme()) {\n      this._switchTheme(theme);\n    }\n  }\n\n  _switchTheme(theme) {\n    // Add a persistent cookie which expires in 30 days\n    cookies.set('scout.ui.theme', theme, 30 * 24 * 3600);\n\n    // Reload page in order to download the CSS files for the new theme\n    // Don't remove body but make it invisible, otherwise JS exceptions might be thrown if body is removed while an action executed\n    $('body').setVisible(false);\n    let reloadOptions = {\n      clearBody: false\n    };\n    // If parameter 'theme' exists in the URL, remove it now - otherwise the parameter would overrule the cookie settings\n    if (this.url.hasParameter('theme')) {\n      this.url.removeParameter('theme');\n      reloadOptions.redirectUrl = this.url.toString();\n    }\n    scout.reloadPage(reloadOptions);\n  }\n\n  /**\n   * Moves all the given overlays (popups, dialogs, message boxes etc.) before the target overlay and activates the focus context of the target overlay.\n   *\n   * @param overlaysToMove {HTMLElement[]} the overlays which should be moved before the target overlay\n   * @param $targetOverlay {$|HTMLElement} the overlay which should eventually be on top of the movable overlays\n   */\n  moveOverlaysBehindAndFocus(overlaysToMove, $targetOverlay) {\n    $targetOverlay = $.ensure($targetOverlay);\n    $targetOverlay.nextAll().toArray()\n      .forEach(overlay => {\n        if (arrays.containsAll(overlaysToMove, [overlay])) {\n          $(overlay).insertBefore($targetOverlay);\n        }\n      });\n\n    // Activate the focus context of the form (will restore the previously focused field)\n    // This must not be done when the currently focused element is part of this dialog's DOM\n    // subtree, even if it has a separate focus context. Otherwise, the dialog would be\n    // (unnecessarily) activated, causing the current focus context to lose the focus.\n    // Example: editable table with a cell editor popup --> editor should keep the focus\n    // when the user clicks the clear icon (\"x\") inside the editor field.\n    if (!$targetOverlay.isOrHas($targetOverlay.activeElement())) {\n      this.session.focusManager.activateFocusContext($targetOverlay);\n    }\n  }\n\n  repositionTooltips() {\n    this.$container.children('.tooltip').each(function() {\n      scout.widget($(this)).position();\n    });\n  }\n\n  _renderTrackFocus() {\n    if (this.trackFocus) {\n      // Use capture phase because FocusContext stops propagation\n      this.$container[0].addEventListener('focusin', this._focusInListener, true);\n    } else {\n      this.$container[0].removeEventListener('focusin', this._focusInListener, true);\n    }\n  }\n\n  _onFocusIn(event) {\n    super._onFocusIn(event);\n    let $target = $(event.target);\n    let focusedElement = scout.widget($target);\n    this.setProperty('focusedElement', focusedElement);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}