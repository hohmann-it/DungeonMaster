{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HierarchicalLookupResultBuilder, LookupCall, LookupRow, objects, QueryBy, scout, strings } from '../index';\nimport $ from 'jquery';\n\n/**\n * Base class for lookup calls with static or local data. Implement the _data() and _dataToLookupRow()\n * functions to provide data for lookup calls. Results are resolved as a Promise, the delay\n * property controls how long it takes until the promise is resolved. By default that value is 0.\n * You can set it to a higher value for testing purposes.\n *\n * By default we assume that the data array uses the following indices:\n * 0: key\n * 1: text\n * 2: parentKey (optional)\n */\nexport default class StaticLookupCall extends LookupCall {\n  constructor() {\n    super();\n    this.delay = 0; // delay in [ms]\n    this.data = null;\n    this.active = true;\n  }\n  _init(model) {\n    super._init(model);\n    if (!this.data) {\n      // data may either be provided by the model or by implementing the _data function\n      this.data = this._data();\n    }\n  }\n  refreshData(data) {\n    if (data === undefined) {\n      this.data = this._data();\n    } else {\n      this.data = data;\n    }\n  }\n  _getAll() {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByAll.bind(this, deferred), this.delay);\n    return deferred.promise();\n  }\n  _queryByAll(deferred) {\n    deferred.resolve({\n      queryBy: QueryBy.ALL,\n      lookupRows: this._lookupRowsByAll()\n    });\n  }\n  _lookupRowsByAll() {\n    let datas = this.data.slice(0, this.maxRowCount);\n    return datas.map(this._dataToLookupRow, this).filter(this._filterActiveLookupRow, this);\n  }\n  _filterActiveLookupRow(dataRow) {\n    if (objects.isNullOrUndefined(this.active)) {\n      return true;\n    }\n    return this.active === scout.nvl(dataRow.active, true);\n  }\n  _getByText(text) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByText.bind(this, deferred, text), this.delay);\n    return deferred.promise();\n  }\n  _queryByText(deferred, text) {\n    let lookupRows = this._lookupRowsByText(text);\n\n    // resolve non-hierarchical results immediately\n    if (!this.hierarchical) {\n      deferred.resolve({\n        queryBy: QueryBy.TEXT,\n        text: text,\n        lookupRows: lookupRows\n      });\n    }\n\n    // if loadIncremental=false we must also load children\n    let promise,\n      builder = new HierarchicalLookupResultBuilder(this);\n    if (this.loadIncremental) {\n      promise = $.resolvedPromise(lookupRows);\n    } else {\n      promise = builder.addChildLookupRows(lookupRows);\n    }\n\n    // hierarchical lookups must first load their parent nodes\n    // before we can resolve the results\n    promise.then(lookupRows => {\n      return builder.addParentLookupRows(lookupRows);\n    }).done(lookupRows => {\n      deferred.resolve({\n        queryBy: QueryBy.TEXT,\n        text: text,\n        lookupRows: lookupRows\n      });\n    }).fail(error => {\n      throw error;\n    });\n  }\n  _lookupRowsByText(text) {\n    let regex = this._createSearchPattern(text);\n    let datas = this.data.filter(data => regex.test(data[1].toLowerCase()));\n    return datas.map(this._dataToLookupRow, this).filter(this._filterActiveLookupRow, this);\n  }\n  _createSearchPattern(text) {\n    // Implementation copied from LocalLookupRow.java\n\n    const WILDCARD = '*';\n    const WILDCARD_PLACEHOLDER = '@wildcard@';\n    text = strings.nvl(text);\n    text = text.toLowerCase();\n    text = text.replace(new RegExp(strings.quote(WILDCARD), 'g'), WILDCARD_PLACEHOLDER);\n    text = strings.quote(text);\n\n    // replace repeating wildcards to prevent regex DoS\n    let duplicateWildcards = WILDCARD_PLACEHOLDER + WILDCARD_PLACEHOLDER;\n    while (strings.contains(text, duplicateWildcards)) {\n      text = text.replace(duplicateWildcards, WILDCARD_PLACEHOLDER);\n    }\n    if (!strings.endsWith(WILDCARD_PLACEHOLDER)) {\n      text += WILDCARD_PLACEHOLDER;\n    }\n    text = text.replace(new RegExp(strings.quote(WILDCARD_PLACEHOLDER), 'g'), '.*');\n    return new RegExp('^' + text + '$', 's'); // s = DOT_ALL\n  }\n\n  _getByKey(key) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByKey.bind(this, deferred, key), this.delay);\n    return deferred.promise();\n  }\n  _queryByKey(deferred, key) {\n    let lookupRow = this._lookupRowByKey(key);\n    if (lookupRow) {\n      deferred.resolve({\n        queryBy: QueryBy.KEY,\n        lookupRows: [lookupRow]\n      });\n    } else {\n      deferred.reject();\n    }\n  }\n  _lookupRowByKey(key) {\n    let data = arrays.find(this.data, data => {\n      return data[0] === key;\n    });\n    if (!data) {\n      return null;\n    }\n    return this._dataToLookupRow(data);\n  }\n  _getByRec(rec) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByRec.bind(this, deferred, rec), this.delay);\n    return deferred.promise();\n  }\n  _queryByRec(deferred, rec) {\n    deferred.resolve({\n      queryBy: QueryBy.REC,\n      rec: rec,\n      lookupRows: this._lookupRowsByRec(rec)\n    });\n  }\n  _lookupRowsByRec(rec) {\n    return this.data.reduce((aggr, data) => {\n      if (data[2] === rec) {\n        aggr.push(this._dataToLookupRow(data));\n      }\n      return aggr;\n    }, []).filter(this._filterActiveLookupRow, this);\n  }\n  setDelay(delay) {\n    this.delay = delay;\n  }\n\n  /**\n   * Implement this function to convert a single data array into an instance of LookupRow.\n   */\n  _dataToLookupRow(data) {\n    return scout.create('LookupRow', {\n      key: data[0],\n      text: data[1],\n      parentKey: data[2]\n    });\n  }\n\n  /**\n   * Implement this function to provide static data. The data should be an array of arrays,\n   * where the inner array contains the values required to create a LookupRow. By\n   * default the first two elements of the array are mandatory, the others are optional:\n   *\n   *   0: Key\n   *   1: Text\n   *   2: ParentKey (optional)\n   *\n   * When your data contains more elements you must also implement the _dataToLookupRow() function.\n   */\n  _data() {\n    return [];\n  }\n}","map":{"version":3,"names":["arrays","HierarchicalLookupResultBuilder","LookupCall","LookupRow","objects","QueryBy","scout","strings","$","StaticLookupCall","constructor","delay","data","active","_init","model","_data","refreshData","undefined","_getAll","deferred","Deferred","setTimeout","_queryByAll","bind","promise","resolve","queryBy","ALL","lookupRows","_lookupRowsByAll","datas","slice","maxRowCount","map","_dataToLookupRow","filter","_filterActiveLookupRow","dataRow","isNullOrUndefined","nvl","_getByText","text","_queryByText","_lookupRowsByText","hierarchical","TEXT","builder","loadIncremental","resolvedPromise","addChildLookupRows","then","addParentLookupRows","done","fail","error","regex","_createSearchPattern","test","toLowerCase","WILDCARD","WILDCARD_PLACEHOLDER","replace","RegExp","quote","duplicateWildcards","contains","endsWith","_getByKey","key","_queryByKey","lookupRow","_lookupRowByKey","KEY","reject","find","_getByRec","rec","_queryByRec","REC","_lookupRowsByRec","reduce","aggr","push","setDelay","create","parentKey"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/lookup/StaticLookupCall.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HierarchicalLookupResultBuilder, LookupCall, LookupRow, objects, QueryBy, scout, strings} from '../index';\nimport $ from 'jquery';\n\n/**\n * Base class for lookup calls with static or local data. Implement the _data() and _dataToLookupRow()\n * functions to provide data for lookup calls. Results are resolved as a Promise, the delay\n * property controls how long it takes until the promise is resolved. By default that value is 0.\n * You can set it to a higher value for testing purposes.\n *\n * By default we assume that the data array uses the following indices:\n * 0: key\n * 1: text\n * 2: parentKey (optional)\n */\nexport default class StaticLookupCall extends LookupCall {\n\n  constructor() {\n    super();\n\n    this.delay = 0; // delay in [ms]\n    this.data = null;\n    this.active = true;\n  }\n\n  _init(model) {\n    super._init(model);\n    if (!this.data) {\n      // data may either be provided by the model or by implementing the _data function\n      this.data = this._data();\n    }\n  }\n\n  refreshData(data) {\n    if (data === undefined) {\n      this.data = this._data();\n    } else {\n      this.data = data;\n    }\n  }\n\n  _getAll() {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByAll.bind(this, deferred), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByAll(deferred) {\n    deferred.resolve({\n      queryBy: QueryBy.ALL,\n      lookupRows: this._lookupRowsByAll()\n    });\n  }\n\n  _lookupRowsByAll() {\n    let datas = this.data.slice(0, this.maxRowCount);\n    return datas\n      .map(this._dataToLookupRow, this)\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  _filterActiveLookupRow(dataRow) {\n    if (objects.isNullOrUndefined(this.active)) {\n      return true;\n    }\n    return this.active === scout.nvl(dataRow.active, true);\n  }\n\n  _getByText(text) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByText.bind(this, deferred, text), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByText(deferred, text) {\n    let lookupRows = this._lookupRowsByText(text);\n\n    // resolve non-hierarchical results immediately\n    if (!this.hierarchical) {\n      deferred.resolve({\n        queryBy: QueryBy.TEXT,\n        text: text,\n        lookupRows: lookupRows\n      });\n    }\n\n    // if loadIncremental=false we must also load children\n    let promise, builder = new HierarchicalLookupResultBuilder(this);\n    if (this.loadIncremental) {\n      promise = $.resolvedPromise(lookupRows);\n    } else {\n      promise = builder.addChildLookupRows(lookupRows);\n    }\n\n    // hierarchical lookups must first load their parent nodes\n    // before we can resolve the results\n    promise\n      .then(lookupRows => {\n        return builder.addParentLookupRows(lookupRows);\n      })\n      .done(lookupRows => {\n        deferred.resolve({\n          queryBy: QueryBy.TEXT,\n          text: text,\n          lookupRows: lookupRows\n        });\n      })\n      .fail(error => {\n        throw error;\n      });\n  }\n\n  _lookupRowsByText(text) {\n    let regex = this._createSearchPattern(text);\n    let datas = this.data.filter(data => regex.test(data[1].toLowerCase()));\n    return datas\n      .map(this._dataToLookupRow, this)\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  _createSearchPattern(text) {\n    // Implementation copied from LocalLookupRow.java\n\n    const WILDCARD = '*';\n    const WILDCARD_PLACEHOLDER = '@wildcard@';\n\n    text = strings.nvl(text);\n    text = text.toLowerCase();\n    text = text.replace(new RegExp(strings.quote(WILDCARD), 'g'), WILDCARD_PLACEHOLDER);\n    text = strings.quote(text);\n\n    // replace repeating wildcards to prevent regex DoS\n    let duplicateWildcards = WILDCARD_PLACEHOLDER + WILDCARD_PLACEHOLDER;\n    while (strings.contains(text, duplicateWildcards)) {\n      text = text.replace(duplicateWildcards, WILDCARD_PLACEHOLDER);\n    }\n\n    if (!strings.endsWith(WILDCARD_PLACEHOLDER)) {\n      text += WILDCARD_PLACEHOLDER;\n    }\n\n    text = text.replace(new RegExp(strings.quote(WILDCARD_PLACEHOLDER), 'g'), '.*');\n\n    return new RegExp('^' + text + '$', 's'); // s = DOT_ALL\n  }\n\n  _getByKey(key) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByKey.bind(this, deferred, key), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByKey(deferred, key) {\n    let lookupRow = this._lookupRowByKey(key);\n    if (lookupRow) {\n      deferred.resolve({\n        queryBy: QueryBy.KEY,\n        lookupRows: [lookupRow]\n      });\n    } else {\n      deferred.reject();\n    }\n  }\n\n  _lookupRowByKey(key) {\n    let data = arrays.find(this.data, data => {\n      return data[0] === key;\n    });\n    if (!data) {\n      return null;\n    }\n    return this._dataToLookupRow(data);\n  }\n\n  _getByRec(rec) {\n    let deferred = $.Deferred();\n    setTimeout(this._queryByRec.bind(this, deferred, rec), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByRec(deferred, rec) {\n    deferred.resolve({\n      queryBy: QueryBy.REC,\n      rec: rec,\n      lookupRows: this._lookupRowsByRec(rec)\n    });\n  }\n\n  _lookupRowsByRec(rec) {\n    return this.data.reduce((aggr, data) => {\n      if (data[2] === rec) {\n        aggr.push(this._dataToLookupRow(data));\n      }\n      return aggr;\n    }, [])\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  setDelay(delay) {\n    this.delay = delay;\n  }\n\n  /**\n   * Implement this function to convert a single data array into an instance of LookupRow.\n   */\n  _dataToLookupRow(data) {\n    return scout.create('LookupRow', {\n      key: data[0],\n      text: data[1],\n      parentKey: data[2]\n    });\n  }\n\n  /**\n   * Implement this function to provide static data. The data should be an array of arrays,\n   * where the inner array contains the values required to create a LookupRow. By\n   * default the first two elements of the array are mandatory, the others are optional:\n   *\n   *   0: Key\n   *   1: Text\n   *   2: ParentKey (optional)\n   *\n   * When your data contains more elements you must also implement the _dataToLookupRow() function.\n   */\n  _data() {\n    return [];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}