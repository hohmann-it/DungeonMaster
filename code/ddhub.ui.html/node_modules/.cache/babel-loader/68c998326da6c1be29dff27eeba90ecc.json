{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nexport default class ViewportScroller {\n  constructor(model) {\n    this.viewportWidth = 0;\n    this.viewportHeight = 0;\n    /** distance from the viewport edge (in pixel) where we start to scroll automatically */\n    this.e = 30;\n    /** position of \"fast scroll\" area. Same dimension as e. Negative values are outside the viewport. */\n    this.f = -30;\n    /** milliseconds */\n    this.initialDelay = 500;\n\n    /**\n     * Function that returns \"false\", if the scrolling should no longer be active (e.g. because the\n     * elements were removed from the DOM) or \"true\" otherwise.\n     * @return {boolean}\n     */\n    this.active = () => true;\n    /**\n     * Function that receives the computed delta scroll positions (positive or negative) when automatic scrolling is active.\n     * @param {number} dx\n     * @param {number} dy\n     */\n    this.scroll = (dx, dy) => {};\n    $.extend(this, model);\n\n    // --- Do not change the following properties manually ---\n\n    this.dx = 0;\n    this.dy = 0;\n    this.started = false;\n    this.moved = false;\n    this._timeoutId = null;\n  }\n  _tick() {\n    if (!this.active()) {\n      return;\n    }\n    if (this.started && (this.dx || this.dy)) {\n      this.scroll(this.dx, this.dy);\n      this.moved = true;\n    }\n    // Reschedule for continuous scrolling\n    let delay = this.moved ? 16 : this.initialDelay; // 16ms = 60fps\n    this._timeoutId = setTimeout(() => this._tick(), delay);\n  }\n\n  /**\n   * Normally, it should not be necessary to call this method manually. Use update() instead.\n   */\n  start() {\n    clearTimeout(this._timeoutId);\n    this._tick();\n    this.started = true;\n  }\n\n  /**\n   * Normally, it should not be necessary to call this method manually. Use update() instead.\n   */\n  stop() {\n    clearTimeout(this._timeoutId);\n    this._timeoutId = null;\n    this.started = false;\n    this.moved = false;\n    this.dx = 0;\n    this.dy = 0;\n  }\n\n  /**\n   * This method is intended to be called with the current mouse position (viewport-relative coordinates in pixel)\n   * on every mouse move event. It automatically computes the required delta scroll positions in both directions.\n   *\n   * @param {Point} mouse\n   */\n  update(mouse) {\n    let e = this.e;\n    let f = this.f;\n    // f2 = Half-way between e and f\n    let f2 = Math.floor((e + f) / 2);\n    let scrollAreaLeft = e;\n    let scrollAreaRight = this.viewportWidth - e;\n    let scrollAreaTop = e;\n    let scrollAreaBottom = this.viewportHeight - e;\n\n    // Slow scrolling between e and f2, medium scrolling between f2 and f, fast scrolling after f\n    const SLOW = ViewportScroller.SPEED_FACTOR_SLOW;\n    const MEDIUM = ViewportScroller.SPEED_FACTOR_MEDIUM;\n    const FAST = ViewportScroller.SPEED_FACTOR_FAST;\n    let speedFactorX = 0;\n    let speedFactorY = 0;\n\n    // dx/dy = distance (positive or negative) in pixel\n    let dx = 0;\n    let dy = 0;\n    // noinspection DuplicatedCode\n    if (mouse.x < scrollAreaLeft) {\n      dx = -(scrollAreaLeft - mouse.x);\n      speedFactorX = mouse.x > f2 ? SLOW : mouse.x > f ? MEDIUM : FAST;\n    } else if (mouse.x > scrollAreaRight) {\n      dx = mouse.x - scrollAreaRight;\n      speedFactorX = mouse.x > this.viewportWidth - f ? FAST : mouse.x > this.viewportWidth - f2 ? MEDIUM : SLOW;\n    }\n    // noinspection DuplicatedCode\n    if (mouse.y < scrollAreaTop) {\n      dy = -(scrollAreaTop - mouse.y);\n      speedFactorY = mouse.y > f2 ? SLOW : mouse.y > f ? MEDIUM : FAST;\n    } else if (mouse.y > scrollAreaBottom) {\n      dy = mouse.y - scrollAreaBottom;\n      speedFactorY = mouse.y > this.viewportHeight - f ? FAST : mouse.y > this.viewportHeight - f2 ? MEDIUM : SLOW;\n    }\n    // ax/ay = absolute distance in pixel\n    let ax = Math.abs(dx);\n    let ay = Math.abs(dy);\n    let a = Math.max(ax, ay);\n    if (a === 0) {\n      // Mouse not in scroll area -> stop previously started loop\n      this.stop();\n      return;\n    }\n\n    // Compute distance to scroll\n    let speedX = 1 + Math.floor(ax * speedFactorX);\n    let speedY = 1 + Math.floor(ay * speedFactorY);\n    this.dx = Math.sign(dx) * speedX;\n    this.dy = Math.sign(dy) * speedY;\n\n    // --- Start loop ---\n    this.started || this.start();\n    if (!this.moved && a > e) {\n      // If mouse is outside the viewport, ensure scrolling starts immediately (by calling start() again)\n      this.start();\n    }\n  }\n}\n_defineProperty(ViewportScroller, \"SPEED_FACTOR_SLOW\", 1 / 20);\n_defineProperty(ViewportScroller, \"SPEED_FACTOR_MEDIUM\", 1 / 10);\n_defineProperty(ViewportScroller, \"SPEED_FACTOR_FAST\", 1 / 5);","map":{"version":3,"names":["ViewportScroller","constructor","model","viewportWidth","viewportHeight","e","f","initialDelay","active","scroll","dx","dy","$","extend","started","moved","_timeoutId","_tick","delay","setTimeout","start","clearTimeout","stop","update","mouse","f2","Math","floor","scrollAreaLeft","scrollAreaRight","scrollAreaTop","scrollAreaBottom","SLOW","SPEED_FACTOR_SLOW","MEDIUM","SPEED_FACTOR_MEDIUM","FAST","SPEED_FACTOR_FAST","speedFactorX","speedFactorY","x","y","ax","abs","ay","a","max","speedX","speedY","sign"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/ViewportScroller.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nexport default class ViewportScroller {\n\n  static SPEED_FACTOR_SLOW = 1 / 20;\n  static SPEED_FACTOR_MEDIUM = 1 / 10;\n  static SPEED_FACTOR_FAST = 1 / 5;\n\n  constructor(model) {\n    this.viewportWidth = 0;\n    this.viewportHeight = 0;\n    /** distance from the viewport edge (in pixel) where we start to scroll automatically */\n    this.e = 30;\n    /** position of \"fast scroll\" area. Same dimension as e. Negative values are outside the viewport. */\n    this.f = -30;\n    /** milliseconds */\n    this.initialDelay = 500;\n\n    /**\n     * Function that returns \"false\", if the scrolling should no longer be active (e.g. because the\n     * elements were removed from the DOM) or \"true\" otherwise.\n     * @return {boolean}\n     */\n    this.active = () => true;\n    /**\n     * Function that receives the computed delta scroll positions (positive or negative) when automatic scrolling is active.\n     * @param {number} dx\n     * @param {number} dy\n     */\n    this.scroll = (dx, dy) => {\n    };\n\n    $.extend(this, model);\n\n    // --- Do not change the following properties manually ---\n\n    this.dx = 0;\n    this.dy = 0;\n    this.started = false;\n    this.moved = false;\n\n    this._timeoutId = null;\n  }\n\n  _tick() {\n    if (!this.active()) {\n      return;\n    }\n    if (this.started && (this.dx || this.dy)) {\n      this.scroll(this.dx, this.dy);\n      this.moved = true;\n    }\n    // Reschedule for continuous scrolling\n    let delay = (this.moved ? 16 : this.initialDelay); // 16ms = 60fps\n    this._timeoutId = setTimeout(() => this._tick(), delay);\n  }\n\n  /**\n   * Normally, it should not be necessary to call this method manually. Use update() instead.\n   */\n  start() {\n    clearTimeout(this._timeoutId);\n    this._tick();\n    this.started = true;\n  }\n\n  /**\n   * Normally, it should not be necessary to call this method manually. Use update() instead.\n   */\n  stop() {\n    clearTimeout(this._timeoutId);\n    this._timeoutId = null;\n    this.started = false;\n    this.moved = false;\n    this.dx = 0;\n    this.dy = 0;\n  }\n\n  /**\n   * This method is intended to be called with the current mouse position (viewport-relative coordinates in pixel)\n   * on every mouse move event. It automatically computes the required delta scroll positions in both directions.\n   *\n   * @param {Point} mouse\n   */\n  update(mouse) {\n    let e = this.e;\n    let f = this.f;\n    // f2 = Half-way between e and f\n    let f2 = Math.floor((e + f) / 2);\n\n    let scrollAreaLeft = e;\n    let scrollAreaRight = this.viewportWidth - e;\n    let scrollAreaTop = e;\n    let scrollAreaBottom = this.viewportHeight - e;\n\n    // Slow scrolling between e and f2, medium scrolling between f2 and f, fast scrolling after f\n    const SLOW = ViewportScroller.SPEED_FACTOR_SLOW;\n    const MEDIUM = ViewportScroller.SPEED_FACTOR_MEDIUM;\n    const FAST = ViewportScroller.SPEED_FACTOR_FAST;\n    let speedFactorX = 0;\n    let speedFactorY = 0;\n\n    // dx/dy = distance (positive or negative) in pixel\n    let dx = 0;\n    let dy = 0;\n    // noinspection DuplicatedCode\n    if (mouse.x < scrollAreaLeft) {\n      dx = -(scrollAreaLeft - mouse.x);\n      speedFactorX = (mouse.x > f2 ? SLOW : (mouse.x > f ? MEDIUM : FAST));\n    } else if (mouse.x > scrollAreaRight) {\n      dx = (mouse.x - scrollAreaRight);\n      speedFactorX = (mouse.x > this.viewportWidth - f ? FAST : (mouse.x > this.viewportWidth - f2 ? MEDIUM : SLOW));\n    }\n    // noinspection DuplicatedCode\n    if (mouse.y < scrollAreaTop) {\n      dy = -(scrollAreaTop - mouse.y);\n      speedFactorY = (mouse.y > f2 ? SLOW : (mouse.y > f ? MEDIUM : FAST));\n    } else if (mouse.y > scrollAreaBottom) {\n      dy = (mouse.y - scrollAreaBottom);\n      speedFactorY = (mouse.y > this.viewportHeight - f ? FAST : (mouse.y > this.viewportHeight - f2 ? MEDIUM : SLOW));\n    }\n    // ax/ay = absolute distance in pixel\n    let ax = Math.abs(dx);\n    let ay = Math.abs(dy);\n    let a = Math.max(ax, ay);\n\n    if (a === 0) {\n      // Mouse not in scroll area -> stop previously started loop\n      this.stop();\n      return;\n    }\n\n    // Compute distance to scroll\n    let speedX = 1 + Math.floor(ax * speedFactorX);\n    let speedY = 1 + Math.floor(ay * speedFactorY);\n    this.dx = Math.sign(dx) * speedX;\n    this.dy = Math.sign(dy) * speedY;\n\n    // --- Start loop ---\n    this.started || this.start();\n\n    if (!this.moved && a > e) {\n      // If mouse is outside the viewport, ensure scrolling starts immediately (by calling start() again)\n      this.start();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}