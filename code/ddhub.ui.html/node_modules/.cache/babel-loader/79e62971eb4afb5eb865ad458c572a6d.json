{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { IconDesc, strings } from '../index';\nimport $ from 'jquery';\n\n/* These icon ids can either be used directly using JavaScript.\n * Or in a JSON based model file using the syntax ${iconId:ID}. */\n\n/* default font icons (sans-serif, arial) */\nconst TABLE_SORT_ASC = 'font:\\u2191';\nconst TABLE_SORT_DESC = 'font:\\u2193';\n\n/* scoutIcons: custom icons */\nconst EXCLAMATION_MARK_BOLD = 'font:\\uE060';\nconst EXCLAMATION_MARK_CIRCLE = 'font:\\uE001';\nconst INFO = 'font:\\uE002';\nconst CALENDAR = 'font:\\uE029';\nconst FILE = 'font:\\uE003';\nconst CLOCK = 'font:\\uE004';\nconst CHECKED_BOLD = 'font:\\uE005';\nconst GROUP = 'font:\\uE006';\nconst GROUP_PLUS = 'font:\\uE007';\nconst ANGLE_DOUBLE_LEFT = 'font:\\uE010';\nconst ANGLE_DOUBLE_RIGHT = 'font:\\uE011';\nconst ANGLE_LEFT = 'font:\\uE012';\nconst ANGLE_RIGHT = 'font:\\uE013';\nconst ANGLE_DOWN = 'font:\\uE014';\nconst ANGLE_UP = 'font:\\uE015';\nconst LONG_ARROW_DOWN = 'font:\\uE016';\nconst LONG_ARROW_UP = 'font:\\uE017';\nconst LONG_ARROW_DOWN_PLUS = 'font:\\uE018';\nconst LONG_ARROW_UP_PLUS = 'font:\\uE019';\nconst MINUS = 'font:\\uE01A';\nconst PLUS = 'font:\\uE01B';\nconst LIST = 'font:\\uE01C';\nconst TARGET = 'font:\\uE020';\nconst WORLD = 'font:\\uE021';\nconst CHART = 'font:\\uE022';\nconst GEAR = 'font:\\uE031';\nconst STAR = 'font:\\uE02D';\nconst STAR_MARKED = 'font:\\uE02E';\nconst STAR_BOLD = 'font:\\uE032';\nconst STAR_SOLID = 'font:\\uE033';\nconst PERSON_SOLID = 'font:\\uE034';\nconst SEARCH = 'font:\\uE02A';\nconst FOLDER = 'font:\\uE02B';\nconst SUM = 'font:\\uE02C';\nconst AVG = 'font:\\uE03A';\nconst MAX = 'font:\\uE039';\nconst MAX_BOLD = 'font:\\uE027';\nconst MIN = 'font:\\uE038';\nconst MIN_BOLD = 'font:\\uE028';\nconst EXPAND_ALL = 'font:\\uE036';\nconst COLLAPSE_ALL = 'font:\\uE037';\nconst COLLAPSE = 'font:\\uE600';\nconst ELLIPSIS_V = 'font:\\uE041';\nconst SLIPPERY = 'font:\\uE044';\nconst REMOVE = 'font:\\uE035';\nconst REMOVE_BOLD = 'font:\\uE045';\nconst PENCIL = 'font:\\uE02F';\nconst PENCIL_UNDERLINE_SOLID = 'font:\\uE050';\nconst ROTATE_LEFT = 'font:\\uE051';\nconst ROTATE_RIGHT = 'font:\\uE052';\nconst HOURGLASS = 'font:\\uE053';\nconst DIAGRAM_AREA = 'font:\\uE070';\nconst DIAGRAM_BAR = 'font:\\uE071';\nconst DIAGRAM_BARS_HORIZONTAL = 'font:\\uE072';\nconst DIAGRAM_BARS_VERTICAL = 'font:\\uE073';\nconst DIAGRAM_DOUGHNUT = 'font:\\uE074';\nconst DIAGRAM_LINE = 'font:\\uE075';\nconst DIAGRAM_LINE_ANGULAR = 'font:\\uE076';\nconst DIAGRAM_LINE_SMOOTH = 'font:\\uE077';\nconst DIAGRAM_PIE = 'font:\\uE078';\nconst DIAGRAM_RADAR = 'font:\\uE079';\nconst DIAGRAM_SCATTER = 'font:\\uE07A';\n\n/* font awesome icons */\nconst CHEVRON_LEFT_BOLD = 'font:\\uF053';\nconst CHEVRON_RIGHT_BOLD = 'font:\\uF054';\nconst CHEVRON_UP_BOLD = 'font:\\uF077';\nconst CHEVRON_DOWN_BOLD = 'font:\\uF078';\nconst ARROW_RIGHT_BOLD = 'font:\\uF061';\nconst PLUS_BOLD = 'font:\\uF067';\nconst MINUS_BOLD = 'font:\\uF068';\nconst SQUARE_BOLD = 'font:\\uF0C8';\nconst CARET_DOWN = 'font:\\uF0D7';\nconst CARET_UP = 'font:\\uF0D8';\nconst CARET_LEFT = 'font:\\uF0D9';\nconst CARET_RIGHT = 'font:\\uF0DA';\nconst ANGLE_LEFT_BOLD = 'font:\\uF104';\nconst ANGLE_RIGHT_BOLD = 'font:\\uF105';\nconst ANGLE_UP_BOLD = 'font:\\uF106';\nconst ANGLE_DOWN_BOLD = 'font:\\uF107';\nconst CIRCLE_BOLD = 'font:\\uF111';\nconst LONG_ARROW_DOWN_BOLD = 'font:\\uF175';\nconst LONG_ARROW_UP_BOLD = 'font:\\uF176';\nconst LONG_ARROW_LEFT_BOLD = 'font:\\uF177';\nconst LONG_ARROW_RIGHT_BOLD = 'font:\\uF178';\n\n// Other constants\nconst ICON_ID_REGEX = /\\${iconId:([a-zA-Z0-9_.]*)}/;\n\n/**\n * Returns an {@link IconDesc} object with structured info contained in the iconId string.\n */\nexport function parseIconId(iconId) {\n  let icon = new IconDesc();\n  if (strings.startsWith(iconId, 'font:')) {\n    icon.iconType = IconDesc.IconType.FONT_ICON;\n    iconId = iconId.substr(5);\n    if (strings.countCodePoints(iconId) === 1) {\n      // default icon-font scoutIcons\n      icon.font = IconDesc.DEFAULT_FONT;\n      icon.iconCharacter = iconId;\n    } else {\n      let tmp = iconId.split(' ');\n      icon.font = tmp[0];\n      icon.iconCharacter = tmp[1];\n    }\n  } else {\n    icon.iconType = IconDesc.IconType.BITMAP;\n    icon.iconUrl = iconId;\n  }\n  return icon;\n}\n\n/**\n * Resolves the value of an iconId property, where the value can contain a reference to\n * an icon constant in these formats:\n * <ul>\n *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>\n *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>\n * </ul>\n * @param {string} value\n * @returns {string}\n */\nexport function resolveIconId(value) {\n  let iconId,\n    tmp,\n    result = ICON_ID_REGEX.exec(value);\n  if (result && result.length === 2) {\n    iconId = result[1];\n    tmp = iconId.split('.');\n    if (tmp.length === 1) {\n      // look for icon in [0]\n      value = scout.icons[tmp];\n    } else if (tmp.length === 2) {\n      // look for icon in global object [0].icons.[1]\n      value = window[tmp[0]].icons[tmp[1]];\n    } else {\n      $.log.warn('Invalid iconId: ' + value);\n    }\n  }\n  return value;\n}\n\n/**\n * Resolves the value of an iconId property, where the value can contain a reference to\n * an icon constant in these formats:\n * <ul>\n *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>\n *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>\n * </ul>\n * @param object object having an icon property which contains a iconId\n * @param {string} iconProperty name of the property where an iconId placeholder should be replaced by the actual iconId. By default 'iconId' is used as property name.\n * @returns {string}\n */\nexport function resolveIconProperty(object, iconProperty) {\n  iconProperty = iconProperty || 'iconId';\n  let value = object[iconProperty];\n  let newValue = resolveIconId(value);\n  if (newValue !== value) {\n    object[iconProperty] = newValue;\n  }\n}\nexport default {\n  TABLE_SORT_ASC,\n  TABLE_SORT_DESC,\n  EXCLAMATION_MARK_BOLD,\n  EXCLAMATION_MARK_CIRCLE,\n  INFO,\n  FILE,\n  CALENDAR,\n  CHECKED_BOLD,\n  CLOCK,\n  GROUP,\n  GROUP_PLUS,\n  ANGLE_DOUBLE_LEFT,\n  ANGLE_DOUBLE_RIGHT,\n  ANGLE_LEFT,\n  ANGLE_RIGHT,\n  ANGLE_DOWN,\n  ANGLE_UP,\n  LONG_ARROW_DOWN,\n  LONG_ARROW_UP,\n  LONG_ARROW_DOWN_PLUS,\n  LONG_ARROW_UP_PLUS,\n  MINUS,\n  PLUS,\n  LIST,\n  TARGET,\n  WORLD,\n  CHART,\n  GEAR,\n  STAR,\n  STAR_MARKED,\n  STAR_BOLD,\n  STAR_SOLID,\n  PERSON_SOLID,\n  SEARCH,\n  FOLDER,\n  SUM,\n  AVG,\n  MAX,\n  MAX_BOLD,\n  MIN,\n  MIN_BOLD,\n  EXPAND_ALL,\n  COLLAPSE_ALL,\n  COLLAPSE,\n  ELLIPSIS_V,\n  SLIPPERY,\n  HOURGLASS,\n  REMOVE,\n  REMOVE_BOLD,\n  PENCIL,\n  PENCIL_UNDERLINE_SOLID,\n  ROTATE_LEFT,\n  ROTATE_RIGHT,\n  DIAGRAM_AREA,\n  DIAGRAM_BAR,\n  DIAGRAM_BARS_HORIZONTAL,\n  DIAGRAM_BARS_VERTICAL,\n  DIAGRAM_DOUGHNUT,\n  DIAGRAM_LINE,\n  DIAGRAM_LINE_ANGULAR,\n  DIAGRAM_LINE_SMOOTH,\n  DIAGRAM_PIE,\n  DIAGRAM_RADAR,\n  DIAGRAM_SCATTER,\n  CHEVRON_LEFT_BOLD,\n  CHEVRON_RIGHT_BOLD,\n  CHEVRON_UP_BOLD,\n  CHEVRON_DOWN_BOLD,\n  ARROW_RIGHT_BOLD,\n  PLUS_BOLD,\n  MINUS_BOLD,\n  SQUARE_BOLD,\n  CARET_DOWN,\n  CARET_UP,\n  CARET_LEFT,\n  CARET_RIGHT,\n  ANGLE_LEFT_BOLD,\n  ANGLE_RIGHT_BOLD,\n  ANGLE_UP_BOLD,\n  ANGLE_DOWN_BOLD,\n  CIRCLE_BOLD,\n  LONG_ARROW_DOWN_BOLD,\n  LONG_ARROW_UP_BOLD,\n  LONG_ARROW_LEFT_BOLD,\n  LONG_ARROW_RIGHT_BOLD,\n  parseIconId,\n  resolveIconId,\n  resolveIconProperty\n};","map":{"version":3,"names":["IconDesc","strings","$","TABLE_SORT_ASC","TABLE_SORT_DESC","EXCLAMATION_MARK_BOLD","EXCLAMATION_MARK_CIRCLE","INFO","CALENDAR","FILE","CLOCK","CHECKED_BOLD","GROUP","GROUP_PLUS","ANGLE_DOUBLE_LEFT","ANGLE_DOUBLE_RIGHT","ANGLE_LEFT","ANGLE_RIGHT","ANGLE_DOWN","ANGLE_UP","LONG_ARROW_DOWN","LONG_ARROW_UP","LONG_ARROW_DOWN_PLUS","LONG_ARROW_UP_PLUS","MINUS","PLUS","LIST","TARGET","WORLD","CHART","GEAR","STAR","STAR_MARKED","STAR_BOLD","STAR_SOLID","PERSON_SOLID","SEARCH","FOLDER","SUM","AVG","MAX","MAX_BOLD","MIN","MIN_BOLD","EXPAND_ALL","COLLAPSE_ALL","COLLAPSE","ELLIPSIS_V","SLIPPERY","REMOVE","REMOVE_BOLD","PENCIL","PENCIL_UNDERLINE_SOLID","ROTATE_LEFT","ROTATE_RIGHT","HOURGLASS","DIAGRAM_AREA","DIAGRAM_BAR","DIAGRAM_BARS_HORIZONTAL","DIAGRAM_BARS_VERTICAL","DIAGRAM_DOUGHNUT","DIAGRAM_LINE","DIAGRAM_LINE_ANGULAR","DIAGRAM_LINE_SMOOTH","DIAGRAM_PIE","DIAGRAM_RADAR","DIAGRAM_SCATTER","CHEVRON_LEFT_BOLD","CHEVRON_RIGHT_BOLD","CHEVRON_UP_BOLD","CHEVRON_DOWN_BOLD","ARROW_RIGHT_BOLD","PLUS_BOLD","MINUS_BOLD","SQUARE_BOLD","CARET_DOWN","CARET_UP","CARET_LEFT","CARET_RIGHT","ANGLE_LEFT_BOLD","ANGLE_RIGHT_BOLD","ANGLE_UP_BOLD","ANGLE_DOWN_BOLD","CIRCLE_BOLD","LONG_ARROW_DOWN_BOLD","LONG_ARROW_UP_BOLD","LONG_ARROW_LEFT_BOLD","LONG_ARROW_RIGHT_BOLD","ICON_ID_REGEX","parseIconId","iconId","icon","startsWith","iconType","IconType","FONT_ICON","substr","countCodePoints","font","DEFAULT_FONT","iconCharacter","tmp","split","BITMAP","iconUrl","resolveIconId","value","result","exec","length","scout","icons","window","log","warn","resolveIconProperty","object","iconProperty","newValue"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/icons.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {IconDesc, strings} from '../index';\nimport $ from 'jquery';\n\n/* These icon ids can either be used directly using JavaScript.\n * Or in a JSON based model file using the syntax ${iconId:ID}. */\n\n/* default font icons (sans-serif, arial) */\nconst TABLE_SORT_ASC = 'font:\\u2191';\nconst TABLE_SORT_DESC = 'font:\\u2193';\n\n/* scoutIcons: custom icons */\nconst EXCLAMATION_MARK_BOLD = 'font:\\uE060';\nconst EXCLAMATION_MARK_CIRCLE = 'font:\\uE001';\nconst INFO = 'font:\\uE002';\nconst CALENDAR = 'font:\\uE029';\nconst FILE = 'font:\\uE003';\nconst CLOCK = 'font:\\uE004';\nconst CHECKED_BOLD = 'font:\\uE005';\nconst GROUP = 'font:\\uE006';\nconst GROUP_PLUS = 'font:\\uE007';\nconst ANGLE_DOUBLE_LEFT = 'font:\\uE010';\nconst ANGLE_DOUBLE_RIGHT = 'font:\\uE011';\nconst ANGLE_LEFT = 'font:\\uE012';\nconst ANGLE_RIGHT = 'font:\\uE013';\nconst ANGLE_DOWN = 'font:\\uE014';\nconst ANGLE_UP = 'font:\\uE015';\nconst LONG_ARROW_DOWN = 'font:\\uE016';\nconst LONG_ARROW_UP = 'font:\\uE017';\nconst LONG_ARROW_DOWN_PLUS = 'font:\\uE018';\nconst LONG_ARROW_UP_PLUS = 'font:\\uE019';\nconst MINUS = 'font:\\uE01A';\nconst PLUS = 'font:\\uE01B';\nconst LIST = 'font:\\uE01C';\nconst TARGET = 'font:\\uE020';\nconst WORLD = 'font:\\uE021';\nconst CHART = 'font:\\uE022';\nconst GEAR = 'font:\\uE031';\nconst STAR = 'font:\\uE02D';\nconst STAR_MARKED = 'font:\\uE02E';\nconst STAR_BOLD = 'font:\\uE032';\nconst STAR_SOLID = 'font:\\uE033';\nconst PERSON_SOLID = 'font:\\uE034';\nconst SEARCH = 'font:\\uE02A';\nconst FOLDER = 'font:\\uE02B';\nconst SUM = 'font:\\uE02C';\nconst AVG = 'font:\\uE03A';\nconst MAX = 'font:\\uE039';\nconst MAX_BOLD = 'font:\\uE027';\nconst MIN = 'font:\\uE038';\nconst MIN_BOLD = 'font:\\uE028';\nconst EXPAND_ALL = 'font:\\uE036';\nconst COLLAPSE_ALL = 'font:\\uE037';\nconst COLLAPSE = 'font:\\uE600';\nconst ELLIPSIS_V = 'font:\\uE041';\nconst SLIPPERY = 'font:\\uE044';\nconst REMOVE = 'font:\\uE035';\nconst REMOVE_BOLD = 'font:\\uE045';\nconst PENCIL = 'font:\\uE02F';\nconst PENCIL_UNDERLINE_SOLID = 'font:\\uE050';\nconst ROTATE_LEFT = 'font:\\uE051';\nconst ROTATE_RIGHT = 'font:\\uE052';\nconst HOURGLASS = 'font:\\uE053';\nconst DIAGRAM_AREA = 'font:\\uE070';\nconst DIAGRAM_BAR = 'font:\\uE071';\nconst DIAGRAM_BARS_HORIZONTAL = 'font:\\uE072';\nconst DIAGRAM_BARS_VERTICAL = 'font:\\uE073';\nconst DIAGRAM_DOUGHNUT = 'font:\\uE074';\nconst DIAGRAM_LINE = 'font:\\uE075';\nconst DIAGRAM_LINE_ANGULAR = 'font:\\uE076';\nconst DIAGRAM_LINE_SMOOTH = 'font:\\uE077';\nconst DIAGRAM_PIE = 'font:\\uE078';\nconst DIAGRAM_RADAR = 'font:\\uE079';\nconst DIAGRAM_SCATTER = 'font:\\uE07A';\n\n/* font awesome icons */\nconst CHEVRON_LEFT_BOLD = 'font:\\uF053';\nconst CHEVRON_RIGHT_BOLD = 'font:\\uF054';\nconst CHEVRON_UP_BOLD = 'font:\\uF077';\nconst CHEVRON_DOWN_BOLD = 'font:\\uF078';\nconst ARROW_RIGHT_BOLD = 'font:\\uF061';\nconst PLUS_BOLD = 'font:\\uF067';\nconst MINUS_BOLD = 'font:\\uF068';\nconst SQUARE_BOLD = 'font:\\uF0C8';\nconst CARET_DOWN = 'font:\\uF0D7';\nconst CARET_UP = 'font:\\uF0D8';\nconst CARET_LEFT = 'font:\\uF0D9';\nconst CARET_RIGHT = 'font:\\uF0DA';\nconst ANGLE_LEFT_BOLD = 'font:\\uF104';\nconst ANGLE_RIGHT_BOLD = 'font:\\uF105';\nconst ANGLE_UP_BOLD = 'font:\\uF106';\nconst ANGLE_DOWN_BOLD = 'font:\\uF107';\nconst CIRCLE_BOLD = 'font:\\uF111';\nconst LONG_ARROW_DOWN_BOLD = 'font:\\uF175';\nconst LONG_ARROW_UP_BOLD = 'font:\\uF176';\nconst LONG_ARROW_LEFT_BOLD = 'font:\\uF177';\nconst LONG_ARROW_RIGHT_BOLD = 'font:\\uF178';\n\n// Other constants\nconst ICON_ID_REGEX = /\\${iconId:([a-zA-Z0-9_.]*)}/;\n\n/**\n * Returns an {@link IconDesc} object with structured info contained in the iconId string.\n */\nexport function parseIconId(iconId) {\n  let icon = new IconDesc();\n\n  if (strings.startsWith(iconId, 'font:')) {\n    icon.iconType = IconDesc.IconType.FONT_ICON;\n    iconId = iconId.substr(5);\n    if (strings.countCodePoints(iconId) === 1) {\n      // default icon-font scoutIcons\n      icon.font = IconDesc.DEFAULT_FONT;\n      icon.iconCharacter = iconId;\n    } else {\n      let tmp = iconId.split(' ');\n      icon.font = tmp[0];\n      icon.iconCharacter = tmp[1];\n    }\n  } else {\n    icon.iconType = IconDesc.IconType.BITMAP;\n    icon.iconUrl = iconId;\n  }\n\n  return icon;\n}\n\n/**\n * Resolves the value of an iconId property, where the value can contain a reference to\n * an icon constant in these formats:\n * <ul>\n *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>\n *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>\n * </ul>\n * @param {string} value\n * @returns {string}\n */\nexport function resolveIconId(value) {\n  let iconId, tmp,\n    result = ICON_ID_REGEX.exec(value);\n  if (result && result.length === 2) {\n    iconId = result[1];\n    tmp = iconId.split('.');\n    if (tmp.length === 1) {\n      // look for icon in [0]\n      value = scout.icons[tmp];\n    } else if (tmp.length === 2) {\n      // look for icon in global object [0].icons.[1]\n      value = window[tmp[0]].icons[tmp[1]];\n    } else {\n      $.log.warn('Invalid iconId: ' + value);\n    }\n  }\n  return value;\n}\n\n/**\n * Resolves the value of an iconId property, where the value can contain a reference to\n * an icon constant in these formats:\n * <ul>\n *   <li><code>${iconId:ANGLE_UP}</code> references constant ANGLE_UP</li>\n *   <li><code>${iconId:foo.BAR}</code> references constant foo.icons.BAR, this is used for custom objects with icon constants</li>\n * </ul>\n * @param object object having an icon property which contains a iconId\n * @param {string} iconProperty name of the property where an iconId placeholder should be replaced by the actual iconId. By default 'iconId' is used as property name.\n * @returns {string}\n */\nexport function resolveIconProperty(object, iconProperty) {\n  iconProperty = iconProperty || 'iconId';\n  let value = object[iconProperty];\n  let newValue = resolveIconId(value);\n  if (newValue !== value) {\n    object[iconProperty] = newValue;\n  }\n}\n\nexport default {\n  TABLE_SORT_ASC,\n  TABLE_SORT_DESC,\n  EXCLAMATION_MARK_BOLD,\n  EXCLAMATION_MARK_CIRCLE,\n  INFO,\n  FILE,\n  CALENDAR,\n  CHECKED_BOLD,\n  CLOCK,\n  GROUP,\n  GROUP_PLUS,\n  ANGLE_DOUBLE_LEFT,\n  ANGLE_DOUBLE_RIGHT,\n  ANGLE_LEFT,\n  ANGLE_RIGHT,\n  ANGLE_DOWN,\n  ANGLE_UP,\n  LONG_ARROW_DOWN,\n  LONG_ARROW_UP,\n  LONG_ARROW_DOWN_PLUS,\n  LONG_ARROW_UP_PLUS,\n  MINUS,\n  PLUS,\n  LIST,\n  TARGET,\n  WORLD,\n  CHART,\n  GEAR,\n  STAR,\n  STAR_MARKED,\n  STAR_BOLD,\n  STAR_SOLID,\n  PERSON_SOLID,\n  SEARCH,\n  FOLDER,\n  SUM,\n  AVG,\n  MAX,\n  MAX_BOLD,\n  MIN,\n  MIN_BOLD,\n  EXPAND_ALL,\n  COLLAPSE_ALL,\n  COLLAPSE,\n  ELLIPSIS_V,\n  SLIPPERY,\n  HOURGLASS,\n  REMOVE,\n  REMOVE_BOLD,\n  PENCIL,\n  PENCIL_UNDERLINE_SOLID,\n  ROTATE_LEFT,\n  ROTATE_RIGHT,\n  DIAGRAM_AREA,\n  DIAGRAM_BAR,\n  DIAGRAM_BARS_HORIZONTAL,\n  DIAGRAM_BARS_VERTICAL,\n  DIAGRAM_DOUGHNUT,\n  DIAGRAM_LINE,\n  DIAGRAM_LINE_ANGULAR,\n  DIAGRAM_LINE_SMOOTH,\n  DIAGRAM_PIE,\n  DIAGRAM_RADAR,\n  DIAGRAM_SCATTER,\n  CHEVRON_LEFT_BOLD,\n  CHEVRON_RIGHT_BOLD,\n  CHEVRON_UP_BOLD,\n  CHEVRON_DOWN_BOLD,\n  ARROW_RIGHT_BOLD,\n  PLUS_BOLD,\n  MINUS_BOLD,\n  SQUARE_BOLD,\n  CARET_DOWN,\n  CARET_UP,\n  CARET_LEFT,\n  CARET_RIGHT,\n  ANGLE_LEFT_BOLD,\n  ANGLE_RIGHT_BOLD,\n  ANGLE_UP_BOLD,\n  ANGLE_DOWN_BOLD,\n  CIRCLE_BOLD,\n  LONG_ARROW_DOWN_BOLD,\n  LONG_ARROW_UP_BOLD,\n  LONG_ARROW_LEFT_BOLD,\n  LONG_ARROW_RIGHT_BOLD,\n  parseIconId,\n  resolveIconId,\n  resolveIconProperty\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}