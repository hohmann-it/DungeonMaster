{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class LogicalGridLayoutConfig {\n  constructor(options) {\n    this._extend(options);\n  }\n  _extend(options) {\n    // -1 means use the UI defaults\n    options = options || {};\n    if (options.hgap > -1) {\n      this.hgap = options.hgap;\n    }\n    if (options.vgap > -1) {\n      this.vgap = options.vgap;\n    }\n    if (options.columnWidth > -1) {\n      this.columnWidth = options.columnWidth;\n    }\n    if (options.rowHeight > -1) {\n      this.rowHeight = options.rowHeight;\n    }\n    if (options.minWidth > -1) {\n      this.minWidth = options.minWidth;\n    }\n  }\n  clone() {\n    return new LogicalGridLayoutConfig(this);\n  }\n  applyToLayout(layout) {\n    layout.layoutConfig = this;\n    if (this.hgap !== null && this.hgap !== undefined) {\n      layout.hgap = this.hgap;\n    }\n    if (this.vgap !== null && this.vgap !== undefined) {\n      layout.vgap = this.vgap;\n    }\n    if (this.columnWidth !== null && this.columnWidth !== undefined) {\n      layout.columnWidth = this.columnWidth;\n    }\n    if (this.rowHeight !== null && this.rowHeight !== undefined) {\n      layout.rowHeight = this.rowHeight;\n    }\n    if (this.minWidth !== null && this.minWidth !== undefined) {\n      layout.minWidth = this.minWidth;\n    }\n  }\n  static ensure(layoutConfig) {\n    if (!layoutConfig) {\n      return layoutConfig;\n    }\n    if (layoutConfig instanceof LogicalGridLayoutConfig) {\n      return layoutConfig;\n    }\n    return new LogicalGridLayoutConfig(layoutConfig);\n  }\n}","map":{"version":3,"names":["LogicalGridLayoutConfig","constructor","options","_extend","hgap","vgap","columnWidth","rowHeight","minWidth","clone","applyToLayout","layout","layoutConfig","undefined","ensure"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/logicalgrid/LogicalGridLayoutConfig.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class LogicalGridLayoutConfig {\n\n  constructor(options) {\n    this._extend(options);\n  }\n\n  _extend(options) {\n    // -1 means use the UI defaults\n    options = options || {};\n    if (options.hgap > -1) {\n      this.hgap = options.hgap;\n    }\n    if (options.vgap > -1) {\n      this.vgap = options.vgap;\n    }\n    if (options.columnWidth > -1) {\n      this.columnWidth = options.columnWidth;\n    }\n    if (options.rowHeight > -1) {\n      this.rowHeight = options.rowHeight;\n    }\n    if (options.minWidth > -1) {\n      this.minWidth = options.minWidth;\n    }\n  }\n\n  clone() {\n    return new LogicalGridLayoutConfig(this);\n  }\n\n  applyToLayout(layout) {\n    layout.layoutConfig = this;\n    if (this.hgap !== null && this.hgap !== undefined) {\n      layout.hgap = this.hgap;\n    }\n    if (this.vgap !== null && this.vgap !== undefined) {\n      layout.vgap = this.vgap;\n    }\n    if (this.columnWidth !== null && this.columnWidth !== undefined) {\n      layout.columnWidth = this.columnWidth;\n    }\n    if (this.rowHeight !== null && this.rowHeight !== undefined) {\n      layout.rowHeight = this.rowHeight;\n    }\n    if (this.minWidth !== null && this.minWidth !== undefined) {\n      layout.minWidth = this.minWidth;\n    }\n  }\n\n  static ensure(layoutConfig) {\n    if (!layoutConfig) {\n      return layoutConfig;\n    }\n    if (layoutConfig instanceof LogicalGridLayoutConfig) {\n      return layoutConfig;\n    }\n    return new LogicalGridLayoutConfig(layoutConfig);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,uBAAuB,CAAC;EAE3CC,WAAW,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,OAAO,CAACD,OAAO,CAAC;EACvB;EAEAC,OAAO,CAACD,OAAO,EAAE;IACf;IACAA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAIA,OAAO,CAACE,IAAI,GAAG,CAAC,CAAC,EAAE;MACrB,IAAI,CAACA,IAAI,GAAGF,OAAO,CAACE,IAAI;IAC1B;IACA,IAAIF,OAAO,CAACG,IAAI,GAAG,CAAC,CAAC,EAAE;MACrB,IAAI,CAACA,IAAI,GAAGH,OAAO,CAACG,IAAI;IAC1B;IACA,IAAIH,OAAO,CAACI,WAAW,GAAG,CAAC,CAAC,EAAE;MAC5B,IAAI,CAACA,WAAW,GAAGJ,OAAO,CAACI,WAAW;IACxC;IACA,IAAIJ,OAAO,CAACK,SAAS,GAAG,CAAC,CAAC,EAAE;MAC1B,IAAI,CAACA,SAAS,GAAGL,OAAO,CAACK,SAAS;IACpC;IACA,IAAIL,OAAO,CAACM,QAAQ,GAAG,CAAC,CAAC,EAAE;MACzB,IAAI,CAACA,QAAQ,GAAGN,OAAO,CAACM,QAAQ;IAClC;EACF;EAEAC,KAAK,GAAG;IACN,OAAO,IAAIT,uBAAuB,CAAC,IAAI,CAAC;EAC1C;EAEAU,aAAa,CAACC,MAAM,EAAE;IACpBA,MAAM,CAACC,YAAY,GAAG,IAAI;IAC1B,IAAI,IAAI,CAACR,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,KAAKS,SAAS,EAAE;MACjDF,MAAM,CAACP,IAAI,GAAG,IAAI,CAACA,IAAI;IACzB;IACA,IAAI,IAAI,CAACC,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,IAAI,KAAKQ,SAAS,EAAE;MACjDF,MAAM,CAACN,IAAI,GAAG,IAAI,CAACA,IAAI;IACzB;IACA,IAAI,IAAI,CAACC,WAAW,KAAK,IAAI,IAAI,IAAI,CAACA,WAAW,KAAKO,SAAS,EAAE;MAC/DF,MAAM,CAACL,WAAW,GAAG,IAAI,CAACA,WAAW;IACvC;IACA,IAAI,IAAI,CAACC,SAAS,KAAK,IAAI,IAAI,IAAI,CAACA,SAAS,KAAKM,SAAS,EAAE;MAC3DF,MAAM,CAACJ,SAAS,GAAG,IAAI,CAACA,SAAS;IACnC;IACA,IAAI,IAAI,CAACC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAACA,QAAQ,KAAKK,SAAS,EAAE;MACzDF,MAAM,CAACH,QAAQ,GAAG,IAAI,CAACA,QAAQ;IACjC;EACF;EAEA,OAAOM,MAAM,CAACF,YAAY,EAAE;IAC1B,IAAI,CAACA,YAAY,EAAE;MACjB,OAAOA,YAAY;IACrB;IACA,IAAIA,YAAY,YAAYZ,uBAAuB,EAAE;MACnD,OAAOY,YAAY;IACrB;IACA,OAAO,IAAIZ,uBAAuB,CAACY,YAAY,CAAC;EAClD;AACF"},"metadata":{},"sourceType":"module"}