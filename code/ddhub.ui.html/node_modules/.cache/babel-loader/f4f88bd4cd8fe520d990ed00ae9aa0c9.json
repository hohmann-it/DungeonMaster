{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Action, Desktop, HtmlComponent, ViewButtonActionKeyStroke } from '../../index';\nexport default class ViewButton extends Action {\n  constructor() {\n    super();\n    this.showTooltipWhenSelected = false;\n    this.displayStyle = 'TAB';\n    /**\n     * Indicates if this view button is currently the \"selected button\" in the ViewMenuTab widget,\n     * i.e. if it was the last view button of type MENU to have been selected. Note that the\n     * \"selected\" property does not necessarily have to be true as well, since an other button of\n     * type TAB might currently be selected. This information is used when restoring the \"selected\n     * button\" when the ViewMenuTab widget is removed and restored again, e.g. when toggling the\n     * desktop's 'navigationVisible' property.\n     * @type {boolean}\n     */\n    this.selectedAsMenu = false;\n    this._desktopInBackgroundHandler = this._onDesktopInBackgroundChange.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this.session.desktop.on('propertyChange:inBackground', this._desktopInBackgroundHandler);\n  }\n  _destroy() {\n    this.session.desktop.off('propertyChange:inBackground', this._desktopInBackgroundHandler);\n    super._destroy();\n  }\n  renderAsTab($parent) {\n    let $wrapper = $parent.appendDiv('view-tab-wrapper');\n    this.render($wrapper);\n    this.$container.addClass('view-tab view-button-tab');\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('view-button').on('mousedown', this._onMouseEvent.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.$container.prependDiv('edge left');\n    this.$container.appendDiv('edge right');\n  }\n  _remove() {\n    let $wrapper = this.$container.parent();\n    if ($wrapper.hasClass('view-tab-wrapper')) {\n      $wrapper.remove();\n    }\n    super._remove();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderInBackground();\n  }\n  _renderInBackground() {\n    if (this.session.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      return;\n    }\n    if (!this.rendering) {\n      if (this.session.desktop.inBackground) {\n        this.$container.addClassForAnimation('animate-bring-to-back');\n      } else {\n        this.$container.addClassForAnimation('animate-bring-to-front');\n      }\n    }\n    this.$container.toggleClass('in-background', this.session.desktop.inBackground);\n  }\n\n  /**\n   * @override\n   */\n  _renderText() {\n    // No text\n  }\n  setDisplayStyle(displayStyle) {\n    this.setProperty('displayStyle', displayStyle);\n  }\n  _onMouseEvent(event) {\n    this.doAction();\n  }\n\n  /**\n   * @override Action.js\n   */\n  _createActionKeyStroke() {\n    return new ViewButtonActionKeyStroke(this);\n  }\n  setSelectedAsMenu(selectedAsMenu) {\n    this.selectedAsMenu = selectedAsMenu;\n  }\n  _onDesktopInBackgroundChange() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n}","map":{"version":3,"names":["Action","Desktop","HtmlComponent","ViewButtonActionKeyStroke","ViewButton","constructor","showTooltipWhenSelected","displayStyle","selectedAsMenu","_desktopInBackgroundHandler","_onDesktopInBackgroundChange","bind","_init","model","session","desktop","on","_destroy","off","renderAsTab","$parent","$wrapper","appendDiv","render","$container","addClass","_render","_onMouseEvent","htmlComp","install","prependDiv","_remove","parent","hasClass","remove","_renderProperties","_renderInBackground","DisplayStyle","COMPACT","rendering","inBackground","addClassForAnimation","toggleClass","_renderText","setDisplayStyle","setProperty","event","doAction","_createActionKeyStroke","setSelectedAsMenu","rendered"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/viewbutton/ViewButton.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Action, Desktop, HtmlComponent, ViewButtonActionKeyStroke} from '../../index';\n\nexport default class ViewButton extends Action {\n\n  constructor() {\n    super();\n    this.showTooltipWhenSelected = false;\n    this.displayStyle = 'TAB';\n    /**\n     * Indicates if this view button is currently the \"selected button\" in the ViewMenuTab widget,\n     * i.e. if it was the last view button of type MENU to have been selected. Note that the\n     * \"selected\" property does not necessarily have to be true as well, since an other button of\n     * type TAB might currently be selected. This information is used when restoring the \"selected\n     * button\" when the ViewMenuTab widget is removed and restored again, e.g. when toggling the\n     * desktop's 'navigationVisible' property.\n     * @type {boolean}\n     */\n    this.selectedAsMenu = false;\n    this._desktopInBackgroundHandler = this._onDesktopInBackgroundChange.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.session.desktop.on('propertyChange:inBackground', this._desktopInBackgroundHandler);\n  }\n\n  _destroy() {\n    this.session.desktop.off('propertyChange:inBackground', this._desktopInBackgroundHandler);\n    super._destroy();\n  }\n\n  renderAsTab($parent) {\n    let $wrapper = $parent.appendDiv('view-tab-wrapper');\n    this.render($wrapper);\n    this.$container.addClass('view-tab view-button-tab');\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('view-button')\n      .on('mousedown', this._onMouseEvent.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.$container.prependDiv('edge left');\n    this.$container.appendDiv('edge right');\n  }\n\n  _remove() {\n    let $wrapper = this.$container.parent();\n    if ($wrapper.hasClass('view-tab-wrapper')) {\n      $wrapper.remove();\n    }\n    super._remove();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderInBackground();\n  }\n\n  _renderInBackground() {\n    if (this.session.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      return;\n    }\n    if (!this.rendering) {\n      if (this.session.desktop.inBackground) {\n        this.$container.addClassForAnimation('animate-bring-to-back');\n      } else {\n        this.$container.addClassForAnimation('animate-bring-to-front');\n      }\n    }\n    this.$container.toggleClass('in-background', this.session.desktop.inBackground);\n  }\n\n  /**\n   * @override\n   */\n  _renderText() {\n    // No text\n  }\n\n  setDisplayStyle(displayStyle) {\n    this.setProperty('displayStyle', displayStyle);\n  }\n\n  _onMouseEvent(event) {\n    this.doAction();\n  }\n\n  /**\n   * @override Action.js\n   */\n  _createActionKeyStroke() {\n    return new ViewButtonActionKeyStroke(this);\n  }\n\n  setSelectedAsMenu(selectedAsMenu) {\n    this.selectedAsMenu = selectedAsMenu;\n  }\n\n  _onDesktopInBackgroundChange() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}