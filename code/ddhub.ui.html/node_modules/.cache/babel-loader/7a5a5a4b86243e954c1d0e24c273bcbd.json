{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\nexport default class Reconnector {\n  constructor(session) {\n    this.session = session;\n    this.started = false;\n\n    // Delay before first ping\n    this.initialDelay = 1000; // ms\n    // Interval to be used between pings (indefinite retries).\n    this.interval = 3000; // ms\n    // Minimal assumed ping duration (to prevent flickering of the reconnect notification when AJAX call fails very fast)\n    this.minPingDuration = 1000; // ms\n  }\n\n  start() {\n    if (this.started) {\n      return;\n    }\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] start');\n    this.started = true;\n    this._schedulePing(this.initialDelay);\n  }\n  stop() {\n    this.started = false;\n  }\n  _schedulePing(delay) {\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] schedule ping() in ' + delay + ' ms');\n    setTimeout(this._ping.bind(this), delay);\n  }\n\n  //\n  //   [START]\n  //      |\n  //      v\n  // +---------+          .--------.  (yes)\n  // | _ping() | ------> < success? > ------> [END]\n  // +---------+          '--------'\n  //      ^                   |(no)\n  //      |                   |\n  //      +-------------------+\n  //\n  _ping() {\n    this.session.onReconnecting();\n    let pingAjaxOptions = this.session.defaultAjaxOptions({\n      ping: true\n    });\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ' + pingAjaxOptions.type + ' \"' + pingAjaxOptions.url + '\"');\n    this.pingStartTimestamp = Date.now();\n    $.ajax(pingAjaxOptions).done(this._onPingDone.bind(this)).fail(this._onPingFail.bind(this));\n  }\n  _onPingDone(data, textStatus, jqXHR) {\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ping success -> connection re-established!');\n    this.session.onReconnectingSucceeded();\n    this.stop();\n  }\n  _onPingFail(jqXHR, textStatus, errorThrown) {\n    let handleFailedPing = function handleFailedPing() {\n      $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ping failed');\n      this.session.onReconnectingFailed();\n      this._schedulePing(this.interval);\n    }.bind(this);\n    let pingDuration = Date.now() - this.pingStartTimestamp;\n    if (pingDuration < this.minPingDuration) {\n      // Wait at least a certain time before informing about connection failure (to prevent flickering of the reconnecting notification)\n      setTimeout(handleFailedPing, this.minPingDuration - pingDuration);\n    } else {\n      handleFailedPing();\n    }\n  }\n}","map":{"version":3,"names":["$","Reconnector","constructor","session","started","initialDelay","interval","minPingDuration","start","log","isTraceEnabled","trace","_schedulePing","stop","delay","setTimeout","_ping","bind","onReconnecting","pingAjaxOptions","defaultAjaxOptions","ping","type","url","pingStartTimestamp","Date","now","ajax","done","_onPingDone","fail","_onPingFail","data","textStatus","jqXHR","onReconnectingSucceeded","errorThrown","handleFailedPing","onReconnectingFailed","pingDuration"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/session/Reconnector.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\n\nexport default class Reconnector {\n\n  constructor(session) {\n    this.session = session;\n    this.started = false;\n\n    // Delay before first ping\n    this.initialDelay = 1000; // ms\n    // Interval to be used between pings (indefinite retries).\n    this.interval = 3000; // ms\n    // Minimal assumed ping duration (to prevent flickering of the reconnect notification when AJAX call fails very fast)\n    this.minPingDuration = 1000; // ms\n  }\n\n  start() {\n    if (this.started) {\n      return;\n    }\n\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] start');\n    this.started = true;\n    this._schedulePing(this.initialDelay);\n  }\n\n  stop() {\n    this.started = false;\n  }\n\n  _schedulePing(delay) {\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] schedule ping() in ' + delay + ' ms');\n    setTimeout(this._ping.bind(this), delay);\n  }\n\n  //\n  //   [START]\n  //      |\n  //      v\n  // +---------+          .--------.  (yes)\n  // | _ping() | ------> < success? > ------> [END]\n  // +---------+          '--------'\n  //      ^                   |(no)\n  //      |                   |\n  //      +-------------------+\n  //\n  _ping() {\n    this.session.onReconnecting();\n\n    let pingAjaxOptions = this.session.defaultAjaxOptions({\n      ping: true\n    });\n\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ' + pingAjaxOptions.type + ' \"' + pingAjaxOptions.url + '\"');\n    this.pingStartTimestamp = Date.now();\n    $.ajax(pingAjaxOptions)\n      .done(this._onPingDone.bind(this))\n      .fail(this._onPingFail.bind(this));\n  }\n\n  _onPingDone(data, textStatus, jqXHR) {\n    $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ping success -> connection re-established!');\n    this.session.onReconnectingSucceeded();\n    this.stop();\n  }\n\n  _onPingFail(jqXHR, textStatus, errorThrown) {\n    let handleFailedPing = function handleFailedPing() {\n      $.log.isTraceEnabled() && $.log.trace('[ajax reconnector] ping failed');\n      this.session.onReconnectingFailed();\n      this._schedulePing(this.interval);\n    }.bind(this);\n\n    let pingDuration = Date.now() - this.pingStartTimestamp;\n    if (pingDuration < this.minPingDuration) {\n      // Wait at least a certain time before informing about connection failure (to prevent flickering of the reconnecting notification)\n      setTimeout(handleFailedPing, this.minPingDuration - pingDuration);\n    } else {\n      handleFailedPing();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}