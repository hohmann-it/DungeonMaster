{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, defaultValues, ModelAdapter, objects, Tree } from '../index';\nexport default class TreeAdapter extends ModelAdapter {\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayStyle']);\n  }\n  _sendNodesSelected(nodeIds, debounceSend) {\n    let eventData = {\n      nodeIds: nodeIds\n    };\n\n    // send delayed to avoid a lot of requests while selecting\n    // coalesce: only send the latest selection changed event for a field\n    this._send('nodesSelected', eventData, {\n      delay: debounceSend ? 250 : 0,\n      coalesce: function (previous) {\n        return this.target === previous.target && this.type === previous.type;\n      }\n    });\n  }\n  _onWidgetNodeClick(event) {\n    this._send('nodeClick', {\n      nodeId: event.node.id\n    });\n  }\n  _onWidgetNodeAction(event) {\n    this._send('nodeAction', {\n      nodeId: event.node.id\n    });\n  }\n  _onWidgetNodesSelected(event) {\n    let nodeIds = this.widget._nodesToIds(this.widget.selectedNodes);\n    this._sendNodesSelected(nodeIds, event.debounce);\n  }\n  _onWidgetNodeExpanded(event) {\n    this._send('nodeExpanded', {\n      nodeId: event.node.id,\n      expanded: event.expanded,\n      expandedLazy: event.expandedLazy\n    });\n  }\n  _onWidgetNodesChecked(event) {\n    this._sendNodesChecked(event.nodes);\n  }\n  _sendNodesChecked(nodes) {\n    let data = {\n      nodes: []\n    };\n    for (let i = 0; i < nodes.length; i++) {\n      data.nodes.push({\n        nodeId: nodes[i].id,\n        checked: nodes[i].checked\n      });\n    }\n    this._send('nodesChecked', data);\n  }\n  _onWidgetEvent(event) {\n    if (event.type === 'nodesSelected') {\n      this._onWidgetNodesSelected(event);\n    } else if (event.type === 'nodeClick') {\n      this._onWidgetNodeClick(event);\n    } else if (event.type === 'nodeAction') {\n      this._onWidgetNodeAction(event);\n    } else if (event.type === 'nodeExpanded') {\n      this._onWidgetNodeExpanded(event);\n    } else if (event.type === 'nodesChecked') {\n      this._onWidgetNodesChecked(event);\n    } else if (event.type === 'drop' && this.widget.dragAndDropHandler) {\n      this.widget.dragAndDropHandler.uploadFiles(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n  onModelAction(event) {\n    if (event.type === 'nodesInserted') {\n      this._onNodesInserted(event.nodes, event.commonParentNodeId);\n    } else if (event.type === 'nodesUpdated') {\n      this._onNodesUpdated(event.nodes);\n    } else if (event.type === 'nodesDeleted') {\n      this._onNodesDeleted(event.nodeIds, event.commonParentNodeId);\n    } else if (event.type === 'allChildNodesDeleted') {\n      this._onAllChildNodesDeleted(event.commonParentNodeId);\n    } else if (event.type === 'nodesSelected') {\n      this._onNodesSelected(event.nodeIds);\n    } else if (event.type === 'nodeExpanded') {\n      this._onNodeExpanded(event.nodeId, event);\n    } else if (event.type === 'nodeChanged') {\n      this._onNodeChanged(event.nodeId, event);\n    } else if (event.type === 'nodesChecked') {\n      this._onNodesChecked(event.nodes);\n    } else if (event.type === 'childNodeOrderChanged') {\n      this._onChildNodeOrderChanged(event.childNodeIds, event.parentNodeId);\n    } else if (event.type === 'requestFocus') {\n      this._onRequestFocus();\n    } else if (event.type === 'scrollToSelection') {\n      this._onScrollToSelection();\n    } else {\n      super.onModelAction(event);\n    }\n  }\n  _onNodesInserted(nodes, parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.widget.insertNodes(nodes, parentNode);\n  }\n  _onNodesUpdated(nodes) {\n    this.widget.updateNodes(nodes);\n  }\n  _onNodesDeleted(nodeIds, parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    let nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.deleteNodes(nodes, parentNode);\n  }\n  _onAllChildNodesDeleted(parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    this.widget.deleteAllChildNodes(parentNode);\n  }\n  _onNodesSelected(nodeIds) {\n    this.addFilterForWidgetEvent(widgetEvent => {\n      return widgetEvent.type === 'nodesSelected' && arrays.equals(nodeIds, this.widget._nodesToIds(this.widget.selectedNodes));\n    });\n    let nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.selectNodes(nodes);\n  }\n\n  /**\n   * @parem event.expanded true, to expand the node\n   * @param event.expandedLazy true, to expand the nodes lazily\n   * @param event.recursive true, to expand the descendant nodes as well\n   */\n  _onNodeExpanded(nodeId, event) {\n    let node = this.widget.nodesMap[nodeId],\n      options = {\n        lazy: event.expandedLazy\n      };\n    let affectedNodesMap = objects.createMap();\n    affectedNodesMap[nodeId] = true;\n    if (event.recursive) {\n      Tree.visitNodes(n => {\n        affectedNodesMap[n.id] = true;\n      }, node.childNodes);\n    }\n    this.addFilterForWidgetEvent(widgetEvent => {\n      return widgetEvent.type === 'nodeExpanded' && affectedNodesMap[widgetEvent.node.id] && event.expanded === widgetEvent.expanded && event.expandedLazy === widgetEvent.expandedLazy;\n    });\n    this.widget.setNodeExpanded(node, event.expanded, options);\n    if (event.recursive) {\n      this.widget.setNodeExpandedRecursive(node.childNodes, event.expanded, options);\n    }\n  }\n\n  // noinspection DuplicatedCode\n  _onNodeChanged(nodeId, cell) {\n    let node = this.widget.nodesMap[nodeId];\n    defaultValues.applyTo(cell, 'TreeNode');\n    node.text = cell.text;\n    node.cssClass = cell.cssClass;\n    node.iconId = cell.iconId;\n    node.tooltipText = cell.tooltipText;\n    node.foregroundColor = cell.foregroundColor;\n    node.backgroundColor = cell.backgroundColor;\n    node.font = cell.font;\n    node.htmlEnabled = cell.htmlEnabled;\n    this.widget.changeNode(node);\n  }\n  _onNodesChecked(nodes) {\n    let checkedNodes = [],\n      uncheckedNodes = [];\n    nodes.forEach(function (nodeData) {\n      let node = this.widget._nodeById(nodeData.id);\n      if (nodeData.checked) {\n        checkedNodes.push(node);\n      } else {\n        uncheckedNodes.push(node);\n      }\n    }, this);\n    this.addFilterForWidgetEventType('nodesChecked');\n    this.widget.checkNodes(checkedNodes, {\n      checked: true,\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n    this.widget.uncheckNodes(uncheckedNodes, {\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n  }\n  _onChildNodeOrderChanged(childNodeIds, parentNodeId) {\n    let parentNode = this.widget._nodeById([parentNodeId]);\n    let nodes = this.widget._nodesByIds(childNodeIds);\n    this.widget.updateNodeOrder(nodes, parentNode);\n  }\n  _onRequestFocus() {\n    this.widget.focus();\n  }\n  _onScrollToSelection() {\n    this.widget.revealSelection();\n  }\n}","map":{"version":3,"names":["arrays","defaultValues","ModelAdapter","objects","Tree","TreeAdapter","constructor","_addRemoteProperties","_sendNodesSelected","nodeIds","debounceSend","eventData","_send","delay","coalesce","previous","target","type","_onWidgetNodeClick","event","nodeId","node","id","_onWidgetNodeAction","_onWidgetNodesSelected","widget","_nodesToIds","selectedNodes","debounce","_onWidgetNodeExpanded","expanded","expandedLazy","_onWidgetNodesChecked","_sendNodesChecked","nodes","data","i","length","push","checked","_onWidgetEvent","dragAndDropHandler","uploadFiles","onModelAction","_onNodesInserted","commonParentNodeId","_onNodesUpdated","_onNodesDeleted","_onAllChildNodesDeleted","_onNodesSelected","_onNodeExpanded","_onNodeChanged","_onNodesChecked","_onChildNodeOrderChanged","childNodeIds","parentNodeId","_onRequestFocus","_onScrollToSelection","parentNode","undefined","nodesMap","Error","insertNodes","updateNodes","addFilterForWidgetEventType","_nodesByIds","deleteNodes","deleteAllChildNodes","addFilterForWidgetEvent","widgetEvent","equals","selectNodes","options","lazy","affectedNodesMap","createMap","recursive","visitNodes","n","childNodes","setNodeExpanded","setNodeExpandedRecursive","cell","applyTo","text","cssClass","iconId","tooltipText","foregroundColor","backgroundColor","font","htmlEnabled","changeNode","checkedNodes","uncheckedNodes","forEach","nodeData","_nodeById","checkNodes","checkChildren","checkOnlyEnabled","uncheckNodes","updateNodeOrder","focus","revealSelection"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/TreeAdapter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, defaultValues, ModelAdapter, objects, Tree} from '../index';\n\nexport default class TreeAdapter extends ModelAdapter {\n\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayStyle']);\n  }\n\n  _sendNodesSelected(nodeIds, debounceSend) {\n    let eventData = {\n      nodeIds: nodeIds\n    };\n\n    // send delayed to avoid a lot of requests while selecting\n    // coalesce: only send the latest selection changed event for a field\n    this._send('nodesSelected', eventData, {\n      delay: (debounceSend ? 250 : 0),\n      coalesce: function(previous) {\n        return this.target === previous.target && this.type === previous.type;\n      }\n    });\n  }\n\n  _onWidgetNodeClick(event) {\n    this._send('nodeClick', {\n      nodeId: event.node.id\n    });\n  }\n\n  _onWidgetNodeAction(event) {\n    this._send('nodeAction', {\n      nodeId: event.node.id\n    });\n  }\n\n  _onWidgetNodesSelected(event) {\n    let nodeIds = this.widget._nodesToIds(this.widget.selectedNodes);\n    this._sendNodesSelected(nodeIds, event.debounce);\n  }\n\n  _onWidgetNodeExpanded(event) {\n    this._send('nodeExpanded', {\n      nodeId: event.node.id,\n      expanded: event.expanded,\n      expandedLazy: event.expandedLazy\n    });\n  }\n\n  _onWidgetNodesChecked(event) {\n    this._sendNodesChecked(event.nodes);\n  }\n\n  _sendNodesChecked(nodes) {\n    let data = {\n      nodes: []\n    };\n\n    for (let i = 0; i < nodes.length; i++) {\n      data.nodes.push({\n        nodeId: nodes[i].id,\n        checked: nodes[i].checked\n      });\n    }\n\n    this._send('nodesChecked', data);\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'nodesSelected') {\n      this._onWidgetNodesSelected(event);\n    } else if (event.type === 'nodeClick') {\n      this._onWidgetNodeClick(event);\n    } else if (event.type === 'nodeAction') {\n      this._onWidgetNodeAction(event);\n    } else if (event.type === 'nodeExpanded') {\n      this._onWidgetNodeExpanded(event);\n    } else if (event.type === 'nodesChecked') {\n      this._onWidgetNodesChecked(event);\n    } else if (event.type === 'drop' && this.widget.dragAndDropHandler) {\n      this.widget.dragAndDropHandler.uploadFiles(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  onModelAction(event) {\n    if (event.type === 'nodesInserted') {\n      this._onNodesInserted(event.nodes, event.commonParentNodeId);\n    } else if (event.type === 'nodesUpdated') {\n      this._onNodesUpdated(event.nodes);\n    } else if (event.type === 'nodesDeleted') {\n      this._onNodesDeleted(event.nodeIds, event.commonParentNodeId);\n    } else if (event.type === 'allChildNodesDeleted') {\n      this._onAllChildNodesDeleted(event.commonParentNodeId);\n    } else if (event.type === 'nodesSelected') {\n      this._onNodesSelected(event.nodeIds);\n    } else if (event.type === 'nodeExpanded') {\n      this._onNodeExpanded(event.nodeId, event);\n    } else if (event.type === 'nodeChanged') {\n      this._onNodeChanged(event.nodeId, event);\n    } else if (event.type === 'nodesChecked') {\n      this._onNodesChecked(event.nodes);\n    } else if (event.type === 'childNodeOrderChanged') {\n      this._onChildNodeOrderChanged(event.childNodeIds, event.parentNodeId);\n    } else if (event.type === 'requestFocus') {\n      this._onRequestFocus();\n    } else if (event.type === 'scrollToSelection') {\n      this._onScrollToSelection();\n    } else {\n      super.onModelAction(event);\n    }\n  }\n\n  _onNodesInserted(nodes, parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.widget.insertNodes(nodes, parentNode);\n  }\n\n  _onNodesUpdated(nodes) {\n    this.widget.updateNodes(nodes);\n  }\n\n  _onNodesDeleted(nodeIds, parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    let nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.deleteNodes(nodes, parentNode);\n  }\n\n  _onAllChildNodesDeleted(parentNodeId) {\n    let parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    this.widget.deleteAllChildNodes(parentNode);\n  }\n\n  _onNodesSelected(nodeIds) {\n    this.addFilterForWidgetEvent(widgetEvent => {\n      return widgetEvent.type === 'nodesSelected' &&\n        arrays.equals(nodeIds, this.widget._nodesToIds(this.widget.selectedNodes));\n    });\n    let nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.selectNodes(nodes);\n  }\n\n  /**\n   * @parem event.expanded true, to expand the node\n   * @param event.expandedLazy true, to expand the nodes lazily\n   * @param event.recursive true, to expand the descendant nodes as well\n   */\n  _onNodeExpanded(nodeId, event) {\n    let node = this.widget.nodesMap[nodeId],\n      options = {\n        lazy: event.expandedLazy\n      };\n\n    let affectedNodesMap = objects.createMap();\n    affectedNodesMap[nodeId] = true;\n    if (event.recursive) {\n      Tree.visitNodes(n => {\n        affectedNodesMap[n.id] = true;\n      }, node.childNodes);\n    }\n    this.addFilterForWidgetEvent(widgetEvent => {\n      return widgetEvent.type === 'nodeExpanded' &&\n        affectedNodesMap[widgetEvent.node.id] &&\n        event.expanded === widgetEvent.expanded &&\n        event.expandedLazy === widgetEvent.expandedLazy;\n    });\n\n    this.widget.setNodeExpanded(node, event.expanded, options);\n    if (event.recursive) {\n      this.widget.setNodeExpandedRecursive(node.childNodes, event.expanded, options);\n    }\n  }\n\n  // noinspection DuplicatedCode\n  _onNodeChanged(nodeId, cell) {\n    let node = this.widget.nodesMap[nodeId];\n\n    defaultValues.applyTo(cell, 'TreeNode');\n    node.text = cell.text;\n    node.cssClass = cell.cssClass;\n    node.iconId = cell.iconId;\n    node.tooltipText = cell.tooltipText;\n    node.foregroundColor = cell.foregroundColor;\n    node.backgroundColor = cell.backgroundColor;\n    node.font = cell.font;\n    node.htmlEnabled = cell.htmlEnabled;\n\n    this.widget.changeNode(node);\n  }\n\n  _onNodesChecked(nodes) {\n    let checkedNodes = [],\n      uncheckedNodes = [];\n\n    nodes.forEach(function(nodeData) {\n      let node = this.widget._nodeById(nodeData.id);\n      if (nodeData.checked) {\n        checkedNodes.push(node);\n      } else {\n        uncheckedNodes.push(node);\n      }\n    }, this);\n\n    this.addFilterForWidgetEventType('nodesChecked');\n\n    this.widget.checkNodes(checkedNodes, {\n      checked: true,\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n    this.widget.uncheckNodes(uncheckedNodes, {\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n  }\n\n  _onChildNodeOrderChanged(childNodeIds, parentNodeId) {\n    let parentNode = this.widget._nodeById([parentNodeId]);\n    let nodes = this.widget._nodesByIds(childNodeIds);\n    this.widget.updateNodeOrder(nodes, parentNode);\n  }\n\n  _onRequestFocus() {\n    this.widget.focus();\n  }\n\n  _onScrollToSelection() {\n    this.widget.revealSelection();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}