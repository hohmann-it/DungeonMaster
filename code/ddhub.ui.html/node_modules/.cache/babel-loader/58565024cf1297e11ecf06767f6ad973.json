{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { LookupCall, objects, scout } from '../index';\nimport $ from 'jquery';\nexport default class HierarchicalLookupResultBuilder {\n  constructor(lookupCall) {\n    scout.assertParameter('lookupCall', lookupCall);\n    this.lookupCall = lookupCall;\n    this._lookupRowMap = {};\n  }\n\n  /**\n   * Load all parent nodes of the given lookup rows up to the root.\n   *\n   * @returns {Promise} a promise resolved to an array of {LookupRow}s\n   */\n  addParentLookupRows(lookupRows) {\n    this._fillMap(lookupRows);\n    let promises = lookupRows.map(this._addParent.bind(this));\n    return $.promiseAll(promises).then(() => {\n      return objects.values(this._lookupRowMap);\n    });\n  }\n\n  /**\n   * @returns {Promise}\n   */\n  _addParent(lookupRow) {\n    let key = lookupRow.parentKey;\n    if (!key) {\n      return $.resolvedPromise();\n    }\n\n    // parent already exists in map\n    if (this._lookupRowMap.hasOwnProperty(key)) {\n      lookupRow = this._lookupRowMap[key];\n      return this._addParent(lookupRow);\n    }\n\n    // load parent and add it to the map\n    return this.lookupCall.cloneForKey(key).execute().then(result => {\n      let lookupRow = LookupCall.firstLookupRow(result);\n      this._lookupRowMap[lookupRow.key] = lookupRow;\n      return this._addParent(lookupRow);\n    });\n  }\n  _fillMap(lookupRows) {\n    lookupRows.forEach(lookupRow => {\n      this._lookupRowMap[lookupRow.key] = lookupRow;\n    });\n  }\n\n  /**\n   * Load all parent child of the given lookup rows.\n   *\n   * @returns {Promise} a promise resolved to an array of {LookupRow}s\n   */\n  addChildLookupRows(lookupRows) {\n    this._fillMap(lookupRows);\n    let promises = lookupRows.map(this._addChildren.bind(this));\n    return $.promiseAll(promises).then(() => {\n      return objects.values(this._lookupRowMap);\n    });\n  }\n\n  /**\n   * @returns {Promise}\n   */\n  _addChildren(lookupRow) {\n    return this.lookupCall.cloneForRec(lookupRow.key).execute().then(result => {\n      if (result.lookupRows.length) {\n        return this.addChildLookupRows(result.lookupRows);\n      }\n    });\n  }\n}","map":{"version":3,"names":["LookupCall","objects","scout","$","HierarchicalLookupResultBuilder","constructor","lookupCall","assertParameter","_lookupRowMap","addParentLookupRows","lookupRows","_fillMap","promises","map","_addParent","bind","promiseAll","then","values","lookupRow","key","parentKey","resolvedPromise","hasOwnProperty","cloneForKey","execute","result","firstLookupRow","forEach","addChildLookupRows","_addChildren","cloneForRec","length"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/lookup/HierarchicalLookupResultBuilder.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {LookupCall, objects, scout} from '../index';\nimport $ from 'jquery';\n\nexport default class HierarchicalLookupResultBuilder {\n  constructor(lookupCall) {\n    scout.assertParameter('lookupCall', lookupCall);\n    this.lookupCall = lookupCall;\n\n    this._lookupRowMap = {};\n  }\n\n  /**\n   * Load all parent nodes of the given lookup rows up to the root.\n   *\n   * @returns {Promise} a promise resolved to an array of {LookupRow}s\n   */\n  addParentLookupRows(lookupRows) {\n    this._fillMap(lookupRows);\n\n    let promises = lookupRows.map(this._addParent.bind(this));\n    return $.promiseAll(promises)\n      .then(() => {\n        return objects.values(this._lookupRowMap);\n      });\n  }\n\n  /**\n   * @returns {Promise}\n   */\n  _addParent(lookupRow) {\n    let key = lookupRow.parentKey;\n\n    if (!key) {\n      return $.resolvedPromise();\n    }\n\n    // parent already exists in map\n    if (this._lookupRowMap.hasOwnProperty(key)) {\n      lookupRow = this._lookupRowMap[key];\n      return this._addParent(lookupRow);\n    }\n\n    // load parent and add it to the map\n    return this.lookupCall\n      .cloneForKey(key)\n      .execute()\n      .then(result => {\n        let lookupRow = LookupCall.firstLookupRow(result);\n        this._lookupRowMap[lookupRow.key] = lookupRow;\n        return this._addParent(lookupRow);\n      });\n  }\n\n  _fillMap(lookupRows) {\n    lookupRows.forEach(lookupRow => {\n      this._lookupRowMap[lookupRow.key] = lookupRow;\n    });\n  }\n\n  /**\n   * Load all parent child of the given lookup rows.\n   *\n   * @returns {Promise} a promise resolved to an array of {LookupRow}s\n   */\n  addChildLookupRows(lookupRows) {\n    this._fillMap(lookupRows);\n\n    let promises = lookupRows.map(this._addChildren.bind(this));\n    return $.promiseAll(promises)\n      .then(() => {\n        return objects.values(this._lookupRowMap);\n      });\n  }\n\n  /**\n   * @returns {Promise}\n   */\n  _addChildren(lookupRow) {\n    return this.lookupCall\n      .cloneForRec(lookupRow.key)\n      .execute()\n      .then(result => {\n        if (result.lookupRows.length) {\n          return this.addChildLookupRows(result.lookupRows);\n        }\n      });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAO,UAAU;AACnD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,+BAA+B,CAAC;EACnDC,WAAW,CAACC,UAAU,EAAE;IACtBJ,KAAK,CAACK,eAAe,CAAC,YAAY,EAAED,UAAU,CAAC;IAC/C,IAAI,CAACA,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACE,aAAa,GAAG,CAAC,CAAC;EACzB;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmB,CAACC,UAAU,EAAE;IAC9B,IAAI,CAACC,QAAQ,CAACD,UAAU,CAAC;IAEzB,IAAIE,QAAQ,GAAGF,UAAU,CAACG,GAAG,CAAC,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzD,OAAOZ,CAAC,CAACa,UAAU,CAACJ,QAAQ,CAAC,CAC1BK,IAAI,CAAC,MAAM;MACV,OAAOhB,OAAO,CAACiB,MAAM,CAAC,IAAI,CAACV,aAAa,CAAC;IAC3C,CAAC,CAAC;EACN;;EAEA;AACF;AACA;EACEM,UAAU,CAACK,SAAS,EAAE;IACpB,IAAIC,GAAG,GAAGD,SAAS,CAACE,SAAS;IAE7B,IAAI,CAACD,GAAG,EAAE;MACR,OAAOjB,CAAC,CAACmB,eAAe,EAAE;IAC5B;;IAEA;IACA,IAAI,IAAI,CAACd,aAAa,CAACe,cAAc,CAACH,GAAG,CAAC,EAAE;MAC1CD,SAAS,GAAG,IAAI,CAACX,aAAa,CAACY,GAAG,CAAC;MACnC,OAAO,IAAI,CAACN,UAAU,CAACK,SAAS,CAAC;IACnC;;IAEA;IACA,OAAO,IAAI,CAACb,UAAU,CACnBkB,WAAW,CAACJ,GAAG,CAAC,CAChBK,OAAO,EAAE,CACTR,IAAI,CAACS,MAAM,IAAI;MACd,IAAIP,SAAS,GAAGnB,UAAU,CAAC2B,cAAc,CAACD,MAAM,CAAC;MACjD,IAAI,CAAClB,aAAa,CAACW,SAAS,CAACC,GAAG,CAAC,GAAGD,SAAS;MAC7C,OAAO,IAAI,CAACL,UAAU,CAACK,SAAS,CAAC;IACnC,CAAC,CAAC;EACN;EAEAR,QAAQ,CAACD,UAAU,EAAE;IACnBA,UAAU,CAACkB,OAAO,CAACT,SAAS,IAAI;MAC9B,IAAI,CAACX,aAAa,CAACW,SAAS,CAACC,GAAG,CAAC,GAAGD,SAAS;IAC/C,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEU,kBAAkB,CAACnB,UAAU,EAAE;IAC7B,IAAI,CAACC,QAAQ,CAACD,UAAU,CAAC;IAEzB,IAAIE,QAAQ,GAAGF,UAAU,CAACG,GAAG,CAAC,IAAI,CAACiB,YAAY,CAACf,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,OAAOZ,CAAC,CAACa,UAAU,CAACJ,QAAQ,CAAC,CAC1BK,IAAI,CAAC,MAAM;MACV,OAAOhB,OAAO,CAACiB,MAAM,CAAC,IAAI,CAACV,aAAa,CAAC;IAC3C,CAAC,CAAC;EACN;;EAEA;AACF;AACA;EACEsB,YAAY,CAACX,SAAS,EAAE;IACtB,OAAO,IAAI,CAACb,UAAU,CACnByB,WAAW,CAACZ,SAAS,CAACC,GAAG,CAAC,CAC1BK,OAAO,EAAE,CACTR,IAAI,CAACS,MAAM,IAAI;MACd,IAAIA,MAAM,CAAChB,UAAU,CAACsB,MAAM,EAAE;QAC5B,OAAO,IAAI,CAACH,kBAAkB,CAACH,MAAM,CAAChB,UAAU,CAAC;MACnD;IACF,CAAC,CAAC;EACN;AACF"},"metadata":{},"sourceType":"module"}