{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, HtmlComponent, scout, scrollbars } from '../../../index';\nexport default class ProposalChooserLayout extends AbstractLayout {\n  constructor(proposalChooser) {\n    super();\n    this._proposalChooser = proposalChooser;\n    this._typeHandler = this._createTypeHandler(proposalChooser);\n  }\n\n  /**\n   * This factory creates type handlers for the various proposal types. By default we support Table and Tree.\n   * If one must support other types, a LayoutResetter class must be implemented for that type.\n   */\n  _createTypeHandler(proposalChooser) {\n    let handlerObjectType = proposalChooser.model.objectType + 'LayoutResetter';\n    return scout.create(handlerObjectType, proposalChooser.model);\n  }\n  layout($container) {\n    let filterPrefSize,\n      htmlContainer = HtmlComponent.get($container),\n      htmlComp = HtmlComponent.get($container.children(this._typeHandler.cssSelector)),\n      size = htmlContainer.size().subtract(htmlContainer.insets()),\n      $status = this._proposalChooser.$status,\n      hasStatus = $status && $status.isVisible(),\n      filter = this._proposalChooser.activeFilterGroup;\n    if (hasStatus) {\n      size.height -= graphics.size($status).height;\n    }\n    if (filter) {\n      filterPrefSize = filter.htmlComp.prefSize();\n      size.height -= filterPrefSize.height;\n    }\n    htmlComp.setSize(size);\n    if (filter) {\n      filter.htmlComp.setSize(new Dimension(size.width, filterPrefSize.height));\n    }\n  }\n\n  /**\n   * This preferred size implementation modifies the DIV where the table/tree is rendered\n   * in a way the DIV does not limit the size of the table/tree. Thus we can read the preferred\n   * size of the table/tree. After that the original width and height is restored.\n   */\n  preferredLayoutSize($container, options) {\n    let oldDisplay,\n      prefSize,\n      modelSize,\n      statusSize,\n      filterPrefSize,\n      pcWidth,\n      pcHeight,\n      htmlComp = this._proposalChooser.htmlComp,\n      $status = this._proposalChooser.$status,\n      filter = this._proposalChooser.activeFilterGroup,\n      $parent = $container.parent();\n    modelSize = this._proposalChooser.model.htmlComp.prefSize(options);\n    prefSize = modelSize;\n    scrollbars.storeScrollPositions($container, this._proposalChooser.session);\n\n    // pref size of table and tree don't return accurate values for width -> measure width\n    pcWidth = $container.css('width');\n    pcHeight = $container.css('height');\n    $container.detach();\n    this._typeHandler.modifyDom();\n    $container.css('display', 'inline-block').css('width', 'auto').css('height', 'auto');\n    $parent.append($container);\n    modelSize.width = graphics.prefSize($container, {\n      restoreScrollPositions: false\n    }).width;\n    $container.detach();\n    this._typeHandler.restoreDom();\n    $container.css('display', 'block').css('width', pcWidth).css('height', pcHeight);\n    $parent.append($container);\n    scrollbars.restoreScrollPositions($container, this._proposalChooser.session);\n    if ($status && $status.isVisible()) {\n      oldDisplay = $status.css('display');\n      $status.css('display', 'inline-block');\n      statusSize = graphics.prefSize($status, {\n        includeMargin: true,\n        useCssSize: true\n      });\n      $status.css('display', oldDisplay);\n      prefSize = new Dimension(Math.max(prefSize.width, statusSize.width), prefSize.height + statusSize.height);\n    }\n    if (filter) {\n      filterPrefSize = filter.htmlComp.prefSize();\n      prefSize = new Dimension(Math.max(prefSize.width, filterPrefSize.width), prefSize.height + filterPrefSize.height);\n    }\n    $container.toggleClass('empty', modelSize.height === 0);\n    return prefSize.add(htmlComp.insets());\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","graphics","HtmlComponent","scout","scrollbars","ProposalChooserLayout","constructor","proposalChooser","_proposalChooser","_typeHandler","_createTypeHandler","handlerObjectType","model","objectType","create","layout","$container","filterPrefSize","htmlContainer","get","htmlComp","children","cssSelector","size","subtract","insets","$status","hasStatus","isVisible","filter","activeFilterGroup","height","prefSize","setSize","width","preferredLayoutSize","options","oldDisplay","modelSize","statusSize","pcWidth","pcHeight","$parent","parent","storeScrollPositions","session","css","detach","modifyDom","append","restoreScrollPositions","restoreDom","includeMargin","useCssSize","Math","max","toggleClass","add"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/smartfield/ProposalChooserLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, HtmlComponent, scout, scrollbars} from '../../../index';\n\nexport default class ProposalChooserLayout extends AbstractLayout {\n\n  constructor(proposalChooser) {\n    super();\n    this._proposalChooser = proposalChooser;\n    this._typeHandler = this._createTypeHandler(proposalChooser);\n  }\n\n  /**\n   * This factory creates type handlers for the various proposal types. By default we support Table and Tree.\n   * If one must support other types, a LayoutResetter class must be implemented for that type.\n   */\n  _createTypeHandler(proposalChooser) {\n    let handlerObjectType = proposalChooser.model.objectType + 'LayoutResetter';\n    return scout.create(handlerObjectType, proposalChooser.model);\n  }\n\n  layout($container) {\n    let filterPrefSize,\n      htmlContainer = HtmlComponent.get($container),\n      htmlComp = HtmlComponent.get($container.children(this._typeHandler.cssSelector)),\n      size = htmlContainer.size().subtract(htmlContainer.insets()),\n      $status = this._proposalChooser.$status,\n      hasStatus = $status && $status.isVisible(),\n      filter = this._proposalChooser.activeFilterGroup;\n\n    if (hasStatus) {\n      size.height -= graphics.size($status).height;\n    }\n    if (filter) {\n      filterPrefSize = filter.htmlComp.prefSize();\n      size.height -= filterPrefSize.height;\n    }\n    htmlComp.setSize(size);\n\n    if (filter) {\n      filter.htmlComp.setSize(new Dimension(size.width, filterPrefSize.height));\n    }\n  }\n\n  /**\n   * This preferred size implementation modifies the DIV where the table/tree is rendered\n   * in a way the DIV does not limit the size of the table/tree. Thus we can read the preferred\n   * size of the table/tree. After that the original width and height is restored.\n   */\n  preferredLayoutSize($container, options) {\n    let oldDisplay, prefSize, modelSize, statusSize, filterPrefSize,\n      pcWidth, pcHeight,\n      htmlComp = this._proposalChooser.htmlComp,\n      $status = this._proposalChooser.$status,\n      filter = this._proposalChooser.activeFilterGroup,\n      $parent = $container.parent();\n\n    modelSize = this._proposalChooser.model.htmlComp.prefSize(options);\n    prefSize = modelSize;\n    scrollbars.storeScrollPositions($container, this._proposalChooser.session);\n\n    // pref size of table and tree don't return accurate values for width -> measure width\n    pcWidth = $container.css('width');\n    pcHeight = $container.css('height');\n\n    $container.detach();\n    this._typeHandler.modifyDom();\n    $container\n      .css('display', 'inline-block')\n      .css('width', 'auto')\n      .css('height', 'auto');\n    $parent.append($container);\n    modelSize.width = graphics.prefSize($container, {\n      restoreScrollPositions: false\n    }).width;\n\n    $container.detach();\n    this._typeHandler.restoreDom();\n    $container\n      .css('display', 'block')\n      .css('width', pcWidth)\n      .css('height', pcHeight);\n    $parent.append($container);\n    scrollbars.restoreScrollPositions($container, this._proposalChooser.session);\n\n    if ($status && $status.isVisible()) {\n      oldDisplay = $status.css('display');\n      $status.css('display', 'inline-block');\n      statusSize = graphics.prefSize($status, {\n        includeMargin: true,\n        useCssSize: true\n      });\n      $status.css('display', oldDisplay);\n      prefSize = new Dimension(Math.max(prefSize.width, statusSize.width), prefSize.height + statusSize.height);\n    }\n\n    if (filter) {\n      filterPrefSize = filter.htmlComp.prefSize();\n      prefSize = new Dimension(Math.max(prefSize.width, filterPrefSize.width), prefSize.height + filterPrefSize.height);\n    }\n\n    $container.toggleClass('empty', modelSize.height === 0);\n    return prefSize.add(htmlComp.insets());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}