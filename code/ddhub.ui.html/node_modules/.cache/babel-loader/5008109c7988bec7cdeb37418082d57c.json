{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class Route {\n  constructor() {\n    this.location = null;\n  }\n\n  /**\n   * @returns {boolean} Whether or not this instance can handle the given location.\n   *\n   * @param {string} location\n   */\n  matches(location) {\n    return false;\n  }\n\n  /**\n   * Called when the route is activated, stores the given location as instance variable.\n   * This is useful for the case where a single instance of Route handles multiple locations.\n   *\n   * @param {string} location\n   */\n  activate(location) {\n    this.location = location;\n  }\n\n  /**\n   * Called when route is deactivated because another route is activated. This is the place\n   * to perform clean-up operations.\n   */\n  deactivate() {}\n}","map":{"version":3,"names":["Route","constructor","location","matches","activate","deactivate"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/router/Route.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class Route {\n\n  constructor() {\n    this.location = null;\n  }\n\n  /**\n   * @returns {boolean} Whether or not this instance can handle the given location.\n   *\n   * @param {string} location\n   */\n  matches(location) {\n    return false;\n  }\n\n  /**\n   * Called when the route is activated, stores the given location as instance variable.\n   * This is useful for the case where a single instance of Route handles multiple locations.\n   *\n   * @param {string} location\n   */\n  activate(location) {\n    this.location = location;\n  }\n\n  /**\n   * Called when route is deactivated because another route is activated. This is the place\n   * to perform clean-up operations.\n   */\n  deactivate() {\n\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,KAAK,CAAC;EAEzBC,WAAW,GAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;;EAEA;AACF;AACA;AACA;AACA;EACEC,OAAO,CAACD,QAAQ,EAAE;IAChB,OAAO,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEE,QAAQ,CAACF,QAAQ,EAAE;IACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;;EAEA;AACF;AACA;AACA;EACEG,UAAU,GAAG,CAEb;AACF"},"metadata":{},"sourceType":"module"}