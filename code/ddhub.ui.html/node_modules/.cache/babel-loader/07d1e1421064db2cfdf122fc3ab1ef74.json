{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, keys } from '../../index';\nexport default class TableNavigationExpandKeyStroke extends AbstractTableNavigationKeyStroke {\n  constructor(table) {\n    super(table);\n    this.field = table;\n    this.which = [keys.ADD, keys.RIGHT];\n    this.renderingHints.text = '+';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.field.selectedRows[0];\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n  _accept(event) {\n    let accepted = super._accept(event),\n      selectedRow = this.field.selectedRows[0];\n    if (!accepted) {\n      return false;\n    }\n    if (!selectedRow) {\n      return false;\n    }\n    return selectedRow._expandable;\n  }\n  handle(event) {\n    let table = this.field,\n      selectedRow = this.field.selectedRows[0],\n      visibleChildRows;\n    if (!selectedRow) {\n      return;\n    }\n    if (selectedRow._expandable) {\n      if (selectedRow.expanded) {\n        // select first child\n        visibleChildRows = this.field.visibleChildRows(selectedRow);\n        table.selectRow(visibleChildRows[0]);\n        table.selectionHandler.lastActionRow = visibleChildRows[0];\n      } else {\n        // expand\n        table.expandRow(selectedRow);\n      }\n      if (!table.isFocused()) {\n        table.focus();\n      }\n    }\n  }\n}","map":{"version":3,"names":["AbstractTableNavigationKeyStroke","keys","TableNavigationExpandKeyStroke","constructor","table","field","which","ADD","RIGHT","renderingHints","text","$drawingArea","event","row","selectedRows","$row","_accept","accepted","selectedRow","_expandable","handle","visibleChildRows","expanded","selectRow","selectionHandler","lastActionRow","expandRow","isFocused","focus"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationExpandKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, keys} from '../../index';\n\nexport default class TableNavigationExpandKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.field = table;\n    this.which = [keys.ADD, keys.RIGHT];\n    this.renderingHints.text = '+';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.field.selectedRows[0];\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event),\n      selectedRow = this.field.selectedRows[0];\n    if (!accepted) {\n      return false;\n    }\n    if (!selectedRow) {\n      return false;\n    }\n    return selectedRow._expandable;\n  }\n\n  handle(event) {\n    let table = this.field,\n      selectedRow = this.field.selectedRows[0],\n      visibleChildRows;\n    if (!selectedRow) {\n      return;\n    }\n    if (selectedRow._expandable) {\n      if (selectedRow.expanded) {\n        // select first child\n        visibleChildRows = this.field.visibleChildRows(selectedRow);\n        table.selectRow(visibleChildRows[0]);\n        table.selectionHandler.lastActionRow = visibleChildRows[0];\n      } else {\n        // expand\n        table.expandRow(selectedRow);\n      }\n      if (!table.isFocused()) {\n        table.focus();\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gCAAgC,EAAEC,IAAI,QAAO,aAAa;AAElE,eAAe,MAAMC,8BAA8B,SAASF,gCAAgC,CAAC;EAE3FG,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAGD,KAAK;IAClB,IAAI,CAACE,KAAK,GAAG,CAACL,IAAI,CAACM,GAAG,EAAEN,IAAI,CAACO,KAAK,CAAC;IACnC,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACD,cAAc,CAACE,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,GAAG,GAAG,IAAI,CAACR,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;MACpC,IAAID,GAAG,EAAE;QACP,OAAOA,GAAG,CAACE,IAAI;MACjB;IACF,CAAC;EACH;EAEAC,OAAO,CAACJ,KAAK,EAAE;IACb,IAAIK,QAAQ,GAAG,KAAK,CAACD,OAAO,CAACJ,KAAK,CAAC;MACjCM,WAAW,GAAG,IAAI,CAACb,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACG,QAAQ,EAAE;MACb,OAAO,KAAK;IACd;IACA,IAAI,CAACC,WAAW,EAAE;MAChB,OAAO,KAAK;IACd;IACA,OAAOA,WAAW,CAACC,WAAW;EAChC;EAEAC,MAAM,CAACR,KAAK,EAAE;IACZ,IAAIR,KAAK,GAAG,IAAI,CAACC,KAAK;MACpBa,WAAW,GAAG,IAAI,CAACb,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;MACxCO,gBAAgB;IAClB,IAAI,CAACH,WAAW,EAAE;MAChB;IACF;IACA,IAAIA,WAAW,CAACC,WAAW,EAAE;MAC3B,IAAID,WAAW,CAACI,QAAQ,EAAE;QACxB;QACAD,gBAAgB,GAAG,IAAI,CAAChB,KAAK,CAACgB,gBAAgB,CAACH,WAAW,CAAC;QAC3Dd,KAAK,CAACmB,SAAS,CAACF,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpCjB,KAAK,CAACoB,gBAAgB,CAACC,aAAa,GAAGJ,gBAAgB,CAAC,CAAC,CAAC;MAC5D,CAAC,MAAM;QACL;QACAjB,KAAK,CAACsB,SAAS,CAACR,WAAW,CAAC;MAC9B;MACA,IAAI,CAACd,KAAK,CAACuB,SAAS,EAAE,EAAE;QACtBvB,KAAK,CAACwB,KAAK,EAAE;MACf;IACF;EACF;AACF"},"metadata":{},"sourceType":"module"}