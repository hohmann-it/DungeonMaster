{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Action, Button, Menu } from '../index';\nexport default class ButtonAdapterMenu extends Menu {\n  constructor() {\n    super();\n    this._removeWidgetProperties('childActions'); // managed by button\n\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n    this._buttonDestroyHandler = this._onButtonDestroy.bind(this);\n    this._addCloneProperties(['button']);\n    this.button = null;\n    this.menubar = null;\n  }\n\n  /**\n   * @override Action.js\n   */\n  _init(model) {\n    super._init(model);\n    if (!this.button) {\n      throw new Error('Cannot adapt to undefined button');\n    }\n    this.button.adaptedBy = this;\n    this._installListeners();\n  }\n  _destroy() {\n    super._destroy();\n    delete this.button.adaptedBy;\n  }\n  _installListeners() {\n    this.button.on('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.on('destroy', this._buttonDestroyHandler);\n  }\n  _uninstallListeners() {\n    this.button.off('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.off('destroy', this._buttonDestroyHandler);\n  }\n  _render() {\n    super._render();\n    // Convenience: Add ID of original button to DOM for debugging purposes\n    this.$container.attr('data-buttonadapter', this.button.id);\n  }\n  _onButtonPropertyChange(event) {\n    // Whenever a button property changes, apply the changes to the menu\n    let changedProperties = {};\n    changedProperties[event.propertyName] = event.newValue;\n    changedProperties = ButtonAdapterMenu.adaptButtonProperties(changedProperties);\n    for (let prop in changedProperties) {\n      // NOSONAR\n      // Set the property (don't use callSetter because this may delegate to the button)\n      this.setProperty(prop, changedProperties[prop]);\n    }\n  }\n  _onButtonDestroy(event) {\n    this.destroy();\n    this._uninstallListeners();\n  }\n\n  /**\n   * @override Action.js\n   */\n  doAction() {\n    if (this.childActions.length > 0) {\n      // Popup menu is handled by this menu itself\n      return super.doAction();\n    }\n\n    // Everything else is delegated to the button\n    let actionExecuted = this.button.doAction();\n    if (actionExecuted) {\n      if (this.isToggleAction()) {\n        this.setSelected(!this.selected);\n      }\n      this._doAction();\n    }\n    return actionExecuted;\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (!this.rendered) {\n      this.session.layoutValidator.schedulePostValidateFunction(this.focus.bind(this));\n      return false;\n    }\n    this.menubar.setTabbableMenu(this);\n    return this.session.focusManager.requestFocus(this.getFocusableElement());\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * @memberOf ButtonAdapterMenu\n   */\n  static adaptButtonProperties(buttonProperties, menuProperties) {\n    menuProperties = menuProperties || {};\n\n    // Plain properties: simply copy, no translation required\n    ['visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'cssClass', 'modelClass', 'classId', 'iconId', 'preventDoubleClick', 'enabled', 'inheritAccessibility', 'stackable', 'shrinkable'].forEach(prop => {\n      menuProperties[prop] = buttonProperties[prop];\n    });\n\n    // Properties requiring special handling (non-trivial mapping)\n    menuProperties.text = buttonProperties.label;\n    menuProperties.textPosition = labelPositionToTextPosition(buttonProperties.labelPosition);\n    menuProperties.horizontalAlignment = buttonProperties.gridData ? buttonProperties.gridData.horizontalAlignment : undefined;\n    menuProperties.actionStyle = buttonStyleToActionStyle(buttonProperties.displayStyle);\n    menuProperties.toggleAction = buttonProperties.displayStyle === Button.DisplayStyle.TOGGLE;\n    menuProperties.childActions = buttonProperties.menus;\n    if (menuProperties.defaultMenu === undefined) {\n      // buttonProperties.defaultButton property is only mapped if it is true, false should not be mapped as the default defaultMenu = null setting\n      // would be overridden if this default null setting is overridden MenuBar.prototype.updateDefaultMenu would not consider these entries anymore\n      // on actual property changes defaultMenu will always be undefined which always maps the defaultButton property to the defaultMenu property\n      menuProperties.defaultMenu = buttonProperties.defaultButton;\n    }\n\n    // Cleanup: Remove all properties that have value 'undefined' from the result object,\n    // otherwise, they would be applied to the model adapter.\n    for (let prop in menuProperties) {\n      if (menuProperties[prop] === undefined) {\n        delete menuProperties[prop];\n      }\n    }\n    return menuProperties;\n\n    // ----- Helper functions -----\n\n    function buttonStyleToActionStyle(buttonStyle) {\n      if (buttonStyle === undefined) {\n        return undefined;\n      }\n      if (buttonStyle === Button.DisplayStyle.LINK) {\n        return Action.ActionStyle.DEFAULT;\n      }\n      return Action.ActionStyle.BUTTON;\n    }\n    function labelPositionToTextPosition(labelPosition) {\n      if (labelPosition === undefined) {\n        return undefined;\n      }\n      if (labelPosition === Button.LabelPosition.BOTTOM) {\n        return Action.TextPosition.BOTTOM;\n      }\n      return Action.TextPosition.DEFAULT;\n    }\n  }\n}","map":{"version":3,"names":["Action","Button","Menu","ButtonAdapterMenu","constructor","_removeWidgetProperties","_buttonPropertyChangeHandler","_onButtonPropertyChange","bind","_buttonDestroyHandler","_onButtonDestroy","_addCloneProperties","button","menubar","_init","model","Error","adaptedBy","_installListeners","_destroy","on","_uninstallListeners","off","_render","$container","attr","id","event","changedProperties","propertyName","newValue","adaptButtonProperties","prop","setProperty","destroy","doAction","childActions","length","actionExecuted","isToggleAction","setSelected","selected","_doAction","focus","rendered","session","layoutValidator","schedulePostValidateFunction","setTabbableMenu","focusManager","requestFocus","getFocusableElement","buttonProperties","menuProperties","forEach","text","label","textPosition","labelPositionToTextPosition","labelPosition","horizontalAlignment","gridData","undefined","actionStyle","buttonStyleToActionStyle","displayStyle","toggleAction","DisplayStyle","TOGGLE","menus","defaultMenu","defaultButton","buttonStyle","LINK","ActionStyle","DEFAULT","BUTTON","LabelPosition","BOTTOM","TextPosition"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/menu/ButtonAdapterMenu.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Action, Button, Menu} from '../index';\n\nexport default class ButtonAdapterMenu extends Menu {\n  constructor() {\n    super();\n    this._removeWidgetProperties('childActions'); // managed by button\n\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n    this._buttonDestroyHandler = this._onButtonDestroy.bind(this);\n\n    this._addCloneProperties(['button']);\n    this.button = null;\n    this.menubar = null;\n  }\n\n  /**\n   * @override Action.js\n   */\n  _init(model) {\n    super._init(model);\n    if (!this.button) {\n      throw new Error('Cannot adapt to undefined button');\n    }\n    this.button.adaptedBy = this;\n    this._installListeners();\n  }\n\n  _destroy() {\n    super._destroy();\n    delete this.button.adaptedBy;\n  }\n\n  _installListeners() {\n    this.button.on('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.on('destroy', this._buttonDestroyHandler);\n  }\n\n  _uninstallListeners() {\n    this.button.off('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.off('destroy', this._buttonDestroyHandler);\n  }\n\n  _render() {\n    super._render();\n    // Convenience: Add ID of original button to DOM for debugging purposes\n    this.$container.attr('data-buttonadapter', this.button.id);\n  }\n\n  _onButtonPropertyChange(event) {\n    // Whenever a button property changes, apply the changes to the menu\n    let changedProperties = {};\n    changedProperties[event.propertyName] = event.newValue;\n    changedProperties = ButtonAdapterMenu.adaptButtonProperties(changedProperties);\n    for (let prop in changedProperties) { // NOSONAR\n      // Set the property (don't use callSetter because this may delegate to the button)\n      this.setProperty(prop, changedProperties[prop]);\n    }\n  }\n\n  _onButtonDestroy(event) {\n    this.destroy();\n    this._uninstallListeners();\n  }\n\n  /**\n   * @override Action.js\n   */\n  doAction() {\n    if (this.childActions.length > 0) {\n      // Popup menu is handled by this menu itself\n      return super.doAction();\n    }\n\n    // Everything else is delegated to the button\n    let actionExecuted = this.button.doAction();\n    if (actionExecuted) {\n      if (this.isToggleAction()) {\n        this.setSelected(!this.selected);\n      }\n      this._doAction();\n    }\n    return actionExecuted;\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (!this.rendered) {\n      this.session.layoutValidator.schedulePostValidateFunction(this.focus.bind(this));\n      return false;\n    }\n    this.menubar.setTabbableMenu(this);\n    return this.session.focusManager.requestFocus(this.getFocusableElement());\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * @memberOf ButtonAdapterMenu\n   */\n  static adaptButtonProperties(buttonProperties, menuProperties) {\n    menuProperties = menuProperties || {};\n\n    // Plain properties: simply copy, no translation required\n    ['visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'cssClass', 'modelClass', 'classId', 'iconId', 'preventDoubleClick', 'enabled', 'inheritAccessibility', 'stackable', 'shrinkable'].forEach(prop => {\n      menuProperties[prop] = buttonProperties[prop];\n    });\n\n    // Properties requiring special handling (non-trivial mapping)\n    menuProperties.text = buttonProperties.label;\n    menuProperties.textPosition = labelPositionToTextPosition(buttonProperties.labelPosition);\n    menuProperties.horizontalAlignment = buttonProperties.gridData ? buttonProperties.gridData.horizontalAlignment : undefined;\n    menuProperties.actionStyle = buttonStyleToActionStyle(buttonProperties.displayStyle);\n    menuProperties.toggleAction = buttonProperties.displayStyle === Button.DisplayStyle.TOGGLE;\n    menuProperties.childActions = buttonProperties.menus;\n    if (menuProperties.defaultMenu === undefined) {\n      // buttonProperties.defaultButton property is only mapped if it is true, false should not be mapped as the default defaultMenu = null setting\n      // would be overridden if this default null setting is overridden MenuBar.prototype.updateDefaultMenu would not consider these entries anymore\n      // on actual property changes defaultMenu will always be undefined which always maps the defaultButton property to the defaultMenu property\n      menuProperties.defaultMenu = buttonProperties.defaultButton;\n    }\n\n    // Cleanup: Remove all properties that have value 'undefined' from the result object,\n    // otherwise, they would be applied to the model adapter.\n    for (let prop in menuProperties) {\n      if (menuProperties[prop] === undefined) {\n        delete menuProperties[prop];\n      }\n    }\n    return menuProperties;\n\n    // ----- Helper functions -----\n\n    function buttonStyleToActionStyle(buttonStyle) {\n      if (buttonStyle === undefined) {\n        return undefined;\n      }\n      if (buttonStyle === Button.DisplayStyle.LINK) {\n        return Action.ActionStyle.DEFAULT;\n      }\n      return Action.ActionStyle.BUTTON;\n    }\n\n    function labelPositionToTextPosition(labelPosition) {\n      if (labelPosition === undefined) {\n        return undefined;\n      }\n      if (labelPosition === Button.LabelPosition.BOTTOM) {\n        return Action.TextPosition.BOTTOM;\n      }\n      return Action.TextPosition.DEFAULT;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}