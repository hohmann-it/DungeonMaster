{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { HtmlComponent, OutlineViewButton, scout, Widget, widgets } from '../../index';\nexport default class ViewButtonBox extends Widget {\n  constructor() {\n    super();\n    this.viewMenuTab = null;\n    this.viewButtons = [];\n    this.menuButtons = [];\n    this.tabButtons = [];\n    this._desktopOutlineChangeHandler = this._onDesktopOutlineChange.bind(this);\n    this._viewButtonPropertyChangeHandler = this._onViewButtonPropertyChange.bind(this);\n    this.selectedMenuButtonAlwaysVisible = false;\n    this._addWidgetProperties(['viewButtons']);\n  }\n  _init(model) {\n    super._init(model);\n    this.desktop = this.session.desktop;\n    this.viewMenuTab = scout.create('ViewMenuTab', {\n      parent: this\n    });\n    this._setViewButtons(this.viewButtons);\n    this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('view-button-box');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.viewMenuTab.render();\n    this._onDesktopOutlineChange();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTabButtons();\n  }\n  _remove() {\n    this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n    this.viewButtons.forEach(viewButton => viewButton.off('selected', this._viewButtonPropertyChangeHandler));\n    super._remove();\n  }\n  setSelectedMenuButtonVisible(selectedMenuButtonVisible) {\n    this.viewMenuTab.setSelectedButtonVisible(selectedMenuButtonVisible);\n  }\n  setSelectedMenuButtonAlwaysVisible(selectedMenuButtonAlwaysVisible) {\n    this.setProperty('selectedMenuButtonAlwaysVisible', selectedMenuButtonAlwaysVisible);\n  }\n  _setSelectedMenuButtonAlwaysVisible(selectedMenuButtonAlwaysVisible) {\n    this._updateSelectedMenuButtonVisibility();\n  }\n  setViewButtons(viewButtons) {\n    this.setProperty('viewButtons', viewButtons);\n  }\n  _setViewButtons(viewButtons) {\n    if (this.viewButtons) {\n      this.viewButtons.forEach(viewButton => viewButton.off('propertyChange', this._viewButtonPropertyChangeHandler));\n    }\n    this._setProperty('viewButtons', viewButtons);\n    this.viewButtons.forEach(viewButton => viewButton.on('propertyChange', this._viewButtonPropertyChangeHandler));\n    this._updateViewButtons();\n  }\n  _setTabButtons(tabButtons) {\n    this._setProperty('tabButtons', tabButtons);\n  }\n  _removeTabButtons() {\n    this.tabButtons.forEach(button => button.remove());\n  }\n  _renderTabButtons() {\n    this.tabButtons.forEach((viewTab, i) => viewTab.renderAsTab(this.$container));\n    widgets.updateFirstLastMarker(this.tabButtons);\n  }\n  _updateViewButtons() {\n    let viewButtons = this.viewButtons.filter(b => b.visible);\n    let menuButtons = viewButtons.filter(b => b.displayStyle === 'MENU');\n    let tabButtons = null;\n    // render as tab if length is < 1\n    if (menuButtons.length > 1) {\n      tabButtons = viewButtons.filter(b => b.displayStyle === 'TAB');\n    } else {\n      // all visible view buttons are rendered as tab\n      tabButtons = viewButtons;\n      menuButtons = [];\n    }\n    this._setMenuButtons(menuButtons);\n    if (this.rendered) {\n      this._removeTabButtons();\n    }\n    this._setTabButtons(tabButtons);\n    if (this.rendered) {\n      this._renderTabButtons();\n    }\n    this._updateVisibility();\n    this._updateSelectedMenuButtonVisibility();\n  }\n  _updateVisibility(menuButtons) {\n    this.setVisible(this.tabButtons.length + this.menuButtons.length > 1);\n  }\n  _setMenuButtons(menuButtons) {\n    this._setProperty('menuButtons', menuButtons);\n    this.viewMenuTab.setViewButtons(this.menuButtons);\n  }\n  _updateSelectedMenuButtonVisibility() {\n    this.setSelectedMenuButtonVisible(this.selectedMenuButtonAlwaysVisible || this.tabButtons.length >= 1 && this.menuButtons.length >= 1);\n  }\n\n  /**\n   * This method updates the state of the view-menu-tab and the selected state of outline-view-button-box.\n   * This method must also work in offline mode.\n   */\n  _onDesktopOutlineChange(event) {\n    let outline = this.desktop.outline;\n    this.viewButtons.forEach(viewTab => {\n      if (viewTab instanceof OutlineViewButton) {\n        viewTab.onOutlineChange(outline);\n      }\n    });\n  }\n  _onViewButtonSelected(event) {\n    // Deselect other toggleable view buttons\n    this.viewButtons.forEach(viewButton => {\n      if (viewButton !== event.source && viewButton.isToggleAction()) {\n        viewButton.setSelected(false);\n      }\n    });\n\n    // Inform viewMenu tab about new selection\n    this.viewMenuTab.onViewButtonSelected();\n  }\n  _onViewButtonPropertyChange(event) {\n    if (event.propertyName === 'selected') {\n      this._onViewButtonSelected(event);\n    } else if (event.propertyName === 'visible' || event.propertyName === 'displayStyle') {\n      this._updateViewButtons();\n    }\n  }\n}","map":{"version":3,"names":["HtmlComponent","OutlineViewButton","scout","Widget","widgets","ViewButtonBox","constructor","viewMenuTab","viewButtons","menuButtons","tabButtons","_desktopOutlineChangeHandler","_onDesktopOutlineChange","bind","_viewButtonPropertyChangeHandler","_onViewButtonPropertyChange","selectedMenuButtonAlwaysVisible","_addWidgetProperties","_init","model","desktop","session","create","parent","_setViewButtons","on","_render","$container","$parent","appendDiv","htmlComp","install","render","_renderProperties","_renderTabButtons","_remove","off","forEach","viewButton","setSelectedMenuButtonVisible","selectedMenuButtonVisible","setSelectedButtonVisible","setSelectedMenuButtonAlwaysVisible","setProperty","_setSelectedMenuButtonAlwaysVisible","_updateSelectedMenuButtonVisibility","setViewButtons","_setProperty","_updateViewButtons","_setTabButtons","_removeTabButtons","button","remove","viewTab","i","renderAsTab","updateFirstLastMarker","filter","b","visible","displayStyle","length","_setMenuButtons","rendered","_updateVisibility","setVisible","event","outline","onOutlineChange","_onViewButtonSelected","source","isToggleAction","setSelected","onViewButtonSelected","propertyName"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/viewbutton/ViewButtonBox.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {HtmlComponent, OutlineViewButton, scout, Widget, widgets} from '../../index';\n\nexport default class ViewButtonBox extends Widget {\n\n  constructor() {\n    super();\n    this.viewMenuTab = null;\n    this.viewButtons = [];\n    this.menuButtons = [];\n    this.tabButtons = [];\n    this._desktopOutlineChangeHandler = this._onDesktopOutlineChange.bind(this);\n    this._viewButtonPropertyChangeHandler = this._onViewButtonPropertyChange.bind(this);\n    this.selectedMenuButtonAlwaysVisible = false;\n    this._addWidgetProperties(['viewButtons']);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.desktop = this.session.desktop;\n    this.viewMenuTab = scout.create('ViewMenuTab', {\n      parent: this\n    });\n    this._setViewButtons(this.viewButtons);\n    this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('view-button-box');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this.viewMenuTab.render();\n    this._onDesktopOutlineChange();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTabButtons();\n  }\n\n  _remove() {\n    this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n    this.viewButtons.forEach(viewButton => viewButton.off('selected', this._viewButtonPropertyChangeHandler));\n\n    super._remove();\n  }\n\n  setSelectedMenuButtonVisible(selectedMenuButtonVisible) {\n    this.viewMenuTab.setSelectedButtonVisible(selectedMenuButtonVisible);\n  }\n\n  setSelectedMenuButtonAlwaysVisible(selectedMenuButtonAlwaysVisible) {\n    this.setProperty('selectedMenuButtonAlwaysVisible', selectedMenuButtonAlwaysVisible);\n  }\n\n  _setSelectedMenuButtonAlwaysVisible(selectedMenuButtonAlwaysVisible) {\n    this._updateSelectedMenuButtonVisibility();\n  }\n\n  setViewButtons(viewButtons) {\n    this.setProperty('viewButtons', viewButtons);\n  }\n\n  _setViewButtons(viewButtons) {\n    if (this.viewButtons) {\n      this.viewButtons.forEach(viewButton => viewButton.off('propertyChange', this._viewButtonPropertyChangeHandler));\n    }\n    this._setProperty('viewButtons', viewButtons);\n    this.viewButtons.forEach(viewButton => viewButton.on('propertyChange', this._viewButtonPropertyChangeHandler));\n    this._updateViewButtons();\n  }\n\n  _setTabButtons(tabButtons) {\n    this._setProperty('tabButtons', tabButtons);\n  }\n\n  _removeTabButtons() {\n    this.tabButtons.forEach(button => button.remove());\n  }\n\n  _renderTabButtons() {\n    this.tabButtons.forEach((viewTab, i) => viewTab.renderAsTab(this.$container));\n    widgets.updateFirstLastMarker(this.tabButtons);\n  }\n\n  _updateViewButtons() {\n    let viewButtons = this.viewButtons.filter(b => b.visible);\n    let menuButtons = viewButtons.filter(b => b.displayStyle === 'MENU');\n    let tabButtons = null;\n    // render as tab if length is < 1\n    if (menuButtons.length > 1) {\n      tabButtons = viewButtons.filter(b => b.displayStyle === 'TAB');\n    } else {\n      // all visible view buttons are rendered as tab\n      tabButtons = viewButtons;\n      menuButtons = [];\n    }\n\n    this._setMenuButtons(menuButtons);\n    if (this.rendered) {\n      this._removeTabButtons();\n    }\n    this._setTabButtons(tabButtons);\n    if (this.rendered) {\n      this._renderTabButtons();\n    }\n    this._updateVisibility();\n    this._updateSelectedMenuButtonVisibility();\n  }\n\n  _updateVisibility(menuButtons) {\n    this.setVisible((this.tabButtons.length + this.menuButtons.length) > 1);\n  }\n\n  _setMenuButtons(menuButtons) {\n    this._setProperty('menuButtons', menuButtons);\n    this.viewMenuTab.setViewButtons(this.menuButtons);\n  }\n\n  _updateSelectedMenuButtonVisibility() {\n    this.setSelectedMenuButtonVisible(this.selectedMenuButtonAlwaysVisible || (this.tabButtons.length >= 1 && this.menuButtons.length >= 1));\n  }\n\n  /**\n   * This method updates the state of the view-menu-tab and the selected state of outline-view-button-box.\n   * This method must also work in offline mode.\n   */\n  _onDesktopOutlineChange(event) {\n    let outline = this.desktop.outline;\n    this.viewButtons.forEach(viewTab => {\n      if (viewTab instanceof OutlineViewButton) {\n        viewTab.onOutlineChange(outline);\n      }\n    });\n  }\n\n  _onViewButtonSelected(event) {\n    // Deselect other toggleable view buttons\n    this.viewButtons.forEach(viewButton => {\n      if (viewButton !== event.source && viewButton.isToggleAction()) {\n        viewButton.setSelected(false);\n      }\n    });\n\n    // Inform viewMenu tab about new selection\n    this.viewMenuTab.onViewButtonSelected();\n  }\n\n  _onViewButtonPropertyChange(event) {\n    if (event.propertyName === 'selected') {\n      this._onViewButtonSelected(event);\n    } else if (event.propertyName === 'visible' ||\n      event.propertyName === 'displayStyle') {\n      this._updateViewButtons();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}