{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { graphics, Insets, Rectangle, scout } from '../index';\nimport $ from 'jquery';\nimport arrays from '../util/arrays';\n\n/**\n * Resizable makes a DOM element resizable by adding resize handlers to all edges of the given model.$container. This is primarily used for (modal) dialogs.\n */\nexport default class Resizable {\n  constructor(model) {\n    scout.assertParameter('model', model);\n    scout.assertParameter('$container', model.$container);\n    this.$container = model.$container;\n    this.$window = model.$container.window();\n    this.setModes(model.modes);\n    this.setBoundaries(model.boundaries);\n    this.$resizableS = null;\n    this.$resizableE = null;\n    this.$resizableSE = null;\n    this.$resizableW = null;\n    this.$resizableSW = null;\n    this.$resizableN = null;\n    this.$resizableNW = null;\n    this.$resizableNE = null;\n    this._context = null;\n    this._mouseDownHandler = this._onMouseDown.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n    this._mousemoveHandler = this._onMousemove.bind(this);\n    this._resizeHandler = this._resize.bind(this);\n  }\n  setModes(modes) {\n    let ensuredModes = modes || [Resizable.MODES.SOUTH, Resizable.MODES.EAST, Resizable.MODES.WEST, Resizable.MODES.NORTH];\n    if (arrays.equals(ensuredModes, this.modes)) {\n      return;\n    }\n    this.modes = ensuredModes;\n    this._calculateResizeHandlersVisibility();\n  }\n  setBoundaries(boundaries) {\n    this.boundaries = $.extend(new Insets(), boundaries);\n    if (this._boundaryValueSet(this.boundaries.left)) {\n      this.boundaries.left -= this.$container.cssMarginLeft();\n    }\n    if (this._boundaryValueSet(this.boundaries.right)) {\n      this.boundaries.right -= this.$container.cssMarginRight();\n    }\n    if (this._boundaryValueSet(this.boundaries.top)) {\n      this.boundaries.top -= this.$container.cssMarginTop();\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom)) {\n      this.boundaries.bottom -= this.$container.cssMarginBottom();\n    }\n  }\n  _appendResizeHandles() {\n    this.$resizableS = this.$container.appendDiv('resizable-handle resizable-s').data('edge', 's').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableE = this.$container.appendDiv('resizable-handle resizable-e').data('edge', 'e').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSE = this.$container.appendDiv('resizable-handle resizable-se').data('edge', 'se').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableW = this.$container.appendDiv('resizable-handle resizable-w').data('edge', 'w').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSW = this.$container.appendDiv('resizable-handle resizable-sw').data('edge', 'sw').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableN = this.$container.appendDiv('resizable-handle resizable-n').data('edge', 'n').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNW = this.$container.appendDiv('resizable-handle resizable-nw').data('edge', 'nw').on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNE = this.$container.appendDiv('resizable-handle resizable-ne').data('edge', 'ne').on('mousedown.resizable', this._mouseDownHandler);\n    this._calculateResizeHandlersVisibility();\n  }\n  _calculateResizeHandlersVisibility() {\n    if (this.$resizableS) {\n      this.$resizableS.setVisible(this._hasMode(Resizable.MODES.SOUTH));\n    }\n    if (this.$resizableE) {\n      this.$resizableE.setVisible(this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableW) {\n      this.$resizableW.setVisible(this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableN) {\n      this.$resizableN.setVisible(this._hasMode(Resizable.MODES.NORTH));\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n  }\n  _hasMode(mode) {\n    return this.modes.some(m => m === mode);\n  }\n  init() {\n    this.$container.addClass('resizable');\n    this._appendResizeHandles();\n    this._installRemoveHandler();\n  }\n  _installRemoveHandler() {\n    this.$container.on('remove', this.destroy.bind(this));\n  }\n  destroy() {\n    if (this.$resizableS) {\n      this.$resizableS.remove();\n      this.$resizableS = null;\n    }\n    if (this.$resizableE) {\n      this.$resizableE.remove();\n      this.$resizableE = null;\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.remove();\n      this.$resizableSE = null;\n    }\n    if (this.$resizableW) {\n      this.$resizableW.remove();\n      this.$resizableW = null;\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.remove();\n      this.$resizableSW = null;\n    }\n    if (this.$resizableN) {\n      this.$resizableN.remove();\n      this.$resizableN = null;\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.remove();\n      this.$resizableNW = null;\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.remove();\n      this.$resizableNE = null;\n    }\n    if (this.$container) {\n      this.$container.removeClass('resizable');\n    }\n    this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler);\n  }\n  _onMouseDown(event) {\n    let $resizable = this.$container,\n      $myWindow = $resizable.window(),\n      $handle = $(event.target),\n      minWidth = $resizable.cssMinWidth(),\n      minHeight = $resizable.cssMinHeight(),\n      maxWidth = $resizable.cssMaxWidth(),\n      maxHeight = $resizable.cssMaxHeight(),\n      initialBounds = graphics.bounds($resizable, {\n        exact: true\n      });\n    this._context = {\n      initialBounds: initialBounds,\n      minBounds: new Rectangle(initialBounds.right() - minWidth, initialBounds.bottom() - minHeight, minWidth, minHeight),\n      maxBounds: new Rectangle(Math.max(-$resizable.cssMarginLeft(), initialBounds.right() - maxWidth), Math.max(-$resizable.cssMarginTop(), initialBounds.bottom() - maxHeight), Math.min($myWindow.width() - $resizable[0].offsetLeft, maxWidth), Math.min($myWindow.height() - $resizable[0].offsetTop, maxHeight)),\n      distance: [0, 0],\n      edge: $handle.data('edge'),\n      mousedownEvent: event\n    };\n    $resizable.addClass('resizable-resizing');\n    this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler).on('mouseup.resizable', this._mouseUpHandler).on('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').addClass('dragging-in-progress');\n  }\n  _onMouseUp(event) {\n    this.$container.removeClass('resizable-resizing');\n    this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').removeClass('dragging-in-progress');\n    this._context = null;\n  }\n  _onMousemove(event) {\n    let ctx = this._context,\n      newBounds = ctx.initialBounds.clone(),\n      distance = this._calcDistance(ctx.mousedownEvent, event);\n    if (scout.isOneOf(ctx.edge, 'ne', 'e', 'se')) {\n      newBounds.width = Math.max(ctx.minBounds.width, Math.min(ctx.maxBounds.width, ctx.initialBounds.width + distance[0]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'w', 'sw')) {\n      // Resize to the left\n      newBounds.x = Math.min(ctx.minBounds.x, Math.max(ctx.maxBounds.x, ctx.initialBounds.x + distance[0]));\n      newBounds.width += ctx.initialBounds.x - newBounds.x;\n    }\n    if (scout.isOneOf(ctx.edge, 'sw', 's', 'se')) {\n      newBounds.height = Math.max(ctx.minBounds.height, Math.min(ctx.maxBounds.height, ctx.initialBounds.height + distance[1]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'n', 'ne')) {\n      // Resize to the bottom\n      newBounds.y = Math.min(ctx.minBounds.y, Math.max(ctx.maxBounds.y, ctx.initialBounds.y + distance[1]));\n      newBounds.height += ctx.initialBounds.y - newBounds.y;\n    }\n    $.throttle(this._resizeHandler, Resizable.FPS)(newBounds);\n  }\n  _resize(newBounds) {\n    this._cropToBoundaries(newBounds);\n    graphics.setBounds(this.$container, newBounds);\n    this.$container.trigger('resize', {\n      newBounds: newBounds,\n      initialBounds: this._context.initialBounds\n    });\n  }\n  _cropToBoundaries(newBounds) {\n    if (this._boundaryValueSet(this.boundaries.left) && newBounds.x > this.boundaries.left) {\n      newBounds.width -= this.boundaries.left - newBounds.x;\n      newBounds.x = this.boundaries.left;\n    }\n    if (this._boundaryValueSet(this.boundaries.right) && newBounds.x + newBounds.width < this.boundaries.right) {\n      newBounds.width = this.boundaries.right - newBounds.x;\n    }\n    if (this._boundaryValueSet(this.boundaries.top) && newBounds.y > this.boundaries.top) {\n      newBounds.height -= this.boundaries.top - newBounds.y;\n      newBounds.y = this.boundaries.top;\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom) && newBounds.y + newBounds.height < this.boundaries.bottom) {\n      newBounds.height = this.boundaries.bottom - newBounds.y;\n    }\n  }\n  _boundaryValueSet(value) {\n    return value > 0;\n  }\n  _calcDistance(eventA, eventB) {\n    let distX = eventB.pageX - eventA.pageX,\n      distY = eventB.pageY - eventA.pageY;\n    return [distX, distY];\n  }\n}\n_defineProperty(Resizable, \"MODES\", {\n  SOUTH: 's',\n  EAST: 'e',\n  WEST: 'w',\n  NORTH: 'n'\n});\n_defineProperty(Resizable, \"FPS\", 1000 / 15);","map":{"version":3,"names":["graphics","Insets","Rectangle","scout","$","arrays","Resizable","constructor","model","assertParameter","$container","$window","window","setModes","modes","setBoundaries","boundaries","$resizableS","$resizableE","$resizableSE","$resizableW","$resizableSW","$resizableN","$resizableNW","$resizableNE","_context","_mouseDownHandler","_onMouseDown","bind","_mouseUpHandler","_onMouseUp","_mousemoveHandler","_onMousemove","_resizeHandler","_resize","ensuredModes","MODES","SOUTH","EAST","WEST","NORTH","equals","_calculateResizeHandlersVisibility","extend","_boundaryValueSet","left","cssMarginLeft","right","cssMarginRight","top","cssMarginTop","bottom","cssMarginBottom","_appendResizeHandles","appendDiv","data","on","setVisible","_hasMode","mode","some","m","init","addClass","_installRemoveHandler","destroy","remove","removeClass","off","event","$resizable","$myWindow","$handle","target","minWidth","cssMinWidth","minHeight","cssMinHeight","maxWidth","cssMaxWidth","maxHeight","cssMaxHeight","initialBounds","bounds","exact","minBounds","maxBounds","Math","max","min","width","offsetLeft","height","offsetTop","distance","edge","mousedownEvent","ctx","newBounds","clone","_calcDistance","isOneOf","x","y","throttle","FPS","_cropToBoundaries","setBounds","trigger","value","eventA","eventB","distX","pageX","distY","pageY"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/resizable/Resizable.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {graphics, Insets, Rectangle, scout} from '../index';\nimport $ from 'jquery';\nimport arrays from '../util/arrays';\n\n/**\n * Resizable makes a DOM element resizable by adding resize handlers to all edges of the given model.$container. This is primarily used for (modal) dialogs.\n */\nexport default class Resizable {\n\n  constructor(model) {\n    scout.assertParameter('model', model);\n    scout.assertParameter('$container', model.$container);\n    this.$container = model.$container;\n    this.$window = model.$container.window();\n    this.setModes(model.modes);\n    this.setBoundaries(model.boundaries);\n    this.$resizableS = null;\n    this.$resizableE = null;\n    this.$resizableSE = null;\n    this.$resizableW = null;\n    this.$resizableSW = null;\n    this.$resizableN = null;\n    this.$resizableNW = null;\n    this.$resizableNE = null;\n    this._context = null;\n\n    this._mouseDownHandler = this._onMouseDown.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n    this._mousemoveHandler = this._onMousemove.bind(this);\n    this._resizeHandler = this._resize.bind(this);\n  }\n\n  static MODES = {\n    SOUTH: 's',\n    EAST: 'e',\n    WEST: 'w',\n    NORTH: 'n'\n  };\n\n  /**\n   * 15 fps seems to be a good value for slower browsers like firefox,\n   * where it takes longer to render.\n   */\n  static FPS = 1000 / 15;\n\n  setModes(modes) {\n    let ensuredModes = modes || [Resizable.MODES.SOUTH, Resizable.MODES.EAST, Resizable.MODES.WEST, Resizable.MODES.NORTH];\n    if (arrays.equals(ensuredModes, this.modes)) {\n      return;\n    }\n    this.modes = ensuredModes;\n    this._calculateResizeHandlersVisibility();\n  }\n\n  setBoundaries(boundaries) {\n    this.boundaries = $.extend(new Insets(), boundaries);\n    if (this._boundaryValueSet(this.boundaries.left)) {\n      this.boundaries.left -= this.$container.cssMarginLeft();\n    }\n    if (this._boundaryValueSet(this.boundaries.right)) {\n      this.boundaries.right -= this.$container.cssMarginRight();\n    }\n    if (this._boundaryValueSet(this.boundaries.top)) {\n      this.boundaries.top -= this.$container.cssMarginTop();\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom)) {\n      this.boundaries.bottom -= this.$container.cssMarginBottom();\n    }\n  }\n\n  _appendResizeHandles() {\n    this.$resizableS = this.$container.appendDiv('resizable-handle resizable-s')\n      .data('edge', 's')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableE = this.$container.appendDiv('resizable-handle resizable-e')\n      .data('edge', 'e')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSE = this.$container.appendDiv('resizable-handle resizable-se')\n      .data('edge', 'se')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableW = this.$container.appendDiv('resizable-handle resizable-w')\n      .data('edge', 'w')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSW = this.$container.appendDiv('resizable-handle resizable-sw')\n      .data('edge', 'sw')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableN = this.$container.appendDiv('resizable-handle resizable-n')\n      .data('edge', 'n')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNW = this.$container.appendDiv('resizable-handle resizable-nw')\n      .data('edge', 'nw')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNE = this.$container.appendDiv('resizable-handle resizable-ne')\n      .data('edge', 'ne')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this._calculateResizeHandlersVisibility();\n  }\n\n  _calculateResizeHandlersVisibility() {\n    if (this.$resizableS) {\n      this.$resizableS.setVisible(this._hasMode(Resizable.MODES.SOUTH));\n    }\n    if (this.$resizableE) {\n      this.$resizableE.setVisible(this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableW) {\n      this.$resizableW.setVisible(this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableN) {\n      this.$resizableN.setVisible(this._hasMode(Resizable.MODES.NORTH));\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n  }\n\n  _hasMode(mode) {\n    return this.modes.some(m => m === mode);\n  }\n\n  init() {\n    this.$container.addClass('resizable');\n    this._appendResizeHandles();\n    this._installRemoveHandler();\n  }\n\n  _installRemoveHandler() {\n    this.$container.on('remove', this.destroy.bind(this));\n  }\n\n  destroy() {\n    if (this.$resizableS) {\n      this.$resizableS.remove();\n      this.$resizableS = null;\n    }\n    if (this.$resizableE) {\n      this.$resizableE.remove();\n      this.$resizableE = null;\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.remove();\n      this.$resizableSE = null;\n    }\n    if (this.$resizableW) {\n      this.$resizableW.remove();\n      this.$resizableW = null;\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.remove();\n      this.$resizableSW = null;\n    }\n    if (this.$resizableN) {\n      this.$resizableN.remove();\n      this.$resizableN = null;\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.remove();\n      this.$resizableNW = null;\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.remove();\n      this.$resizableNE = null;\n    }\n    if (this.$container) {\n      this.$container.removeClass('resizable');\n    }\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler);\n  }\n\n  _onMouseDown(event) {\n    let $resizable = this.$container,\n      $myWindow = $resizable.window(),\n      $handle = $(event.target),\n      minWidth = $resizable.cssMinWidth(),\n      minHeight = $resizable.cssMinHeight(),\n      maxWidth = $resizable.cssMaxWidth(),\n      maxHeight = $resizable.cssMaxHeight(),\n      initialBounds = graphics.bounds($resizable, {exact: true});\n\n    this._context = {\n      initialBounds: initialBounds,\n      minBounds: new Rectangle(\n        initialBounds.right() - minWidth,\n        initialBounds.bottom() - minHeight,\n        minWidth,\n        minHeight\n      ),\n      maxBounds: new Rectangle(\n        Math.max(-$resizable.cssMarginLeft(), initialBounds.right() - maxWidth),\n        Math.max(-$resizable.cssMarginTop(), initialBounds.bottom() - maxHeight),\n        Math.min($myWindow.width() - $resizable[0].offsetLeft, maxWidth),\n        Math.min($myWindow.height() - $resizable[0].offsetTop, maxHeight)\n      ),\n      distance: [0, 0],\n      edge: $handle.data('edge'),\n      mousedownEvent: event\n    };\n\n    $resizable.addClass('resizable-resizing');\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler)\n      .on('mouseup.resizable', this._mouseUpHandler)\n      .on('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').addClass('dragging-in-progress');\n  }\n\n  _onMouseUp(event) {\n    this.$container.removeClass('resizable-resizing');\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').removeClass('dragging-in-progress');\n    this._context = null;\n  }\n\n  _onMousemove(event) {\n    let ctx = this._context,\n      newBounds = ctx.initialBounds.clone(),\n      distance = this._calcDistance(ctx.mousedownEvent, event);\n\n    if (scout.isOneOf(ctx.edge, 'ne', 'e', 'se')) {\n      newBounds.width = Math.max(ctx.minBounds.width,\n        Math.min(ctx.maxBounds.width, ctx.initialBounds.width + distance[0]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'w', 'sw')) {\n      // Resize to the left\n      newBounds.x = Math.min(ctx.minBounds.x,\n        Math.max(ctx.maxBounds.x, ctx.initialBounds.x + distance[0]));\n      newBounds.width += ctx.initialBounds.x - newBounds.x;\n    }\n    if (scout.isOneOf(ctx.edge, 'sw', 's', 'se')) {\n      newBounds.height = Math.max(ctx.minBounds.height,\n        Math.min(ctx.maxBounds.height, ctx.initialBounds.height + distance[1]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'n', 'ne')) {\n      // Resize to the bottom\n      newBounds.y = Math.min(ctx.minBounds.y,\n        Math.max(ctx.maxBounds.y, ctx.initialBounds.y + distance[1]));\n      newBounds.height += ctx.initialBounds.y - newBounds.y;\n    }\n    $.throttle(this._resizeHandler, Resizable.FPS)(newBounds);\n  }\n\n  _resize(newBounds) {\n    this._cropToBoundaries(newBounds);\n    graphics.setBounds(this.$container, newBounds);\n    this.$container.trigger('resize', {\n      newBounds: newBounds,\n      initialBounds: this._context.initialBounds\n    });\n  }\n\n  _cropToBoundaries(newBounds) {\n    if (this._boundaryValueSet(this.boundaries.left) && newBounds.x > this.boundaries.left) {\n      newBounds.width -= (this.boundaries.left - newBounds.x);\n      newBounds.x = this.boundaries.left;\n    }\n    if (this._boundaryValueSet(this.boundaries.right) && (newBounds.x + newBounds.width) < this.boundaries.right) {\n      newBounds.width = this.boundaries.right - newBounds.x;\n    }\n    if (this._boundaryValueSet(this.boundaries.top) && newBounds.y > this.boundaries.top) {\n      newBounds.height -= (this.boundaries.top - newBounds.y);\n      newBounds.y = this.boundaries.top;\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom) && (newBounds.y + newBounds.height) < this.boundaries.bottom) {\n      newBounds.height = this.boundaries.bottom - newBounds.y;\n    }\n  }\n\n  _boundaryValueSet(value) {\n    return value > 0;\n  }\n\n  _calcDistance(eventA, eventB) {\n    let\n      distX = eventB.pageX - eventA.pageX,\n      distY = eventB.pageY - eventA.pageY;\n    return [distX, distY];\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}