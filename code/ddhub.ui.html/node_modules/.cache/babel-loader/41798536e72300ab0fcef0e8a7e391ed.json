{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Column, comparators, scout } from '../../index';\n\n/**\n * May be an ordinary boolean column or the table's checkable column (table.checkableColumn)\n * Difference: the table's checkable column represents the row.checked state, other boolean columns represent their own value.\n */\nexport default class BooleanColumn extends Column {\n  constructor() {\n    super();\n    this.comparator = comparators.NUMERIC;\n    this.filterType = 'ColumnUserFilter';\n    this.horizontalAlignment = 0;\n    this.minWidth = Column.SMALL_MIN_WIDTH;\n    this.triStateEnabled = false;\n    this.textBased = false;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value, row) {\n    if (this.triStateEnabled && value === null) {\n      return '?';\n    }\n    return value ? 'X' : '';\n  }\n\n  /**\n   * @override\n   */\n  buildCell(cell, row) {\n    let style,\n      content = '',\n      cssClass,\n      checkBoxCssClass,\n      enabled = row.enabled,\n      tableNodeColumn = this.table.isTableNodeColumn(this),\n      rowPadding = 0;\n    if (tableNodeColumn) {\n      rowPadding = this.table._calcRowLevelPadding(row);\n    }\n    if (cell.empty) {\n      // if cell wants to be really empty (e.g. no checkbox icon, use logic of base class)\n      return super.buildCell(cell, row);\n    }\n    enabled = enabled && cell.editable;\n    cssClass = this._cellCssClass(cell, tableNodeColumn);\n    style = this._cellStyle(cell, tableNodeColumn, rowPadding);\n    if (!enabled) {\n      cssClass += ' disabled';\n    }\n    checkBoxCssClass = 'check-box';\n    if (cell.value === true) {\n      checkBoxCssClass += ' checked';\n    }\n    if (this.triStateEnabled && cell.value !== true && cell.value !== false) {\n      checkBoxCssClass += ' undefined';\n    }\n    if (!enabled) {\n      checkBoxCssClass += ' disabled';\n    }\n    if (tableNodeColumn && row._expandable) {\n      this.tableNodeColumn = true;\n      content = this._expandIcon(row.expanded, rowPadding) + content;\n      if (row.expanded) {\n        cssClass += ' expanded';\n      }\n    }\n    content = content + '<div class=\"' + checkBoxCssClass + '\"></div>';\n    return this._buildCell(cell, content, style, cssClass);\n  }\n  $checkBox($row) {\n    let $cell = this.table.$cell(this, $row);\n    return $cell.children('.check-box');\n  }\n  _cellCssClass(cell, tableNode) {\n    let cssClass = super._cellCssClass(cell);\n    cssClass = cssClass.replace(' editable', '');\n    cssClass += ' checkable';\n    if (tableNode) {\n      cssClass += ' table-node';\n    }\n    return cssClass;\n  }\n\n  /**\n   * This function does intentionally _not_ call the super function (prepareCellEdit) because we don't want to\n   * show an editor for BooleanColumns when user clicks on a cell.\n   */\n  onMouseUp(event, $row) {\n    let row = $row.data('row'),\n      cell = this.cell(row);\n    if (this.table.checkableColumn === this) {\n      this.table.checkRow(row, !row.checked);\n    } else if (this.isCellEditable(row, cell, event)) {\n      this._toggleCellValue(row, cell);\n    }\n  }\n\n  /**\n   * In a remote app this function is overridden by RemoteApp.js, the default implementation is the local case.\n   * @see TableAdapter.js\n   */\n  _toggleCellValue(row, cell) {\n    if (!this.triStateEnabled) {\n      this.setCellValue(row, !cell.value);\n    } else {\n      if (cell.value === false) {\n        this.setCellValue(row, true);\n      } else if (cell.value === true) {\n        this.setCellValue(row, null);\n      } else if (cell.value === null) {\n        this.setCellValue(row, false);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  _createEditor(row) {\n    return scout.create('CheckBoxField', {\n      parent: this.table,\n      triStateEnabled: this.triStateEnabled\n    });\n  }\n\n  /**\n   * @override\n   */\n  cellTextForGrouping(row) {\n    let cell = this.cell(row);\n    if (this.triStateEnabled && cell.value === null) {\n      return this.session.text('ui.BooleanColumnGroupingMixed');\n    } else if (cell.value === true) {\n      return this.session.text('ui.BooleanColumnGroupingTrue');\n    }\n    return this.session.text('ui.BooleanColumnGroupingFalse');\n  }\n  setTriStateEnabled(triStateEnabled) {\n    if (this.triStateEnabled === triStateEnabled) {\n      return;\n    }\n    this.triStateEnabled = triStateEnabled;\n    this.table.rows.forEach(row => this._updateCellText(row, this.cell(row)));\n  }\n}","map":{"version":3,"names":["Column","comparators","scout","BooleanColumn","constructor","comparator","NUMERIC","filterType","horizontalAlignment","minWidth","SMALL_MIN_WIDTH","triStateEnabled","textBased","_formatValue","value","row","buildCell","cell","style","content","cssClass","checkBoxCssClass","enabled","tableNodeColumn","table","isTableNodeColumn","rowPadding","_calcRowLevelPadding","empty","editable","_cellCssClass","_cellStyle","_expandable","_expandIcon","expanded","_buildCell","$checkBox","$row","$cell","children","tableNode","replace","onMouseUp","event","data","checkableColumn","checkRow","checked","isCellEditable","_toggleCellValue","setCellValue","_createEditor","create","parent","cellTextForGrouping","session","text","setTriStateEnabled","rows","forEach","_updateCellText"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/columns/BooleanColumn.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Column, comparators, scout} from '../../index';\n\n/**\n * May be an ordinary boolean column or the table's checkable column (table.checkableColumn)\n * Difference: the table's checkable column represents the row.checked state, other boolean columns represent their own value.\n */\nexport default class BooleanColumn extends Column {\n\n  constructor() {\n    super();\n    this.comparator = comparators.NUMERIC;\n    this.filterType = 'ColumnUserFilter';\n    this.horizontalAlignment = 0;\n    this.minWidth = Column.SMALL_MIN_WIDTH;\n    this.triStateEnabled = false;\n    this.textBased = false;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value, row) {\n    if (this.triStateEnabled && value === null) {\n      return '?';\n    }\n    return value ? 'X' : '';\n  }\n\n  /**\n   * @override\n   */\n  buildCell(cell, row) {\n    let style,\n      content = '',\n      cssClass,\n      checkBoxCssClass,\n      enabled = row.enabled,\n      tableNodeColumn = this.table.isTableNodeColumn(this),\n      rowPadding = 0;\n\n    if (tableNodeColumn) {\n      rowPadding = this.table._calcRowLevelPadding(row);\n    }\n\n    if (cell.empty) {\n      // if cell wants to be really empty (e.g. no checkbox icon, use logic of base class)\n      return super.buildCell(cell, row);\n    }\n\n    enabled = enabled && cell.editable;\n    cssClass = this._cellCssClass(cell, tableNodeColumn);\n    style = this._cellStyle(cell, tableNodeColumn, rowPadding);\n    if (!enabled) {\n      cssClass += ' disabled';\n    }\n\n    checkBoxCssClass = 'check-box';\n    if (cell.value === true) {\n      checkBoxCssClass += ' checked';\n    }\n    if (this.triStateEnabled && cell.value !== true && cell.value !== false) {\n      checkBoxCssClass += ' undefined';\n    }\n    if (!enabled) {\n      checkBoxCssClass += ' disabled';\n    }\n\n    if (tableNodeColumn && row._expandable) {\n      this.tableNodeColumn = true;\n      content = this._expandIcon(row.expanded, rowPadding) + content;\n      if (row.expanded) {\n        cssClass += ' expanded';\n      }\n    }\n    content = content + '<div class=\"' + checkBoxCssClass + '\"></div>';\n\n    return this._buildCell(cell, content, style, cssClass);\n  }\n\n  $checkBox($row) {\n    let $cell = this.table.$cell(this, $row);\n    return $cell.children('.check-box');\n  }\n\n  _cellCssClass(cell, tableNode) {\n    let cssClass = super._cellCssClass(cell);\n    cssClass = cssClass.replace(' editable', '');\n    cssClass += ' checkable';\n    if (tableNode) {\n      cssClass += ' table-node';\n    }\n\n    return cssClass;\n  }\n\n  /**\n   * This function does intentionally _not_ call the super function (prepareCellEdit) because we don't want to\n   * show an editor for BooleanColumns when user clicks on a cell.\n   */\n  onMouseUp(event, $row) {\n    let row = $row.data('row'),\n      cell = this.cell(row);\n    if (this.table.checkableColumn === this) {\n      this.table.checkRow(row, !row.checked);\n    } else if (this.isCellEditable(row, cell, event)) {\n      this._toggleCellValue(row, cell);\n    }\n  }\n\n  /**\n   * In a remote app this function is overridden by RemoteApp.js, the default implementation is the local case.\n   * @see TableAdapter.js\n   */\n  _toggleCellValue(row, cell) {\n    if (!this.triStateEnabled) {\n      this.setCellValue(row, !cell.value);\n    } else {\n      if (cell.value === false) {\n        this.setCellValue(row, true);\n      } else if (cell.value === true) {\n        this.setCellValue(row, null);\n      } else if (cell.value === null) {\n        this.setCellValue(row, false);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  _createEditor(row) {\n    return scout.create('CheckBoxField', {\n      parent: this.table,\n      triStateEnabled: this.triStateEnabled\n    });\n  }\n\n  /**\n   * @override\n   */\n  cellTextForGrouping(row) {\n    let cell = this.cell(row);\n    if (this.triStateEnabled && cell.value === null) {\n      return this.session.text('ui.BooleanColumnGroupingMixed');\n    } else if (cell.value === true) {\n      return this.session.text('ui.BooleanColumnGroupingTrue');\n    }\n    return this.session.text('ui.BooleanColumnGroupingFalse');\n  }\n\n  setTriStateEnabled(triStateEnabled) {\n    if (this.triStateEnabled === triStateEnabled) {\n      return;\n    }\n    this.triStateEnabled = triStateEnabled;\n    this.table.rows.forEach(row => this._updateCellText(row, this.cell(row)));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}