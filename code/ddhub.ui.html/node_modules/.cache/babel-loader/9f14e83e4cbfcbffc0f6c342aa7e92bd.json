{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, keys } from '../../index';\nexport default class TableNavigationCollapseKeyStroke extends AbstractTableNavigationKeyStroke {\n  constructor(table) {\n    super(table);\n    this.field = table;\n    this.which = [keys.SUBTRACT, keys.LEFT];\n    this.renderingHints.text = '-';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.field.selectedRows[0];\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n  _accept(event) {\n    let accepted = super._accept(event),\n      selectedRow = this.field.selectedRows[0];\n    if (!accepted) {\n      return false;\n    }\n    if (!selectedRow) {\n      return false;\n    }\n    if (selectedRow.expanded && selectedRow._expandable) {\n      // collapse\n      return true;\n    }\n    return !!selectedRow.parentRow;\n  }\n  handle(event) {\n    let table = this.field,\n      selectedRow = this.field.selectedRows[0];\n    if (!selectedRow) {\n      return;\n    }\n    let focus = false;\n    if (selectedRow.expanded && selectedRow._expandable) {\n      table.collapseRow(selectedRow);\n      focus = true;\n    } else if (selectedRow.parentRow) {\n      table.selectRow(selectedRow.parentRow);\n      table.selectionHandler.lastActionRow = selectedRow.parentRow;\n      focus = true;\n    }\n    if (focus && !table.isFocused()) {\n      table.focus();\n    }\n  }\n}","map":{"version":3,"names":["AbstractTableNavigationKeyStroke","keys","TableNavigationCollapseKeyStroke","constructor","table","field","which","SUBTRACT","LEFT","renderingHints","text","$drawingArea","event","row","selectedRows","$row","_accept","accepted","selectedRow","expanded","_expandable","parentRow","handle","focus","collapseRow","selectRow","selectionHandler","lastActionRow","isFocused"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationCollapseKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, keys} from '../../index';\n\nexport default class TableNavigationCollapseKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.field = table;\n    this.which = [keys.SUBTRACT, keys.LEFT];\n    this.renderingHints.text = '-';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.field.selectedRows[0];\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event),\n      selectedRow = this.field.selectedRows[0];\n    if (!accepted) {\n      return false;\n    }\n\n    if (!selectedRow) {\n      return false;\n    }\n    if (selectedRow.expanded && selectedRow._expandable) {\n      // collapse\n      return true;\n    }\n\n    return !!selectedRow.parentRow;\n  }\n\n  handle(event) {\n    let table = this.field,\n      selectedRow = this.field.selectedRows[0];\n    if (!selectedRow) {\n      return;\n    }\n    let focus = false;\n    if (selectedRow.expanded && selectedRow._expandable) {\n      table.collapseRow(selectedRow);\n      focus = true;\n    } else if (selectedRow.parentRow) {\n      table.selectRow(selectedRow.parentRow);\n      table.selectionHandler.lastActionRow = selectedRow.parentRow;\n      focus = true;\n    }\n    if (focus && !table.isFocused()) {\n      table.focus();\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gCAAgC,EAAEC,IAAI,QAAO,aAAa;AAElE,eAAe,MAAMC,gCAAgC,SAASF,gCAAgC,CAAC;EAE7FG,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAGD,KAAK;IAClB,IAAI,CAACE,KAAK,GAAG,CAACL,IAAI,CAACM,QAAQ,EAAEN,IAAI,CAACO,IAAI,CAAC;IACvC,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACD,cAAc,CAACE,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,GAAG,GAAG,IAAI,CAACR,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;MACpC,IAAID,GAAG,EAAE;QACP,OAAOA,GAAG,CAACE,IAAI;MACjB;IACF,CAAC;EACH;EAEAC,OAAO,CAACJ,KAAK,EAAE;IACb,IAAIK,QAAQ,GAAG,KAAK,CAACD,OAAO,CAACJ,KAAK,CAAC;MACjCM,WAAW,GAAG,IAAI,CAACb,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACG,QAAQ,EAAE;MACb,OAAO,KAAK;IACd;IAEA,IAAI,CAACC,WAAW,EAAE;MAChB,OAAO,KAAK;IACd;IACA,IAAIA,WAAW,CAACC,QAAQ,IAAID,WAAW,CAACE,WAAW,EAAE;MACnD;MACA,OAAO,IAAI;IACb;IAEA,OAAO,CAAC,CAACF,WAAW,CAACG,SAAS;EAChC;EAEAC,MAAM,CAACV,KAAK,EAAE;IACZ,IAAIR,KAAK,GAAG,IAAI,CAACC,KAAK;MACpBa,WAAW,GAAG,IAAI,CAACb,KAAK,CAACS,YAAY,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACI,WAAW,EAAE;MAChB;IACF;IACA,IAAIK,KAAK,GAAG,KAAK;IACjB,IAAIL,WAAW,CAACC,QAAQ,IAAID,WAAW,CAACE,WAAW,EAAE;MACnDhB,KAAK,CAACoB,WAAW,CAACN,WAAW,CAAC;MAC9BK,KAAK,GAAG,IAAI;IACd,CAAC,MAAM,IAAIL,WAAW,CAACG,SAAS,EAAE;MAChCjB,KAAK,CAACqB,SAAS,CAACP,WAAW,CAACG,SAAS,CAAC;MACtCjB,KAAK,CAACsB,gBAAgB,CAACC,aAAa,GAAGT,WAAW,CAACG,SAAS;MAC5DE,KAAK,GAAG,IAAI;IACd;IACA,IAAIA,KAAK,IAAI,CAACnB,KAAK,CAACwB,SAAS,EAAE,EAAE;MAC/BxB,KAAK,CAACmB,KAAK,EAAE;IACf;EACF;AACF"},"metadata":{},"sourceType":"module"}