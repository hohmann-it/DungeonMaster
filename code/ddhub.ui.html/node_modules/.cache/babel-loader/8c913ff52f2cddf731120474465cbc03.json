{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { DesktopNotification, Status } from '../../index';\nexport default class OfflineDesktopNotification extends DesktopNotification {\n  constructor() {\n    super();\n    this.connectFailedReset = null;\n  }\n  _init(model) {\n    super._init(model);\n    this.closable = false;\n    this.duration = DesktopNotification.INFINITE;\n    this.connectionInterruptedStatus = new Status({\n      message: this.session.text('ui.ConnectionInterrupted'),\n      severity: Status.Severity.ERROR\n    });\n    this.reconnectingStatus = new Status({\n      message: this.session.text('ui.Reconnecting_'),\n      severity: Status.Severity.ERROR\n    });\n    this._setStatus(this.connectionInterruptedStatus);\n  }\n  _render() {\n    super._render();\n    this.$content.addClass('offline-message');\n    this.$messageText.addClass('offline-message-text');\n  }\n  reconnect() {\n    this.setLoading(true);\n    if (this.connectFailedReset) {\n      clearTimeout(this.connectFailedReset);\n    }\n    this.setStatus(this.reconnectingStatus);\n  }\n  reconnectFailed() {\n    /* remove the connecting state with a small delay. otherwise it cannot be read because its only shown very shortly */\n    this.connectFailedReset = setTimeout(() => {\n      this.connectFailedReset = null;\n      this.setLoading(false);\n      this.setStatus(this.connectionInterruptedStatus);\n    }, 1100 /* this delay must be < Reconnector.interval */);\n  }\n\n  reconnectSucceeded() {\n    this.setLoading(false);\n    if (this.connectFailedReset) {\n      clearTimeout(this.connectFailedReset);\n    }\n    this.setStatus({\n      message: this.session.text('ui.ConnectionReestablished'),\n      severity: Status.Severity.OK\n    });\n  }\n}","map":{"version":3,"names":["DesktopNotification","Status","OfflineDesktopNotification","constructor","connectFailedReset","_init","model","closable","duration","INFINITE","connectionInterruptedStatus","message","session","text","severity","Severity","ERROR","reconnectingStatus","_setStatus","_render","$content","addClass","$messageText","reconnect","setLoading","clearTimeout","setStatus","reconnectFailed","setTimeout","reconnectSucceeded","OK"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/notification/OfflineDesktopNotification.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {DesktopNotification, Status} from '../../index';\n\nexport default class OfflineDesktopNotification extends DesktopNotification {\n\n  constructor() {\n    super();\n\n    this.connectFailedReset = null;\n  }\n\n  _init(model) {\n    super._init(model);\n    this.closable = false;\n    this.duration = DesktopNotification.INFINITE;\n\n    this.connectionInterruptedStatus = new Status({\n      message: this.session.text('ui.ConnectionInterrupted'),\n      severity: Status.Severity.ERROR\n    });\n    this.reconnectingStatus = new Status({\n      message: this.session.text('ui.Reconnecting_'),\n      severity: Status.Severity.ERROR\n    });\n\n    this._setStatus(this.connectionInterruptedStatus);\n  }\n\n  _render() {\n    super._render();\n    this.$content.addClass('offline-message');\n    this.$messageText.addClass('offline-message-text');\n  }\n\n  reconnect() {\n    this.setLoading(true);\n    if (this.connectFailedReset) {\n      clearTimeout(this.connectFailedReset);\n    }\n    this.setStatus(this.reconnectingStatus);\n  }\n\n  reconnectFailed() {\n    /* remove the connecting state with a small delay. otherwise it cannot be read because its only shown very shortly */\n    this.connectFailedReset = setTimeout(() => {\n      this.connectFailedReset = null;\n      this.setLoading(false);\n      this.setStatus(this.connectionInterruptedStatus);\n    }, 1100 /* this delay must be < Reconnector.interval */);\n  }\n\n  reconnectSucceeded() {\n    this.setLoading(false);\n    if (this.connectFailedReset) {\n      clearTimeout(this.connectFailedReset);\n    }\n    this.setStatus({\n      message: this.session.text('ui.ConnectionReestablished'),\n      severity: Status.Severity.OK\n    });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,MAAM,QAAO,aAAa;AAEvD,eAAe,MAAMC,0BAA0B,SAASF,mBAAmB,CAAC;EAE1EG,WAAW,GAAG;IACZ,KAAK,EAAE;IAEP,IAAI,CAACC,kBAAkB,GAAG,IAAI;EAChC;EAEAC,KAAK,CAACC,KAAK,EAAE;IACX,KAAK,CAACD,KAAK,CAACC,KAAK,CAAC;IAClB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,QAAQ,GAAGR,mBAAmB,CAACS,QAAQ;IAE5C,IAAI,CAACC,2BAA2B,GAAG,IAAIT,MAAM,CAAC;MAC5CU,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;MACtDC,QAAQ,EAAEb,MAAM,CAACc,QAAQ,CAACC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACC,kBAAkB,GAAG,IAAIhB,MAAM,CAAC;MACnCU,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;MAC9CC,QAAQ,EAAEb,MAAM,CAACc,QAAQ,CAACC;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACE,UAAU,CAAC,IAAI,CAACR,2BAA2B,CAAC;EACnD;EAEAS,OAAO,GAAG;IACR,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,iBAAiB,CAAC;IACzC,IAAI,CAACC,YAAY,CAACD,QAAQ,CAAC,sBAAsB,CAAC;EACpD;EAEAE,SAAS,GAAG;IACV,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC;IACrB,IAAI,IAAI,CAACpB,kBAAkB,EAAE;MAC3BqB,YAAY,CAAC,IAAI,CAACrB,kBAAkB,CAAC;IACvC;IACA,IAAI,CAACsB,SAAS,CAAC,IAAI,CAACT,kBAAkB,CAAC;EACzC;EAEAU,eAAe,GAAG;IAChB;IACA,IAAI,CAACvB,kBAAkB,GAAGwB,UAAU,CAAC,MAAM;MACzC,IAAI,CAACxB,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAACoB,UAAU,CAAC,KAAK,CAAC;MACtB,IAAI,CAACE,SAAS,CAAC,IAAI,CAAChB,2BAA2B,CAAC;IAClD,CAAC,EAAE,IAAI,CAAC,gDAAgD;EAC1D;;EAEAmB,kBAAkB,GAAG;IACnB,IAAI,CAACL,UAAU,CAAC,KAAK,CAAC;IACtB,IAAI,IAAI,CAACpB,kBAAkB,EAAE;MAC3BqB,YAAY,CAAC,IAAI,CAACrB,kBAAkB,CAAC;IACvC;IACA,IAAI,CAACsB,SAAS,CAAC;MACbf,OAAO,EAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,4BAA4B,CAAC;MACxDC,QAAQ,EAAEb,MAAM,CAACc,QAAQ,CAACe;IAC5B,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}