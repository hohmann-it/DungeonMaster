{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CollapseHandle, Desktop, DesktopNavigationLayout, HtmlComponent, scout, SingleLayout, styles, Tree, Widget } from '../../index';\nexport default class DesktopNavigation extends Widget {\n  constructor() {\n    super();\n    this.$body = null;\n    this.layoutData = {};\n    this.toolBoxVisible = false;\n    this.viewButtonBox = null;\n    this._outlinePropertyChangeHandler = this._onOutlinePropertyChange.bind(this);\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._viewButtonBoxPropertyChangeHandler = this._onViewButtonBoxPropertyChange.bind(this);\n  }\n  // Configured in sizes.css\n\n  _init(model) {\n    super._init(model);\n    DesktopNavigation.MIN_WIDTH = styles.getSize('desktop-navigation', 'min-width', 'minWidth', 49);\n    DesktopNavigation.DEFAULT_STYLE_WIDTH = styles.getSize('desktop-navigation', 'width', 'width', 290);\n    DesktopNavigation.BREADCRUMB_STYLE_WIDTH = styles.getSize('desktop-navigation-breadcrumb', 'width', 'width', 240);\n    this.desktop = this.parent;\n    this.updateHandleVisibility();\n    this._setOutline(model.outline);\n    this.viewButtonBox = scout.create('ViewButtonBox', {\n      parent: this,\n      viewButtons: this.desktop.viewButtons\n    });\n    this.viewButtonBox.on('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-navigation');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new DesktopNavigationLayout(this));\n    this.htmlComp.layoutData = this.layoutData;\n    this.$body = this.$container.appendDiv('navigation-body').on('mousedown', this._onNavigationBodyMouseDown.bind(this));\n    this.htmlCompBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlCompBody.setLayout(new SingleLayout(null, {\n      exact: true\n    }));\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n  }\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    super._remove();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderViewButtonBox();\n    this._renderViewButtonBoxVisible();\n    this._renderToolBoxVisible();\n    this._renderOutline();\n    this._renderHandleVisible();\n    this._renderInBackground();\n  }\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.desktop.inBackground && this.desktop.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n  _renderViewButtonBox() {\n    this.viewButtonBox.render();\n    this.viewButtonBox.$container.insertBefore(this.$body);\n  }\n  _removeOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.remove();\n  }\n  _renderOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.render(this.$body);\n    this.outline.invalidateLayoutTree();\n    // Layout immediate to prevent flickering when breadcrumb mode is enabled\n    // but not initially while desktop gets rendered because it will be done at the end anyway\n    if (this.rendered) {\n      this.outline.validateFocus();\n    }\n  }\n  setOutline(outline) {\n    this.setProperty('outline', outline);\n  }\n  _setOutline(newOutline) {\n    let oldOutline = this.outline;\n    if (this.outline) {\n      this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    if (this.rendered) {\n      this._removeOutline();\n    }\n    this.outline = newOutline;\n    if (this.outline) {\n      this.outline.setParent(this);\n      this.outline.setBreadcrumbTogglingThreshold(DesktopNavigation.BREADCRUMB_STYLE_WIDTH);\n      // if both have breadcrumb-toggling enabled: make sure new outline uses same display style as old\n      if (this.outline.toggleBreadcrumbStyleEnabled && oldOutline && oldOutline.toggleBreadcrumbStyleEnabled && oldOutline.displayStyle) {\n        this.outline.setDisplayStyle(oldOutline.displayStyle);\n      }\n      this.outline.inBackground = this.desktop.inBackground;\n      this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n      this._updateHandle();\n    }\n  }\n  _renderViewButtonBoxVisible() {\n    this.$container.toggleClass('view-button-box-invisible', !this.viewButtonBox.visible);\n  }\n  sendToBack() {\n    if (this.outline) {\n      this.outline.sendToBack();\n    }\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n  bringToFront() {\n    if (this.outline) {\n      this.outline.bringToFront();\n    }\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n  setToolBoxVisible(toolBoxVisible) {\n    this.setProperty('toolBoxVisible', toolBoxVisible);\n  }\n  setHandleVisible(visible) {\n    this.setProperty('handleVisible', visible);\n  }\n  _updateHandle() {\n    if (this.handle) {\n      this.handle.setRightVisible(this.outline && this.outline.toggleBreadcrumbStyleEnabled && this.desktop.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB);\n    }\n  }\n  updateHandleVisibility() {\n    // Don't show handle if desktop says handle must not be visible\n    this.setHandleVisible(this.desktop.navigationHandleVisible);\n  }\n  _renderToolBoxVisible() {\n    if (this.toolBoxVisible) {\n      this._renderToolBox();\n    } else {\n      this._removeToolBox();\n    }\n  }\n  _renderToolBox() {\n    if (this.toolBox) {\n      return;\n    }\n    this.toolBox = scout.create('DesktopToolBox', {\n      parent: this,\n      menus: this.desktop.menus\n    });\n    this.toolBox.render();\n  }\n  _removeToolBox() {\n    if (!this.toolBox) {\n      return;\n    }\n    this.toolBox.destroy();\n    this.toolBox = null;\n  }\n  _renderHandleVisible() {\n    if (this.handleVisible) {\n      this._renderHandle();\n    } else {\n      this._removeHandle();\n    }\n  }\n  _createHandle() {\n    return scout.create('DesktopNavigationHandle', {\n      parent: this,\n      rightVisible: false,\n      horizontalAlignment: CollapseHandle.HorizontalAlignment.RIGHT\n    });\n  }\n  _renderHandle() {\n    if (this.handle) {\n      return;\n    }\n    this.handle = this._createHandle();\n    this.handle.render();\n    this.handle.addCssClass('navigation-open');\n    this.handle.on('action', this._onHandleAction.bind(this));\n    this._updateHandle();\n  }\n  _removeHandle() {\n    if (!this.handle) {\n      return;\n    }\n    this.handle.destroy();\n    this.handle = null;\n  }\n  _onNavigationBodyMouseDown(event) {\n    this.desktop.bringOutlineToFront();\n  }\n  _onViewButtonBoxPropertyChange(event) {\n    if (event.propertyName === 'visible') {\n      if (this.rendered) {\n        this._renderViewButtonBoxVisible();\n      }\n    }\n  }\n  _onOutlinePropertyChange(event) {\n    if (event.propertyName === 'displayStyle') {\n      this._updateHandle();\n    }\n  }\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationHandleVisible') {\n      this.updateHandleVisibility();\n    }\n  }\n  _onHandleAction(event) {\n    if (event.left) {\n      this.desktop.shrinkNavigation();\n    } else {\n      this.desktop.enlargeNavigation();\n    }\n  }\n}\n_defineProperty(DesktopNavigation, \"DEFAULT_STYLE_WIDTH\", null);\n_defineProperty(DesktopNavigation, \"BREADCRUMB_STYLE_WIDTH\", null);\n_defineProperty(DesktopNavigation, \"MIN_WIDTH\", null);","map":{"version":3,"names":["CollapseHandle","Desktop","DesktopNavigationLayout","HtmlComponent","scout","SingleLayout","styles","Tree","Widget","DesktopNavigation","constructor","$body","layoutData","toolBoxVisible","viewButtonBox","_outlinePropertyChangeHandler","_onOutlinePropertyChange","bind","_desktopPropertyChangeHandler","_onDesktopPropertyChange","_viewButtonBoxPropertyChangeHandler","_onViewButtonBoxPropertyChange","_init","model","MIN_WIDTH","getSize","DEFAULT_STYLE_WIDTH","BREADCRUMB_STYLE_WIDTH","desktop","parent","updateHandleVisibility","_setOutline","outline","create","viewButtons","on","_render","$container","$parent","appendDiv","htmlComp","install","session","setLayout","_onNavigationBodyMouseDown","htmlCompBody","exact","_remove","off","_renderProperties","_renderViewButtonBox","_renderViewButtonBoxVisible","_renderToolBoxVisible","_renderOutline","_renderHandleVisible","_renderInBackground","toggleClass","inBackground","displayStyle","DisplayStyle","COMPACT","render","insertBefore","_removeOutline","remove","invalidateLayoutTree","rendered","validateFocus","setOutline","setProperty","newOutline","oldOutline","setParent","setBreadcrumbTogglingThreshold","toggleBreadcrumbStyleEnabled","setDisplayStyle","_updateHandle","visible","sendToBack","bringToFront","setToolBoxVisible","setHandleVisible","handle","setRightVisible","outlineDisplayStyle","BREADCRUMB","navigationHandleVisible","_renderToolBox","_removeToolBox","toolBox","menus","destroy","handleVisible","_renderHandle","_removeHandle","_createHandle","rightVisible","horizontalAlignment","HorizontalAlignment","RIGHT","addCssClass","_onHandleAction","event","bringOutlineToFront","propertyName","left","shrinkNavigation","enlargeNavigation"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/navigation/DesktopNavigation.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {CollapseHandle, Desktop, DesktopNavigationLayout, HtmlComponent, scout, SingleLayout, styles, Tree, Widget} from '../../index';\n\nexport default class DesktopNavigation extends Widget {\n\n  constructor() {\n    super();\n    this.$body = null;\n    this.layoutData = {};\n    this.toolBoxVisible = false;\n    this.viewButtonBox = null;\n    this._outlinePropertyChangeHandler = this._onOutlinePropertyChange.bind(this);\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._viewButtonBoxPropertyChangeHandler = this._onViewButtonBoxPropertyChange.bind(this);\n  }\n\n  static DEFAULT_STYLE_WIDTH = null; // Configured in sizes.css\n  static BREADCRUMB_STYLE_WIDTH = null; // Configured in sizes.css\n  static MIN_WIDTH = null; // Configured in sizes.css\n\n  _init(model) {\n    super._init(model);\n    DesktopNavigation.MIN_WIDTH = styles.getSize('desktop-navigation', 'min-width', 'minWidth', 49);\n    DesktopNavigation.DEFAULT_STYLE_WIDTH = styles.getSize('desktop-navigation', 'width', 'width', 290);\n    DesktopNavigation.BREADCRUMB_STYLE_WIDTH = styles.getSize('desktop-navigation-breadcrumb', 'width', 'width', 240);\n    this.desktop = this.parent;\n    this.updateHandleVisibility();\n    this._setOutline(model.outline);\n    this.viewButtonBox = scout.create('ViewButtonBox', {\n      parent: this,\n      viewButtons: this.desktop.viewButtons\n    });\n    this.viewButtonBox.on('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-navigation');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new DesktopNavigationLayout(this));\n    this.htmlComp.layoutData = this.layoutData;\n\n    this.$body = this.$container.appendDiv('navigation-body')\n      .on('mousedown', this._onNavigationBodyMouseDown.bind(this));\n    this.htmlCompBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlCompBody.setLayout(new SingleLayout(null, {exact: true}));\n\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n  }\n\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    super._remove();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderViewButtonBox();\n    this._renderViewButtonBoxVisible();\n    this._renderToolBoxVisible();\n    this._renderOutline();\n    this._renderHandleVisible();\n    this._renderInBackground();\n  }\n\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.desktop.inBackground && this.desktop.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n\n  _renderViewButtonBox() {\n    this.viewButtonBox.render();\n    this.viewButtonBox.$container.insertBefore(this.$body);\n  }\n\n  _removeOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.remove();\n  }\n\n  _renderOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.render(this.$body);\n    this.outline.invalidateLayoutTree();\n    // Layout immediate to prevent flickering when breadcrumb mode is enabled\n    // but not initially while desktop gets rendered because it will be done at the end anyway\n    if (this.rendered) {\n      this.outline.validateFocus();\n    }\n  }\n\n  setOutline(outline) {\n    this.setProperty('outline', outline);\n  }\n\n  _setOutline(newOutline) {\n    let oldOutline = this.outline;\n    if (this.outline) {\n      this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    if (this.rendered) {\n      this._removeOutline();\n    }\n    this.outline = newOutline;\n    if (this.outline) {\n      this.outline.setParent(this);\n      this.outline.setBreadcrumbTogglingThreshold(DesktopNavigation.BREADCRUMB_STYLE_WIDTH);\n      // if both have breadcrumb-toggling enabled: make sure new outline uses same display style as old\n      if (this.outline.toggleBreadcrumbStyleEnabled && oldOutline && oldOutline.toggleBreadcrumbStyleEnabled &&\n        oldOutline.displayStyle) {\n        this.outline.setDisplayStyle(oldOutline.displayStyle);\n      }\n      this.outline.inBackground = this.desktop.inBackground;\n      this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n      this._updateHandle();\n    }\n  }\n\n  _renderViewButtonBoxVisible() {\n    this.$container.toggleClass('view-button-box-invisible', !this.viewButtonBox.visible);\n  }\n\n  sendToBack() {\n    if (this.outline) {\n      this.outline.sendToBack();\n    }\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n\n  bringToFront() {\n    if (this.outline) {\n      this.outline.bringToFront();\n    }\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n\n  setToolBoxVisible(toolBoxVisible) {\n    this.setProperty('toolBoxVisible', toolBoxVisible);\n  }\n\n  setHandleVisible(visible) {\n    this.setProperty('handleVisible', visible);\n  }\n\n  _updateHandle() {\n    if (this.handle) {\n      this.handle.setRightVisible(this.outline && this.outline.toggleBreadcrumbStyleEnabled &&\n        this.desktop.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB);\n    }\n  }\n\n  updateHandleVisibility() {\n    // Don't show handle if desktop says handle must not be visible\n    this.setHandleVisible(this.desktop.navigationHandleVisible);\n  }\n\n  _renderToolBoxVisible() {\n    if (this.toolBoxVisible) {\n      this._renderToolBox();\n    } else {\n      this._removeToolBox();\n    }\n  }\n\n  _renderToolBox() {\n    if (this.toolBox) {\n      return;\n    }\n    this.toolBox = scout.create('DesktopToolBox', {\n      parent: this,\n      menus: this.desktop.menus\n    });\n    this.toolBox.render();\n  }\n\n  _removeToolBox() {\n    if (!this.toolBox) {\n      return;\n    }\n    this.toolBox.destroy();\n    this.toolBox = null;\n  }\n\n  _renderHandleVisible() {\n    if (this.handleVisible) {\n      this._renderHandle();\n    } else {\n      this._removeHandle();\n    }\n  }\n\n  _createHandle() {\n    return scout.create('DesktopNavigationHandle', {\n      parent: this,\n      rightVisible: false,\n      horizontalAlignment: CollapseHandle.HorizontalAlignment.RIGHT\n    });\n  }\n\n  _renderHandle() {\n    if (this.handle) {\n      return;\n    }\n    this.handle = this._createHandle();\n    this.handle.render();\n    this.handle.addCssClass('navigation-open');\n    this.handle.on('action', this._onHandleAction.bind(this));\n    this._updateHandle();\n  }\n\n  _removeHandle() {\n    if (!this.handle) {\n      return;\n    }\n    this.handle.destroy();\n    this.handle = null;\n  }\n\n  _onNavigationBodyMouseDown(event) {\n    this.desktop.bringOutlineToFront();\n  }\n\n  _onViewButtonBoxPropertyChange(event) {\n    if (event.propertyName === 'visible') {\n      if (this.rendered) {\n        this._renderViewButtonBoxVisible();\n      }\n    }\n  }\n\n  _onOutlinePropertyChange(event) {\n    if (event.propertyName === 'displayStyle') {\n      this._updateHandle();\n    }\n  }\n\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationHandleVisible') {\n      this.updateHandleVisibility();\n    }\n  }\n\n  _onHandleAction(event) {\n    if (event.left) {\n      this.desktop.shrinkNavigation();\n    } else {\n      this.desktop.enlargeNavigation();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}