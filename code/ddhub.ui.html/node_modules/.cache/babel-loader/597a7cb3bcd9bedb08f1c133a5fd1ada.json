{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, objects, scout } from '../index';\n\n/**\n * Helper to support clone property and event handling between original and clone.\n *\n * OPTION                   DEFAULT VALUE   DESCRIPTION\n * --------------------------------------------------------------------------------------------------------\n * delegateProperties       []              An array of all properties to be delegated from the source\n *                                          to the to the target when changed on the source.\n *\n * excludeProperties        []              An array of all properties to be excluded from delegating to the\n *                                          in all cases.\n *\n * delegateEvents           []              An array of all events to be delegated from the source to\n *                                          the target when fired on the source.\n *\n * delegateAllProperties    false           True to delegate all property changes from the source to\n *                                          the target.\n *\n * delegateAllEvents        false           True to delegate all events from the source to\n *                                          the target.\n *\n */\nexport default class EventDelegator {\n  constructor(source, target, options) {\n    options = options || {};\n    this.source = source;\n    this.target = target;\n    this.callSetter = scout.nvl(options.callSetter, true);\n    this.delegateProperties = options.delegateProperties || [];\n    this.excludeProperties = options.excludeProperties || [];\n    this.delegateEvents = options.delegateEvents || [];\n    this.delegateAllProperties = !!options.delegateAllProperties;\n    this.delegateAllEvents = !!options.delegateAllEvents;\n    this._mirrorListener = null;\n    this._destroyHandler = null;\n    this._installSourceListener();\n  }\n  destroy() {\n    this._uninstallSourceListener();\n  }\n  _installSourceListener() {\n    if (this._mirrorListener) {\n      throw new Error('source listeners already installed.');\n    }\n    this._mirrorListener = {\n      func: this._onSourceEvent.bind(this)\n    };\n    this.source.events.addListener(this._mirrorListener);\n    this._destroyHandler = this._uninstallSourceListener.bind(this);\n    this.source.on('destroy', this._destroyHandler);\n    this.target.on('destroy', this._destroyHandler);\n  }\n  _uninstallSourceListener() {\n    if (this._mirrorListener) {\n      this.source.events.removeListener(this._mirrorListener);\n      this._mirrorListener = null;\n    }\n    if (this._destroyHandler) {\n      this.source.off('destroy', this._destroyHandler);\n      this.target.off('destroy', this._destroyHandler);\n      this._destroyHandler = null;\n    }\n  }\n  _onSourceEvent(event) {\n    if (event.type === 'propertyChange') {\n      this._onSourcePropertyChange(event);\n    } else if (this.delegateAllEvents || this.delegateEvents.indexOf(event.type) > -1) {\n      this.target.trigger(event.type, event);\n    }\n  }\n  _onSourcePropertyChange(event) {\n    if (this.excludeProperties.indexOf(event.propertyName) > -1) {\n      return;\n    }\n    if (this.delegateAllProperties || this.delegateProperties.indexOf(event.propertyName) > -1) {\n      if (EventDelegator.equalsProperty(event.propertyName, this.target, event.newValue)) {\n        return;\n      }\n      if (this.callSetter) {\n        this.target.callSetter(event.propertyName, event.newValue);\n      } else {\n        this.target.trigger(event.type, event);\n      }\n    }\n  }\n  static equalsProperty(propName, obj, value) {\n    let propValue = obj[propName];\n    // Compare arrays using arrays.equals()\n    if (Array.isArray(value) && Array.isArray(propValue)) {\n      return arrays.equals(value, propValue);\n    }\n    return objects.equals(propValue, value);\n  }\n  static create(source, target, options) {\n    if (options.delegateProperties && options.delegateProperties.length > 0 || options.delegateEvents && options.delegateEvents.length > 0 || options.delegateAllProperties || options.delegateAllEvents) {\n      return new EventDelegator(source, target, options);\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["arrays","objects","scout","EventDelegator","constructor","source","target","options","callSetter","nvl","delegateProperties","excludeProperties","delegateEvents","delegateAllProperties","delegateAllEvents","_mirrorListener","_destroyHandler","_installSourceListener","destroy","_uninstallSourceListener","Error","func","_onSourceEvent","bind","events","addListener","on","removeListener","off","event","type","_onSourcePropertyChange","indexOf","trigger","propertyName","equalsProperty","newValue","propName","obj","value","propValue","Array","isArray","equals","create","length"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/EventDelegator.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, objects, scout} from '../index';\n\n/**\n * Helper to support clone property and event handling between original and clone.\n *\n * OPTION                   DEFAULT VALUE   DESCRIPTION\n * --------------------------------------------------------------------------------------------------------\n * delegateProperties       []              An array of all properties to be delegated from the source\n *                                          to the to the target when changed on the source.\n *\n * excludeProperties        []              An array of all properties to be excluded from delegating to the\n *                                          in all cases.\n *\n * delegateEvents           []              An array of all events to be delegated from the source to\n *                                          the target when fired on the source.\n *\n * delegateAllProperties    false           True to delegate all property changes from the source to\n *                                          the target.\n *\n * delegateAllEvents        false           True to delegate all events from the source to\n *                                          the target.\n *\n */\nexport default class EventDelegator {\n\n  constructor(source, target, options) {\n    options = options || {};\n    this.source = source;\n    this.target = target;\n    this.callSetter = scout.nvl(options.callSetter, true);\n    this.delegateProperties = options.delegateProperties || [];\n    this.excludeProperties = options.excludeProperties || [];\n    this.delegateEvents = options.delegateEvents || [];\n    this.delegateAllProperties = !!options.delegateAllProperties;\n    this.delegateAllEvents = !!options.delegateAllEvents;\n    this._mirrorListener = null;\n    this._destroyHandler = null;\n\n    this._installSourceListener();\n  }\n\n  destroy() {\n    this._uninstallSourceListener();\n  }\n\n  _installSourceListener() {\n    if (this._mirrorListener) {\n      throw new Error('source listeners already installed.');\n    }\n    this._mirrorListener = {\n      func: this._onSourceEvent.bind(this)\n    };\n    this.source.events.addListener(this._mirrorListener);\n    this._destroyHandler = this._uninstallSourceListener.bind(this);\n    this.source.on('destroy', this._destroyHandler);\n    this.target.on('destroy', this._destroyHandler);\n  }\n\n  _uninstallSourceListener() {\n    if (this._mirrorListener) {\n      this.source.events.removeListener(this._mirrorListener);\n      this._mirrorListener = null;\n    }\n    if (this._destroyHandler) {\n      this.source.off('destroy', this._destroyHandler);\n      this.target.off('destroy', this._destroyHandler);\n      this._destroyHandler = null;\n    }\n  }\n\n  _onSourceEvent(event) {\n    if (event.type === 'propertyChange') {\n      this._onSourcePropertyChange(event);\n    } else if (this.delegateAllEvents || this.delegateEvents.indexOf(event.type) > -1) {\n      this.target.trigger(event.type, event);\n    }\n  }\n\n  _onSourcePropertyChange(event) {\n    if (this.excludeProperties.indexOf(event.propertyName) > -1) {\n      return;\n    }\n    if (this.delegateAllProperties || this.delegateProperties.indexOf(event.propertyName) > -1) {\n      if (EventDelegator.equalsProperty(event.propertyName, this.target, event.newValue)) {\n        return;\n      }\n      if (this.callSetter) {\n        this.target.callSetter(event.propertyName, event.newValue);\n      } else {\n        this.target.trigger(event.type, event);\n      }\n    }\n  }\n\n  static equalsProperty(propName, obj, value) {\n    let propValue = obj[propName];\n    // Compare arrays using arrays.equals()\n    if (Array.isArray(value) && Array.isArray(propValue)) {\n      return arrays.equals(value, propValue);\n    }\n    return objects.equals(propValue, value);\n  }\n\n  static create(source, target, options) {\n    if ((options.delegateProperties && options.delegateProperties.length > 0) ||\n      (options.delegateEvents && options.delegateEvents.length > 0) ||\n      options.delegateAllProperties ||\n      options.delegateAllEvents) {\n      return new EventDelegator(source, target, options);\n    }\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}