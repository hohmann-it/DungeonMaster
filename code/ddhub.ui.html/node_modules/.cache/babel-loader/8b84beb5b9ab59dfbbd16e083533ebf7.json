{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, TableFilter } from '../index';\nexport default class KeyTableFilter extends TableFilter {\n  /**\n   * @param {function} [keySupplier] - An optional function that extracts the key from\n   *          a table row. The default expects the row object to have a \"lookupRow\"\n   *          property and returns the \"key\" property.\n   */\n  constructor(keySupplier) {\n    super();\n    this.acceptedKeys = [];\n    this.keySupplier = keySupplier || (row => row.lookupRow && row.lookupRow.key);\n    this.active = true;\n    this.alwaysAcceptedRowIds = [];\n  }\n  accept(row) {\n    if (!this.active || arrays.empty(this.acceptedKeys) || this.alwaysAcceptedRowIds.indexOf(row.id) !== -1) {\n      return true;\n    }\n    let key = this.keySupplier(row);\n    return this.acceptedKeys.indexOf(key) !== -1;\n  }\n  setAcceptedKeys() {\n    for (var _len = arguments.length, acceptedKeys = new Array(_len), _key = 0; _key < _len; _key++) {\n      acceptedKeys[_key] = arguments[_key];\n    }\n    this.acceptedKeys = arrays.ensure(acceptedKeys);\n  }\n  setActive(active) {\n    this.active = active;\n  }\n  setAlwaysAcceptedRowIds() {\n    for (var _len2 = arguments.length, rowIds = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      rowIds[_key2] = arguments[_key2];\n    }\n    this.alwaysAcceptedRowIds = rowIds;\n  }\n}","map":{"version":3,"names":["arrays","TableFilter","KeyTableFilter","constructor","keySupplier","acceptedKeys","row","lookupRow","key","active","alwaysAcceptedRowIds","accept","empty","indexOf","id","setAcceptedKeys","ensure","setActive","setAlwaysAcceptedRowIds","rowIds"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/KeyTableFilter.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, TableFilter} from '../index';\n\nexport default class KeyTableFilter extends TableFilter {\n\n  /**\n   * @param {function} [keySupplier] - An optional function that extracts the key from\n   *          a table row. The default expects the row object to have a \"lookupRow\"\n   *          property and returns the \"key\" property.\n   */\n  constructor(keySupplier) {\n    super();\n    this.acceptedKeys = [];\n    this.keySupplier = keySupplier || (row => row.lookupRow && row.lookupRow.key);\n    this.active = true;\n    this.alwaysAcceptedRowIds = [];\n  }\n\n  accept(row) {\n    if (!this.active || arrays.empty(this.acceptedKeys) || this.alwaysAcceptedRowIds.indexOf(row.id) !== -1) {\n      return true;\n    }\n    let key = this.keySupplier(row);\n    return this.acceptedKeys.indexOf(key) !== -1;\n  }\n\n  setAcceptedKeys(...acceptedKeys) {\n    this.acceptedKeys = arrays.ensure(acceptedKeys);\n  }\n\n  setActive(active) {\n    this.active = active;\n  }\n\n  setAlwaysAcceptedRowIds(...rowIds) {\n    this.alwaysAcceptedRowIds = rowIds;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,EAAEC,WAAW,QAAO,UAAU;AAE5C,eAAe,MAAMC,cAAc,SAASD,WAAW,CAAC;EAEtD;AACF;AACA;AACA;AACA;EACEE,WAAW,CAACC,WAAW,EAAE;IACvB,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACD,WAAW,GAAGA,WAAW,KAAKE,GAAG,IAAIA,GAAG,CAACC,SAAS,IAAID,GAAG,CAACC,SAAS,CAACC,GAAG,CAAC;IAC7E,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,oBAAoB,GAAG,EAAE;EAChC;EAEAC,MAAM,CAACL,GAAG,EAAE;IACV,IAAI,CAAC,IAAI,CAACG,MAAM,IAAIT,MAAM,CAACY,KAAK,CAAC,IAAI,CAACP,YAAY,CAAC,IAAI,IAAI,CAACK,oBAAoB,CAACG,OAAO,CAACP,GAAG,CAACQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;MACvG,OAAO,IAAI;IACb;IACA,IAAIN,GAAG,GAAG,IAAI,CAACJ,WAAW,CAACE,GAAG,CAAC;IAC/B,OAAO,IAAI,CAACD,YAAY,CAACQ,OAAO,CAACL,GAAG,CAAC,KAAK,CAAC,CAAC;EAC9C;EAEAO,eAAe,GAAkB;IAAA,kCAAdV,YAAY;MAAZA,YAAY;IAAA;IAC7B,IAAI,CAACA,YAAY,GAAGL,MAAM,CAACgB,MAAM,CAACX,YAAY,CAAC;EACjD;EAEAY,SAAS,CAACR,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAS,uBAAuB,GAAY;IAAA,mCAARC,MAAM;MAANA,MAAM;IAAA;IAC/B,IAAI,CAACT,oBAAoB,GAAGS,MAAM;EACpC;AACF"},"metadata":{},"sourceType":"module"}