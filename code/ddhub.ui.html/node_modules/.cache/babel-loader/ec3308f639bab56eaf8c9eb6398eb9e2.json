{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { App, LoginBox, ObjectFactory, scout, texts } from '../index';\nimport $ from 'jquery';\nexport default class LoginApp extends App {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   * @param {{bootstrap?: {textsUrl?, localesUrl?, codesUrl?}}} [options] see {@link App.init}\n   * @param {string} [options.logoUrl] the url to the logo. Default is 'logo.png'.\n   * @param {string} [options.authUrl] the url used for the authentication. Default is 'auth'.\n   * @param {string} [options.userDataKey] name of the user parameter in the data object sent with the authentication request. Default is 'user'.\n   * @param {string} [options.passwordDataKey] name of the password parameter in the data object sent with the authentication request. Default is 'password'.\n   * @param {object} [options.additionalData] additional parameters for the data object sent with the authentication request. Default is an empty object.\n   * @param {object} [options.ajaxOptions] the ajax options used for the authentication request. By default only the type is set to POST but it will be extended with the url and the data.\n   * @param {string} [options.redirectUrl] the url to redirect to after a successful login. If not specified the prepareRedirectUrl function is used to compute the redirectUrl.\n   * @param {function} [options.prepareRedirectUrl] function that is called on the redirectUrl before opening it. Default is {@link LoginBox.prepareRedirectUrl}.\n   * @param {string} [options.messageKey] if set a message is displayed above the user field. Default is undefined.\n   * @param {object} [options.texts] texts to be used in the login box. By default the texts provided by the <scout-texts> tags are used, see {@link texts.readFromDOM}.\n   * Otherwise the texts will only be in English.\n   */\n  init(options) {\n    return super.init(options);\n  }\n\n  /**\n   * @override\n   */\n  _prepareEssentials(options) {\n    ObjectFactory.get().init();\n  }\n\n  /**\n   * No bootstrapping required\n   * @override\n   */\n  _doBootstrap(options) {\n    return [];\n  }\n  _init(options) {\n    options = options || {};\n    options.texts = $.extend({}, texts.readFromDOM(), options.texts);\n    this._prepareDOM();\n    let loginBox = scout.create('LoginBox', options);\n    loginBox.render($('body').addClass('login-body'));\n  }\n}","map":{"version":3,"names":["App","LoginBox","ObjectFactory","scout","texts","$","LoginApp","constructor","init","options","_prepareEssentials","get","_doBootstrap","_init","extend","readFromDOM","_prepareDOM","loginBox","create","render","addClass"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/login/LoginApp.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {App, LoginBox, ObjectFactory, scout, texts} from '../index';\nimport $ from 'jquery';\n\nexport default class LoginApp extends App {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   * @param {{bootstrap?: {textsUrl?, localesUrl?, codesUrl?}}} [options] see {@link App.init}\n   * @param {string} [options.logoUrl] the url to the logo. Default is 'logo.png'.\n   * @param {string} [options.authUrl] the url used for the authentication. Default is 'auth'.\n   * @param {string} [options.userDataKey] name of the user parameter in the data object sent with the authentication request. Default is 'user'.\n   * @param {string} [options.passwordDataKey] name of the password parameter in the data object sent with the authentication request. Default is 'password'.\n   * @param {object} [options.additionalData] additional parameters for the data object sent with the authentication request. Default is an empty object.\n   * @param {object} [options.ajaxOptions] the ajax options used for the authentication request. By default only the type is set to POST but it will be extended with the url and the data.\n   * @param {string} [options.redirectUrl] the url to redirect to after a successful login. If not specified the prepareRedirectUrl function is used to compute the redirectUrl.\n   * @param {function} [options.prepareRedirectUrl] function that is called on the redirectUrl before opening it. Default is {@link LoginBox.prepareRedirectUrl}.\n   * @param {string} [options.messageKey] if set a message is displayed above the user field. Default is undefined.\n   * @param {object} [options.texts] texts to be used in the login box. By default the texts provided by the <scout-texts> tags are used, see {@link texts.readFromDOM}.\n   * Otherwise the texts will only be in English.\n   */\n  init(options) {\n    return super.init(options);\n  }\n\n  /**\n   * @override\n   */\n  _prepareEssentials(options) {\n    ObjectFactory.get().init();\n  }\n\n  /**\n   * No bootstrapping required\n   * @override\n   */\n  _doBootstrap(options) {\n    return [];\n  }\n\n  _init(options) {\n    options = options || {};\n    options.texts = $.extend({}, texts.readFromDOM(), options.texts);\n    this._prepareDOM();\n\n    let loginBox = scout.create('LoginBox', options);\n    loginBox.render($('body').addClass('login-body'));\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,GAAG,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,KAAK,EAAEC,KAAK,QAAO,UAAU;AACnE,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,QAAQ,SAASN,GAAG,CAAC;EAExCO,WAAW,GAAG;IACZ,KAAK,EAAE;EACT;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,CAACC,OAAO,EAAE;IACZ,OAAO,KAAK,CAACD,IAAI,CAACC,OAAO,CAAC;EAC5B;;EAEA;AACF;AACA;EACEC,kBAAkB,CAACD,OAAO,EAAE;IAC1BP,aAAa,CAACS,GAAG,EAAE,CAACH,IAAI,EAAE;EAC5B;;EAEA;AACF;AACA;AACA;EACEI,YAAY,CAACH,OAAO,EAAE;IACpB,OAAO,EAAE;EACX;EAEAI,KAAK,CAACJ,OAAO,EAAE;IACbA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvBA,OAAO,CAACL,KAAK,GAAGC,CAAC,CAACS,MAAM,CAAC,CAAC,CAAC,EAAEV,KAAK,CAACW,WAAW,EAAE,EAAEN,OAAO,CAACL,KAAK,CAAC;IAChE,IAAI,CAACY,WAAW,EAAE;IAElB,IAAIC,QAAQ,GAAGd,KAAK,CAACe,MAAM,CAAC,UAAU,EAAET,OAAO,CAAC;IAChDQ,QAAQ,CAACE,MAAM,CAACd,CAAC,CAAC,MAAM,CAAC,CAACe,QAAQ,CAAC,YAAY,CAAC,CAAC;EACnD;AACF"},"metadata":{},"sourceType":"module"}