{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { NumberField, objects } from '../../../index';\nexport default class IntegerField extends NumberField {\n  constructor() {\n    super();\n    this.minValue = IntegerField.MIN_VALUE;\n    this.maxValue = IntegerField.MAX_VALUE;\n  }\n  _getDefaultFormat(locale) {\n    return '#,##0';\n  }\n\n  /**\n   * @override\n   */\n  _parseValue(displayText) {\n    let result = super._parseValue(displayText);\n    if (objects.isNullOrUndefined(result)) {\n      return null;\n    }\n    return this.decimalFormat.round(result, false);\n  }\n}\n_defineProperty(IntegerField, \"MIN_VALUE\", Number.MIN_SAFE_INTEGER);\n_defineProperty(IntegerField, \"MAX_VALUE\", Number.MAX_SAFE_INTEGER);","map":{"version":3,"names":["NumberField","objects","IntegerField","constructor","minValue","MIN_VALUE","maxValue","MAX_VALUE","_getDefaultFormat","locale","_parseValue","displayText","result","isNullOrUndefined","decimalFormat","round","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/integerfield/IntegerField.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {NumberField, objects} from '../../../index';\n\nexport default class IntegerField extends NumberField {\n\n  static MIN_VALUE = Number.MIN_SAFE_INTEGER;\n  static MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n  constructor() {\n    super();\n    this.minValue = IntegerField.MIN_VALUE;\n    this.maxValue = IntegerField.MAX_VALUE;\n  }\n\n  _getDefaultFormat(locale) {\n    return '#,##0';\n  }\n\n  /**\n   * @override\n   */\n  _parseValue(displayText) {\n    let result = super._parseValue(displayText);\n    if (objects.isNullOrUndefined(result)) {\n      return null;\n    }\n    return this.decimalFormat.round(result, false);\n  }\n\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,WAAW,EAAEC,OAAO,QAAO,gBAAgB;AAEnD,eAAe,MAAMC,YAAY,SAASF,WAAW,CAAC;EAKpDG,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,QAAQ,GAAGF,YAAY,CAACG,SAAS;IACtC,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAACK,SAAS;EACxC;EAEAC,iBAAiB,CAACC,MAAM,EAAE;IACxB,OAAO,OAAO;EAChB;;EAEA;AACF;AACA;EACEC,WAAW,CAACC,WAAW,EAAE;IACvB,IAAIC,MAAM,GAAG,KAAK,CAACF,WAAW,CAACC,WAAW,CAAC;IAC3C,IAAIV,OAAO,CAACY,iBAAiB,CAACD,MAAM,CAAC,EAAE;MACrC,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACE,aAAa,CAACC,KAAK,CAACH,MAAM,EAAE,KAAK,CAAC;EAChD;AAEF;AAAC,gBA1BoBV,YAAY,eAEZc,MAAM,CAACC,gBAAgB;AAAA,gBAFvBf,YAAY,eAGZc,MAAM,CAACE,gBAAgB"},"metadata":{},"sourceType":"module"}