{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, HtmlComponent, Rectangle, webstorage } from '../../index';\nimport $ from 'jquery';\nexport default class FlexboxLayout extends AbstractLayout {\n  constructor(direction, cacheKey) {\n    super();\n    this.childrenLayoutDatas = [];\n    this.cacheKey = null;\n    this.setCacheKey(cacheKey);\n    if (direction === FlexboxLayout.Direction.ROW) {\n      this.preferredLayoutSize = this.preferredLayoutSizeRow;\n      this._getDimensionValue = this._getWidth;\n      this._layoutFromLayoutData = this._layoutFromLayoutDataRow;\n    } else {\n      this.preferredLayoutSize = this.preferredLayoutSizeColumn;\n      this._getDimensionValue = this._getHeight;\n      this._layoutFromLayoutData = this._layoutFromLayoutDataColumn;\n    }\n  }\n\n  // constants\n\n  setCacheKey(cacheKey) {\n    this.cacheKey = cacheKey;\n    if (this.cacheKey && this.cacheKey.length > 0) {\n      this.cacheKey.unshift('scout.flexboxLayout');\n    }\n  }\n  _readCache(childCount) {\n    if (!this.cacheKey || this.cacheKey.length === 0 || childCount < 2) {\n      return;\n    }\n    let keySequence = this.cacheKey.slice(),\n      cacheValue = webstorage.getItemFromLocalStorage(keySequence[0]),\n      i = 1,\n      cacheObj;\n    keySequence.push('' + childCount);\n    if (cacheValue) {\n      cacheObj = JSON.parse(cacheValue);\n    }\n    while (cacheObj && i < keySequence.length) {\n      cacheObj = cacheObj[keySequence[i]];\n      i++;\n    }\n    return cacheObj;\n  }\n  _writeCache(childCount, sizes) {\n    if (!this.cacheKey || this.cacheKey.length === 0 || childCount < 2) {\n      return;\n    }\n    let keySequence = this.cacheKey.slice(),\n      cacheValue = webstorage.getItemFromLocalStorage(keySequence[0]),\n      i = 1,\n      cacheObj,\n      cachedSizes;\n    keySequence.push('' + childCount);\n    if (cacheValue) {\n      cacheObj = JSON.parse(cacheValue);\n    } else {\n      cacheObj = {};\n    }\n    cachedSizes = cacheObj;\n    while (i < keySequence.length - 1) {\n      if (!cachedSizes[keySequence[i]]) {\n        cachedSizes[keySequence[i]] = {};\n      }\n      cachedSizes = cachedSizes[keySequence[i]];\n      i++;\n    }\n    cachedSizes[keySequence[i]] = sizes;\n    webstorage.setItemToLocalStorage(keySequence[0], JSON.stringify(cacheObj));\n  }\n  _computeCacheKey(childCount) {\n    // no need to cache bounds of a single child\n    if (!this.cacheKey || childCount < 2) {\n      return;\n    }\n    return this.cacheKey + '-' + childCount;\n  }\n\n  // layout functions\n  layout($container) {\n    let children = this._getChildren($container),\n      htmlContainer = HtmlComponent.get($container),\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      }),\n      splitterWithDelta;\n    containerSize = containerSize.subtract(htmlContainer.insets());\n    splitterWithDelta = children.filter(c => {\n      return c.layoutData.diff;\n    })[0];\n    if (splitterWithDelta) {\n      this._layoutDelta(children, splitterWithDelta, containerSize);\n    } else {\n      this._layoutComponents(children, containerSize);\n    }\n  }\n  _getChildren($container) {\n    let children = [];\n    $container.children().each(function () {\n      let htmlChild = HtmlComponent.optGet($(this));\n      if (htmlChild) {\n        children.push(htmlChild);\n      }\n    });\n    children = children.sort((a, b) => {\n      return (a.layoutData.order || 0) - (b.layoutData.order || 0);\n    });\n    return children;\n  }\n  reset() {\n    this.childrenLayoutDatas.forEach(ld => {\n      ld.sizePx = 0;\n      ld.initialPx = 0;\n      ld.diff = null;\n    });\n    this.childrenLayoutDatas = [];\n  }\n  _layoutDelta(children, deltaComp, containerSize) {\n    this.ensureInitialValues(children, containerSize);\n    let delta = deltaComp.layoutData.diff,\n      componentsBefore = children.slice(0, children.indexOf(deltaComp)).reverse(),\n      componentsAfter = children.slice(children.indexOf(deltaComp) + 1),\n      deltaDiffPrev,\n      deltaDiffNext;\n\n    // calculate if the delta can be applied to the previous and following columns\n    deltaDiffPrev = _distributeDelta(componentsBefore, delta, false);\n    deltaDiffNext = -_distributeDelta(componentsAfter, -delta, false);\n    // compute the max delta could be applied\n\n    delta = Math.sign(delta) * Math.min(Math.abs(delta - deltaDiffPrev), Math.abs(delta - deltaDiffNext));\n    if (delta !== 0) {\n      // apply the delta to the previous and following columns\n      _distributeDelta(componentsBefore, delta, true);\n      _distributeDelta(componentsAfter, -delta, true);\n    }\n    this._layoutFromLayoutDataWithCache(children, containerSize);\n\n    /* private functions */\n    function _distributeDelta(components, delta, applyDelta) {\n      return components.reduce((diff, c) => {\n        if (diff !== 0) {\n          diff = c.layoutData.acceptDelta(diff, applyDelta);\n        }\n        return diff;\n      }, delta);\n    }\n  }\n  _layoutComponents(children, containerSize) {\n    let delta = this.ensureInitialValues(children, containerSize);\n    if (delta < 0) {\n      this._adjust(children, delta, ld => {\n        return ld.shrink;\n      });\n    } else if (delta > 0) {\n      this._adjust(children, delta, ld => {\n        return ld.grow;\n      });\n    }\n    this._layoutFromLayoutDataWithCache(children, containerSize);\n  }\n  _adjust(children, delta, getWeightFunction) {\n    let weightSum,\n      deltaFactor,\n      layoutDatas = children.map(c => {\n        return c.layoutData;\n      }).filter(ld => {\n        // resizable\n        return ld.acceptDelta(Math.sign(delta)) === 0;\n      });\n    if (layoutDatas.length < 1) {\n      return;\n    }\n    weightSum = layoutDatas.reduce((sum, ld) => {\n      return sum + getWeightFunction(ld);\n    }, 0);\n\n    // delta factor\n    deltaFactor = delta / weightSum;\n    delta = layoutDatas.reduce((delta, ld) => {\n      return ld.acceptDelta(deltaFactor * getWeightFunction(ld), true);\n    }, delta);\n    if (Math.abs(delta) > 0.2) {\n      this._adjust(children, delta, getWeightFunction);\n    }\n  }\n  _getPreferredSize(htmlComp) {\n    let prefSize;\n    prefSize = htmlComp.prefSize({\n      useCssSize: true\n    }).add(htmlComp.margins());\n    return prefSize;\n  }\n  ensureInitialValues(children, containerSize) {\n    let totalPx = this._getDimensionValue(containerSize),\n      sumOfAbsolutePx = 0,\n      sumOfRelatives = 0,\n      colLayoutDatas = children.map(c => {\n        return c.layoutData;\n      }),\n      cachedSizes = this._readCache(children.length) || [];\n\n    // setup initial values\n    children.forEach((comp, i) => {\n      let ld = comp.layoutData;\n      if (ld.sizePx) {\n        sumOfAbsolutePx += ld.sizePx;\n      } else if (ld.initial < 0) {\n        // use ui height\n        ld.initialPx = this._getDimensionValue(this._getPreferredSize(comp));\n        sumOfAbsolutePx += ld.initialPx;\n      } else if (ld.relative) {\n        sumOfRelatives += ld.initial;\n      } else {\n        ld.initialPx = ld.initial;\n        sumOfAbsolutePx += ld.initialPx;\n      }\n    });\n    let relativeFactor = (totalPx - sumOfAbsolutePx) / sumOfRelatives;\n    colLayoutDatas.filter(ld => {\n      return ld.relative && ld.initial > -1 && !ld.sizePx;\n    }).reduce((restWidth, ld) => {\n      ld.initialPx = Math.max(30, relativeFactor * ld.initial);\n      return restWidth - ld.initialPx;\n    }, totalPx - sumOfAbsolutePx);\n\n    // set px values\n    return colLayoutDatas.reduce((restWidth, ld, i) => {\n      if (!ld.sizePx) {\n        if (cachedSizes[i]) {\n          ld.sizePx = ld.validate(Math.round(totalPx * cachedSizes[i]));\n        } else {\n          ld.sizePx = ld.initialPx;\n        }\n      }\n      this.childrenLayoutDatas.push(ld);\n      return restWidth - ld.sizePx;\n    }, totalPx);\n  }\n  _layoutFromLayoutDataWithCache(children, containerSize) {\n    this._cacheSizes(children, containerSize);\n    this._layoutFromLayoutData(children, containerSize);\n  }\n  _cacheSizes(children, containerSize) {\n    let totalPx = this._getDimensionValue(containerSize),\n      value;\n    value = children.map(c => {\n      return c.layoutData.sizePx / totalPx;\n    });\n    this._writeCache(children.length, value);\n  }\n\n  // functions differ from row to column mode\n\n  preferredLayoutSizeColumn($container, options) {\n    return this._getChildren($container).reduce((size, c) => {\n      let prefSize = this._getPreferredSize(c);\n      size.width = Math.max(prefSize.width, size.width);\n      size.height += prefSize.height;\n      return size;\n    }, new Dimension(0, 0));\n  }\n  preferredLayoutSizeRow($container, options) {\n    return this._getChildren($container).reduce((size, c) => {\n      let prefSize = this._getPreferredSize(c);\n      size.height = Math.max(prefSize.height, size.height);\n      size.width += prefSize.width;\n      return size;\n    }, new Dimension(0, 0));\n  }\n  _getWidth(dimension) {\n    return dimension.width;\n  }\n  _getHeight(dimension) {\n    return dimension.height;\n  }\n  _layoutFromLayoutDataRow(children, containerSize) {\n    children.reduce((x, comp) => {\n      let margins = comp.margins();\n      let insets = comp.insets();\n      let w = comp.layoutData.sizePx;\n      let bounds = new Rectangle(x - insets.left - margins.left, 0, w + insets.left + insets.right, containerSize.height);\n      comp.setBounds(bounds);\n      return x + w;\n    }, 0);\n  }\n  _layoutFromLayoutDataColumn(children, containerSize) {\n    children.reduce((y, comp) => {\n      let margins = comp.margins();\n      let insets = comp.insets();\n      let h = comp.layoutData.sizePx;\n      let bounds = new Rectangle(0, y - insets.top - margins.top, containerSize.width, h + insets.top + insets.bottom);\n      comp.setBounds(bounds);\n      return y + h;\n    }, 0);\n  }\n}\n_defineProperty(FlexboxLayout, \"Direction\", {\n  COLUMN: 0,\n  ROW: 1\n});","map":{"version":3,"names":["AbstractLayout","Dimension","HtmlComponent","Rectangle","webstorage","$","FlexboxLayout","constructor","direction","cacheKey","childrenLayoutDatas","setCacheKey","Direction","ROW","preferredLayoutSize","preferredLayoutSizeRow","_getDimensionValue","_getWidth","_layoutFromLayoutData","_layoutFromLayoutDataRow","preferredLayoutSizeColumn","_getHeight","_layoutFromLayoutDataColumn","length","unshift","_readCache","childCount","keySequence","slice","cacheValue","getItemFromLocalStorage","i","cacheObj","push","JSON","parse","_writeCache","sizes","cachedSizes","setItemToLocalStorage","stringify","_computeCacheKey","layout","$container","children","_getChildren","htmlContainer","get","containerSize","availableSize","exact","splitterWithDelta","subtract","insets","filter","c","layoutData","diff","_layoutDelta","_layoutComponents","each","htmlChild","optGet","sort","a","b","order","reset","forEach","ld","sizePx","initialPx","deltaComp","ensureInitialValues","delta","componentsBefore","indexOf","reverse","componentsAfter","deltaDiffPrev","deltaDiffNext","_distributeDelta","Math","sign","min","abs","_layoutFromLayoutDataWithCache","components","applyDelta","reduce","acceptDelta","_adjust","shrink","grow","getWeightFunction","weightSum","deltaFactor","layoutDatas","map","sum","_getPreferredSize","htmlComp","prefSize","useCssSize","add","margins","totalPx","sumOfAbsolutePx","sumOfRelatives","colLayoutDatas","comp","initial","relative","relativeFactor","restWidth","max","validate","round","_cacheSizes","value","options","size","width","height","dimension","x","w","bounds","left","right","setBounds","y","h","top","bottom","COLUMN"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/flexbox/FlexboxLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, HtmlComponent, Rectangle, webstorage} from '../../index';\nimport $ from 'jquery';\n\nexport default class FlexboxLayout extends AbstractLayout {\n\n  constructor(direction, cacheKey) {\n    super();\n    this.childrenLayoutDatas = [];\n    this.cacheKey = null;\n    this.setCacheKey(cacheKey);\n    if (direction === FlexboxLayout.Direction.ROW) {\n      this.preferredLayoutSize = this.preferredLayoutSizeRow;\n      this._getDimensionValue = this._getWidth;\n      this._layoutFromLayoutData = this._layoutFromLayoutDataRow;\n    } else {\n      this.preferredLayoutSize = this.preferredLayoutSizeColumn;\n      this._getDimensionValue = this._getHeight;\n      this._layoutFromLayoutData = this._layoutFromLayoutDataColumn;\n    }\n  }\n\n  // constants\n  static Direction = {\n    COLUMN: 0,\n    ROW: 1\n  };\n\n  setCacheKey(cacheKey) {\n    this.cacheKey = cacheKey;\n    if (this.cacheKey && this.cacheKey.length > 0) {\n      this.cacheKey.unshift('scout.flexboxLayout');\n    }\n  }\n\n  _readCache(childCount) {\n    if (!this.cacheKey || this.cacheKey.length === 0 || childCount < 2) {\n      return;\n    }\n    let keySequence = this.cacheKey.slice(),\n      cacheValue = webstorage.getItemFromLocalStorage(keySequence[0]),\n      i = 1,\n      cacheObj;\n    keySequence.push('' + childCount);\n    if (cacheValue) {\n      cacheObj = JSON.parse(cacheValue);\n    }\n    while (cacheObj && i < keySequence.length) {\n      cacheObj = cacheObj[keySequence[i]];\n      i++;\n    }\n    return cacheObj;\n  }\n\n  _writeCache(childCount, sizes) {\n    if (!this.cacheKey || this.cacheKey.length === 0 || childCount < 2) {\n      return;\n    }\n    let keySequence = this.cacheKey.slice(),\n      cacheValue = webstorage.getItemFromLocalStorage(keySequence[0]),\n      i = 1,\n      cacheObj,\n      cachedSizes;\n    keySequence.push('' + childCount);\n    if (cacheValue) {\n      cacheObj = JSON.parse(cacheValue);\n    } else {\n      cacheObj = {};\n    }\n    cachedSizes = cacheObj;\n    while (i < keySequence.length - 1) {\n      if (!cachedSizes[keySequence[i]]) {\n        cachedSizes[keySequence[i]] = {};\n      }\n      cachedSizes = cachedSizes[keySequence[i]];\n      i++;\n    }\n    cachedSizes[keySequence[i]] = sizes;\n    webstorage.setItemToLocalStorage(keySequence[0], JSON.stringify(cacheObj));\n  }\n\n  _computeCacheKey(childCount) {\n    // no need to cache bounds of a single child\n    if (!this.cacheKey || childCount < 2) {\n      return;\n    }\n    return this.cacheKey + '-' + childCount;\n  }\n\n  // layout functions\n  layout($container) {\n    let children = this._getChildren($container),\n      htmlContainer = HtmlComponent.get($container),\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      }),\n      splitterWithDelta;\n\n    containerSize = containerSize.subtract(htmlContainer.insets());\n\n    splitterWithDelta = children.filter(c => {\n      return c.layoutData.diff;\n    })[0];\n\n    if (splitterWithDelta) {\n      this._layoutDelta(children, splitterWithDelta, containerSize);\n    } else {\n      this._layoutComponents(children, containerSize);\n    }\n  }\n\n  _getChildren($container) {\n    let children = [];\n    $container.children().each(function() {\n      let htmlChild = HtmlComponent.optGet($(this));\n      if (htmlChild) {\n        children.push(htmlChild);\n      }\n    });\n    children = children.sort((a, b) => {\n      return (a.layoutData.order || 0) - (b.layoutData.order || 0);\n    });\n    return children;\n  }\n\n  reset() {\n    this.childrenLayoutDatas.forEach(ld => {\n      ld.sizePx = 0;\n      ld.initialPx = 0;\n      ld.diff = null;\n    });\n    this.childrenLayoutDatas = [];\n  }\n\n  _layoutDelta(children, deltaComp, containerSize) {\n    this.ensureInitialValues(children, containerSize);\n    let delta = deltaComp.layoutData.diff,\n      componentsBefore = children.slice(0, children.indexOf(deltaComp)).reverse(),\n      componentsAfter = children.slice(children.indexOf(deltaComp) + 1),\n      deltaDiffPrev,\n      deltaDiffNext;\n\n    // calculate if the delta can be applied to the previous and following columns\n    deltaDiffPrev = _distributeDelta(componentsBefore, delta, false);\n    deltaDiffNext = -_distributeDelta(componentsAfter, -delta, false);\n    // compute the max delta could be applied\n\n    delta = Math.sign(delta) * (Math.min(Math.abs(delta - deltaDiffPrev), Math.abs(delta - deltaDiffNext)));\n\n    if (delta !== 0) {\n      // apply the delta to the previous and following columns\n      _distributeDelta(componentsBefore, delta, true);\n      _distributeDelta(componentsAfter, -delta, true);\n    }\n\n    this._layoutFromLayoutDataWithCache(children, containerSize);\n\n    /* private functions */\n    function _distributeDelta(components, delta, applyDelta) {\n      return components.reduce((diff, c) => {\n        if (diff !== 0) {\n          diff = c.layoutData.acceptDelta(diff, applyDelta);\n        }\n        return diff;\n      }, delta);\n    }\n  }\n\n  _layoutComponents(children, containerSize) {\n    let delta = this.ensureInitialValues(children, containerSize);\n    if (delta < 0) {\n      this._adjust(children, delta, ld => {\n        return ld.shrink;\n      });\n    } else if (delta > 0) {\n      this._adjust(children, delta, ld => {\n        return ld.grow;\n      });\n    }\n    this._layoutFromLayoutDataWithCache(children, containerSize);\n  }\n\n  _adjust(children, delta, getWeightFunction) {\n    let weightSum,\n      deltaFactor,\n      layoutDatas = children.map(c => {\n        return c.layoutData;\n      }).filter(ld => {\n        // resizable\n        return ld.acceptDelta(Math.sign(delta)) === 0;\n      });\n\n    if (layoutDatas.length < 1) {\n      return;\n    }\n\n    weightSum = layoutDatas.reduce((sum, ld) => {\n      return sum + getWeightFunction(ld);\n    }, 0);\n\n    // delta factor\n    deltaFactor = delta / weightSum;\n    delta = layoutDatas.reduce((delta, ld) => {\n      return ld.acceptDelta(deltaFactor * getWeightFunction(ld), true);\n    }, delta);\n    if (Math.abs(delta) > 0.2) {\n      this._adjust(children, delta, getWeightFunction);\n    }\n\n  }\n\n  _getPreferredSize(htmlComp) {\n    let prefSize;\n    prefSize = htmlComp.prefSize({\n      useCssSize: true\n    })\n      .add(htmlComp.margins());\n    return prefSize;\n  }\n\n  ensureInitialValues(children, containerSize) {\n    let totalPx = this._getDimensionValue(containerSize),\n      sumOfAbsolutePx = 0,\n      sumOfRelatives = 0,\n      colLayoutDatas = children.map(c => {\n        return c.layoutData;\n      }),\n      cachedSizes = this._readCache(children.length) || [];\n\n    // setup initial values\n    children.forEach((comp, i) => {\n      let ld = comp.layoutData;\n\n      if (ld.sizePx) {\n        sumOfAbsolutePx += ld.sizePx;\n      } else if (ld.initial < 0) {\n        // use ui height\n        ld.initialPx = this._getDimensionValue(this._getPreferredSize(comp));\n        sumOfAbsolutePx += ld.initialPx;\n\n      } else if (ld.relative) {\n        sumOfRelatives += ld.initial;\n      } else {\n        ld.initialPx = ld.initial;\n        sumOfAbsolutePx += ld.initialPx;\n      }\n\n    });\n\n    let relativeFactor = (totalPx - sumOfAbsolutePx) / sumOfRelatives;\n    colLayoutDatas.filter(ld => {\n      return ld.relative && ld.initial > -1 && !ld.sizePx;\n    }).reduce((restWidth, ld) => {\n      ld.initialPx = Math.max(30, relativeFactor * ld.initial);\n      return restWidth - ld.initialPx;\n    }, (totalPx - sumOfAbsolutePx));\n\n    // set px values\n    return colLayoutDatas\n      .reduce((restWidth, ld, i) => {\n        if (!ld.sizePx) {\n          if (cachedSizes[i]) {\n            ld.sizePx = ld.validate(Math.round(totalPx * cachedSizes[i]));\n          } else {\n            ld.sizePx = ld.initialPx;\n          }\n        }\n        this.childrenLayoutDatas.push(ld);\n        return restWidth - ld.sizePx;\n      }, totalPx);\n\n  }\n\n  _layoutFromLayoutDataWithCache(children, containerSize) {\n    this._cacheSizes(children, containerSize);\n    this._layoutFromLayoutData(children, containerSize);\n  }\n\n  _cacheSizes(children, containerSize) {\n    let totalPx = this._getDimensionValue(containerSize),\n      value;\n    value = children.map(c => {\n      return c.layoutData.sizePx / totalPx;\n    });\n    this._writeCache(children.length, value);\n  }\n\n  // functions differ from row to column mode\n\n  preferredLayoutSizeColumn($container, options) {\n    return this._getChildren($container).reduce((size, c) => {\n      let prefSize = this._getPreferredSize(c);\n      size.width = Math.max(prefSize.width, size.width);\n      size.height += prefSize.height;\n      return size;\n    }, new Dimension(0, 0));\n  }\n\n  preferredLayoutSizeRow($container, options) {\n    return this._getChildren($container).reduce((size, c) => {\n      let prefSize = this._getPreferredSize(c);\n      size.height = Math.max(prefSize.height, size.height);\n      size.width += prefSize.width;\n      return size;\n    }, new Dimension(0, 0));\n  }\n\n  _getWidth(dimension) {\n    return dimension.width;\n  }\n\n  _getHeight(dimension) {\n    return dimension.height;\n  }\n\n  _layoutFromLayoutDataRow(children, containerSize) {\n    children.reduce((x, comp) => {\n      let margins = comp.margins();\n      let insets = comp.insets();\n      let w = comp.layoutData.sizePx;\n      let bounds = new Rectangle(x - insets.left - margins.left, 0, w + insets.left + insets.right, containerSize.height);\n      comp.setBounds(bounds);\n      return x + w;\n    }, 0);\n  }\n\n  _layoutFromLayoutDataColumn(children, containerSize) {\n    children.reduce((y, comp) => {\n      let margins = comp.margins();\n      let insets = comp.insets();\n      let h = comp.layoutData.sizePx;\n      let bounds = new Rectangle(0, y - insets.top - margins.top, containerSize.width, h + insets.top + insets.bottom);\n      comp.setBounds(bounds);\n      return y + h;\n    }, 0);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}