{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, objects, ResponsiveManager } from '../index';\nimport $ from 'jquery';\nexport default class ResponsiveHandler {\n  constructor() {\n    this.widget = null;\n    this.compactThreshold = -1;\n    this.condensedThreshold = -1;\n    this.oldState = ResponsiveManager.ResponsiveState.NORMAL;\n    this.state = ResponsiveManager.ResponsiveState.NORMAL;\n    this.allowedStates = [ResponsiveManager.ResponsiveState.NORMAL, ResponsiveManager.ResponsiveState.COMPACT];\n    this.transformations = objects.createMap();\n    this.enabledTransformations = objects.createMap();\n\n    // Event handlers\n    this._destroyHandler = this._onDestroy.bind(this);\n  }\n  init(model) {\n    $.extend(this, model);\n    this.widget.one('destroy', this._destroyHandler);\n  }\n  destroy() {\n    this.widget.off('destroy', this._destroyHandler);\n  }\n  getCompactThreshold() {\n    return this.compactThreshold;\n  }\n  getCondensedThreshold() {\n    return this.condensedThreshold;\n  }\n  active() {\n    return true;\n  }\n  setAllowedStates(allowedStates) {\n    this.allowedStates = allowedStates;\n  }\n  acceptState(newState) {\n    return arrays.containsAny(this.allowedStates, newState);\n  }\n\n  /**\n   * Register a transformation with a given transformation id. The transformation id has to be unique.\n   */\n  _registerTransformation(transformationId, transformation) {\n    this.transformations[transformationId] = transformation.bind(this);\n  }\n\n  /**\n   * Enable a transformation for a given state. Once the responsive handler changes in to the given state,\n   * the transformation will be applied.\n   * Before a transformation can be enabled, it has to be registered first.\n   */\n  _enableTransformation(state, transformationId) {\n    let transformationIds = this.enabledTransformations[state];\n    if (!transformationIds) {\n      transformationIds = [];\n      this.enabledTransformations[state] = transformationIds;\n    }\n    transformationIds.push(transformationId);\n  }\n\n  /**\n   * Disable a transformation for a given state.\n   */\n  _disableTransformation(state, transformationId) {\n    arrays.remove(this.enabledTransformations[state], transformationId);\n  }\n\n  /* --- TRANSFORMATIONS ------------------------------------------------------------- */\n\n  _storeFieldProperty(widget, property, value) {\n    widget._setProperty('responsive-' + property, value);\n  }\n  _hasFieldProperty(widget, property) {\n    return widget.hasOwnProperty('responsive-' + property);\n  }\n  _getFieldProperty(widget, property) {\n    return widget['responsive-' + property];\n  }\n\n  /**\n   * Performs the transformations and computes which transformations have to be applied and which have to be reset.\n   * Transformations to be applied are the ones enabled for the new state, but not for the old state.\n   * The ones to be reset are those enabled of the old state but not for the new state.\n   */\n  transform(newState, force) {\n    if (this.state === newState && !force) {\n      return false;\n    }\n    this.oldState = this.state;\n    this.state = newState;\n    let oldTransformations;\n    let newTransformations;\n    if (this.oldState !== this.state) {\n      oldTransformations = this.enabledTransformations[this.oldState] || [];\n      newTransformations = this.enabledTransformations[this.state] || [];\n    } else {\n      // if the state stays the same, it means we want to enforce the current state. Therefore the new transformations\n      // will contained the transformations of the current state. The old transformations will contain all others.\n      oldTransformations = [];\n      if (this.state !== ResponsiveManager.ResponsiveState.NORMAL) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.NORMAL]);\n      }\n      if (this.state !== ResponsiveManager.ResponsiveState.CONDENSED) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.CONDENSED]);\n      }\n      if (this.state !== ResponsiveManager.ResponsiveState.COMPACT) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.COMPACT]);\n      }\n      newTransformations = this.enabledTransformations[this.state] || [];\n    }\n    this._transformationsToApply = arrays.diff(newTransformations, oldTransformations);\n    this._transformationsToReset = arrays.diff(oldTransformations, newTransformations);\n    this._transform();\n    return true;\n  }\n\n  /**\n   * Performs all the transformations. By default this method calls _transformWidget() for the own widget.\n   * If e.g. child elements need to be transformed as well, override this method and call _transformWidget() for\n   * each child as well.\n   */\n  _transform() {\n    this._transformWidget(this.widget);\n  }\n  _transformWidget(widget) {\n    this._transformationsToApply.forEach(transformationType => {\n      this.transformations[transformationType](widget, true);\n    });\n    this._transformationsToReset.forEach(transformationType => {\n      this.transformations[transformationType](widget, false);\n    });\n  }\n\n  /* --- HANDLERS ------------------------------------------------------------- */\n  _onDestroy(event) {\n    this.destroy();\n  }\n}","map":{"version":3,"names":["arrays","objects","ResponsiveManager","$","ResponsiveHandler","constructor","widget","compactThreshold","condensedThreshold","oldState","ResponsiveState","NORMAL","state","allowedStates","COMPACT","transformations","createMap","enabledTransformations","_destroyHandler","_onDestroy","bind","init","model","extend","one","destroy","off","getCompactThreshold","getCondensedThreshold","active","setAllowedStates","acceptState","newState","containsAny","_registerTransformation","transformationId","transformation","_enableTransformation","transformationIds","push","_disableTransformation","remove","_storeFieldProperty","property","value","_setProperty","_hasFieldProperty","hasOwnProperty","_getFieldProperty","transform","force","oldTransformations","newTransformations","pushAll","CONDENSED","_transformationsToApply","diff","_transformationsToReset","_transform","_transformWidget","forEach","transformationType","event"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/ResponsiveHandler.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, objects, ResponsiveManager} from '../index';\nimport $ from 'jquery';\n\nexport default class ResponsiveHandler {\n\n  constructor() {\n    this.widget = null;\n    this.compactThreshold = -1;\n    this.condensedThreshold = -1;\n\n    this.oldState = ResponsiveManager.ResponsiveState.NORMAL;\n    this.state = ResponsiveManager.ResponsiveState.NORMAL;\n    this.allowedStates = [ResponsiveManager.ResponsiveState.NORMAL, ResponsiveManager.ResponsiveState.COMPACT];\n\n    this.transformations = objects.createMap();\n    this.enabledTransformations = objects.createMap();\n\n    // Event handlers\n    this._destroyHandler = this._onDestroy.bind(this);\n  }\n\n  init(model) {\n    $.extend(this, model);\n\n    this.widget.one('destroy', this._destroyHandler);\n  }\n\n  destroy() {\n    this.widget.off('destroy', this._destroyHandler);\n  }\n\n  getCompactThreshold() {\n    return this.compactThreshold;\n  }\n\n  getCondensedThreshold() {\n    return this.condensedThreshold;\n  }\n\n  active() {\n    return true;\n  }\n\n  setAllowedStates(allowedStates) {\n    this.allowedStates = allowedStates;\n  }\n\n  acceptState(newState) {\n    return arrays.containsAny(this.allowedStates, newState);\n  }\n\n  /**\n   * Register a transformation with a given transformation id. The transformation id has to be unique.\n   */\n  _registerTransformation(transformationId, transformation) {\n    this.transformations[transformationId] = transformation.bind(this);\n  }\n\n  /**\n   * Enable a transformation for a given state. Once the responsive handler changes in to the given state,\n   * the transformation will be applied.\n   * Before a transformation can be enabled, it has to be registered first.\n   */\n  _enableTransformation(state, transformationId) {\n    let transformationIds = this.enabledTransformations[state];\n    if (!transformationIds) {\n      transformationIds = [];\n      this.enabledTransformations[state] = transformationIds;\n    }\n    transformationIds.push(transformationId);\n  }\n\n  /**\n   * Disable a transformation for a given state.\n   */\n  _disableTransformation(state, transformationId) {\n    arrays.remove(this.enabledTransformations[state], transformationId);\n  }\n\n  /* --- TRANSFORMATIONS ------------------------------------------------------------- */\n\n  _storeFieldProperty(widget, property, value) {\n    widget._setProperty('responsive-' + property, value);\n  }\n\n  _hasFieldProperty(widget, property) {\n    return widget.hasOwnProperty('responsive-' + property);\n  }\n\n  _getFieldProperty(widget, property) {\n    return widget['responsive-' + property];\n  }\n\n  /**\n   * Performs the transformations and computes which transformations have to be applied and which have to be reset.\n   * Transformations to be applied are the ones enabled for the new state, but not for the old state.\n   * The ones to be reset are those enabled of the old state but not for the new state.\n   */\n  transform(newState, force) {\n    if (this.state === newState && !force) {\n      return false;\n    }\n\n    this.oldState = this.state;\n    this.state = newState;\n\n    let oldTransformations;\n    let newTransformations;\n    if (this.oldState !== this.state) {\n      oldTransformations = this.enabledTransformations[this.oldState] || [];\n      newTransformations = this.enabledTransformations[this.state] || [];\n    } else {\n      // if the state stays the same, it means we want to enforce the current state. Therefore the new transformations\n      // will contained the transformations of the current state. The old transformations will contain all others.\n      oldTransformations = [];\n      if (this.state !== ResponsiveManager.ResponsiveState.NORMAL) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.NORMAL]);\n      }\n      if (this.state !== ResponsiveManager.ResponsiveState.CONDENSED) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.CONDENSED]);\n      }\n      if (this.state !== ResponsiveManager.ResponsiveState.COMPACT) {\n        arrays.pushAll(oldTransformations, this.enabledTransformations[ResponsiveManager.ResponsiveState.COMPACT]);\n      }\n      newTransformations = this.enabledTransformations[this.state] || [];\n    }\n\n    this._transformationsToApply = arrays.diff(newTransformations, oldTransformations);\n    this._transformationsToReset = arrays.diff(oldTransformations, newTransformations);\n\n    this._transform();\n    return true;\n  }\n\n  /**\n   * Performs all the transformations. By default this method calls _transformWidget() for the own widget.\n   * If e.g. child elements need to be transformed as well, override this method and call _transformWidget() for\n   * each child as well.\n   */\n  _transform() {\n    this._transformWidget(this.widget);\n  }\n\n  _transformWidget(widget) {\n    this._transformationsToApply.forEach(transformationType => {\n      this.transformations[transformationType](widget, true);\n    });\n\n    this._transformationsToReset.forEach(transformationType => {\n      this.transformations[transformationType](widget, false);\n    });\n  }\n\n  /* --- HANDLERS ------------------------------------------------------------- */\n  _onDestroy(event) {\n    this.destroy();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}