{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { MessageBox, scout, Status, strings } from '../index';\nimport $ from 'jquery';\n\n/**\n * This class is a convenient builder for creating message boxes. Use the static functions to\n * create and open simple and often used message boxes.\n */\nexport default class MessageBoxes {\n  constructor() {\n    this.parent = null;\n    this.yesText = null;\n    this.noText = null;\n    this.cancelText = null;\n    this.bodyText = null;\n    this.severity = Status.Severity.INFO;\n    this.headerText = null;\n    this.iconId = null;\n    this.closeOnClick = true;\n    this.html = false;\n  }\n  init(options) {\n    scout.assertParameter('parent', options.parent);\n    $.extend(this, options);\n  }\n  withHeader(headerText) {\n    this.headerText = headerText;\n    return this;\n  }\n\n  /**\n   * @param bodyText\n   * @param {boolean} [html] Set to true if body must contain HTML, default is false\n   * @returns {MessageBoxes}\n   */\n  withBody(bodyText, html) {\n    this.bodyText = bodyText;\n    this.html = scout.nvl(html, false);\n    return this;\n  }\n  withIconId(iconId) {\n    this.iconId = iconId;\n    return this;\n  }\n  withSeverity(severity) {\n    this.severity = scout.nvl(severity, Status.Severity.INFO);\n    return this;\n  }\n  withYes(yesText) {\n    this.yesText = scout.nvl(yesText, this.parent.session.text('Yes'));\n    return this;\n  }\n  withNo(noText) {\n    this.noText = scout.nvl(noText, this.parent.session.text('No'));\n    return this;\n  }\n  withCancel(cancelText) {\n    this.cancelText = scout.nvl(cancelText, this.parent.session.text('Cancel'));\n    return this;\n  }\n  build() {\n    let options = {\n      parent: this.parent,\n      header: this.headerText,\n      body: this.bodyText,\n      severity: this.severity\n    };\n    if (strings.hasText(this.iconId)) {\n      options.iconId = this.iconId;\n    }\n    if (strings.hasText(this.yesText)) {\n      options.yesButtonText = this.yesText;\n    }\n    if (strings.hasText(this.noText)) {\n      options.noButtonText = this.noText;\n    }\n    if (strings.hasText(this.cancelText)) {\n      options.cancelButtonText = this.cancelText;\n    }\n    // When this class is refactored we should check with the author, why it needs two properties html and body.\n    if (this.html) {\n      options.html = options.body;\n      delete options.body;\n    }\n    return scout.create('MessageBox', options);\n  }\n\n  /**\n   * @returns {Promise} resolved to selected button / option\n   * @see MessageBox.Buttons\n   */\n  buildAndOpen() {\n    let def = $.Deferred();\n    let messageBox = this.build();\n    messageBox.on('action', event => {\n      if (this.closeOnClick) {\n        messageBox.close();\n      }\n      def.resolve(event.option);\n    });\n    messageBox.open();\n    return def.promise();\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  static create(parent) {\n    return scout.create('MessageBoxes', {\n      parent: parent\n    });\n  }\n  static createOk(parent) {\n    return this.create(parent).withYes(parent.session.text('Ok'));\n  }\n  static createYesNo(parent) {\n    return this.create(parent).withYes().withNo();\n  }\n  static createYesNoCancel(parent) {\n    return this.create(parent).withYes().withNo().withCancel();\n  }\n\n  /**\n   * Opens a message box with an Ok button.\n   *\n   * @returns {Promise} resolved to clicked button\n   * @param {Object} parent\n   * @param {string} bodyText\n   * @param {number} [severity] default is <code>Status.Severity.INFO</code>\n   * @static\n   */\n  static openOk(parent, bodyText, severity) {\n    return this.createOk(parent).withBody(bodyText).withSeverity(severity).buildAndOpen();\n  }\n\n  /**\n   * Opens a message box with a yes and a no button.\n   *\n   * @returns {Promise} resolved to clicked button\n   * @param {Object} parent\n   * @param {string} bodyText\n   * @param {number} [severity] default is <code>Status.Severity.INFO</code>\n   * @static\n   */\n  static openYesNo(parent, bodyText, severity) {\n    return this.createYesNo(parent).withBody(bodyText).withSeverity(severity).buildAndOpen();\n  }\n}","map":{"version":3,"names":["MessageBox","scout","Status","strings","$","MessageBoxes","constructor","parent","yesText","noText","cancelText","bodyText","severity","Severity","INFO","headerText","iconId","closeOnClick","html","init","options","assertParameter","extend","withHeader","withBody","nvl","withIconId","withSeverity","withYes","session","text","withNo","withCancel","build","header","body","hasText","yesButtonText","noButtonText","cancelButtonText","create","buildAndOpen","def","Deferred","messageBox","on","event","close","resolve","option","open","promise","createOk","createYesNo","createYesNoCancel","openOk","openYesNo"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/messagebox/MessageBoxes.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {MessageBox, scout, Status, strings} from '../index';\nimport $ from 'jquery';\n\n/**\n * This class is a convenient builder for creating message boxes. Use the static functions to\n * create and open simple and often used message boxes.\n */\nexport default class MessageBoxes {\n\n  constructor() {\n    this.parent = null;\n\n    this.yesText = null;\n    this.noText = null;\n    this.cancelText = null;\n    this.bodyText = null;\n    this.severity = Status.Severity.INFO;\n    this.headerText = null;\n    this.iconId = null;\n    this.closeOnClick = true;\n    this.html = false;\n  }\n\n  init(options) {\n    scout.assertParameter('parent', options.parent);\n    $.extend(this, options);\n  }\n\n  withHeader(headerText) {\n    this.headerText = headerText;\n    return this;\n  }\n\n  /**\n   * @param bodyText\n   * @param {boolean} [html] Set to true if body must contain HTML, default is false\n   * @returns {MessageBoxes}\n   */\n  withBody(bodyText, html) {\n    this.bodyText = bodyText;\n    this.html = scout.nvl(html, false);\n    return this;\n  }\n\n  withIconId(iconId) {\n    this.iconId = iconId;\n    return this;\n  }\n\n  withSeverity(severity) {\n    this.severity = scout.nvl(severity, Status.Severity.INFO);\n    return this;\n  }\n\n  withYes(yesText) {\n    this.yesText = scout.nvl(yesText, this.parent.session.text('Yes'));\n    return this;\n  }\n\n  withNo(noText) {\n    this.noText = scout.nvl(noText, this.parent.session.text('No'));\n    return this;\n  }\n\n  withCancel(cancelText) {\n    this.cancelText = scout.nvl(cancelText, this.parent.session.text('Cancel'));\n    return this;\n  }\n\n  build() {\n    let options = {\n      parent: this.parent,\n      header: this.headerText,\n      body: this.bodyText,\n      severity: this.severity\n    };\n    if (strings.hasText(this.iconId)) {\n      options.iconId = this.iconId;\n    }\n    if (strings.hasText(this.yesText)) {\n      options.yesButtonText = this.yesText;\n    }\n    if (strings.hasText(this.noText)) {\n      options.noButtonText = this.noText;\n    }\n    if (strings.hasText(this.cancelText)) {\n      options.cancelButtonText = this.cancelText;\n    }\n    // When this class is refactored we should check with the author, why it needs two properties html and body.\n    if (this.html) {\n      options.html = options.body;\n      delete options.body;\n    }\n    return scout.create('MessageBox', options);\n  }\n\n  /**\n   * @returns {Promise} resolved to selected button / option\n   * @see MessageBox.Buttons\n   */\n  buildAndOpen() {\n    let def = $.Deferred();\n    let messageBox = this.build();\n    messageBox.on('action', event => {\n      if (this.closeOnClick) {\n        messageBox.close();\n      }\n      def.resolve(event.option);\n    });\n    messageBox.open();\n    return def.promise();\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  static create(parent) {\n    return scout.create('MessageBoxes', {\n      parent: parent\n    });\n  }\n\n  static createOk(parent) {\n    return this.create(parent).withYes(parent.session.text('Ok'));\n  }\n\n  static createYesNo(parent) {\n    return this.create(parent).withYes().withNo();\n  }\n\n  static createYesNoCancel(parent) {\n    return this.create(parent).withYes().withNo().withCancel();\n  }\n\n  /**\n   * Opens a message box with an Ok button.\n   *\n   * @returns {Promise} resolved to clicked button\n   * @param {Object} parent\n   * @param {string} bodyText\n   * @param {number} [severity] default is <code>Status.Severity.INFO</code>\n   * @static\n   */\n  static openOk(parent, bodyText, severity) {\n    return this.createOk(parent)\n      .withBody(bodyText)\n      .withSeverity(severity)\n      .buildAndOpen();\n  }\n\n  /**\n   * Opens a message box with a yes and a no button.\n   *\n   * @returns {Promise} resolved to clicked button\n   * @param {Object} parent\n   * @param {string} bodyText\n   * @param {number} [severity] default is <code>Status.Severity.INFO</code>\n   * @static\n   */\n  static openYesNo(parent, bodyText, severity) {\n    return this.createYesNo(parent)\n      .withBody(bodyText)\n      .withSeverity(severity)\n      .buildAndOpen();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}