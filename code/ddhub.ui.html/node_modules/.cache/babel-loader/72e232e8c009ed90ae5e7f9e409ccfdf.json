{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays } from '../index';\n\n/**\n * Checks if the combined total size of the given files does not exceed the maximum upload size.\n *\n * @param {File[]} files array of files\n * @param {Number} maximumUploadSize maximum combined file size. null disables the size check\n * @returns {boolean} true if the total size does not exceed maximumUploadSize, otherwise false\n */\nexport function validateMaximumUploadSize(files, maximumUploadSize) {\n  files = arrays.ensure(files);\n  if (files.length === 0 || maximumUploadSize == null) {\n    return true;\n  }\n  let totalSize = files.reduce((total, file) => {\n    return total + file.size;\n  }, 0);\n  return totalSize <= maximumUploadSize;\n}\nexport function fileListToArray(fileList) {\n  let files = [];\n  for (let i = 0; i < fileList.length; i++) {\n    files.push(fileList[i]);\n  }\n  return files;\n}\nexport default {\n  fileListToArray,\n  validateMaximumUploadSize\n};","map":{"version":3,"names":["arrays","validateMaximumUploadSize","files","maximumUploadSize","ensure","length","totalSize","reduce","total","file","size","fileListToArray","fileList","i","push"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/files.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays} from '../index';\n\n/**\n * Checks if the combined total size of the given files does not exceed the maximum upload size.\n *\n * @param {File[]} files array of files\n * @param {Number} maximumUploadSize maximum combined file size. null disables the size check\n * @returns {boolean} true if the total size does not exceed maximumUploadSize, otherwise false\n */\nexport function validateMaximumUploadSize(files, maximumUploadSize) {\n  files = arrays.ensure(files);\n  if (files.length === 0 || maximumUploadSize == null) {\n    return true;\n  }\n\n  let totalSize = files.reduce((total, file) => {\n    return total + file.size;\n  }, 0);\n\n  return totalSize <= maximumUploadSize;\n}\n\nexport function fileListToArray(fileList) {\n  let files = [];\n  for (let i = 0; i < fileList.length; i++) {\n    files.push(fileList[i]);\n  }\n  return files;\n}\n\nexport default {\n  fileListToArray,\n  validateMaximumUploadSize\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,QAAO,UAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyB,CAACC,KAAK,EAAEC,iBAAiB,EAAE;EAClED,KAAK,GAAGF,MAAM,CAACI,MAAM,CAACF,KAAK,CAAC;EAC5B,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIF,iBAAiB,IAAI,IAAI,EAAE;IACnD,OAAO,IAAI;EACb;EAEA,IAAIG,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;IAC5C,OAAOD,KAAK,GAAGC,IAAI,CAACC,IAAI;EAC1B,CAAC,EAAE,CAAC,CAAC;EAEL,OAAOJ,SAAS,IAAIH,iBAAiB;AACvC;AAEA,OAAO,SAASQ,eAAe,CAACC,QAAQ,EAAE;EACxC,IAAIV,KAAK,GAAG,EAAE;EACd,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACP,MAAM,EAAEQ,CAAC,EAAE,EAAE;IACxCX,KAAK,CAACY,IAAI,CAACF,QAAQ,CAACC,CAAC,CAAC,CAAC;EACzB;EACA,OAAOX,KAAK;AACd;AAEA,eAAe;EACbS,eAAe;EACfV;AACF,CAAC"},"metadata":{},"sourceType":"module"}