{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BenchRowLayoutData } from '../../../index';\nimport $ from 'jquery';\nexport default class BenchColumnLayoutData {\n  constructor(model) {\n    // initial\n    this.columns = [null, null, null];\n    $.extend(this, model);\n    this._ensureColumns();\n  }\n  _ensureColumns() {\n    this.columns = this.columns.map((col, i) => {\n      return new BenchRowLayoutData(col).withOrder(i * 2);\n    });\n  }\n  getColumns() {\n    return this.columns;\n  }\n  static ensure(layoutData) {\n    if (!layoutData) {\n      layoutData = new BenchColumnLayoutData();\n      return layoutData;\n    }\n    if (layoutData instanceof BenchColumnLayoutData) {\n      return layoutData;\n    }\n    return new BenchColumnLayoutData(layoutData);\n  }\n}","map":{"version":3,"names":["BenchRowLayoutData","$","BenchColumnLayoutData","constructor","model","columns","extend","_ensureColumns","map","col","i","withOrder","getColumns","ensure","layoutData"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/bench/layout/BenchColumnLayoutData.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BenchRowLayoutData} from '../../../index';\nimport $ from 'jquery';\n\nexport default class BenchColumnLayoutData {\n\n  constructor(model) {\n    // initial\n    this.columns = [null, null, null];\n    $.extend(this, model);\n\n    this._ensureColumns();\n  }\n\n  _ensureColumns() {\n    this.columns = this.columns.map((col, i) => {\n      return new BenchRowLayoutData(col).withOrder(i * 2);\n    });\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  static ensure(layoutData) {\n    if (!layoutData) {\n      layoutData = new BenchColumnLayoutData();\n      return layoutData;\n    }\n    if (layoutData instanceof BenchColumnLayoutData) {\n      return layoutData;\n    }\n    return new BenchColumnLayoutData(layoutData);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,kBAAkB,QAAO,gBAAgB;AACjD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,qBAAqB,CAAC;EAEzCC,WAAW,CAACC,KAAK,EAAE;IACjB;IACA,IAAI,CAACC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACjCJ,CAAC,CAACK,MAAM,CAAC,IAAI,EAAEF,KAAK,CAAC;IAErB,IAAI,CAACG,cAAc,EAAE;EACvB;EAEAA,cAAc,GAAG;IACf,IAAI,CAACF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACG,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAC1C,OAAO,IAAIV,kBAAkB,CAACS,GAAG,CAAC,CAACE,SAAS,CAACD,CAAC,GAAG,CAAC,CAAC;IACrD,CAAC,CAAC;EACJ;EAEAE,UAAU,GAAG;IACX,OAAO,IAAI,CAACP,OAAO;EACrB;EAEA,OAAOQ,MAAM,CAACC,UAAU,EAAE;IACxB,IAAI,CAACA,UAAU,EAAE;MACfA,UAAU,GAAG,IAAIZ,qBAAqB,EAAE;MACxC,OAAOY,UAAU;IACnB;IACA,IAAIA,UAAU,YAAYZ,qBAAqB,EAAE;MAC/C,OAAOY,UAAU;IACnB;IACA,OAAO,IAAIZ,qBAAqB,CAACY,UAAU,CAAC;EAC9C;AACF"},"metadata":{},"sourceType":"module"}