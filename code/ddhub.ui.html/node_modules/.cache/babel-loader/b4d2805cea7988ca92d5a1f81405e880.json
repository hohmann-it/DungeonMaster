{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { comparators, objects } from '../index';\n\n/**\n * JavaScript port from java.util.TreeSet.\n */\nexport default class TreeSet {\n  constructor() {\n    this.array = [];\n    this.properties = objects.createMap();\n    this.comparator = comparators.ALPHANUMERIC;\n  }\n  add(value) {\n    if (!this.contains(value)) {\n      this.array.push(value);\n      this.array.sort((a, b) => this.comparator.compare(a, b));\n      this.properties[value] = true;\n    }\n  }\n  size() {\n    return this.array.length;\n  }\n  contains(value) {\n    return value in this.properties;\n  }\n  last() {\n    return this.array[this.array.length - 1];\n  }\n}","map":{"version":3,"names":["comparators","objects","TreeSet","constructor","array","properties","createMap","comparator","ALPHANUMERIC","add","value","contains","push","sort","a","b","compare","size","length","last"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/TreeSet.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {comparators, objects} from '../index';\n\n/**\n * JavaScript port from java.util.TreeSet.\n */\nexport default class TreeSet {\n\n  constructor() {\n    this.array = [];\n    this.properties = objects.createMap();\n    this.comparator = comparators.ALPHANUMERIC;\n  }\n\n  add(value) {\n    if (!this.contains(value)) {\n      this.array.push(value);\n      this.array.sort((a, b) => this.comparator.compare(a, b));\n      this.properties[value] = true;\n    }\n  }\n\n  size() {\n    return this.array.length;\n  }\n\n  contains(value) {\n    return (value in this.properties);\n  }\n\n  last() {\n    return this.array[this.array.length - 1];\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,WAAW,EAAEC,OAAO,QAAO,UAAU;;AAE7C;AACA;AACA;AACA,eAAe,MAAMC,OAAO,CAAC;EAE3BC,WAAW,GAAG;IACZ,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,UAAU,GAAGJ,OAAO,CAACK,SAAS,EAAE;IACrC,IAAI,CAACC,UAAU,GAAGP,WAAW,CAACQ,YAAY;EAC5C;EAEAC,GAAG,CAACC,KAAK,EAAE;IACT,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,EAAE;MACzB,IAAI,CAACN,KAAK,CAACQ,IAAI,CAACF,KAAK,CAAC;MACtB,IAAI,CAACN,KAAK,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,CAACR,UAAU,CAACS,OAAO,CAACF,CAAC,EAAEC,CAAC,CAAC,CAAC;MACxD,IAAI,CAACV,UAAU,CAACK,KAAK,CAAC,GAAG,IAAI;IAC/B;EACF;EAEAO,IAAI,GAAG;IACL,OAAO,IAAI,CAACb,KAAK,CAACc,MAAM;EAC1B;EAEAP,QAAQ,CAACD,KAAK,EAAE;IACd,OAAQA,KAAK,IAAI,IAAI,CAACL,UAAU;EAClC;EAEAc,IAAI,GAAG;IACL,OAAO,IAAI,CAACf,KAAK,CAAC,IAAI,CAACA,KAAK,CAACc,MAAM,GAAG,CAAC,CAAC;EAC1C;AACF"},"metadata":{},"sourceType":"module"}