{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons, NavigateButton, Page } from '../../../index';\nimport $ from 'jquery';\nexport default class NavigateDownButton extends NavigateButton {\n  constructor() {\n    super();\n    this._defaultIconId = icons.ANGLE_DOWN;\n    this._defaultText = 'ui.Continue';\n    this.iconId = this._defaultIconId;\n    this.keyStroke = 'enter';\n    this._detailTableRowsSelectedHandler = this._onDetailTableRowsSelected.bind(this);\n    this._outlinePageRowLinkHandler = this._onOutlinePageRowLink.bind(this);\n  }\n  _init(options) {\n    super._init(options);\n    if (this.node.detailTable) {\n      this.node.detailTable.on('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.on('pageRowLink', this._outlinePageRowLinkHandler);\n  }\n  _destroy() {\n    if (this.node.detailTable) {\n      this.node.detailTable.off('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.off('pageRowLink', this._outlinePageRowLinkHandler);\n    super._destroy();\n  }\n  _render() {\n    super._render();\n    this.$container.addClass('down');\n  }\n  _isDetail() {\n    // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form is _not_ hidden.\n    return !!(this.node.detailFormVisible && this.node.detailForm && this.node.detailTableVisible && this.node.detailTable && this.node.detailFormVisibleByUi);\n  }\n  _toggleDetail() {\n    return false;\n  }\n  _buttonEnabled() {\n    if (this._isDetail()) {\n      return true;\n    }\n    if (this.node.leaf) {\n      return false;\n    }\n\n    // when it's not a leaf and not a detail - the button is only enabled when a single row is selected and that row is linked to a page\n    let table = this.node.detailTable;\n    if (table) {\n      return table.selectedRows.length === 1 && !!table.selectedRows[0].page;\n    }\n    return true;\n  }\n  _drill() {\n    let drillNode;\n    if (this.node.detailTable) {\n      let row = this.node.detailTable.selectedRow();\n      drillNode = this.node.pageForTableRow(row);\n    } else {\n      drillNode = this.node.childNodes[0];\n    }\n    if (drillNode) {\n      $.log.isDebugEnabled() && $.log.debug('drill down to node ' + drillNode);\n      // Collapse other expanded child nodes\n      let parentNode = drillNode.parentNode;\n      if (parentNode) {\n        parentNode.childNodes.forEach(childNode => {\n          if (childNode.expanded && childNode !== drillNode) {\n            this.outline.collapseNode(childNode, {\n              animateExpansion: false\n            });\n          }\n        });\n      }\n\n      // Select the target node\n      this.outline.selectNodes(drillNode); // this also expands the parent node, if required\n\n      // If the parent node is a table page node, expand the drillNode\n      // --> Same logic as in OutlineMediator.mediateTableRowAction()\n      if (parentNode && parentNode.nodeType === Page.NodeType.TABLE) {\n        this.outline.expandNode(drillNode);\n      }\n    }\n  }\n  _onDetailTableRowsSelected(event) {\n    this.updateEnabled();\n  }\n  _onOutlinePageRowLink(event) {\n    let table = this.node.detailTable;\n    if (table && table.selectedRows.length === 1 && table.selectedRows[0].page === event.page) {\n      this.updateEnabled();\n    }\n  }\n}","map":{"version":3,"names":["icons","NavigateButton","Page","$","NavigateDownButton","constructor","_defaultIconId","ANGLE_DOWN","_defaultText","iconId","keyStroke","_detailTableRowsSelectedHandler","_onDetailTableRowsSelected","bind","_outlinePageRowLinkHandler","_onOutlinePageRowLink","_init","options","node","detailTable","on","outline","_destroy","off","_render","$container","addClass","_isDetail","detailFormVisible","detailForm","detailTableVisible","detailFormVisibleByUi","_toggleDetail","_buttonEnabled","leaf","table","selectedRows","length","page","_drill","drillNode","row","selectedRow","pageForTableRow","childNodes","log","isDebugEnabled","debug","parentNode","forEach","childNode","expanded","collapseNode","animateExpansion","selectNodes","nodeType","NodeType","TABLE","expandNode","event","updateEnabled"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/outline/navigation/NavigateDownButton.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons, NavigateButton, Page} from '../../../index';\nimport $ from 'jquery';\n\nexport default class NavigateDownButton extends NavigateButton {\n\n  constructor() {\n    super();\n    this._defaultIconId = icons.ANGLE_DOWN;\n    this._defaultText = 'ui.Continue';\n    this.iconId = this._defaultIconId;\n    this.keyStroke = 'enter';\n    this._detailTableRowsSelectedHandler = this._onDetailTableRowsSelected.bind(this);\n    this._outlinePageRowLinkHandler = this._onOutlinePageRowLink.bind(this);\n  }\n\n  _init(options) {\n    super._init(options);\n\n    if (this.node.detailTable) {\n      this.node.detailTable.on('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.on('pageRowLink', this._outlinePageRowLinkHandler);\n  }\n\n  _destroy() {\n    if (this.node.detailTable) {\n      this.node.detailTable.off('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.off('pageRowLink', this._outlinePageRowLinkHandler);\n\n    super._destroy();\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('down');\n  }\n\n  _isDetail() {\n    // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form is _not_ hidden.\n    return !!(this.node.detailFormVisible && this.node.detailForm &&\n      this.node.detailTableVisible && this.node.detailTable && this.node.detailFormVisibleByUi);\n  }\n\n  _toggleDetail() {\n    return false;\n  }\n\n  _buttonEnabled() {\n    if (this._isDetail()) {\n      return true;\n    }\n    if (this.node.leaf) {\n      return false;\n    }\n\n    // when it's not a leaf and not a detail - the button is only enabled when a single row is selected and that row is linked to a page\n    let table = this.node.detailTable;\n    if (table) {\n      return table.selectedRows.length === 1 && !!table.selectedRows[0].page;\n    }\n    return true;\n  }\n\n  _drill() {\n    let drillNode;\n\n    if (this.node.detailTable) {\n      let row = this.node.detailTable.selectedRow();\n      drillNode = this.node.pageForTableRow(row);\n    } else {\n      drillNode = this.node.childNodes[0];\n    }\n\n    if (drillNode) {\n      $.log.isDebugEnabled() && $.log.debug('drill down to node ' + drillNode);\n      // Collapse other expanded child nodes\n      let parentNode = drillNode.parentNode;\n      if (parentNode) {\n        parentNode.childNodes.forEach(childNode => {\n          if (childNode.expanded && childNode !== drillNode) {\n            this.outline.collapseNode(childNode, {\n              animateExpansion: false\n            });\n          }\n        });\n      }\n\n      // Select the target node\n      this.outline.selectNodes(drillNode); // this also expands the parent node, if required\n\n      // If the parent node is a table page node, expand the drillNode\n      // --> Same logic as in OutlineMediator.mediateTableRowAction()\n      if (parentNode && parentNode.nodeType === Page.NodeType.TABLE) {\n        this.outline.expandNode(drillNode);\n      }\n    }\n  }\n\n  _onDetailTableRowsSelected(event) {\n    this.updateEnabled();\n  }\n\n  _onOutlinePageRowLink(event) {\n    let table = this.node.detailTable;\n    if (table && table.selectedRows.length === 1 && table.selectedRows[0].page === event.page) {\n      this.updateEnabled();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}