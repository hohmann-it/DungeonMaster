{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, HtmlComponent } from '../index';\nimport $ from 'jquery';\n\n/**\n * Resizes the child so it has the same size as the container.<br>\n * If no child is provided, the first child in the container is used.\n */\nexport default class SingleLayout extends AbstractLayout {\n  constructor(htmlChild, options) {\n    super();\n    this._htmlChild = htmlChild;\n    options = options || {};\n    this.exact = scout.nvl(options.exact, false);\n  }\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container);\n    let childSize = htmlContainer.availableSize({\n        exact: this.exact\n      }).subtract(htmlContainer.insets()),\n      htmlChild = this._htmlChild;\n    if (!htmlChild) {\n      htmlChild = this._getHtmlSingleChild($container);\n    }\n    if (htmlChild) {\n      htmlChild.setSize(childSize);\n    }\n  }\n  preferredLayoutSize($container, options) {\n    let htmlChild = this._htmlChild;\n    if (!htmlChild) {\n      htmlChild = this._getHtmlSingleChild($container);\n    }\n    if (htmlChild) {\n      return htmlChild.prefSize(options).add(graphics.insets($container));\n    }\n    return new Dimension(1, 1);\n  }\n\n  /**\n   * @returns {HtmlComponent} the first child html component of the given container or null if the container has no child with a html component or no children at all.\n   */\n  _getHtmlSingleChild($container) {\n    let htmlComp = null;\n    $container.children().each((i, child) => {\n      let htmlChild = HtmlComponent.optGet($(child));\n      if (htmlChild) {\n        htmlComp = htmlChild;\n        return false;\n      }\n    });\n    return htmlComp;\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","graphics","HtmlComponent","$","SingleLayout","constructor","htmlChild","options","_htmlChild","exact","scout","nvl","layout","$container","htmlContainer","get","childSize","availableSize","subtract","insets","_getHtmlSingleChild","setSize","preferredLayoutSize","prefSize","add","htmlComp","children","each","i","child","optGet"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/SingleLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, HtmlComponent} from '../index';\nimport $ from 'jquery';\n\n/**\n * Resizes the child so it has the same size as the container.<br>\n * If no child is provided, the first child in the container is used.\n */\nexport default class SingleLayout extends AbstractLayout {\n\n  constructor(htmlChild, options) {\n    super();\n    this._htmlChild = htmlChild;\n    options = options || {};\n    this.exact = scout.nvl(options.exact, false);\n  }\n\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container);\n    let childSize = htmlContainer.availableSize({exact: this.exact})\n        .subtract(htmlContainer.insets()),\n      htmlChild = this._htmlChild;\n\n    if (!htmlChild) {\n      htmlChild = this._getHtmlSingleChild($container);\n    }\n    if (htmlChild) {\n      htmlChild.setSize(childSize);\n    }\n  }\n\n  preferredLayoutSize($container, options) {\n    let htmlChild = this._htmlChild;\n    if (!htmlChild) {\n      htmlChild = this._getHtmlSingleChild($container);\n    }\n    if (htmlChild) {\n      return htmlChild.prefSize(options).add(graphics.insets($container));\n    }\n    return new Dimension(1, 1);\n  }\n\n  /**\n   * @returns {HtmlComponent} the first child html component of the given container or null if the container has no child with a html component or no children at all.\n   */\n  _getHtmlSingleChild($container) {\n    let htmlComp = null;\n    $container.children().each((i, child) => {\n      let htmlChild = HtmlComponent.optGet($(child));\n      if (htmlChild) {\n        htmlComp = htmlChild;\n        return false;\n      }\n    });\n    return htmlComp;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAO,UAAU;AAC3E,OAAOC,CAAC,MAAM,QAAQ;;AAEtB;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,SAASL,cAAc,CAAC;EAEvDM,WAAW,CAACC,SAAS,EAAEC,OAAO,EAAE;IAC9B,KAAK,EAAE;IACP,IAAI,CAACC,UAAU,GAAGF,SAAS;IAC3BC,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,IAAI,CAACE,KAAK,GAAGC,KAAK,CAACC,GAAG,CAACJ,OAAO,CAACE,KAAK,EAAE,KAAK,CAAC;EAC9C;EAEAG,MAAM,CAACC,UAAU,EAAE;IACjB,IAAIC,aAAa,GAAGZ,aAAa,CAACa,GAAG,CAACF,UAAU,CAAC;IACjD,IAAIG,SAAS,GAAGF,aAAa,CAACG,aAAa,CAAC;QAACR,KAAK,EAAE,IAAI,CAACA;MAAK,CAAC,CAAC,CAC3DS,QAAQ,CAACJ,aAAa,CAACK,MAAM,EAAE,CAAC;MACnCb,SAAS,GAAG,IAAI,CAACE,UAAU;IAE7B,IAAI,CAACF,SAAS,EAAE;MACdA,SAAS,GAAG,IAAI,CAACc,mBAAmB,CAACP,UAAU,CAAC;IAClD;IACA,IAAIP,SAAS,EAAE;MACbA,SAAS,CAACe,OAAO,CAACL,SAAS,CAAC;IAC9B;EACF;EAEAM,mBAAmB,CAACT,UAAU,EAAEN,OAAO,EAAE;IACvC,IAAID,SAAS,GAAG,IAAI,CAACE,UAAU;IAC/B,IAAI,CAACF,SAAS,EAAE;MACdA,SAAS,GAAG,IAAI,CAACc,mBAAmB,CAACP,UAAU,CAAC;IAClD;IACA,IAAIP,SAAS,EAAE;MACb,OAAOA,SAAS,CAACiB,QAAQ,CAAChB,OAAO,CAAC,CAACiB,GAAG,CAACvB,QAAQ,CAACkB,MAAM,CAACN,UAAU,CAAC,CAAC;IACrE;IACA,OAAO,IAAIb,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;EAEA;AACF;AACA;EACEoB,mBAAmB,CAACP,UAAU,EAAE;IAC9B,IAAIY,QAAQ,GAAG,IAAI;IACnBZ,UAAU,CAACa,QAAQ,EAAE,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MACvC,IAAIvB,SAAS,GAAGJ,aAAa,CAAC4B,MAAM,CAAC3B,CAAC,CAAC0B,KAAK,CAAC,CAAC;MAC9C,IAAIvB,SAAS,EAAE;QACbmB,QAAQ,GAAGnB,SAAS;QACpB,OAAO,KAAK;MACd;IACF,CAAC,CAAC;IACF,OAAOmB,QAAQ;EACjB;AACF"},"metadata":{},"sourceType":"module"}