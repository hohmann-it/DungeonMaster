{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Desktop, DesktopHeaderLayout, Form, HtmlComponent, scout, Widget } from '../../index';\nexport default class DesktopHeader extends Widget {\n  constructor() {\n    super();\n    this.tabArea = null;\n    this.toolBoxVisible = true;\n    this.viewButtonBox = null;\n    this.viewButtonBoxVisible = false;\n    this.outlineContent = null;\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._desktopAnimationEndHandler = this._onDesktopAnimationEnd.bind(this);\n    this._outlineContentMenuBarVisibleChangeHandler = this._onOutlineContentMenuBarVisibleChange.bind(this);\n    this._outlineContentCssClassChangeHandler = this._onOutlineContentCssClassChange.bind(this);\n    this._viewButtonBoxPropertyChangeHandler = this._onViewButtonBoxPropertyChange.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this.desktop = this.session.desktop;\n    this.updateViewButtonBoxVisibility();\n    this.tabArea = this._createTabArea();\n  }\n  _createTabArea() {\n    return scout.create('DesktopTabArea', $.extend({\n      parent: this\n    }, this.tabArea));\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-header');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new DesktopHeaderLayout(this));\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n    if (this.desktop.bench) {\n      this._setOutlineContent(this.desktop.bench.outlineContent);\n    }\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderViewButtonBoxVisible();\n    this._renderViewTabs();\n    this._renderToolBoxVisible();\n    this._renderLogoUrl();\n    this._renderInBackground();\n  }\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n    this._setOutlineContent(null);\n    super._remove();\n  }\n  _renderViewTabs() {\n    this.tabArea.render();\n  }\n  _renderToolBox() {\n    if (this.toolBox) {\n      return;\n    }\n    this.toolBox = this._createToolBox();\n    this.toolBox.render();\n  }\n  _createToolBox() {\n    return scout.create('DesktopToolBox', {\n      parent: this,\n      menus: this.desktop.menus\n    });\n  }\n  _removeToolBox() {\n    if (!this.toolBox) {\n      return;\n    }\n    this.toolBox.destroy();\n    this.toolBox = null;\n  }\n  _renderToolBoxVisible() {\n    if (this.toolBoxVisible) {\n      this._renderToolBox();\n    } else {\n      this._removeToolBox();\n    }\n    this.invalidateLayoutTree();\n  }\n  _renderLogoUrl() {\n    if (this.logoUrl) {\n      this._renderLogo();\n    } else {\n      this._removeLogo();\n    }\n    this.invalidateLayoutTree();\n  }\n  _renderLogo() {\n    if (this.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      // Do not render logo in compact mode (wastes space)\n      return;\n    }\n    if (!this.logo) {\n      this.logo = this._createLogo();\n      this.logo.render();\n    } else {\n      this.logo.setUrl(this.logoUrl);\n    }\n  }\n  _createLogo() {\n    return scout.create('DesktopLogo', {\n      parent: this,\n      url: this.logoUrl\n    });\n  }\n  _removeLogo() {\n    if (!this.logo) {\n      return;\n    }\n    this.logo.destroy();\n    this.logo = null;\n  }\n  _renderViewButtonBox() {\n    if (this.viewButtonBox) {\n      return;\n    }\n    this.viewButtonBox = this._createViewButtonBox();\n    this.viewButtonBox.on('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n    this.viewButtonBox.render();\n    this.viewButtonBox.$container.prependTo(this.$container);\n    this.updateViewButtonStyling();\n  }\n  _createViewButtonBox() {\n    return scout.create('ViewButtonBox', {\n      parent: this,\n      viewButtons: this.desktop.viewButtons,\n      selectedMenuButtonAlwaysVisible: true\n    });\n  }\n  _removeViewButtonBox() {\n    if (!this.viewButtonBox) {\n      return;\n    }\n    this.viewButtonBox.off('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n    this.viewButtonBox.destroy();\n    this.viewButtonBox = null;\n  }\n  _renderViewButtonBoxVisible() {\n    if (this.viewButtonBoxVisible) {\n      this._renderViewButtonBox();\n    } else {\n      this._removeViewButtonBox();\n    }\n    this.$container.toggleClass('has-view-button-box', this.viewButtonBoxVisible);\n    this.invalidateLayoutTree();\n  }\n  sendToBack() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n  bringToFront() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.desktop.inBackground);\n  }\n  setLogoUrl(logoUrl) {\n    this.setProperty('logoUrl', logoUrl);\n  }\n  setToolBoxVisible(visible) {\n    this.setProperty('toolBoxVisible', visible);\n  }\n  setViewButtonBoxVisible(visible) {\n    this.setProperty('viewButtonBoxVisible', visible);\n  }\n  setMenus(menus) {\n    if (this.toolBox) {\n      this.toolBox.setMenus(menus);\n    }\n  }\n  _setOutlineContent(outlineContent) {\n    if (this.outlineContent === outlineContent) {\n      return;\n    }\n    this._detachOutlineContentHandlers();\n    this._setProperty('outlineContent', outlineContent);\n    this._attachOutlineContentHandlers();\n    this.updateViewButtonStyling();\n  }\n  updateViewButtonBoxVisibility() {\n    // View buttons are visible in the header if the navigation is not visible\n    // If there are no view buttons at all, don't show the box\n    // With displayStyle is set to compact, the view buttons should never be visible in the header\n    this.setViewButtonBoxVisible(this.desktop.viewButtons.some(button => button.visible) && !this.desktop.navigationVisible && this.desktop.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n  _attachOutlineContentHandlers() {\n    this._attachOutlineContentMenuBarHandler();\n    this._attachOutlineContentCssClassHandler();\n  }\n  _attachOutlineContentMenuBarHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let menuBar = this._outlineContentMenuBar(this.outlineContent);\n    if (menuBar) {\n      menuBar.on('propertyChange:visible', this._outlineContentMenuBarVisibleChangeHandler);\n    }\n  }\n  _attachOutlineContentCssClassHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.outlineContent.on('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n  }\n  _detachOutlineContentHandlers() {\n    this._detachOutlineContentMenuBarHandler();\n    this._detachOutlineContentCssClassHandler();\n  }\n  _detachOutlineContentMenuBarHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let menuBar = this._outlineContentMenuBar(this.outlineContent);\n    if (menuBar) {\n      menuBar.off('propertyChange:visible', this._outlineContentMenuBarVisibleChangeHandler);\n    }\n  }\n  _detachOutlineContentCssClassHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.outlineContent.off('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n  }\n  _outlineContentMenuBar(outlineContent) {\n    if (outlineContent instanceof Form) {\n      return outlineContent.rootGroupBox.menuBar;\n    }\n    return outlineContent.menuBar;\n  }\n  updateViewButtonStyling() {\n    this._updateOutlineContentHasMenuBar();\n    this._updateOutlineContentHasDimmedBackground();\n  }\n  _getOutlineContentForViewButtonStyling() {\n    if (!this.viewButtonBoxVisible || !this.outlineContent || !this.outlineContent.visible) {\n      return;\n    }\n    return this.outlineContent;\n  }\n  _updateOutlineContentHasMenuBar() {\n    let outlineContent = this._getOutlineContentForViewButtonStyling();\n    if (!outlineContent) {\n      return;\n    }\n    let hasMenuBar = false;\n    if (outlineContent instanceof Form && outlineContent.detailForm) {\n      let rootGroupBox = outlineContent.rootGroupBox;\n      hasMenuBar = rootGroupBox.menuBar && rootGroupBox.menuBarVisible && rootGroupBox.menuBar.visible;\n    } else {\n      hasMenuBar = outlineContent.menuBar && outlineContent.menuBar.visible;\n    }\n    this.$container.toggleClass('outline-content-has-menubar', !!hasMenuBar);\n  }\n  _updateOutlineContentHasDimmedBackground() {\n    let outlineContent = this._getOutlineContentForViewButtonStyling();\n    if (!outlineContent) {\n      return;\n    }\n    let hasDimmedBackground = false;\n    if (outlineContent.cssClass) {\n      hasDimmedBackground = outlineContent.cssClass.indexOf('dimmed-background') > -1;\n    }\n    this.$container.toggleClass('outline-content-has-dimmed-background', hasDimmedBackground);\n  }\n  _onDesktopNavigationVisibleChange(event) {\n    // If navigation gets visible: Hide view buttons immediately\n    // If navigation gets hidden using animation: Show view buttons when animation ends\n    if (this.desktop.navigationVisible) {\n      this.updateViewButtonBoxVisibility();\n    }\n  }\n  _onDesktopAnimationEnd(event) {\n    this.updateViewButtonBoxVisibility();\n  }\n  onBenchOutlineContentChange(content) {\n    this._setOutlineContent(content);\n  }\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationVisible') {\n      this._onDesktopNavigationVisibleChange();\n    }\n  }\n  _onOutlineContentMenuBarVisibleChange(event) {\n    this._updateOutlineContentHasMenuBar();\n  }\n  _onOutlineContentCssClassChange(event) {\n    this._updateOutlineContentHasDimmedBackground();\n  }\n  _onViewButtonBoxPropertyChange(event) {\n    if (event.propertyName === 'menuButtons' || event.propertyName === 'tabButtons') {\n      this.invalidateLayoutTree();\n    }\n  }\n}","map":{"version":3,"names":["Desktop","DesktopHeaderLayout","Form","HtmlComponent","scout","Widget","DesktopHeader","constructor","tabArea","toolBoxVisible","viewButtonBox","viewButtonBoxVisible","outlineContent","_desktopPropertyChangeHandler","_onDesktopPropertyChange","bind","_desktopAnimationEndHandler","_onDesktopAnimationEnd","_outlineContentMenuBarVisibleChangeHandler","_onOutlineContentMenuBarVisibleChange","_outlineContentCssClassChangeHandler","_onOutlineContentCssClassChange","_viewButtonBoxPropertyChangeHandler","_onViewButtonBoxPropertyChange","_init","model","desktop","session","updateViewButtonBoxVisibility","_createTabArea","create","$","extend","parent","_render","$container","$parent","appendDiv","htmlComp","install","setLayout","on","bench","_setOutlineContent","_renderProperties","_renderViewButtonBoxVisible","_renderViewTabs","_renderToolBoxVisible","_renderLogoUrl","_renderInBackground","_remove","off","render","_renderToolBox","toolBox","_createToolBox","menus","_removeToolBox","destroy","invalidateLayoutTree","logoUrl","_renderLogo","_removeLogo","displayStyle","DisplayStyle","COMPACT","logo","_createLogo","setUrl","url","_renderViewButtonBox","_createViewButtonBox","prependTo","updateViewButtonStyling","viewButtons","selectedMenuButtonAlwaysVisible","_removeViewButtonBox","toggleClass","sendToBack","rendered","bringToFront","inBackground","setLogoUrl","setProperty","setToolBoxVisible","visible","setViewButtonBoxVisible","setMenus","_detachOutlineContentHandlers","_setProperty","_attachOutlineContentHandlers","some","button","navigationVisible","_attachOutlineContentMenuBarHandler","_attachOutlineContentCssClassHandler","menuBar","_outlineContentMenuBar","_detachOutlineContentMenuBarHandler","_detachOutlineContentCssClassHandler","rootGroupBox","_updateOutlineContentHasMenuBar","_updateOutlineContentHasDimmedBackground","_getOutlineContentForViewButtonStyling","hasMenuBar","detailForm","menuBarVisible","hasDimmedBackground","cssClass","indexOf","_onDesktopNavigationVisibleChange","event","onBenchOutlineContentChange","content","propertyName"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/header/DesktopHeader.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Desktop, DesktopHeaderLayout, Form, HtmlComponent, scout, Widget} from '../../index';\n\nexport default class DesktopHeader extends Widget {\n\n  constructor() {\n    super();\n    this.tabArea = null;\n    this.toolBoxVisible = true;\n    this.viewButtonBox = null;\n    this.viewButtonBoxVisible = false;\n    this.outlineContent = null;\n\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._desktopAnimationEndHandler = this._onDesktopAnimationEnd.bind(this);\n    this._outlineContentMenuBarVisibleChangeHandler = this._onOutlineContentMenuBarVisibleChange.bind(this);\n    this._outlineContentCssClassChangeHandler = this._onOutlineContentCssClassChange.bind(this);\n    this._viewButtonBoxPropertyChangeHandler = this._onViewButtonBoxPropertyChange.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.desktop = this.session.desktop;\n    this.updateViewButtonBoxVisibility();\n    this.tabArea = this._createTabArea();\n  }\n\n  _createTabArea() {\n    return scout.create('DesktopTabArea', $.extend({\n      parent: this\n    }, this.tabArea));\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-header');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new DesktopHeaderLayout(this));\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n    if (this.desktop.bench) {\n      this._setOutlineContent(this.desktop.bench.outlineContent);\n    }\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderViewButtonBoxVisible();\n    this._renderViewTabs();\n    this._renderToolBoxVisible();\n    this._renderLogoUrl();\n    this._renderInBackground();\n  }\n\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n    this._setOutlineContent(null);\n    super._remove();\n  }\n\n  _renderViewTabs() {\n    this.tabArea.render();\n  }\n\n  _renderToolBox() {\n    if (this.toolBox) {\n      return;\n    }\n    this.toolBox = this._createToolBox();\n    this.toolBox.render();\n  }\n\n  _createToolBox() {\n    return scout.create('DesktopToolBox', {\n      parent: this,\n      menus: this.desktop.menus\n    });\n  }\n\n  _removeToolBox() {\n    if (!this.toolBox) {\n      return;\n    }\n    this.toolBox.destroy();\n    this.toolBox = null;\n  }\n\n  _renderToolBoxVisible() {\n    if (this.toolBoxVisible) {\n      this._renderToolBox();\n    } else {\n      this._removeToolBox();\n    }\n    this.invalidateLayoutTree();\n  }\n\n  _renderLogoUrl() {\n    if (this.logoUrl) {\n      this._renderLogo();\n    } else {\n      this._removeLogo();\n    }\n    this.invalidateLayoutTree();\n  }\n\n  _renderLogo() {\n    if (this.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      // Do not render logo in compact mode (wastes space)\n      return;\n    }\n    if (!this.logo) {\n      this.logo = this._createLogo();\n      this.logo.render();\n    } else {\n      this.logo.setUrl(this.logoUrl);\n    }\n  }\n\n  _createLogo() {\n    return scout.create('DesktopLogo', {\n      parent: this,\n      url: this.logoUrl\n    });\n  }\n\n  _removeLogo() {\n    if (!this.logo) {\n      return;\n    }\n    this.logo.destroy();\n    this.logo = null;\n  }\n\n  _renderViewButtonBox() {\n    if (this.viewButtonBox) {\n      return;\n    }\n    this.viewButtonBox = this._createViewButtonBox();\n    this.viewButtonBox.on('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n    this.viewButtonBox.render();\n    this.viewButtonBox.$container.prependTo(this.$container);\n    this.updateViewButtonStyling();\n  }\n\n  _createViewButtonBox() {\n    return scout.create('ViewButtonBox', {\n      parent: this,\n      viewButtons: this.desktop.viewButtons,\n      selectedMenuButtonAlwaysVisible: true\n    });\n  }\n\n  _removeViewButtonBox() {\n    if (!this.viewButtonBox) {\n      return;\n    }\n    this.viewButtonBox.off('propertyChange', this._viewButtonBoxPropertyChangeHandler);\n    this.viewButtonBox.destroy();\n    this.viewButtonBox = null;\n  }\n\n  _renderViewButtonBoxVisible() {\n    if (this.viewButtonBoxVisible) {\n      this._renderViewButtonBox();\n    } else {\n      this._removeViewButtonBox();\n    }\n    this.$container.toggleClass('has-view-button-box', this.viewButtonBoxVisible);\n    this.invalidateLayoutTree();\n  }\n\n  sendToBack() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n\n  bringToFront() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n\n  _renderInBackground() {\n    this.$container.toggleClass('in-background', this.desktop.inBackground);\n  }\n\n  setLogoUrl(logoUrl) {\n    this.setProperty('logoUrl', logoUrl);\n  }\n\n  setToolBoxVisible(visible) {\n    this.setProperty('toolBoxVisible', visible);\n  }\n\n  setViewButtonBoxVisible(visible) {\n    this.setProperty('viewButtonBoxVisible', visible);\n  }\n\n  setMenus(menus) {\n    if (this.toolBox) {\n      this.toolBox.setMenus(menus);\n    }\n  }\n\n  _setOutlineContent(outlineContent) {\n    if (this.outlineContent === outlineContent) {\n      return;\n    }\n    this._detachOutlineContentHandlers();\n    this._setProperty('outlineContent', outlineContent);\n    this._attachOutlineContentHandlers();\n    this.updateViewButtonStyling();\n  }\n\n  updateViewButtonBoxVisibility() {\n    // View buttons are visible in the header if the navigation is not visible\n    // If there are no view buttons at all, don't show the box\n    // With displayStyle is set to compact, the view buttons should never be visible in the header\n    this.setViewButtonBoxVisible(this.desktop.viewButtons.some(button => button.visible) && !this.desktop.navigationVisible && this.desktop.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n\n  _attachOutlineContentHandlers() {\n    this._attachOutlineContentMenuBarHandler();\n    this._attachOutlineContentCssClassHandler();\n  }\n\n  _attachOutlineContentMenuBarHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let menuBar = this._outlineContentMenuBar(this.outlineContent);\n    if (menuBar) {\n      menuBar.on('propertyChange:visible', this._outlineContentMenuBarVisibleChangeHandler);\n    }\n  }\n\n  _attachOutlineContentCssClassHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.outlineContent.on('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n  }\n\n  _detachOutlineContentHandlers() {\n    this._detachOutlineContentMenuBarHandler();\n    this._detachOutlineContentCssClassHandler();\n  }\n\n  _detachOutlineContentMenuBarHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let menuBar = this._outlineContentMenuBar(this.outlineContent);\n    if (menuBar) {\n      menuBar.off('propertyChange:visible', this._outlineContentMenuBarVisibleChangeHandler);\n    }\n  }\n\n  _detachOutlineContentCssClassHandler() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.outlineContent.off('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n  }\n\n  _outlineContentMenuBar(outlineContent) {\n    if (outlineContent instanceof Form) {\n      return outlineContent.rootGroupBox.menuBar;\n    }\n    return outlineContent.menuBar;\n  }\n\n  updateViewButtonStyling() {\n    this._updateOutlineContentHasMenuBar();\n    this._updateOutlineContentHasDimmedBackground();\n  }\n\n  _getOutlineContentForViewButtonStyling() {\n    if (!this.viewButtonBoxVisible || !this.outlineContent || !this.outlineContent.visible) {\n      return;\n    }\n    return this.outlineContent;\n  }\n\n  _updateOutlineContentHasMenuBar() {\n    let outlineContent = this._getOutlineContentForViewButtonStyling();\n    if (!outlineContent) {\n      return;\n    }\n    let hasMenuBar = false;\n    if (outlineContent instanceof Form && outlineContent.detailForm) {\n      let rootGroupBox = outlineContent.rootGroupBox;\n      hasMenuBar = rootGroupBox.menuBar && rootGroupBox.menuBarVisible && rootGroupBox.menuBar.visible;\n    } else {\n      hasMenuBar = outlineContent.menuBar && outlineContent.menuBar.visible;\n    }\n    this.$container.toggleClass('outline-content-has-menubar', !!hasMenuBar);\n  }\n\n  _updateOutlineContentHasDimmedBackground() {\n    let outlineContent = this._getOutlineContentForViewButtonStyling();\n    if (!outlineContent) {\n      return;\n    }\n    let hasDimmedBackground = false;\n    if (outlineContent.cssClass) {\n      hasDimmedBackground = outlineContent.cssClass.indexOf('dimmed-background') > -1;\n    }\n    this.$container.toggleClass('outline-content-has-dimmed-background', hasDimmedBackground);\n  }\n\n  _onDesktopNavigationVisibleChange(event) {\n    // If navigation gets visible: Hide view buttons immediately\n    // If navigation gets hidden using animation: Show view buttons when animation ends\n    if (this.desktop.navigationVisible) {\n      this.updateViewButtonBoxVisibility();\n    }\n  }\n\n  _onDesktopAnimationEnd(event) {\n    this.updateViewButtonBoxVisibility();\n  }\n\n  onBenchOutlineContentChange(content) {\n    this._setOutlineContent(content);\n  }\n\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationVisible') {\n      this._onDesktopNavigationVisibleChange();\n    }\n  }\n\n  _onOutlineContentMenuBarVisibleChange(event) {\n    this._updateOutlineContentHasMenuBar();\n  }\n\n  _onOutlineContentCssClassChange(event) {\n    this._updateOutlineContentHasDimmedBackground();\n  }\n\n  _onViewButtonBoxPropertyChange(event) {\n    if (event.propertyName === 'menuButtons' || event.propertyName === 'tabButtons') {\n      this.invalidateLayoutTree();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}