{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BrowserField, Device, FormFieldLayout, Tile, WidgetTile } from '../../index';\nexport default class FormFieldTile extends WidgetTile {\n  constructor() {\n    super();\n    this.displayStyle = FormFieldTile.DisplayStyle.DASHBOARD;\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFieldLabelVisible();\n    this._renderCompact();\n  }\n  _renderTileWidget() {\n    super._renderTileWidget();\n    if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      return;\n    }\n    if (this.tileWidget && this.tileWidget.htmlComp && this.tileWidget.htmlComp.layout instanceof FormFieldLayout) {\n      this.tileWidget.htmlComp.layout.statusWidth = 0;\n    }\n  }\n  _renderDisplayStyle() {\n    super._renderDisplayStyle();\n    this.$container.toggleClass('dashboard', this.displayStyle === FormFieldTile.DisplayStyle.DASHBOARD);\n  }\n  _renderFieldLabelVisible() {\n    if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      return;\n    }\n    // Special handling for browser field (remove padding when label is invisible)\n    if (this.tileWidget instanceof BrowserField) {\n      this.tileWidget.$container.toggleClass('no-padding', !this.tileWidget.labelVisible && !this.tileWidget.errorStatus);\n    }\n  }\n  _renderCompact() {\n    this.$container.toggleClass('compact', Device.get().type === Device.Type.MOBILE);\n  }\n  _onFieldPropertyChange(event) {\n    if (event.propertyName === 'labelVisible' || event.propertyName === 'errorStatus') {\n      if (this.rendered) {\n        this._renderFieldLabelVisible();\n      }\n    }\n  }\n}\n_defineProperty(FormFieldTile, \"DisplayStyle\", {\n  DEFAULT: Tile.DisplayStyle.DEFAULT,\n  PLAIN: Tile.DisplayStyle.PLAIN,\n  DASHBOARD: 'dashboard'\n});","map":{"version":3,"names":["BrowserField","Device","FormFieldLayout","Tile","WidgetTile","FormFieldTile","constructor","displayStyle","DisplayStyle","DASHBOARD","_renderProperties","_renderFieldLabelVisible","_renderCompact","_renderTileWidget","tileWidget","htmlComp","layout","statusWidth","_renderDisplayStyle","$container","toggleClass","labelVisible","errorStatus","get","type","Type","MOBILE","_onFieldPropertyChange","event","propertyName","rendered","DEFAULT","PLAIN"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tile/fields/FormFieldTile.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BrowserField, Device, FormFieldLayout, Tile, WidgetTile} from '../../index';\n\nexport default class FormFieldTile extends WidgetTile {\n\n  constructor() {\n    super();\n    this.displayStyle = FormFieldTile.DisplayStyle.DASHBOARD;\n  }\n\n  static DisplayStyle = {\n    DEFAULT: Tile.DisplayStyle.DEFAULT,\n    PLAIN: Tile.DisplayStyle.PLAIN,\n    DASHBOARD: 'dashboard'\n  };\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFieldLabelVisible();\n    this._renderCompact();\n  }\n\n  _renderTileWidget() {\n    super._renderTileWidget();\n    if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      return;\n    }\n    if (this.tileWidget && this.tileWidget.htmlComp && this.tileWidget.htmlComp.layout instanceof FormFieldLayout) {\n      this.tileWidget.htmlComp.layout.statusWidth = 0;\n    }\n  }\n\n  _renderDisplayStyle() {\n    super._renderDisplayStyle();\n    this.$container.toggleClass('dashboard', this.displayStyle === FormFieldTile.DisplayStyle.DASHBOARD);\n  }\n\n  _renderFieldLabelVisible() {\n    if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      return;\n    }\n    // Special handling for browser field (remove padding when label is invisible)\n    if (this.tileWidget instanceof BrowserField) {\n      this.tileWidget.$container.toggleClass('no-padding', !this.tileWidget.labelVisible && !this.tileWidget.errorStatus);\n    }\n  }\n\n  _renderCompact() {\n    this.$container.toggleClass('compact', Device.get().type === Device.Type.MOBILE);\n  }\n\n  _onFieldPropertyChange(event) {\n    if (event.propertyName === 'labelVisible' || event.propertyName === 'errorStatus') {\n      if (this.rendered) {\n        this._renderFieldLabelVisible();\n      }\n    }\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAY,EAAEC,MAAM,EAAEC,eAAe,EAAEC,IAAI,EAAEC,UAAU,QAAO,aAAa;AAEnF,eAAe,MAAMC,aAAa,SAASD,UAAU,CAAC;EAEpDE,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAGF,aAAa,CAACG,YAAY,CAACC,SAAS;EAC1D;EAQAC,iBAAiB,GAAG;IAClB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,wBAAwB,EAAE;IAC/B,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAC,iBAAiB,GAAG;IAClB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,IAAI,CAACN,YAAY,KAAKF,aAAa,CAACG,YAAY,CAACC,SAAS,EAAE;MAC9D;IACF;IACA,IAAI,IAAI,CAACK,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,QAAQ,IAAI,IAAI,CAACD,UAAU,CAACC,QAAQ,CAACC,MAAM,YAAYd,eAAe,EAAE;MAC7G,IAAI,CAACY,UAAU,CAACC,QAAQ,CAACC,MAAM,CAACC,WAAW,GAAG,CAAC;IACjD;EACF;EAEAC,mBAAmB,GAAG;IACpB,KAAK,CAACA,mBAAmB,EAAE;IAC3B,IAAI,CAACC,UAAU,CAACC,WAAW,CAAC,WAAW,EAAE,IAAI,CAACb,YAAY,KAAKF,aAAa,CAACG,YAAY,CAACC,SAAS,CAAC;EACtG;EAEAE,wBAAwB,GAAG;IACzB,IAAI,IAAI,CAACJ,YAAY,KAAKF,aAAa,CAACG,YAAY,CAACC,SAAS,EAAE;MAC9D;IACF;IACA;IACA,IAAI,IAAI,CAACK,UAAU,YAAYd,YAAY,EAAE;MAC3C,IAAI,CAACc,UAAU,CAACK,UAAU,CAACC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAACN,UAAU,CAACO,YAAY,IAAI,CAAC,IAAI,CAACP,UAAU,CAACQ,WAAW,CAAC;IACrH;EACF;EAEAV,cAAc,GAAG;IACf,IAAI,CAACO,UAAU,CAACC,WAAW,CAAC,SAAS,EAAEnB,MAAM,CAACsB,GAAG,EAAE,CAACC,IAAI,KAAKvB,MAAM,CAACwB,IAAI,CAACC,MAAM,CAAC;EAClF;EAEAC,sBAAsB,CAACC,KAAK,EAAE;IAC5B,IAAIA,KAAK,CAACC,YAAY,KAAK,cAAc,IAAID,KAAK,CAACC,YAAY,KAAK,aAAa,EAAE;MACjF,IAAI,IAAI,CAACC,QAAQ,EAAE;QACjB,IAAI,CAACnB,wBAAwB,EAAE;MACjC;IACF;EACF;AACF;AAAC,gBAvDoBN,aAAa,kBAOV;EACpB0B,OAAO,EAAE5B,IAAI,CAACK,YAAY,CAACuB,OAAO;EAClCC,KAAK,EAAE7B,IAAI,CAACK,YAAY,CAACwB,KAAK;EAC9BvB,SAAS,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module"}