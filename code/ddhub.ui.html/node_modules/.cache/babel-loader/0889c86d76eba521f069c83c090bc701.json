{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BrowserFieldLayout, numbers, PopupBlockerHandler, Rectangle, scout, strings, ValueField } from '../../../index';\nimport $ from 'jquery';\nexport default class BrowserField extends ValueField {\n  constructor() {\n    super();\n    this.autoCloseExternalWindow = false;\n    this.externalWindowButtonText = null;\n    this.externalWindowFieldText = null;\n    this.location = null;\n    this.trackLocation = false;\n    this.sandboxEnabled = true;\n    this.sandboxPermissions = null;\n    this.trustedMessageOrigins = [];\n    this.scrollBarEnabled = true;\n    this.showInExternalWindow = false;\n    this._messageListener = null;\n    this._popupWindow = null;\n    this._externalWindowTextField = null;\n    this._externalWindowButton = null;\n  }\n  _init(model) {\n    super._init(model);\n    this.iframe = scout.create('IFrame', {\n      parent: this,\n      location: this.location,\n      sandboxEnabled: this.sandboxEnabled,\n      sandboxPermissions: this.sandboxPermissions,\n      scrollBarEnabled: this.scrollBarEnabled,\n      trackLocation: this.trackLocation\n    });\n    this.iframe.on('propertyChange', this._onIFramePropertyChange.bind(this));\n  }\n  _render() {\n    this.addContainer(this.$parent, 'browser-field', new BrowserFieldLayout(this));\n    this.addLabel();\n    this.addStatus();\n    if (!this.showInExternalWindow) {\n      // mode 1: <iframe>\n      this.iframe.render();\n      this.addFieldContainer(this.iframe.$container);\n      this.addField(this.iframe.$iframe);\n      this.$field.on('load', this._onLoad.bind(this));\n    } else {\n      // mode 2: separate window\n      this.addField(this.$parent.makeDiv());\n      this._externalWindowTextField = this.$field.appendDiv().addClass('alt');\n      this._externalWindowButton = this.$field.appendDiv().addClass('button').on('click', this._openPopupWindow.bind(this));\n    }\n    this.myWindow = this.$parent.window(true);\n    this._messageListener = this._onMessage.bind(this);\n    this.myWindow.addEventListener('message', this._messageListener);\n    if (this.enabledComputed) {\n      // use setTimeout to call method, because _openPopupWindow must be called after layouting\n      setTimeout(this._openPopupWindow.bind(this, true), 20);\n    }\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderExternalWindowButtonText();\n    this._renderExternalWindowFieldText();\n  }\n\n  /**\n   * @override FormField.js\n   */\n  _remove() {\n    super._remove();\n    this.myWindow.removeEventListener('message', this._messageListener);\n    this._messageListener = null;\n\n    // if content is shown in an external window and auto close is set to true\n    if (this.showInExternalWindow && this.autoCloseExternalWindow) {\n      // try to close popup window (if it is not already closed)\n      if (this._popupWindow && !this._popupWindow.closed) {\n        this._popupWindow.close();\n      }\n    }\n  }\n  setLocation(location) {\n    this.setProperty('location', location);\n    this.iframe.setLocation(location);\n  }\n  _renderLocation() {\n    // Convert empty locations to 'about:blank', because in Firefox (maybe others, too?),\n    // empty locations simply remove the src attribute but don't remove the old content.\n    let location = this.location || 'about:blank';\n    if (this.showInExternalWindow) {\n      // fallback: separate window\n      if (this._popupWindow && !this._popupWindow.closed) {\n        this._popupWindow.location = location;\n      }\n    }\n  }\n  setAutoCloseExternalWindow(autoCloseExternalWindow) {\n    this.setProperty('autoCloseExternalWindow', autoCloseExternalWindow);\n  }\n  setExternalWindowButtonText(externalWindowButtonText) {\n    this.setProperty('externalWindowButtonText', externalWindowButtonText);\n  }\n  _renderExternalWindowButtonText() {\n    if (this.showInExternalWindow) {\n      this._externalWindowButton.text(this.externalWindowButtonText || '');\n    }\n  }\n  setExternalWindowFieldText(externalWindowFieldText) {\n    this.setProperty('externalWindowFieldText', externalWindowFieldText);\n  }\n  _renderExternalWindowFieldText() {\n    if (this.showInExternalWindow) {\n      this._externalWindowTextField.text(this.externalWindowFieldText || '');\n    }\n  }\n\n  /**\n   * Note: this function is designed to deliver good results to position a popup over a BrowserField in Internet Explorer.\n   * Other browsers may not perfectly position the popup, since they return different values for screenX/screenY. Also\n   * there's no way to retrieve all required values from the window or screen object, that's why we have to use hard coded\n   * values here. In order to make this function more flexible you could implement it as a strategy which has different\n   * browser dependent implementations.\n   *\n   * This implementation does also deal with a multi screen setup (secondary monitor). An earlier implementation used\n   * screen.availWidth to make sure the popup is within the visible area of the screen. However, screen.availWidth only\n   * returns the size of the primary monitor, so we cannot use it. There's no way to check for a secondary monitor from\n   * a HTML document. So we removed the check entirely, which shouldn't be an issue since the browser itself does prevent\n   * popups from having an invalid position.\n   */\n  _calcPopupBounds() {\n    let myWindow = this.$container.window(true);\n    let POPUP_WINDOW_TOP_HEIGHT = 30;\n    let POPUP_WINDOW_BOTTOM_HEIGHT = 8;\n    let POPUP_WINDOW_CHROME_HEIGHT = POPUP_WINDOW_TOP_HEIGHT + POPUP_WINDOW_BOTTOM_HEIGHT;\n    let BROWSER_WINDOW_TOP_HEIGHT = 55;\n\n    // Don't limit screenX/Y in any way. Coordinates can be negative (if we have a secondary monitor on the left side\n    // of the primary monitor) or larger then the availSize of the screen (if we have a secondary monitor on the right\n    // side of the primary monitor). Note that IE cannot properly place the popup on a monitor on the left. It seems\n    // to ignore negative X coordinates somehow (but not entirely).\n    let browserBounds = new Rectangle(myWindow.screenX, myWindow.screenY, $(myWindow).width(), $(myWindow).height() + BROWSER_WINDOW_TOP_HEIGHT);\n    let fieldBounds = new Rectangle(this.$field.offset().left, this.$field.offset().top, this.$field.width(), this.$field.height());\n    let popupX = browserBounds.x + fieldBounds.x;\n    let popupY = browserBounds.y + fieldBounds.y + BROWSER_WINDOW_TOP_HEIGHT;\n    let popupWidth = fieldBounds.width;\n    let popupHeight = fieldBounds.height + POPUP_WINDOW_CHROME_HEIGHT;\n\n    // ensure that the lower Y of the new popup is not below the lower Y of the browser window\n    let popupLowerY = popupY + popupHeight;\n    let browserLowerY = browserBounds.y + browserBounds.height;\n    if (popupLowerY > browserLowerY) {\n      popupHeight -= popupLowerY - browserLowerY + POPUP_WINDOW_CHROME_HEIGHT;\n    }\n    return new Rectangle(numbers.round(popupX), numbers.round(popupY), numbers.round(popupWidth), numbers.round(popupHeight));\n  }\n  _openPopupWindow(reopenIfClosed) {\n    reopenIfClosed = scout.nvl(reopenIfClosed, true);\n    if (!this.showInExternalWindow) {\n      return;\n    }\n    if (!this._popupWindow || reopenIfClosed && this._popupWindow.closed) {\n      let popupBlockerHandler = scout.create('PopupBlockerHandler', {\n        session: this.session\n      });\n      let popupBounds = this._calcPopupBounds();\n      // (b) window specifications\n      let windowSpecs = strings.join(',', 'directories=no', 'location=no', 'menubar=no', 'resizable=yes', 'status=no', 'scrollbars=' + (this.scrollBarEnabled ? 'yes' : 'no'), 'toolbar=no', 'dependent=yes', 'left=' + popupBounds.x, 'top=' + popupBounds.y, 'width=' + popupBounds.width, 'height=' + popupBounds.height);\n      let location = this.location || 'about:blank';\n      popupBlockerHandler.openWindow(location, undefined, windowSpecs, this._popupWindowOpen.bind(this));\n    } else if (reopenIfClosed) {\n      this._popupWindow.focus();\n    }\n  }\n  _popupWindowOpen(popup) {\n    this._popupWindow = popup;\n    if (this._popupWindow && !this._popupWindow.closed) {\n      this.trigger('externalWindowStateChange', {\n        windowState: BrowserField.WindowStates.WINDOW_OPEN\n      });\n      let popupInterval = window.setInterval(() => {\n        let popupWindowClosed = false;\n        try {\n          popupWindowClosed = this._popupWindow === null || this._popupWindow.closed;\n        } catch (e) {\n          // for some unknown reason, IE sometimes throws a \"SCRIPT16386\" error while trying to read '._popupWindow.closed'.\n          $.log.isInfoEnabled() && $.log.info('Reading the property popupWindow.closed threw an error (Retry in 500ms)');\n          return;\n        }\n        if (popupWindowClosed) {\n          window.clearInterval(popupInterval);\n          this.trigger('externalWindowStateChange', {\n            windowState: BrowserField.WindowStates.WINDOW_CLOSED\n          });\n        }\n      }, 500);\n    }\n  }\n  _onMessage(event) {\n    // Only handle event originating form \"our\" iframe\n    if (!this._isValidMessageSource(event.source)) {\n      return;\n    }\n    // Check if the origin is trusted before we do anything else with the data\n    if (this.trustedMessageOrigins && this.trustedMessageOrigins.length && !this.trustedMessageOrigins.some(origin => origin === event.origin)) {\n      $.log.warn('blocked message from untrusted origin ' + event.origin);\n      return;\n    }\n    $.log.isDebugEnabled() && $.log.debug('received post-message: data=' + event.data + ', origin=' + event.origin);\n    this.trigger('message', {\n      data: event.data,\n      origin: event.origin\n    });\n  }\n\n  /**\n   * @param w Window of event\n   */\n  _isValidMessageSource(w) {\n    let iframeWindow = this.$field[0].contentWindow;\n    if (w === iframeWindow) {\n      return true; // same source\n    }\n\n    // Check parents of window in case event source is an inner iframe\n    // parent window of topmost window is itself (https://developer.mozilla.org/en-US/docs/Web/API/Window/parent)\n    while (w && w !== w.parent) {\n      w = w.parent;\n      if (w === iframeWindow) {\n        return true;\n      }\n    }\n    return false; // no valid parent window found\n  }\n\n  postMessage(message, targetOrigin) {\n    $.log.isDebugEnabled() && $.log.debug('send post-message: message=' + message + ', targetOrigin=' + targetOrigin);\n    this.iframe && this.iframe.postMessage(message, targetOrigin);\n  }\n  setTrackLocation(trackLocation) {\n    this.setProperty('trackLocation', trackLocation);\n    this.iframe.setTrackLocation(trackLocation);\n  }\n  _onIFramePropertyChange(event) {\n    if (!this.trackLocation) {\n      return;\n    }\n    if (event.propertyName === 'location') {\n      this._setProperty('location', event.newValue);\n    }\n  }\n  _onLoad(event) {\n    if (!this.rendered) {\n      // check needed, because this is an async callback\n      return;\n    }\n    this.invalidateLayoutTree();\n  }\n  setSandboxEnabled(sandboxEnabled) {\n    this.setProperty('sandboxEnabled', sandboxEnabled);\n    this.iframe.setSandboxEnabled(sandboxEnabled);\n  }\n  setSandboxPermissions(sandboxPermissions) {\n    this.setProperty('sandboxPermissions', sandboxPermissions);\n    this.iframe.setSandboxPermissions(sandboxPermissions);\n  }\n  setScrollBarEnabled(scrollBarEnabled) {\n    this.setProperty('scrollBarEnabled', scrollBarEnabled);\n    this.iframe.setScrollBarEnabled(scrollBarEnabled);\n  }\n}\n_defineProperty(BrowserField, \"WindowStates\", {\n  WINDOW_OPEN: 'true',\n  WINDOW_CLOSED: 'false'\n});","map":{"version":3,"names":["BrowserFieldLayout","numbers","PopupBlockerHandler","Rectangle","scout","strings","ValueField","$","BrowserField","constructor","autoCloseExternalWindow","externalWindowButtonText","externalWindowFieldText","location","trackLocation","sandboxEnabled","sandboxPermissions","trustedMessageOrigins","scrollBarEnabled","showInExternalWindow","_messageListener","_popupWindow","_externalWindowTextField","_externalWindowButton","_init","model","iframe","create","parent","on","_onIFramePropertyChange","bind","_render","addContainer","$parent","addLabel","addStatus","render","addFieldContainer","$container","addField","$iframe","$field","_onLoad","makeDiv","appendDiv","addClass","_openPopupWindow","myWindow","window","_onMessage","addEventListener","enabledComputed","setTimeout","_renderProperties","_renderExternalWindowButtonText","_renderExternalWindowFieldText","_remove","removeEventListener","closed","close","setLocation","setProperty","_renderLocation","setAutoCloseExternalWindow","setExternalWindowButtonText","text","setExternalWindowFieldText","_calcPopupBounds","POPUP_WINDOW_TOP_HEIGHT","POPUP_WINDOW_BOTTOM_HEIGHT","POPUP_WINDOW_CHROME_HEIGHT","BROWSER_WINDOW_TOP_HEIGHT","browserBounds","screenX","screenY","width","height","fieldBounds","offset","left","top","popupX","x","popupY","y","popupWidth","popupHeight","popupLowerY","browserLowerY","round","reopenIfClosed","nvl","popupBlockerHandler","session","popupBounds","windowSpecs","join","openWindow","undefined","_popupWindowOpen","focus","popup","trigger","windowState","WindowStates","WINDOW_OPEN","popupInterval","setInterval","popupWindowClosed","e","log","isInfoEnabled","info","clearInterval","WINDOW_CLOSED","event","_isValidMessageSource","source","length","some","origin","warn","isDebugEnabled","debug","data","w","iframeWindow","contentWindow","postMessage","message","targetOrigin","setTrackLocation","propertyName","_setProperty","newValue","rendered","invalidateLayoutTree","setSandboxEnabled","setSandboxPermissions","setScrollBarEnabled"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/browserfield/BrowserField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BrowserFieldLayout, numbers, PopupBlockerHandler, Rectangle, scout, strings, ValueField} from '../../../index';\nimport $ from 'jquery';\n\nexport default class BrowserField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.autoCloseExternalWindow = false;\n    this.externalWindowButtonText = null;\n    this.externalWindowFieldText = null;\n    this.location = null;\n    this.trackLocation = false;\n    this.sandboxEnabled = true;\n    this.sandboxPermissions = null;\n    this.trustedMessageOrigins = [];\n    this.scrollBarEnabled = true;\n    this.showInExternalWindow = false;\n    this._messageListener = null;\n    this._popupWindow = null;\n    this._externalWindowTextField = null;\n    this._externalWindowButton = null;\n  }\n\n  static WindowStates = {\n    WINDOW_OPEN: 'true',\n    WINDOW_CLOSED: 'false'\n  };\n\n  _init(model) {\n    super._init(model);\n\n    this.iframe = scout.create('IFrame', {\n      parent: this,\n      location: this.location,\n      sandboxEnabled: this.sandboxEnabled,\n      sandboxPermissions: this.sandboxPermissions,\n      scrollBarEnabled: this.scrollBarEnabled,\n      trackLocation: this.trackLocation\n    });\n    this.iframe.on('propertyChange', this._onIFramePropertyChange.bind(this));\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'browser-field', new BrowserFieldLayout(this));\n    this.addLabel();\n    this.addStatus();\n\n    if (!this.showInExternalWindow) {\n      // mode 1: <iframe>\n      this.iframe.render();\n      this.addFieldContainer(this.iframe.$container);\n      this.addField(this.iframe.$iframe);\n      this.$field.on('load', this._onLoad.bind(this));\n    } else {\n      // mode 2: separate window\n      this.addField(this.$parent.makeDiv());\n      this._externalWindowTextField = this.$field.appendDiv()\n        .addClass('alt');\n      this._externalWindowButton = this.$field.appendDiv()\n        .addClass('button')\n        .on('click', this._openPopupWindow.bind(this));\n    }\n\n    this.myWindow = this.$parent.window(true);\n\n    this._messageListener = this._onMessage.bind(this);\n    this.myWindow.addEventListener('message', this._messageListener);\n\n    if (this.enabledComputed) {\n      // use setTimeout to call method, because _openPopupWindow must be called after layouting\n      setTimeout(this._openPopupWindow.bind(this, true), 20);\n    }\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderExternalWindowButtonText();\n    this._renderExternalWindowFieldText();\n  }\n\n  /**\n   * @override FormField.js\n   */\n  _remove() {\n    super._remove();\n    this.myWindow.removeEventListener('message', this._messageListener);\n    this._messageListener = null;\n\n    // if content is shown in an external window and auto close is set to true\n    if (this.showInExternalWindow && this.autoCloseExternalWindow) {\n      // try to close popup window (if it is not already closed)\n      if (this._popupWindow && !this._popupWindow.closed) {\n        this._popupWindow.close();\n      }\n    }\n  }\n\n  setLocation(location) {\n    this.setProperty('location', location);\n    this.iframe.setLocation(location);\n  }\n\n  _renderLocation() {\n    // Convert empty locations to 'about:blank', because in Firefox (maybe others, too?),\n    // empty locations simply remove the src attribute but don't remove the old content.\n    let location = this.location || 'about:blank';\n    if (this.showInExternalWindow) {\n      // fallback: separate window\n      if (this._popupWindow && !this._popupWindow.closed) {\n        this._popupWindow.location = location;\n      }\n    }\n  }\n\n  setAutoCloseExternalWindow(autoCloseExternalWindow) {\n    this.setProperty('autoCloseExternalWindow', autoCloseExternalWindow);\n  }\n\n  setExternalWindowButtonText(externalWindowButtonText) {\n    this.setProperty('externalWindowButtonText', externalWindowButtonText);\n  }\n\n  _renderExternalWindowButtonText() {\n    if (this.showInExternalWindow) {\n      this._externalWindowButton.text(this.externalWindowButtonText || '');\n    }\n  }\n\n  setExternalWindowFieldText(externalWindowFieldText) {\n    this.setProperty('externalWindowFieldText', externalWindowFieldText);\n  }\n\n  _renderExternalWindowFieldText() {\n    if (this.showInExternalWindow) {\n      this._externalWindowTextField.text(this.externalWindowFieldText || '');\n    }\n  }\n\n  /**\n   * Note: this function is designed to deliver good results to position a popup over a BrowserField in Internet Explorer.\n   * Other browsers may not perfectly position the popup, since they return different values for screenX/screenY. Also\n   * there's no way to retrieve all required values from the window or screen object, that's why we have to use hard coded\n   * values here. In order to make this function more flexible you could implement it as a strategy which has different\n   * browser dependent implementations.\n   *\n   * This implementation does also deal with a multi screen setup (secondary monitor). An earlier implementation used\n   * screen.availWidth to make sure the popup is within the visible area of the screen. However, screen.availWidth only\n   * returns the size of the primary monitor, so we cannot use it. There's no way to check for a secondary monitor from\n   * a HTML document. So we removed the check entirely, which shouldn't be an issue since the browser itself does prevent\n   * popups from having an invalid position.\n   */\n  _calcPopupBounds() {\n    let myWindow = this.$container.window(true);\n\n    let POPUP_WINDOW_TOP_HEIGHT = 30;\n    let POPUP_WINDOW_BOTTOM_HEIGHT = 8;\n    let POPUP_WINDOW_CHROME_HEIGHT = POPUP_WINDOW_TOP_HEIGHT + POPUP_WINDOW_BOTTOM_HEIGHT;\n\n    let BROWSER_WINDOW_TOP_HEIGHT = 55;\n\n    // Don't limit screenX/Y in any way. Coordinates can be negative (if we have a secondary monitor on the left side\n    // of the primary monitor) or larger then the availSize of the screen (if we have a secondary monitor on the right\n    // side of the primary monitor). Note that IE cannot properly place the popup on a monitor on the left. It seems\n    // to ignore negative X coordinates somehow (but not entirely).\n    let browserBounds = new Rectangle(\n      myWindow.screenX,\n      myWindow.screenY,\n      $(myWindow).width(),\n      $(myWindow).height() + BROWSER_WINDOW_TOP_HEIGHT);\n\n    let fieldBounds = new Rectangle(\n      this.$field.offset().left,\n      this.$field.offset().top,\n      this.$field.width(),\n      this.$field.height());\n\n    let popupX = browserBounds.x + fieldBounds.x;\n    let popupY = browserBounds.y + fieldBounds.y + BROWSER_WINDOW_TOP_HEIGHT;\n    let popupWidth = fieldBounds.width;\n    let popupHeight = fieldBounds.height + POPUP_WINDOW_CHROME_HEIGHT;\n\n    // ensure that the lower Y of the new popup is not below the lower Y of the browser window\n    let popupLowerY = popupY + popupHeight;\n    let browserLowerY = browserBounds.y + browserBounds.height;\n    if (popupLowerY > browserLowerY) {\n      popupHeight -= (popupLowerY - browserLowerY) + POPUP_WINDOW_CHROME_HEIGHT;\n    }\n\n    return new Rectangle(\n      numbers.round(popupX),\n      numbers.round(popupY),\n      numbers.round(popupWidth),\n      numbers.round(popupHeight)\n    );\n  }\n\n  _openPopupWindow(reopenIfClosed) {\n    reopenIfClosed = scout.nvl(reopenIfClosed, true);\n    if (!this.showInExternalWindow) {\n      return;\n    }\n\n    if (!this._popupWindow || (reopenIfClosed && this._popupWindow.closed)) {\n      let popupBlockerHandler = scout.create('PopupBlockerHandler', {session: this.session});\n      let popupBounds = this._calcPopupBounds();\n      // (b) window specifications\n      let windowSpecs = strings.join(',',\n        'directories=no',\n        'location=no',\n        'menubar=no',\n        'resizable=yes',\n        'status=no',\n        'scrollbars=' + (this.scrollBarEnabled ? 'yes' : 'no'),\n        'toolbar=no',\n        'dependent=yes',\n        'left=' + popupBounds.x,\n        'top=' + popupBounds.y,\n        'width=' + popupBounds.width,\n        'height=' + popupBounds.height\n      );\n      let location = this.location || 'about:blank';\n      popupBlockerHandler.openWindow(location, undefined, windowSpecs, this._popupWindowOpen.bind(this));\n    } else if (reopenIfClosed) {\n      this._popupWindow.focus();\n    }\n  }\n\n  _popupWindowOpen(popup) {\n    this._popupWindow = popup;\n    if (this._popupWindow && !this._popupWindow.closed) {\n      this.trigger('externalWindowStateChange', {\n        windowState: BrowserField.WindowStates.WINDOW_OPEN\n      });\n      let popupInterval = window.setInterval(() => {\n        let popupWindowClosed = false;\n        try {\n          popupWindowClosed = this._popupWindow === null || this._popupWindow.closed;\n        } catch (e) {\n          // for some unknown reason, IE sometimes throws a \"SCRIPT16386\" error while trying to read '._popupWindow.closed'.\n          $.log.isInfoEnabled() && $.log.info('Reading the property popupWindow.closed threw an error (Retry in 500ms)');\n          return;\n        }\n        if (popupWindowClosed) {\n          window.clearInterval(popupInterval);\n          this.trigger('externalWindowStateChange', {\n            windowState: BrowserField.WindowStates.WINDOW_CLOSED\n          });\n        }\n      }, 500);\n    }\n  }\n\n  _onMessage(event) {\n    // Only handle event originating form \"our\" iframe\n    if (!this._isValidMessageSource(event.source)) {\n      return;\n    }\n    // Check if the origin is trusted before we do anything else with the data\n    if (this.trustedMessageOrigins && this.trustedMessageOrigins.length &&\n      !this.trustedMessageOrigins.some(origin => origin === event.origin)) {\n      $.log.warn('blocked message from untrusted origin ' + event.origin);\n      return;\n    }\n    $.log.isDebugEnabled() && $.log.debug('received post-message: data=' + event.data + ', origin=' + event.origin);\n    this.trigger('message', {\n      data: event.data,\n      origin: event.origin\n    });\n  }\n\n  /**\n   * @param w Window of event\n   */\n  _isValidMessageSource(w) {\n    let iframeWindow = this.$field[0].contentWindow;\n    if (w === iframeWindow) {\n      return true; // same source\n    }\n\n    // Check parents of window in case event source is an inner iframe\n    // parent window of topmost window is itself (https://developer.mozilla.org/en-US/docs/Web/API/Window/parent)\n    while (w && w !== w.parent) {\n      w = w.parent;\n      if (w === iframeWindow) {\n        return true;\n      }\n    }\n\n    return false; // no valid parent window found\n  }\n\n  postMessage(message, targetOrigin) {\n    $.log.isDebugEnabled() && $.log.debug('send post-message: message=' + message + ', targetOrigin=' + targetOrigin);\n    this.iframe && this.iframe.postMessage(message, targetOrigin);\n  }\n\n  setTrackLocation(trackLocation) {\n    this.setProperty('trackLocation', trackLocation);\n    this.iframe.setTrackLocation(trackLocation);\n  }\n\n  _onIFramePropertyChange(event) {\n    if (!this.trackLocation) {\n      return;\n    }\n    if (event.propertyName === 'location') {\n      this._setProperty('location', event.newValue);\n    }\n  }\n\n  _onLoad(event) {\n    if (!this.rendered) { // check needed, because this is an async callback\n      return;\n    }\n\n    this.invalidateLayoutTree();\n  }\n\n  setSandboxEnabled(sandboxEnabled) {\n    this.setProperty('sandboxEnabled', sandboxEnabled);\n    this.iframe.setSandboxEnabled(sandboxEnabled);\n  }\n\n  setSandboxPermissions(sandboxPermissions) {\n    this.setProperty('sandboxPermissions', sandboxPermissions);\n    this.iframe.setSandboxPermissions(sandboxPermissions);\n  }\n\n  setScrollBarEnabled(scrollBarEnabled) {\n    this.setProperty('scrollBarEnabled', scrollBarEnabled);\n    this.iframe.setScrollBarEnabled(scrollBarEnabled);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}