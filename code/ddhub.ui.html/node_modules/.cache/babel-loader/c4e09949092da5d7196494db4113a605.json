{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { menus, scout } from '../index';\nexport default class MenuItemsOrder {\n  constructor(session, objectType) {\n    this.session = session;\n    this.objectType = objectType;\n    this.emptySpaceTypes = ['EmptySpace'];\n    this.selectionTypes = ['SingleSelection', 'MultiSelection'];\n  }\n  order(items) {\n    let buttons = [],\n      emptySpaceItems = [],\n      selectionItems = [],\n      rightItems = [];\n    let isEmptyspaceMenuVisible = false,\n      isSelectionMenuVisible = false;\n    items.forEach(function (item) {\n      // skip separators added dynamically by this class\n      if (item.createdBy === this) {\n        return;\n      }\n      if (item.isButton()) {\n        buttons.push(item);\n      } else if (item.horizontalAlignment === 1) {\n        rightItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.emptySpaceTypes))) {\n        if (item.visible) {\n          isEmptyspaceMenuVisible = true;\n        }\n        emptySpaceItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.selectionTypes))) {\n        if (item.visible) {\n          isSelectionMenuVisible = true;\n        }\n        selectionItems.push(item);\n      }\n    }, this);\n\n    // add fixed separator between emptySpace and selection\n    if (isEmptyspaceMenuVisible && isSelectionMenuVisible) {\n      emptySpaceItems.push(this._createSeparator());\n    }\n    return {\n      left: buttons.concat(emptySpaceItems, selectionItems),\n      right: rightItems,\n      all: buttons.concat(emptySpaceItems, selectionItems).concat(rightItems)\n    };\n  }\n  _menuTypes(types) {\n    let i,\n      menuTypes = [];\n    types = types || [];\n    for (i = 0; i < types.length; i++) {\n      menuTypes.push(this.objectType + '.' + types[i]);\n    }\n    return menuTypes;\n  }\n\n  /**\n   * The separator here does not exist in the model delivered by the server-side client.\n   * The createdBy property is added to the model to find and destroy items added by the UI later.\n   */\n  _createSeparator() {\n    return scout.create('Menu', {\n      parent: this.menuBar,\n      createdBy: this,\n      separator: true\n    });\n  }\n}","map":{"version":3,"names":["menus","scout","MenuItemsOrder","constructor","session","objectType","emptySpaceTypes","selectionTypes","order","items","buttons","emptySpaceItems","selectionItems","rightItems","isEmptyspaceMenuVisible","isSelectionMenuVisible","forEach","item","createdBy","isButton","push","horizontalAlignment","checkType","_menuTypes","visible","_createSeparator","left","concat","right","all","types","i","menuTypes","length","create","parent","menuBar","separator"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/menu/MenuItemsOrder.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {menus, scout} from '../index';\n\nexport default class MenuItemsOrder {\n\n  constructor(session, objectType) {\n    this.session = session;\n    this.objectType = objectType;\n    this.emptySpaceTypes = ['EmptySpace'];\n    this.selectionTypes = ['SingleSelection', 'MultiSelection'];\n  }\n\n  order(items) {\n    let buttons = [],\n      emptySpaceItems = [],\n      selectionItems = [],\n      rightItems = [];\n\n    let isEmptyspaceMenuVisible = false,\n      isSelectionMenuVisible = false;\n    items.forEach(function(item) {\n      // skip separators added dynamically by this class\n      if (item.createdBy === this) {\n        return;\n      }\n      if (item.isButton()) {\n        buttons.push(item);\n      } else if (item.horizontalAlignment === 1) {\n        rightItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.emptySpaceTypes))) {\n        if (item.visible) {\n          isEmptyspaceMenuVisible = true;\n        }\n        emptySpaceItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.selectionTypes))) {\n        if (item.visible) {\n          isSelectionMenuVisible = true;\n        }\n        selectionItems.push(item);\n      }\n    }, this);\n\n    // add fixed separator between emptySpace and selection\n    if (isEmptyspaceMenuVisible && isSelectionMenuVisible) {\n      emptySpaceItems.push(this._createSeparator());\n    }\n\n    return {\n      left: buttons.concat(emptySpaceItems, selectionItems),\n      right: rightItems,\n      all: buttons.concat(emptySpaceItems, selectionItems).concat(rightItems)\n    };\n  }\n\n  _menuTypes(types) {\n    let i, menuTypes = [];\n    types = types || [];\n    for (i = 0; i < types.length; i++) {\n      menuTypes.push(this.objectType + '.' + types[i]);\n    }\n    return menuTypes;\n  }\n\n  /**\n   * The separator here does not exist in the model delivered by the server-side client.\n   * The createdBy property is added to the model to find and destroy items added by the UI later.\n   */\n  _createSeparator() {\n    return scout.create('Menu', {\n      parent: this.menuBar,\n      createdBy: this,\n      separator: true\n    });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAK,EAAEC,KAAK,QAAO,UAAU;AAErC,eAAe,MAAMC,cAAc,CAAC;EAElCC,WAAW,CAACC,OAAO,EAAEC,UAAU,EAAE;IAC/B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,eAAe,GAAG,CAAC,YAAY,CAAC;IACrC,IAAI,CAACC,cAAc,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;EAC7D;EAEAC,KAAK,CAACC,KAAK,EAAE;IACX,IAAIC,OAAO,GAAG,EAAE;MACdC,eAAe,GAAG,EAAE;MACpBC,cAAc,GAAG,EAAE;MACnBC,UAAU,GAAG,EAAE;IAEjB,IAAIC,uBAAuB,GAAG,KAAK;MACjCC,sBAAsB,GAAG,KAAK;IAChCN,KAAK,CAACO,OAAO,CAAC,UAASC,IAAI,EAAE;MAC3B;MACA,IAAIA,IAAI,CAACC,SAAS,KAAK,IAAI,EAAE;QAC3B;MACF;MACA,IAAID,IAAI,CAACE,QAAQ,EAAE,EAAE;QACnBT,OAAO,CAACU,IAAI,CAACH,IAAI,CAAC;MACpB,CAAC,MAAM,IAAIA,IAAI,CAACI,mBAAmB,KAAK,CAAC,EAAE;QACzCR,UAAU,CAACO,IAAI,CAACH,IAAI,CAAC;MACvB,CAAC,MAAM,IAAIjB,KAAK,CAACsB,SAAS,CAACL,IAAI,EAAE,IAAI,CAACM,UAAU,CAAC,IAAI,CAACjB,eAAe,CAAC,CAAC,EAAE;QACvE,IAAIW,IAAI,CAACO,OAAO,EAAE;UAChBV,uBAAuB,GAAG,IAAI;QAChC;QACAH,eAAe,CAACS,IAAI,CAACH,IAAI,CAAC;MAC5B,CAAC,MAAM,IAAIjB,KAAK,CAACsB,SAAS,CAACL,IAAI,EAAE,IAAI,CAACM,UAAU,CAAC,IAAI,CAAChB,cAAc,CAAC,CAAC,EAAE;QACtE,IAAIU,IAAI,CAACO,OAAO,EAAE;UAChBT,sBAAsB,GAAG,IAAI;QAC/B;QACAH,cAAc,CAACQ,IAAI,CAACH,IAAI,CAAC;MAC3B;IACF,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,IAAIH,uBAAuB,IAAIC,sBAAsB,EAAE;MACrDJ,eAAe,CAACS,IAAI,CAAC,IAAI,CAACK,gBAAgB,EAAE,CAAC;IAC/C;IAEA,OAAO;MACLC,IAAI,EAAEhB,OAAO,CAACiB,MAAM,CAAChB,eAAe,EAAEC,cAAc,CAAC;MACrDgB,KAAK,EAAEf,UAAU;MACjBgB,GAAG,EAAEnB,OAAO,CAACiB,MAAM,CAAChB,eAAe,EAAEC,cAAc,CAAC,CAACe,MAAM,CAACd,UAAU;IACxE,CAAC;EACH;EAEAU,UAAU,CAACO,KAAK,EAAE;IAChB,IAAIC,CAAC;MAAEC,SAAS,GAAG,EAAE;IACrBF,KAAK,GAAGA,KAAK,IAAI,EAAE;IACnB,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACG,MAAM,EAAEF,CAAC,EAAE,EAAE;MACjCC,SAAS,CAACZ,IAAI,CAAC,IAAI,CAACf,UAAU,GAAG,GAAG,GAAGyB,KAAK,CAACC,CAAC,CAAC,CAAC;IAClD;IACA,OAAOC,SAAS;EAClB;;EAEA;AACF;AACA;AACA;EACEP,gBAAgB,GAAG;IACjB,OAAOxB,KAAK,CAACiC,MAAM,CAAC,MAAM,EAAE;MAC1BC,MAAM,EAAE,IAAI,CAACC,OAAO;MACpBlB,SAAS,EAAE,IAAI;MACfmB,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}