{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, KeyStroke } from '../../index';\nexport default class TableToggleRowKeyStroke extends KeyStroke {\n  constructor(table) {\n    super();\n    this.field = table;\n    this.which = [keys.SPACE];\n    this.stopPropagation = true;\n    this.renderingHints.render = false;\n  }\n  _accept(event) {\n    let accepted = super._accept(event);\n    return accepted && this.field.checkable && this.field.selectedRows.length;\n  }\n  handle(event) {\n    let selectedRows = this.field.selectedRows.filter(row => {\n      return row.enabled;\n    });\n    // Toggle checked state to 'true', except if every row is already checked\n    let checked = selectedRows.some(row => {\n      return !row.checked;\n    });\n    selectedRows.forEach(function (row) {\n      this.field.checkRow(row, checked);\n    }, this);\n  }\n}","map":{"version":3,"names":["keys","KeyStroke","TableToggleRowKeyStroke","constructor","table","field","which","SPACE","stopPropagation","renderingHints","render","_accept","event","accepted","checkable","selectedRows","length","handle","filter","row","enabled","checked","some","forEach","checkRow"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/keystrokes/TableToggleRowKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, KeyStroke} from '../../index';\n\nexport default class TableToggleRowKeyStroke extends KeyStroke {\n\n  constructor(table) {\n    super();\n    this.field = table;\n\n    this.which = [keys.SPACE];\n    this.stopPropagation = true;\n    this.renderingHints.render = false;\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    return accepted &&\n      this.field.checkable &&\n      this.field.selectedRows.length;\n  }\n\n  handle(event) {\n    let selectedRows = this.field.selectedRows.filter(row => {\n      return row.enabled;\n    });\n    // Toggle checked state to 'true', except if every row is already checked\n    let checked = selectedRows.some(row => {\n      return !row.checked;\n    });\n    selectedRows.forEach(function(row) {\n      this.field.checkRow(row, checked);\n    }, this);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,SAAS,QAAO,aAAa;AAE3C,eAAe,MAAMC,uBAAuB,SAASD,SAAS,CAAC;EAE7DE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAGD,KAAK;IAElB,IAAI,CAACE,KAAK,GAAG,CAACN,IAAI,CAACO,KAAK,CAAC;IACzB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,cAAc,CAACC,MAAM,GAAG,KAAK;EACpC;EAEAC,OAAO,CAACC,KAAK,EAAE;IACb,IAAIC,QAAQ,GAAG,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IACnC,OAAOC,QAAQ,IACb,IAAI,CAACR,KAAK,CAACS,SAAS,IACpB,IAAI,CAACT,KAAK,CAACU,YAAY,CAACC,MAAM;EAClC;EAEAC,MAAM,CAACL,KAAK,EAAE;IACZ,IAAIG,YAAY,GAAG,IAAI,CAACV,KAAK,CAACU,YAAY,CAACG,MAAM,CAACC,GAAG,IAAI;MACvD,OAAOA,GAAG,CAACC,OAAO;IACpB,CAAC,CAAC;IACF;IACA,IAAIC,OAAO,GAAGN,YAAY,CAACO,IAAI,CAACH,GAAG,IAAI;MACrC,OAAO,CAACA,GAAG,CAACE,OAAO;IACrB,CAAC,CAAC;IACFN,YAAY,CAACQ,OAAO,CAAC,UAASJ,GAAG,EAAE;MACjC,IAAI,CAACd,KAAK,CAACmB,QAAQ,CAACL,GAAG,EAAEE,OAAO,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;EACV;AACF"},"metadata":{},"sourceType":"module"}