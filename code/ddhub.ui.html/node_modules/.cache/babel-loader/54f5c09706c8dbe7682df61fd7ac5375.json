{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, HtmlComponent, scout } from '../index';\nimport $ from 'jquery';\nexport default class RowLayout extends AbstractLayout {\n  constructor(options) {\n    super();\n    options = options || {};\n    this.pixelBasedSizing = scout.nvl(options.pixelBasedSizing, true);\n    this.stretch = scout.nvl(options.stretch, true);\n\n    // RowLayout = each child element represents a row\n    // +-----------------+\n    // |                 |\n    // +-----------------+\n    // |                 |\n    // |                 |\n    // +-----------------+\n    // |                 |\n    // +-----------------+\n  }\n\n  _getChildren($container) {\n    return $container.children();\n  }\n  layout($container) {\n    let htmlComp = HtmlComponent.get($container);\n    let containerSize = htmlComp.availableSize().subtract(htmlComp.insets());\n    this._getChildren($container).each((index, elem) => {\n      let $elem = $(elem);\n      let htmlChild = HtmlComponent.optGet($elem);\n      if (!htmlChild || !$elem.isVisible()) {\n        return;\n      }\n      if (!this.pixelBasedSizing) {\n        htmlChild.validateLayout();\n        return;\n      }\n      let prefSize = htmlChild.prefSize({\n        widthHint: containerSize.width\n      });\n      if (this.stretch) {\n        // All elements in a row layout have the same width which is the width of the container\n        prefSize.width = containerSize.width - htmlChild.margins().horizontal();\n      }\n      htmlChild.setSize(prefSize);\n    });\n  }\n  preferredLayoutSize($container, options) {\n    let prefSize = new Dimension(),\n      htmlContainer = HtmlComponent.get($container),\n      maxWidth = 0;\n    this._getChildren($container).each((index, elem) => {\n      let $elem = $(elem);\n      let htmlChild = HtmlComponent.optGet($elem);\n      if (!htmlChild || !$elem.isVisible()) {\n        return;\n      }\n      let htmlChildPrefSize = htmlChild.prefSize(options).add(htmlChild.margins());\n      maxWidth = Math.max(htmlChildPrefSize.width, maxWidth);\n      prefSize.height += htmlChildPrefSize.height;\n      prefSize.width = maxWidth;\n    });\n    prefSize = prefSize.add(htmlContainer.insets());\n    return prefSize;\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","HtmlComponent","scout","$","RowLayout","constructor","options","pixelBasedSizing","nvl","stretch","_getChildren","$container","children","layout","htmlComp","get","containerSize","availableSize","subtract","insets","each","index","elem","$elem","htmlChild","optGet","isVisible","validateLayout","prefSize","widthHint","width","margins","horizontal","setSize","preferredLayoutSize","htmlContainer","maxWidth","htmlChildPrefSize","add","Math","max","height"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/RowLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, HtmlComponent, scout} from '../index';\nimport $ from 'jquery';\n\nexport default class RowLayout extends AbstractLayout {\n\n  constructor(options) {\n    super();\n    options = options || {};\n    this.pixelBasedSizing = scout.nvl(options.pixelBasedSizing, true);\n    this.stretch = scout.nvl(options.stretch, true);\n\n    // RowLayout = each child element represents a row\n    // +-----------------+\n    // |                 |\n    // +-----------------+\n    // |                 |\n    // |                 |\n    // +-----------------+\n    // |                 |\n    // +-----------------+\n  }\n\n  _getChildren($container) {\n    return $container.children();\n  }\n\n  layout($container) {\n    let htmlComp = HtmlComponent.get($container);\n    let containerSize = htmlComp.availableSize()\n      .subtract(htmlComp.insets());\n\n    this._getChildren($container).each((index, elem) => {\n      let $elem = $(elem);\n      let htmlChild = HtmlComponent.optGet($elem);\n      if (!htmlChild || !$elem.isVisible()) {\n        return;\n      }\n      if (!this.pixelBasedSizing) {\n        htmlChild.validateLayout();\n        return;\n      }\n      let prefSize = htmlChild.prefSize({\n        widthHint: containerSize.width\n      });\n\n      if (this.stretch) {\n        // All elements in a row layout have the same width which is the width of the container\n        prefSize.width = containerSize.width - htmlChild.margins().horizontal();\n      }\n\n      htmlChild.setSize(prefSize);\n    });\n  }\n\n  preferredLayoutSize($container, options) {\n    let prefSize = new Dimension(),\n      htmlContainer = HtmlComponent.get($container),\n      maxWidth = 0;\n\n    this._getChildren($container).each((index, elem) => {\n      let $elem = $(elem);\n      let htmlChild = HtmlComponent.optGet($elem);\n      if (!htmlChild || !$elem.isVisible()) {\n        return;\n      }\n      let htmlChildPrefSize = htmlChild.prefSize(options)\n        .add(htmlChild.margins());\n      maxWidth = Math.max(htmlChildPrefSize.width, maxWidth);\n      prefSize.height += htmlChildPrefSize.height;\n      prefSize.width = maxWidth;\n    });\n\n    prefSize = prefSize.add(htmlContainer.insets());\n    return prefSize;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}