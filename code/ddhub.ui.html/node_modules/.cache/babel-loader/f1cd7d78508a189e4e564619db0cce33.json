{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ValueFieldAdapter } from '../../../index';\nexport default class FileChooserButtonAdapter extends ValueFieldAdapter {\n  constructor() {\n    super();\n  }\n  _onWidgetPropertyChange(event) {\n    super._onWidgetPropertyChange(event);\n    if (event.propertyName === 'value') {\n      this._onValueChange(event);\n    }\n  }\n  _onValueChange(event) {\n    let success = this.widget.fileInput.upload();\n    if (!success) {\n      this.widget.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _syncDisplayText(displayText) {\n    this.widget.setDisplayText(displayText);\n    // When displayText comes from the server we must not call parseAndSetValue here.\n  }\n}","map":{"version":3,"names":["ValueFieldAdapter","FileChooserButtonAdapter","constructor","_onWidgetPropertyChange","event","propertyName","_onValueChange","success","widget","fileInput","upload","clear","_syncDisplayText","displayText","setDisplayText"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/filechooserbutton/FileChooserButtonAdapter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ValueFieldAdapter} from '../../../index';\n\nexport default class FileChooserButtonAdapter extends ValueFieldAdapter {\n\n  constructor() {\n    super();\n  }\n\n  _onWidgetPropertyChange(event) {\n    super._onWidgetPropertyChange(event);\n\n    if (event.propertyName === 'value') {\n      this._onValueChange(event);\n    }\n  }\n\n  _onValueChange(event) {\n    let success = this.widget.fileInput.upload();\n    if (!success) {\n      this.widget.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _syncDisplayText(displayText) {\n    this.widget.setDisplayText(displayText);\n    // When displayText comes from the server we must not call parseAndSetValue here.\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,iBAAiB,QAAO,gBAAgB;AAEhD,eAAe,MAAMC,wBAAwB,SAASD,iBAAiB,CAAC;EAEtEE,WAAW,GAAG;IACZ,KAAK,EAAE;EACT;EAEAC,uBAAuB,CAACC,KAAK,EAAE;IAC7B,KAAK,CAACD,uBAAuB,CAACC,KAAK,CAAC;IAEpC,IAAIA,KAAK,CAACC,YAAY,KAAK,OAAO,EAAE;MAClC,IAAI,CAACC,cAAc,CAACF,KAAK,CAAC;IAC5B;EACF;EAEAE,cAAc,CAACF,KAAK,EAAE;IACpB,IAAIG,OAAO,GAAG,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,MAAM,EAAE;IAC5C,IAAI,CAACH,OAAO,EAAE;MACZ,IAAI,CAACC,MAAM,CAACC,SAAS,CAACE,KAAK,EAAE;IAC/B;EACF;;EAEA;AACF;AACA;EACEC,gBAAgB,CAACC,WAAW,EAAE;IAC5B,IAAI,CAACL,MAAM,CAACM,cAAc,CAACD,WAAW,CAAC;IACvC;EACF;AACF"},"metadata":{},"sourceType":"module"}