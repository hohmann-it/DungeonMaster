{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ColumnUserFilter, scout, strings } from '../../index';\nimport $ from 'jquery';\nexport default class TextColumnUserFilter extends ColumnUserFilter {\n  constructor() {\n    super();\n    this.freeText = null;\n    this.freeTextField = null;\n    this.hasFilterFields = true;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  createFilterAddedEventData() {\n    let data = super.createFilterAddedEventData();\n    data.freeText = this.freeText;\n    return data;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  fieldsFilterActive() {\n    return strings.hasText(this.freeText);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  acceptByFields(key, normKey, row) {\n    let filterFieldText = strings.nvl(this.freeText).toLowerCase(),\n      rowText = strings.nvl(this.column.cellTextForTextFilter(row)).toLowerCase();\n    return rowText.indexOf(filterFieldText) > -1;\n  }\n\n  /**\n   * @override\n   */\n  filterFieldsTitle() {\n    return this.session.text('ui.FreeText');\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  addFilterFields(groupBox) {\n    this.freeTextField = scout.create('StringField', {\n      parent: groupBox,\n      labelVisible: false,\n      statusVisible: false,\n      maxLength: 100,\n      displayText: this.freeText,\n      updateDisplayTextOnModify: true\n    });\n    this.freeTextField.on('acceptInput', this._onAcceptInput.bind(this));\n    groupBox.addField0(this.freeTextField);\n  }\n  _onAcceptInput(event) {\n    this.freeText = this.freeTextField.$field.val().trim();\n    $.log.isDebugEnabled() && $.log.debug('(TextColumnUserFilter#_onAcceptInput) freeText=' + this.freeText);\n    this.triggerFilterFieldsChanged(event);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  modifyFilterFields() {\n    this.freeTextField.removeMandatoryIndicator();\n  }\n}","map":{"version":3,"names":["ColumnUserFilter","scout","strings","$","TextColumnUserFilter","constructor","freeText","freeTextField","hasFilterFields","createFilterAddedEventData","data","fieldsFilterActive","hasText","acceptByFields","key","normKey","row","filterFieldText","nvl","toLowerCase","rowText","column","cellTextForTextFilter","indexOf","filterFieldsTitle","session","text","addFilterFields","groupBox","create","parent","labelVisible","statusVisible","maxLength","displayText","updateDisplayTextOnModify","on","_onAcceptInput","bind","addField0","event","$field","val","trim","log","isDebugEnabled","debug","triggerFilterFieldsChanged","modifyFilterFields","removeMandatoryIndicator"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/userfilter/TextColumnUserFilter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ColumnUserFilter, scout, strings} from '../../index';\nimport $ from 'jquery';\n\nexport default class TextColumnUserFilter extends ColumnUserFilter {\n\n  constructor() {\n    super();\n\n    this.freeText = null;\n    this.freeTextField = null;\n    this.hasFilterFields = true;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  createFilterAddedEventData() {\n    let data = super.createFilterAddedEventData();\n    data.freeText = this.freeText;\n    return data;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  fieldsFilterActive() {\n    return strings.hasText(this.freeText);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  acceptByFields(key, normKey, row) {\n    let filterFieldText = strings.nvl(this.freeText).toLowerCase(),\n      rowText = strings.nvl(this.column.cellTextForTextFilter(row)).toLowerCase();\n    return rowText.indexOf(filterFieldText) > -1;\n  }\n\n  /**\n   * @override\n   */\n  filterFieldsTitle() {\n    return this.session.text('ui.FreeText');\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  addFilterFields(groupBox) {\n    this.freeTextField = scout.create('StringField', {\n      parent: groupBox,\n      labelVisible: false,\n      statusVisible: false,\n      maxLength: 100,\n      displayText: this.freeText,\n      updateDisplayTextOnModify: true\n    });\n    this.freeTextField.on('acceptInput', this._onAcceptInput.bind(this));\n    groupBox.addField0(this.freeTextField);\n  }\n\n  _onAcceptInput(event) {\n    this.freeText = this.freeTextField.$field.val().trim();\n    $.log.isDebugEnabled() && $.log.debug('(TextColumnUserFilter#_onAcceptInput) freeText=' + this.freeText);\n    this.triggerFilterFieldsChanged(event);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  modifyFilterFields() {\n    this.freeTextField.removeMandatoryIndicator();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gBAAgB,EAAEC,KAAK,EAAEC,OAAO,QAAO,aAAa;AAC5D,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,oBAAoB,SAASJ,gBAAgB,CAAC;EAEjEK,WAAW,GAAG;IACZ,KAAK,EAAE;IAEP,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,eAAe,GAAG,IAAI;EAC7B;;EAEA;AACF;AACA;EACEC,0BAA0B,GAAG;IAC3B,IAAIC,IAAI,GAAG,KAAK,CAACD,0BAA0B,EAAE;IAC7CC,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC7B,OAAOI,IAAI;EACb;;EAEA;AACF;AACA;EACEC,kBAAkB,GAAG;IACnB,OAAOT,OAAO,CAACU,OAAO,CAAC,IAAI,CAACN,QAAQ,CAAC;EACvC;;EAEA;AACF;AACA;EACEO,cAAc,CAACC,GAAG,EAAEC,OAAO,EAAEC,GAAG,EAAE;IAChC,IAAIC,eAAe,GAAGf,OAAO,CAACgB,GAAG,CAAC,IAAI,CAACZ,QAAQ,CAAC,CAACa,WAAW,EAAE;MAC5DC,OAAO,GAAGlB,OAAO,CAACgB,GAAG,CAAC,IAAI,CAACG,MAAM,CAACC,qBAAqB,CAACN,GAAG,CAAC,CAAC,CAACG,WAAW,EAAE;IAC7E,OAAOC,OAAO,CAACG,OAAO,CAACN,eAAe,CAAC,GAAG,CAAC,CAAC;EAC9C;;EAEA;AACF;AACA;EACEO,iBAAiB,GAAG;IAClB,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;EACzC;;EAEA;AACF;AACA;EACEC,eAAe,CAACC,QAAQ,EAAE;IACxB,IAAI,CAACrB,aAAa,GAAGN,KAAK,CAAC4B,MAAM,CAAC,aAAa,EAAE;MAC/CC,MAAM,EAAEF,QAAQ;MAChBG,YAAY,EAAE,KAAK;MACnBC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,GAAG;MACdC,WAAW,EAAE,IAAI,CAAC5B,QAAQ;MAC1B6B,yBAAyB,EAAE;IAC7B,CAAC,CAAC;IACF,IAAI,CAAC5B,aAAa,CAAC6B,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpEV,QAAQ,CAACW,SAAS,CAAC,IAAI,CAAChC,aAAa,CAAC;EACxC;EAEA8B,cAAc,CAACG,KAAK,EAAE;IACpB,IAAI,CAAClC,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACkC,MAAM,CAACC,GAAG,EAAE,CAACC,IAAI,EAAE;IACtDxC,CAAC,CAACyC,GAAG,CAACC,cAAc,EAAE,IAAI1C,CAAC,CAACyC,GAAG,CAACE,KAAK,CAAC,iDAAiD,GAAG,IAAI,CAACxC,QAAQ,CAAC;IACxG,IAAI,CAACyC,0BAA0B,CAACP,KAAK,CAAC;EACxC;;EAEA;AACF;AACA;EACEQ,kBAAkB,GAAG;IACnB,IAAI,CAACzC,aAAa,CAAC0C,wBAAwB,EAAE;EAC/C;AACF"},"metadata":{},"sourceType":"module"}