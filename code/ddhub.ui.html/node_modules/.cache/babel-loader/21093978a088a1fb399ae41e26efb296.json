{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, CompactTreeDownKeyStroke, CompactTreeLeftKeyStroke, CompactTreeRightKeyStroke, CompactTreeUpKeyStroke, HtmlComponent, MenuItemsOrder, Range, scout, Tree, TreeLayout } from '../index';\nexport default class CompactTree extends Tree {\n  constructor() {\n    super();\n    this.$nodesContainer;\n    this._scrolldirections = 'y';\n  }\n\n  /**\n   * @override Tree.js\n   */\n  _initTreeKeyStrokeContext() {\n    this.keyStrokeContext.registerKeyStroke([new CompactTreeUpKeyStroke(this), new CompactTreeDownKeyStroke(this), new CompactTreeLeftKeyStroke(this), new CompactTreeRightKeyStroke(this)]);\n  }\n  _createTreeNode(nodeModel) {\n    nodeModel = scout.nvl(nodeModel, {});\n    nodeModel.parent = this;\n    return scout.create('CompactTreeNode', nodeModel);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('compact-tree');\n    let layout = new TreeLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n    this.$data = this.$container.appendDiv('tree-data');\n    this._installScrollbars({\n      borderless: true\n    });\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      menuOrder: new MenuItemsOrder(this.session, 'Tree')\n    });\n    this.menuBar.render();\n    this.$nodesContainer = this.$data.appendDiv('nodes');\n    this._updateNodeDimensions();\n    this._renderViewport();\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  _calculateCurrentViewRange() {\n    this.viewRangeSize = this.visibleNodesFlat.length;\n    return new Range(0, Math.max(this.visibleNodesFlat.length, 0));\n  }\n\n  /**\n   * @override\n   */\n  calculateViewRangeSize() {\n    return this.visibleNodesFlat.length;\n  }\n\n  /**\n   * @override\n   */\n  _insertNodeInDOMAtPlace(node, index) {\n    let visibleNodeBefore = this.visibleNodesFlat[index - 1];\n    let n;\n    if (!visibleNodeBefore) {\n      node.$node.prependTo(this.$nodesContainer);\n    } else if (visibleNodeBefore.level < node.level) {\n      // insert after first child node (title from the level above)\n      node.$node.insertAfter(visibleNodeBefore.$node.children()[0]);\n    } else {\n      n = visibleNodeBefore.$node;\n      for (let i = 0; i < visibleNodeBefore.level - node.level; i++) {\n        n = n.parent();\n      }\n      node.$node.insertAfter(n);\n    }\n  }\n\n  /**\n   * @override\n   */\n  selectNodes(nodes, debounceSend) {\n    let selectedSectionNodes = [];\n    nodes = arrays.ensure(nodes);\n    nodes.forEach(node => {\n      // If a section is selected, automatically change selection to first section-node\n      if (node.isSection()) {\n        if (node.childNodes.length > 0) {\n          selectedSectionNodes.push(node.childNodes[0]);\n        }\n      } else {\n        selectedSectionNodes.push(node);\n      }\n    }, this);\n    super.selectNodes(selectedSectionNodes);\n  }\n\n  /**\n   * @override\n   */\n  _renderExpansion(node) {\n    // nop (not supported by CompactTree)\n  }\n\n  /**\n   * @override\n   */\n  _updateItemPath() {\n    // nop (not supported by CompactTree)\n  }\n}","map":{"version":3,"names":["arrays","CompactTreeDownKeyStroke","CompactTreeLeftKeyStroke","CompactTreeRightKeyStroke","CompactTreeUpKeyStroke","HtmlComponent","MenuItemsOrder","Range","scout","Tree","TreeLayout","CompactTree","constructor","$nodesContainer","_scrolldirections","_initTreeKeyStrokeContext","keyStrokeContext","registerKeyStroke","_createTreeNode","nodeModel","nvl","parent","create","_render","$container","$parent","appendDiv","layout","htmlComp","install","session","setLayout","$data","_installScrollbars","borderless","menuBar","menuOrder","render","_updateNodeDimensions","_renderViewport","invalidateLayoutTree","_calculateCurrentViewRange","viewRangeSize","visibleNodesFlat","length","Math","max","calculateViewRangeSize","_insertNodeInDOMAtPlace","node","index","visibleNodeBefore","n","$node","prependTo","level","insertAfter","children","i","selectNodes","nodes","debounceSend","selectedSectionNodes","ensure","forEach","isSection","childNodes","push","_renderExpansion","_updateItemPath"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/CompactTree.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, CompactTreeDownKeyStroke, CompactTreeLeftKeyStroke, CompactTreeRightKeyStroke, CompactTreeUpKeyStroke, HtmlComponent, MenuItemsOrder, Range, scout, Tree, TreeLayout} from '../index';\n\nexport default class CompactTree extends Tree {\n\n  constructor() {\n    super();\n    this.$nodesContainer;\n    this._scrolldirections = 'y';\n  }\n\n  /**\n   * @override Tree.js\n   */\n  _initTreeKeyStrokeContext() {\n    this.keyStrokeContext.registerKeyStroke([\n      new CompactTreeUpKeyStroke(this),\n      new CompactTreeDownKeyStroke(this),\n      new CompactTreeLeftKeyStroke(this),\n      new CompactTreeRightKeyStroke(this)\n    ]);\n  }\n\n  _createTreeNode(nodeModel) {\n    nodeModel = scout.nvl(nodeModel, {});\n    nodeModel.parent = this;\n    return scout.create('CompactTreeNode', nodeModel);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('compact-tree');\n\n    let layout = new TreeLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n\n    this.$data = this.$container.appendDiv('tree-data');\n    this._installScrollbars({\n      borderless: true\n    });\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      menuOrder: new MenuItemsOrder(this.session, 'Tree')\n    });\n    this.menuBar.render();\n\n    this.$nodesContainer = this.$data.appendDiv('nodes');\n    this._updateNodeDimensions();\n    this._renderViewport();\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  _calculateCurrentViewRange() {\n    this.viewRangeSize = this.visibleNodesFlat.length;\n    return new Range(0, Math.max(this.visibleNodesFlat.length, 0));\n  }\n\n  /**\n   * @override\n   */\n  calculateViewRangeSize() {\n    return this.visibleNodesFlat.length;\n  }\n\n  /**\n   * @override\n   */\n  _insertNodeInDOMAtPlace(node, index) {\n    let visibleNodeBefore = this.visibleNodesFlat[index - 1];\n    let n;\n    if (!visibleNodeBefore) {\n      node.$node.prependTo(this.$nodesContainer);\n    } else if (visibleNodeBefore.level < node.level) {\n      // insert after first child node (title from the level above)\n      node.$node.insertAfter(visibleNodeBefore.$node.children()[0]);\n    } else {\n      n = visibleNodeBefore.$node;\n      for (let i = 0; i < visibleNodeBefore.level - node.level; i++) {\n        n = n.parent();\n      }\n      node.$node.insertAfter(n);\n    }\n  }\n\n  /**\n   * @override\n   */\n  selectNodes(nodes, debounceSend) {\n    let selectedSectionNodes = [];\n    nodes = arrays.ensure(nodes);\n    nodes.forEach(node => {\n      // If a section is selected, automatically change selection to first section-node\n      if (node.isSection()) {\n        if (node.childNodes.length > 0) {\n          selectedSectionNodes.push(node.childNodes[0]);\n        }\n      } else {\n        selectedSectionNodes.push(node);\n      }\n    }, this);\n\n    super.selectNodes(selectedSectionNodes);\n  }\n\n  /**\n   * @override\n   */\n  _renderExpansion(node) {\n    // nop (not supported by CompactTree)\n  }\n\n  /**\n   * @override\n   */\n  _updateItemPath() {\n    // nop (not supported by CompactTree)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,EAAEC,wBAAwB,EAAEC,wBAAwB,EAAEC,yBAAyB,EAAEC,sBAAsB,EAAEC,aAAa,EAAEC,cAAc,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,QAAO,UAAU;AAErM,eAAe,MAAMC,WAAW,SAASF,IAAI,CAAC;EAE5CG,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,eAAe;IACpB,IAAI,CAACC,iBAAiB,GAAG,GAAG;EAC9B;;EAEA;AACF;AACA;EACEC,yBAAyB,GAAG;IAC1B,IAAI,CAACC,gBAAgB,CAACC,iBAAiB,CAAC,CACtC,IAAIb,sBAAsB,CAAC,IAAI,CAAC,EAChC,IAAIH,wBAAwB,CAAC,IAAI,CAAC,EAClC,IAAIC,wBAAwB,CAAC,IAAI,CAAC,EAClC,IAAIC,yBAAyB,CAAC,IAAI,CAAC,CACpC,CAAC;EACJ;EAEAe,eAAe,CAACC,SAAS,EAAE;IACzBA,SAAS,GAAGX,KAAK,CAACY,GAAG,CAACD,SAAS,EAAE,CAAC,CAAC,CAAC;IACpCA,SAAS,CAACE,MAAM,GAAG,IAAI;IACvB,OAAOb,KAAK,CAACc,MAAM,CAAC,iBAAiB,EAAEH,SAAS,CAAC;EACnD;EAEAI,OAAO,GAAG;IACR,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,OAAO,CAACC,SAAS,CAAC,cAAc,CAAC;IAExD,IAAIC,MAAM,GAAG,IAAIjB,UAAU,CAAC,IAAI,CAAC;IACjC,IAAI,CAACkB,QAAQ,GAAGvB,aAAa,CAACwB,OAAO,CAAC,IAAI,CAACL,UAAU,EAAE,IAAI,CAACM,OAAO,CAAC;IACpE,IAAI,CAACF,QAAQ,CAACG,SAAS,CAACJ,MAAM,CAAC;IAE/B,IAAI,CAACK,KAAK,GAAG,IAAI,CAACR,UAAU,CAACE,SAAS,CAAC,WAAW,CAAC;IACnD,IAAI,CAACO,kBAAkB,CAAC;MACtBC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,IAAI,CAACC,OAAO,GAAG3B,KAAK,CAACc,MAAM,CAAC,SAAS,EAAE;MACrCD,MAAM,EAAE,IAAI;MACZe,SAAS,EAAE,IAAI9B,cAAc,CAAC,IAAI,CAACwB,OAAO,EAAE,MAAM;IACpD,CAAC,CAAC;IACF,IAAI,CAACK,OAAO,CAACE,MAAM,EAAE;IAErB,IAAI,CAACxB,eAAe,GAAG,IAAI,CAACmB,KAAK,CAACN,SAAS,CAAC,OAAO,CAAC;IACpD,IAAI,CAACY,qBAAqB,EAAE;IAC5B,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,oBAAoB,EAAE;EAC7B;;EAEA;AACF;AACA;EACEC,0BAA0B,GAAG;IAC3B,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACC,MAAM;IACjD,OAAO,IAAIrC,KAAK,CAAC,CAAC,EAAEsC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACH,gBAAgB,CAACC,MAAM,EAAE,CAAC,CAAC,CAAC;EAChE;;EAEA;AACF;AACA;EACEG,sBAAsB,GAAG;IACvB,OAAO,IAAI,CAACJ,gBAAgB,CAACC,MAAM;EACrC;;EAEA;AACF;AACA;EACEI,uBAAuB,CAACC,IAAI,EAAEC,KAAK,EAAE;IACnC,IAAIC,iBAAiB,GAAG,IAAI,CAACR,gBAAgB,CAACO,KAAK,GAAG,CAAC,CAAC;IACxD,IAAIE,CAAC;IACL,IAAI,CAACD,iBAAiB,EAAE;MACtBF,IAAI,CAACI,KAAK,CAACC,SAAS,CAAC,IAAI,CAACzC,eAAe,CAAC;IAC5C,CAAC,MAAM,IAAIsC,iBAAiB,CAACI,KAAK,GAAGN,IAAI,CAACM,KAAK,EAAE;MAC/C;MACAN,IAAI,CAACI,KAAK,CAACG,WAAW,CAACL,iBAAiB,CAACE,KAAK,CAACI,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLL,CAAC,GAAGD,iBAAiB,CAACE,KAAK;MAC3B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,iBAAiB,CAACI,KAAK,GAAGN,IAAI,CAACM,KAAK,EAAEG,CAAC,EAAE,EAAE;QAC7DN,CAAC,GAAGA,CAAC,CAAC/B,MAAM,EAAE;MAChB;MACA4B,IAAI,CAACI,KAAK,CAACG,WAAW,CAACJ,CAAC,CAAC;IAC3B;EACF;;EAEA;AACF;AACA;EACEO,WAAW,CAACC,KAAK,EAAEC,YAAY,EAAE;IAC/B,IAAIC,oBAAoB,GAAG,EAAE;IAC7BF,KAAK,GAAG5D,MAAM,CAAC+D,MAAM,CAACH,KAAK,CAAC;IAC5BA,KAAK,CAACI,OAAO,CAACf,IAAI,IAAI;MACpB;MACA,IAAIA,IAAI,CAACgB,SAAS,EAAE,EAAE;QACpB,IAAIhB,IAAI,CAACiB,UAAU,CAACtB,MAAM,GAAG,CAAC,EAAE;UAC9BkB,oBAAoB,CAACK,IAAI,CAAClB,IAAI,CAACiB,UAAU,CAAC,CAAC,CAAC,CAAC;QAC/C;MACF,CAAC,MAAM;QACLJ,oBAAoB,CAACK,IAAI,CAAClB,IAAI,CAAC;MACjC;IACF,CAAC,EAAE,IAAI,CAAC;IAER,KAAK,CAACU,WAAW,CAACG,oBAAoB,CAAC;EACzC;;EAEA;AACF;AACA;EACEM,gBAAgB,CAACnB,IAAI,EAAE;IACrB;EAAA;;EAGF;AACF;AACA;EACEoB,eAAe,GAAG;IAChB;EAAA;AAEJ"},"metadata":{},"sourceType":"module"}