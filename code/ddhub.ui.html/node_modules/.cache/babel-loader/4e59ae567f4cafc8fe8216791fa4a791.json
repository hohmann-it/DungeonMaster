{"ast":null,"code":"/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * This class is used to reset and restore styles in the DOM, so we can measure the preferred size of the tree.\n */\nexport default class TreeLayoutResetter {\n  constructor(tree) {\n    this._tree = tree;\n    this.cssSelector = '.tree';\n  }\n  modifyDom() {\n    this._ensureFirstLast();\n    this._tree.$container.css('display', 'inline-block').css('width', 'auto').css('height', 'auto');\n    this._tree.$data.css('display', 'inline-block');\n  }\n  restoreDom() {\n    this._tree.$container.css('display', 'block').css('width', '100%').css('height', '100%');\n    this._tree.$data.css('display', 'block');\n  }\n  _ensureFirstLast() {\n    let $nodes = this._tree.$data.children('.tree-node').removeClass('first last');\n    $nodes.first().addClass('first');\n    $nodes.last().addClass('last');\n  }\n}","map":{"version":3,"names":["TreeLayoutResetter","constructor","tree","_tree","cssSelector","modifyDom","_ensureFirstLast","$container","css","$data","restoreDom","$nodes","children","removeClass","first","addClass","last"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/smartfield/TreeLayoutResetter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * This class is used to reset and restore styles in the DOM, so we can measure the preferred size of the tree.\n */\nexport default class TreeLayoutResetter {\n\n  constructor(tree) {\n    this._tree = tree;\n    this.cssSelector = '.tree';\n  }\n\n  modifyDom() {\n    this._ensureFirstLast();\n    this._tree.$container\n      .css('display', 'inline-block')\n      .css('width', 'auto')\n      .css('height', 'auto');\n    this._tree.$data\n      .css('display', 'inline-block');\n  }\n\n  restoreDom() {\n    this._tree.$container\n      .css('display', 'block')\n      .css('width', '100%')\n      .css('height', '100%');\n    this._tree.$data\n      .css('display', 'block');\n  }\n\n  _ensureFirstLast() {\n    let $nodes = this._tree.$data\n      .children('.tree-node')\n      .removeClass('first last');\n    $nodes.first()\n      .addClass('first');\n    $nodes.last()\n      .addClass('last');\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAMA,kBAAkB,CAAC;EAEtCC,WAAW,CAACC,IAAI,EAAE;IAChB,IAAI,CAACC,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACE,WAAW,GAAG,OAAO;EAC5B;EAEAC,SAAS,GAAG;IACV,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACH,KAAK,CAACI,UAAU,CAClBC,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC,CAC9BA,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CACpBA,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IACxB,IAAI,CAACL,KAAK,CAACM,KAAK,CACbD,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC;EACnC;EAEAE,UAAU,GAAG;IACX,IAAI,CAACP,KAAK,CAACI,UAAU,CAClBC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CACvBA,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CACpBA,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IACxB,IAAI,CAACL,KAAK,CAACM,KAAK,CACbD,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;EAC5B;EAEAF,gBAAgB,GAAG;IACjB,IAAIK,MAAM,GAAG,IAAI,CAACR,KAAK,CAACM,KAAK,CAC1BG,QAAQ,CAAC,YAAY,CAAC,CACtBC,WAAW,CAAC,YAAY,CAAC;IAC5BF,MAAM,CAACG,KAAK,EAAE,CACXC,QAAQ,CAAC,OAAO,CAAC;IACpBJ,MAAM,CAACK,IAAI,EAAE,CACVD,QAAQ,CAAC,MAAM,CAAC;EACrB;AACF"},"metadata":{},"sourceType":"module"}