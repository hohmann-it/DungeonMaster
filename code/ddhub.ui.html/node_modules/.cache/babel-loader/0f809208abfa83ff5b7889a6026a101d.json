{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Locale, objects, scout, texts } from '../index';\nimport $ from 'jquery';\nlet localesMap = {};\nexport function bootstrap(url) {\n  let promise = url ? $.ajaxJson(url) : $.resolvedPromise([]);\n  return promise.then(_preInit.bind(this, url));\n}\nexport function _preInit(url, data) {\n  if (data && data.error) {\n    // The result may contain a json error (e.g. session timeout) -> abort processing\n    throw {\n      error: data.error,\n      url: url\n    };\n  }\n  init(data);\n}\nexport function init(data) {\n  data.forEach(locale => {\n    localesMap[locale.languageTag] = new Locale(locale);\n  }, this);\n}\nexport function _get(languageTag) {\n  return localesMap[languageTag];\n}\n\n/**\n * Checks whether there is a locale definition for the given language tag.\n * @param explicit if true, the country code is considered, meaning if languageTag is 'de-CH'\n *   and there is a locale for 'de' but not for 'de-CH', true will be returned nonetheless. Default false (consistent to #get).\n */\nexport function has(languageTag, explicit) {\n  explicit = scout.nvl(explicit, false);\n  if (explicit) {\n    return !!_get(languageTag);\n  }\n  return !!get(languageTag);\n}\n\n/**\n * @returns {Locale} the locale for the given languageTag.\n * If there is no locale found for the given tag, it tries to load the locale without the country code.\n * If there is still no locale found, null is returned.\n */\nexport function get(languageTag) {\n  let locale,\n    tags = texts.createOrderedLanguageTags(languageTag);\n  tags.some(tag => {\n    locale = _get(tag);\n    return !!locale;\n  }, this);\n  if (!locale) {\n    return null;\n  }\n  return locale;\n}\nexport function getNavigatorLanguage() {\n  return navigator.language || navigator.userLanguage;\n}\n\n/**\n * @returns {Locale} for the language returned by the navigator.\n * If no locale is found, the first locale with the language of the navigator is returned.\n * (e.g. if browser returns 'de' and there is no locale for 'de', check if there is one for 'de-CH', 'de-DE' etc. and take the first.)\n * If still no locale is found, the default locale {@link Locale.DEFAULT} is returned.\n */\nexport function getNavigatorLocale() {\n  let languageTag = getNavigatorLanguage();\n  if (!languageTag) {\n    //  No language returned by the browser, using default locale (should not happen with modern browsers, but we never know...)\n    $.log.warn('Browser returned no language. Using default locale.');\n    return new Locale();\n  }\n  let locale = get(languageTag);\n  if (locale) {\n    // If a locale was found for the language returned by the navigator, use that one\n    return locale;\n  }\n\n  // Otherwise search a locale with the same language\n  $.log.isInfoEnabled() && $.log.info('Locale for languageTag ' + languageTag + ' not found. Trying to load best match.');\n  let language = splitLanguageTag(languageTag)[0];\n  locale = findFirstForLanguage(language);\n  if (locale) {\n    return locale;\n  }\n\n  // If still not found, use the default locale\n  $.log.isInfoEnabled() && $.log.info('Still no matching locale for languageTag ' + languageTag + ' found. Using default locale.');\n  return new Locale();\n}\nexport function getAll() {\n  return objects.values(localesMap);\n}\nexport function getAllLanguageTags() {\n  return Object.keys(localesMap);\n}\n\n/**\n * Returns the first locale for the given language.\n * @param language a language without country code (e.g. en or de)\n */\nexport function findFirstForLanguage(language) {\n  scout.assertParameter('language', language);\n  return arrays.find(getAll(), locale => {\n    if (locale.language === language) {\n      return locale;\n    }\n  }, this);\n}\n\n/**\n * Splits the language tag and returns an array containing the language and the country.\n */\nexport function splitLanguageTag(languageTag) {\n  if (!languageTag) {\n    return [];\n  }\n  return languageTag.split('-');\n}\nexport default {\n  bootstrap,\n  findFirstForLanguage,\n  get,\n  getAll,\n  getAllLanguageTags,\n  getNavigatorLanguage,\n  getNavigatorLocale,\n  has,\n  init,\n  localesMap,\n  splitLanguageTag\n};","map":{"version":3,"names":["arrays","Locale","objects","scout","texts","$","localesMap","bootstrap","url","promise","ajaxJson","resolvedPromise","then","_preInit","bind","data","error","init","forEach","locale","languageTag","_get","has","explicit","nvl","get","tags","createOrderedLanguageTags","some","tag","getNavigatorLanguage","navigator","language","userLanguage","getNavigatorLocale","log","warn","isInfoEnabled","info","splitLanguageTag","findFirstForLanguage","getAll","values","getAllLanguageTags","Object","keys","assertParameter","find","split"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/locales.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Locale, objects, scout, texts} from '../index';\nimport $ from 'jquery';\n\nlet localesMap = {};\n\nexport function bootstrap(url) {\n  let promise = url ? $.ajaxJson(url) : $.resolvedPromise([]);\n  return promise.then(_preInit.bind(this, url));\n}\n\nexport function _preInit(url, data) {\n  if (data && data.error) {\n    // The result may contain a json error (e.g. session timeout) -> abort processing\n    throw {\n      error: data.error,\n      url: url\n    };\n  }\n  init(data);\n}\n\nexport function init(data) {\n  data.forEach(locale => {\n    localesMap[locale.languageTag] = new Locale(locale);\n  }, this);\n}\n\nexport function _get(languageTag) {\n  return localesMap[languageTag];\n}\n\n/**\n * Checks whether there is a locale definition for the given language tag.\n * @param explicit if true, the country code is considered, meaning if languageTag is 'de-CH'\n *   and there is a locale for 'de' but not for 'de-CH', true will be returned nonetheless. Default false (consistent to #get).\n */\nexport function has(languageTag, explicit) {\n  explicit = scout.nvl(explicit, false);\n  if (explicit) {\n    return !!_get(languageTag);\n  }\n  return !!get(languageTag);\n}\n\n/**\n * @returns {Locale} the locale for the given languageTag.\n * If there is no locale found for the given tag, it tries to load the locale without the country code.\n * If there is still no locale found, null is returned.\n */\nexport function get(languageTag) {\n  let locale,\n    tags = texts.createOrderedLanguageTags(languageTag);\n\n  tags.some(tag => {\n    locale = _get(tag);\n    return !!locale;\n  }, this);\n\n  if (!locale) {\n    return null;\n  }\n\n  return locale;\n}\n\nexport function getNavigatorLanguage() {\n  return navigator.language || navigator.userLanguage;\n}\n\n/**\n * @returns {Locale} for the language returned by the navigator.\n * If no locale is found, the first locale with the language of the navigator is returned.\n * (e.g. if browser returns 'de' and there is no locale for 'de', check if there is one for 'de-CH', 'de-DE' etc. and take the first.)\n * If still no locale is found, the default locale {@link Locale.DEFAULT} is returned.\n */\nexport function getNavigatorLocale() {\n  let languageTag = getNavigatorLanguage();\n  if (!languageTag) {\n    //  No language returned by the browser, using default locale (should not happen with modern browsers, but we never know...)\n    $.log.warn('Browser returned no language. Using default locale.');\n    return new Locale();\n  }\n\n  let locale = get(languageTag);\n  if (locale) {\n    // If a locale was found for the language returned by the navigator, use that one\n    return locale;\n  }\n\n  // Otherwise search a locale with the same language\n  $.log.isInfoEnabled() && $.log.info('Locale for languageTag ' + languageTag + ' not found. Trying to load best match.');\n  let language = splitLanguageTag(languageTag)[0];\n  locale = findFirstForLanguage(language);\n  if (locale) {\n    return locale;\n  }\n\n  // If still not found, use the default locale\n  $.log.isInfoEnabled() && $.log.info('Still no matching locale for languageTag ' + languageTag + ' found. Using default locale.');\n  return new Locale();\n}\n\nexport function getAll() {\n  return objects.values(localesMap);\n}\n\nexport function getAllLanguageTags() {\n  return Object.keys(localesMap);\n}\n\n/**\n * Returns the first locale for the given language.\n * @param language a language without country code (e.g. en or de)\n */\nexport function findFirstForLanguage(language) {\n  scout.assertParameter('language', language);\n  return arrays.find(getAll(), locale => {\n    if (locale.language === language) {\n      return locale;\n    }\n  }, this);\n}\n\n/**\n * Splits the language tag and returns an array containing the language and the country.\n */\nexport function splitLanguageTag(languageTag) {\n  if (!languageTag) {\n    return [];\n  }\n  return languageTag.split('-');\n}\n\nexport default {\n  bootstrap,\n  findFirstForLanguage,\n  get,\n  getAll,\n  getAllLanguageTags,\n  getNavigatorLanguage,\n  getNavigatorLocale,\n  has,\n  init,\n  localesMap,\n  splitLanguageTag\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}