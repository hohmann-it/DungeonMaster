{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, FileInput, FormField, HtmlComponent, ImageFieldLayout, scout, scrollbars, SingleLayout } from '../../../index';\nimport $ from 'jquery';\nexport default class ImageField extends FormField {\n  constructor() {\n    super();\n    this.autoFit = false;\n    this.imageUrl = null;\n    this.scrollBarEnabled = false;\n    this.uploadEnabled = false;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    this._clickHandler = null;\n  }\n  _init(model) {\n    super._init(model);\n    this.resolveIconIds(['imageUrl']);\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: this.imageUrl,\n      autoFit: this.autoFit,\n      prepend: true\n    });\n    this.icon.on('load', this._onImageLoad.bind(this));\n    this.icon.on('error', this._onImageError.bind(this));\n  }\n  _render() {\n    this.addContainer(this.$parent, 'image-field', new ImageFieldLayout(this));\n    this.addFieldContainer(this.$parent.makeDiv());\n\n    // Complete the layout hierarchy between the image field and the image\n    let htmlComp = HtmlComponent.install(this.$fieldContainer, this.session);\n    htmlComp.setLayout(new SingleLayout());\n    this.icon.render(this.$fieldContainer);\n    this.addLabel();\n    this.addField(this.icon.$container);\n    this.addStatus();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderScrollBarEnabled();\n    this._renderImageUrl();\n    this._renderUploadEnabled();\n  }\n  _remove() {\n    super._remove();\n    this._clickHandler = null;\n    if (this.fileInput) {\n      this.fileInput.destroy();\n      this.fileInput = null;\n    }\n  }\n  _getDragAndDropHandlerOptions() {\n    let options = super._getDragAndDropHandlerOptions();\n    options.container = () => this.$fieldContainer;\n    return options;\n  }\n  setImageUrl(imageUrl) {\n    this.setProperty('imageUrl', imageUrl);\n  }\n  _setImageUrl(imageUrl) {\n    this._setProperty('imageUrl', imageUrl);\n    this.icon.setIconDesc(imageUrl);\n  }\n  _renderImageUrl() {\n    let hasImageUrl = !!this.imageUrl;\n    this.$fieldContainer.toggleClass('has-image', hasImageUrl);\n    this.$container.toggleClass('has-image', hasImageUrl);\n    scrollbars.update(this.$fieldContainer);\n  }\n  setAutoFit(autoFit) {\n    this.setProperty('autoFit', autoFit);\n  }\n  _setAutoFit(autoFit) {\n    this._setProperty('autoFit', autoFit);\n    this.icon.setAutoFit(autoFit);\n  }\n  _renderAutoFit() {\n    scrollbars.update(this.$fieldContainer);\n  }\n  setScrollBarEnabled(scrollBarEnabled) {\n    this.setProperty('scrollBarEnabled', scrollBarEnabled);\n  }\n  _renderScrollBarEnabled() {\n    // Note: Inner alignment has to be updated _before_ installing the scrollbar, because the inner\n    // alignment uses absolute positioning, which confuses the scrollbar calculations.\n    this._updateInnerAlignment();\n    if (this.scrollBarEnabled) {\n      this._installScrollbars();\n    } else {\n      this._uninstallScrollbars();\n    }\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$fieldContainer;\n  }\n  _renderGridData() {\n    super._renderGridData();\n    this._updateInnerAlignment();\n  }\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this._updateInnerAlignment();\n  }\n  _updateInnerAlignment() {\n    // Enable inner alignment only when scrollbars are disabled\n    this.updateInnerAlignment({\n      useHorizontalAlignment: !this.scrollBarEnabled,\n      useVerticalAlignment: !this.scrollBarEnabled\n    });\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateUploadEnabled();\n  }\n  setUploadEnabled(uploadEnabled) {\n    this.setProperty('uploadEnabled', uploadEnabled);\n  }\n  _renderUploadEnabled() {\n    this._updateUploadEnabled();\n  }\n  _updateUploadEnabled() {\n    let enabled = this.enabledComputed && this.uploadEnabled;\n    this.$fieldContainer.toggleClass('clickable', enabled);\n    if (enabled) {\n      if (!this._clickHandler) {\n        this._clickHandler = this._onClickUpload.bind(this);\n        this.$fieldContainer.on('click', this._clickHandler);\n      }\n      if (!this.fileInput) {\n        this.fileInput = scout.create('FileInput', {\n          parent: this,\n          acceptTypes: this.acceptTypes,\n          text: this.displayText,\n          enabled: this.enabledComputed,\n          maximumUploadSize: this.maximumUploadSize,\n          visible: !Device.get().supportsFile()\n        });\n        this.fileInput.render(this.$fieldContainer);\n        this.fileInput.on('change', this._onFileChange.bind(this));\n      }\n    } else {\n      this.$fieldContainer.off('click', this._clickHandler);\n      this._clickHandler = null;\n      if (this.fileInput) {\n        this.fileInput.destroy();\n        this.fileInput = null;\n      }\n    }\n  }\n\n  /**\n   * The browse() function triggers an artificial click event on the INPUT element,\n   * this would trigger our own click handler again. We prevent recursion by\n   * checking the click target.\n   */\n  _onClickUpload(event) {\n    if ($(event.target).isOrHas(this.$field)) {\n      this.fileInput.browse();\n    }\n  }\n  _onFileChange(event) {\n    this.trigger('fileUpload', {\n      file: arrays.first(event.files)\n    });\n  }\n  _onImageLoad(event) {\n    this._onIconUpdated();\n  }\n  _onImageError(event) {\n    this._onIconUpdated();\n  }\n\n  /**\n   * This function is called whenever the icon has updated its $container. Since the $field\n   * variable from ImageField.js references the $container of the icon directly, we must update\n   * that variable now.\n   * <p>\n   * Override this method if a sub-class of ImageField.js needs to update its DOM too.\n   */\n  _onIconUpdated() {\n    scrollbars.update(this.$fieldContainer);\n    this.$field = this.icon.$container;\n  }\n}","map":{"version":3,"names":["arrays","Device","FileInput","FormField","HtmlComponent","ImageFieldLayout","scout","scrollbars","SingleLayout","$","ImageField","constructor","autoFit","imageUrl","scrollBarEnabled","uploadEnabled","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","_clickHandler","_init","model","resolveIconIds","icon","create","parent","iconDesc","prepend","on","_onImageLoad","bind","_onImageError","_render","addContainer","$parent","addFieldContainer","makeDiv","htmlComp","install","$fieldContainer","session","setLayout","render","addLabel","addField","$container","addStatus","_renderProperties","_renderScrollBarEnabled","_renderImageUrl","_renderUploadEnabled","_remove","fileInput","destroy","_getDragAndDropHandlerOptions","options","container","setImageUrl","setProperty","_setImageUrl","_setProperty","setIconDesc","hasImageUrl","toggleClass","update","setAutoFit","_setAutoFit","_renderAutoFit","setScrollBarEnabled","_updateInnerAlignment","_installScrollbars","_uninstallScrollbars","get$Scrollable","_renderGridData","_renderGridDataHints","updateInnerAlignment","useHorizontalAlignment","useVerticalAlignment","_renderEnabled","_updateUploadEnabled","setUploadEnabled","enabled","enabledComputed","_onClickUpload","text","displayText","visible","get","supportsFile","_onFileChange","off","event","target","isOrHas","$field","browse","trigger","file","first","files","_onIconUpdated"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/imagefield/ImageField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, FileInput, FormField, HtmlComponent, ImageFieldLayout, scout, scrollbars, SingleLayout} from '../../../index';\nimport $ from 'jquery';\n\nexport default class ImageField extends FormField {\n\n  constructor() {\n    super();\n\n    this.autoFit = false;\n    this.imageUrl = null;\n    this.scrollBarEnabled = false;\n    this.uploadEnabled = false;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n\n    this._clickHandler = null;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.resolveIconIds(['imageUrl']);\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: this.imageUrl,\n      autoFit: this.autoFit,\n      prepend: true\n    });\n    this.icon.on('load', this._onImageLoad.bind(this));\n    this.icon.on('error', this._onImageError.bind(this));\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'image-field', new ImageFieldLayout(this));\n    this.addFieldContainer(this.$parent.makeDiv());\n\n    // Complete the layout hierarchy between the image field and the image\n    let htmlComp = HtmlComponent.install(this.$fieldContainer, this.session);\n    htmlComp.setLayout(new SingleLayout());\n    this.icon.render(this.$fieldContainer);\n\n    this.addLabel();\n    this.addField(this.icon.$container);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderScrollBarEnabled();\n    this._renderImageUrl();\n    this._renderUploadEnabled();\n  }\n\n  _remove() {\n    super._remove();\n    this._clickHandler = null;\n    if (this.fileInput) {\n      this.fileInput.destroy();\n      this.fileInput = null;\n    }\n  }\n\n  _getDragAndDropHandlerOptions() {\n    let options = super._getDragAndDropHandlerOptions();\n    options.container = () => this.$fieldContainer;\n    return options;\n  }\n\n  setImageUrl(imageUrl) {\n    this.setProperty('imageUrl', imageUrl);\n  }\n\n  _setImageUrl(imageUrl) {\n    this._setProperty('imageUrl', imageUrl);\n    this.icon.setIconDesc(imageUrl);\n  }\n\n  _renderImageUrl() {\n    let hasImageUrl = !!this.imageUrl;\n    this.$fieldContainer.toggleClass('has-image', hasImageUrl);\n    this.$container.toggleClass('has-image', hasImageUrl);\n    scrollbars.update(this.$fieldContainer);\n  }\n\n  setAutoFit(autoFit) {\n    this.setProperty('autoFit', autoFit);\n  }\n\n  _setAutoFit(autoFit) {\n    this._setProperty('autoFit', autoFit);\n    this.icon.setAutoFit(autoFit);\n  }\n\n  _renderAutoFit() {\n    scrollbars.update(this.$fieldContainer);\n  }\n\n  setScrollBarEnabled(scrollBarEnabled) {\n    this.setProperty('scrollBarEnabled', scrollBarEnabled);\n  }\n\n  _renderScrollBarEnabled() {\n    // Note: Inner alignment has to be updated _before_ installing the scrollbar, because the inner\n    // alignment uses absolute positioning, which confuses the scrollbar calculations.\n    this._updateInnerAlignment();\n\n    if (this.scrollBarEnabled) {\n      this._installScrollbars();\n    } else {\n      this._uninstallScrollbars();\n    }\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$fieldContainer;\n  }\n\n  _renderGridData() {\n    super._renderGridData();\n    this._updateInnerAlignment();\n  }\n\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this._updateInnerAlignment();\n  }\n\n  _updateInnerAlignment() {\n    // Enable inner alignment only when scrollbars are disabled\n    this.updateInnerAlignment({\n      useHorizontalAlignment: (!this.scrollBarEnabled),\n      useVerticalAlignment: (!this.scrollBarEnabled)\n    });\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateUploadEnabled();\n  }\n\n  setUploadEnabled(uploadEnabled) {\n    this.setProperty('uploadEnabled', uploadEnabled);\n  }\n\n  _renderUploadEnabled() {\n    this._updateUploadEnabled();\n  }\n\n  _updateUploadEnabled() {\n    let enabled = this.enabledComputed && this.uploadEnabled;\n    this.$fieldContainer.toggleClass('clickable', enabled);\n    if (enabled) {\n      if (!this._clickHandler) {\n        this._clickHandler = this._onClickUpload.bind(this);\n        this.$fieldContainer.on('click', this._clickHandler);\n      }\n      if (!this.fileInput) {\n        this.fileInput = scout.create('FileInput', {\n          parent: this,\n          acceptTypes: this.acceptTypes,\n          text: this.displayText,\n          enabled: this.enabledComputed,\n          maximumUploadSize: this.maximumUploadSize,\n          visible: !Device.get().supportsFile()\n        });\n        this.fileInput.render(this.$fieldContainer);\n        this.fileInput.on('change', this._onFileChange.bind(this));\n      }\n    } else {\n      this.$fieldContainer.off('click', this._clickHandler);\n      this._clickHandler = null;\n      if (this.fileInput) {\n        this.fileInput.destroy();\n        this.fileInput = null;\n      }\n    }\n  }\n\n  /**\n   * The browse() function triggers an artificial click event on the INPUT element,\n   * this would trigger our own click handler again. We prevent recursion by\n   * checking the click target.\n   */\n  _onClickUpload(event) {\n    if ($(event.target).isOrHas(this.$field)) {\n      this.fileInput.browse();\n    }\n  }\n\n  _onFileChange(event) {\n    this.trigger('fileUpload', {\n      file: arrays.first(event.files)\n    });\n  }\n\n  _onImageLoad(event) {\n    this._onIconUpdated();\n  }\n\n  _onImageError(event) {\n    this._onIconUpdated();\n  }\n\n  /**\n   * This function is called whenever the icon has updated its $container. Since the $field\n   * variable from ImageField.js references the $container of the icon directly, we must update\n   * that variable now.\n   * <p>\n   * Override this method if a sub-class of ImageField.js needs to update its DOM too.\n   */\n  _onIconUpdated() {\n    scrollbars.update(this.$fieldContainer);\n    this.$field = this.icon.$container;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}