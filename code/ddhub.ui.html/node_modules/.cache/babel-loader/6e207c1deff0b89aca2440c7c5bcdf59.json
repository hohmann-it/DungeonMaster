{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class GroupBoxMenuItemsOrder {\n  /**\n   * Sorts the given menus item by horizontal alignment and divides the items in two groups for each alignment.\n   * The result looks as follows:\n   *\n   * <em>\n   * [horizontalAlignment=-1|0]    [horizontalAlignment=1]\n   * [  buttons  ]  [  menus  ]    [ menus ]   [ buttons ]\n   * </em>\n   *\n   * The buttons are always on the outer side of the group-box, the menus are on the inner side.\n   */\n  order(items) {\n    let leftButtons = [],\n      leftMenus = [],\n      rightButtons = [],\n      rightMenus = [];\n    items.forEach(item => {\n      if (item.isButton()) {\n        let horizontalAlignment = item.horizontalAlignment;\n        if (horizontalAlignment === undefined) {\n          // Real buttons have no property 'horizontalAlignment' but a corresponding field on the gridData\n          horizontalAlignment = item.gridData && item.gridData.horizontalAlignment;\n        }\n        if (horizontalAlignment === 1) {\n          rightButtons.push(item);\n        } else {\n          // also 0\n          leftButtons.push(item);\n        }\n      } else {\n        if (item.horizontalAlignment === 1) {\n          rightMenus.push(item);\n        } else {\n          // also 0\n          leftMenus.push(item);\n        }\n      }\n    });\n    return {\n      left: leftButtons.concat(leftMenus),\n      right: rightMenus.concat(rightButtons),\n      all: leftButtons.concat(leftMenus).concat(rightMenus).concat(rightButtons)\n    };\n  }\n}","map":{"version":3,"names":["GroupBoxMenuItemsOrder","order","items","leftButtons","leftMenus","rightButtons","rightMenus","forEach","item","isButton","horizontalAlignment","undefined","gridData","push","left","concat","right","all"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/groupbox/GroupBoxMenuItemsOrder.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class GroupBoxMenuItemsOrder {\n\n  /**\n   * Sorts the given menus item by horizontal alignment and divides the items in two groups for each alignment.\n   * The result looks as follows:\n   *\n   * <em>\n   * [horizontalAlignment=-1|0]    [horizontalAlignment=1]\n   * [  buttons  ]  [  menus  ]    [ menus ]   [ buttons ]\n   * </em>\n   *\n   * The buttons are always on the outer side of the group-box, the menus are on the inner side.\n   */\n  order(items) {\n    let leftButtons = [],\n      leftMenus = [],\n      rightButtons = [],\n      rightMenus = [];\n\n    items.forEach(item => {\n      if (item.isButton()) {\n        let horizontalAlignment = item.horizontalAlignment;\n        if (horizontalAlignment === undefined) {\n          // Real buttons have no property 'horizontalAlignment' but a corresponding field on the gridData\n          horizontalAlignment = (item.gridData && item.gridData.horizontalAlignment);\n        }\n        if (horizontalAlignment === 1) {\n          rightButtons.push(item);\n        } else { // also 0\n          leftButtons.push(item);\n        }\n      } else {\n        if (item.horizontalAlignment === 1) {\n          rightMenus.push(item);\n        } else { // also 0\n          leftMenus.push(item);\n        }\n      }\n    });\n\n    return {\n      left: leftButtons.concat(leftMenus),\n      right: rightMenus.concat(rightButtons),\n      all: leftButtons.concat(leftMenus).concat(rightMenus).concat(rightButtons)\n    };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,sBAAsB,CAAC;EAE1C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,CAACC,KAAK,EAAE;IACX,IAAIC,WAAW,GAAG,EAAE;MAClBC,SAAS,GAAG,EAAE;MACdC,YAAY,GAAG,EAAE;MACjBC,UAAU,GAAG,EAAE;IAEjBJ,KAAK,CAACK,OAAO,CAACC,IAAI,IAAI;MACpB,IAAIA,IAAI,CAACC,QAAQ,EAAE,EAAE;QACnB,IAAIC,mBAAmB,GAAGF,IAAI,CAACE,mBAAmB;QAClD,IAAIA,mBAAmB,KAAKC,SAAS,EAAE;UACrC;UACAD,mBAAmB,GAAIF,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACI,QAAQ,CAACF,mBAAoB;QAC5E;QACA,IAAIA,mBAAmB,KAAK,CAAC,EAAE;UAC7BL,YAAY,CAACQ,IAAI,CAACL,IAAI,CAAC;QACzB,CAAC,MAAM;UAAE;UACPL,WAAW,CAACU,IAAI,CAACL,IAAI,CAAC;QACxB;MACF,CAAC,MAAM;QACL,IAAIA,IAAI,CAACE,mBAAmB,KAAK,CAAC,EAAE;UAClCJ,UAAU,CAACO,IAAI,CAACL,IAAI,CAAC;QACvB,CAAC,MAAM;UAAE;UACPJ,SAAS,CAACS,IAAI,CAACL,IAAI,CAAC;QACtB;MACF;IACF,CAAC,CAAC;IAEF,OAAO;MACLM,IAAI,EAAEX,WAAW,CAACY,MAAM,CAACX,SAAS,CAAC;MACnCY,KAAK,EAAEV,UAAU,CAACS,MAAM,CAACV,YAAY,CAAC;MACtCY,GAAG,EAAEd,WAAW,CAACY,MAAM,CAACX,SAAS,CAAC,CAACW,MAAM,CAACT,UAAU,CAAC,CAACS,MAAM,CAACV,YAAY;IAC3E,CAAC;EACH;AACF"},"metadata":{},"sourceType":"module"}