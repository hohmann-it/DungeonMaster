{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, FileInput, HtmlComponent, scout, SingleLayout, strings, ValueField } from '../../../index';\nexport default class FileChooserButton extends ValueField {\n  constructor() {\n    super();\n    this.button = null;\n    this.fileInput = null;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n  }\n  _init(model) {\n    super._init(model);\n    this.button = scout.create('Button', {\n      parent: this,\n      label: this._buttonLabel(),\n      iconId: this.iconId,\n      labelHtmlEnabled: this.labelHtmlEnabled\n    });\n    this.button.on('click', this._onButtonClick.bind(this));\n    this.fileInput.on('change', this._onFileChange.bind(this));\n    this.on('propertyChange', event => {\n      if (event.propertyName === 'enabledComputed') {\n        // Propagate \"enabledComputed\" to inner widgets\n        this.button.setEnabled(event.newValue);\n        this.fileInput.setEnabled(event.newValue);\n      }\n    });\n  }\n\n  /**\n   * Initializes the file input before calling set value.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    this.fileInput = scout.create('FileInput', {\n      parent: this,\n      acceptTypes: this.acceptTypes,\n      text: this.displayText,\n      enabled: this.enabledComputed,\n      maximumUploadSize: this.maximumUploadSize,\n      visible: !Device.get().supportsFile()\n    });\n    super._initValue(value);\n  }\n  _buttonLabel() {\n    return this.label;\n  }\n  _render() {\n    this.addContainer(this.$parent, 'file-chooser-button has-icon');\n    this.addLabel();\n    let $field = this.$parent.makeDiv();\n    let fieldHtmlComp = HtmlComponent.install($field, this.session);\n    this.button.render($field);\n    fieldHtmlComp.setLayout(new SingleLayout(this.button.htmlComp));\n    this.fileInput.render($field);\n    this.addField($field);\n    $field.setTabbable(false);\n    this.addStatus();\n  }\n  setDisplayText(text) {\n    super.setDisplayText(text);\n    this.fileInput.setText(text);\n    if (!text) {\n      this.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _readDisplayText() {\n    return this.fileInput.text;\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this._renderEmptyLabel();\n  }\n  _onButtonClick(event) {\n    this.fileInput.browse();\n  }\n  setLabel(label) {\n    super.setLabel(label);\n    this.button.setLabel(this._buttonLabel());\n  }\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n    this.button.setIconId(iconId);\n  }\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n    this.fileInput.setAcceptTypes(acceptTypes);\n  }\n  setFileExtensions(fileExtensions) {\n    this.setProperty('fileExtensions', fileExtensions);\n    let acceptTypes = arrays.ensure(fileExtensions);\n    acceptTypes = acceptTypes.map(acceptType => {\n      return acceptType.indexOf(0) === '.' ? acceptType : '.' + acceptType;\n    });\n    this.setAcceptTypes(strings.join(',', acceptTypes));\n    this.fileInput.acceptTypes = this.acceptTypes;\n  }\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n    this.fileInput.setMaximumUploadSize(maximumUploadSize);\n  }\n  _onFileChange(event) {\n    this.setValue(arrays.first(event.files));\n  }\n\n  /**\n   * @override\n   */\n  _validateValue(value) {\n    this.fileInput.validateMaximumUploadSize(value);\n    return value;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    return !value ? '' : value.name;\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    return this.button.getFocusableElement();\n  }\n}","map":{"version":3,"names":["arrays","Device","FileInput","HtmlComponent","scout","SingleLayout","strings","ValueField","FileChooserButton","constructor","button","fileInput","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","_init","model","create","parent","label","_buttonLabel","iconId","labelHtmlEnabled","on","_onButtonClick","bind","_onFileChange","event","propertyName","setEnabled","newValue","_initValue","value","text","displayText","enabled","enabledComputed","visible","get","supportsFile","_render","addContainer","$parent","addLabel","$field","makeDiv","fieldHtmlComp","install","session","render","setLayout","htmlComp","addField","setTabbable","addStatus","setDisplayText","setText","clear","_readDisplayText","_renderLabel","_renderEmptyLabel","browse","setLabel","setIconId","setProperty","setAcceptTypes","setFileExtensions","fileExtensions","ensure","map","acceptType","indexOf","join","setMaximumUploadSize","setValue","first","files","_validateValue","validateMaximumUploadSize","_formatValue","name","getFocusableElement"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/filechooserbutton/FileChooserButton.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, FileInput, HtmlComponent, scout, SingleLayout, strings, ValueField} from '../../../index';\n\nexport default class FileChooserButton extends ValueField {\n\n  constructor() {\n    super();\n\n    this.button = null;\n    this.fileInput = null;\n\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.button = scout.create('Button', {\n      parent: this,\n      label: this._buttonLabel(),\n      iconId: this.iconId,\n      labelHtmlEnabled: this.labelHtmlEnabled\n    });\n    this.button.on('click', this._onButtonClick.bind(this));\n\n    this.fileInput.on('change', this._onFileChange.bind(this));\n    this.on('propertyChange', event => {\n      if (event.propertyName === 'enabledComputed') {\n        // Propagate \"enabledComputed\" to inner widgets\n        this.button.setEnabled(event.newValue);\n        this.fileInput.setEnabled(event.newValue);\n      }\n    });\n  }\n\n  /**\n   * Initializes the file input before calling set value.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    this.fileInput = scout.create('FileInput', {\n      parent: this,\n      acceptTypes: this.acceptTypes,\n      text: this.displayText,\n      enabled: this.enabledComputed,\n      maximumUploadSize: this.maximumUploadSize,\n      visible: !Device.get().supportsFile()\n    });\n\n    super._initValue(value);\n  }\n\n  _buttonLabel() {\n    return this.label;\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'file-chooser-button has-icon');\n    this.addLabel();\n\n    let $field = this.$parent.makeDiv();\n    let fieldHtmlComp = HtmlComponent.install($field, this.session);\n    this.button.render($field);\n\n    fieldHtmlComp.setLayout(new SingleLayout(this.button.htmlComp));\n    this.fileInput.render($field);\n    this.addField($field);\n    $field.setTabbable(false);\n\n    this.addStatus();\n  }\n\n  setDisplayText(text) {\n    super.setDisplayText(text);\n    this.fileInput.setText(text);\n    if (!text) {\n      this.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _readDisplayText() {\n    return this.fileInput.text;\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this._renderEmptyLabel();\n  }\n\n  _onButtonClick(event) {\n    this.fileInput.browse();\n  }\n\n  setLabel(label) {\n    super.setLabel(label);\n    this.button.setLabel(this._buttonLabel());\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n    this.button.setIconId(iconId);\n  }\n\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n    this.fileInput.setAcceptTypes(acceptTypes);\n  }\n\n  setFileExtensions(fileExtensions) {\n    this.setProperty('fileExtensions', fileExtensions);\n    let acceptTypes = arrays.ensure(fileExtensions);\n    acceptTypes = acceptTypes.map(acceptType => {\n      return acceptType.indexOf(0) === '.' ? acceptType : '.' + acceptType;\n    });\n    this.setAcceptTypes(strings.join(',', acceptTypes));\n    this.fileInput.acceptTypes = this.acceptTypes;\n  }\n\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n    this.fileInput.setMaximumUploadSize(maximumUploadSize);\n  }\n\n  _onFileChange(event) {\n    this.setValue(arrays.first(event.files));\n  }\n\n  /**\n   * @override\n   */\n  _validateValue(value) {\n    this.fileInput.validateMaximumUploadSize(value);\n    return value;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    return !value ? '' : value.name;\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    return this.button.getFocusableElement();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}