{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractCompactTreeControlKeyStroke, keys } from '../../index';\nexport default class CompactTreeRightKeyStroke extends AbstractCompactTreeControlKeyStroke {\n  constructor(compactProcessTree) {\n    super(compactProcessTree);\n    this.renderingHints.text = '→';\n    this.which = [keys.RIGHT];\n  }\n  _findNextNode($currentNode, currentNode) {\n    // Find first process node of next section.\n    return $currentNode.parent().next('.section').children('.section-node').first().data('node');\n  }\n}","map":{"version":3,"names":["AbstractCompactTreeControlKeyStroke","keys","CompactTreeRightKeyStroke","constructor","compactProcessTree","renderingHints","text","which","RIGHT","_findNextNode","$currentNode","currentNode","parent","next","children","first","data"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/keystrokes/CompactTreeRightKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractCompactTreeControlKeyStroke, keys} from '../../index';\n\nexport default class CompactTreeRightKeyStroke extends AbstractCompactTreeControlKeyStroke {\n\n  constructor(compactProcessTree) {\n    super(compactProcessTree);\n    this.renderingHints.text = '→';\n    this.which = [keys.RIGHT];\n  }\n\n  _findNextNode($currentNode, currentNode) {\n    // Find first process node of next section.\n    return $currentNode.parent().next('.section').children('.section-node').first().data('node');\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mCAAmC,EAAEC,IAAI,QAAO,aAAa;AAErE,eAAe,MAAMC,yBAAyB,SAASF,mCAAmC,CAAC;EAEzFG,WAAW,CAACC,kBAAkB,EAAE;IAC9B,KAAK,CAACA,kBAAkB,CAAC;IACzB,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACC,KAAK,GAAG,CAACN,IAAI,CAACO,KAAK,CAAC;EAC3B;EAEAC,aAAa,CAACC,YAAY,EAAEC,WAAW,EAAE;IACvC;IACA,OAAOD,YAAY,CAACE,MAAM,EAAE,CAACC,IAAI,CAAC,UAAU,CAAC,CAACC,QAAQ,CAAC,eAAe,CAAC,CAACC,KAAK,EAAE,CAACC,IAAI,CAAC,MAAM,CAAC;EAC9F;AACF"},"metadata":{},"sourceType":"module"}