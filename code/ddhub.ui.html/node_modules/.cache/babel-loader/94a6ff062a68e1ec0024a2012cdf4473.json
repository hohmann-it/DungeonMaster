{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { fields, graphics, HtmlComponent, InputFieldKeyStrokeContext, MenuBarLayout, scout, Status, strings, Table, TableFooterLayout, TableTextUserFilter, Widget } from '../index';\nimport $ from 'jquery';\nimport FocusFilterFieldKeyStroke from '../keystroke/FocusFilterFieldKeyStroke';\nexport default class TableFooter extends Widget {\n  constructor() {\n    super();\n    this._compactStyle = false;\n    this.animating = false;\n    this.open = false;\n    this.resizing = false;\n    this.table = null;\n    this._tableRowsChangedHandler = this._onTableRowsChanged.bind(this);\n    this._tableFilterHandler = this._onTableFilter.bind(this);\n    this._tableFilterAddedHandler = this._onTableFilterAdded.bind(this);\n    this._tableFilterRemovedHandler = this._onTableFilterRemoved.bind(this);\n    this._tableRowsSelectedHandler = this._onTableRowsSelected.bind(this);\n    this._tableStatusChangedHandler = this._onTableStatusChanged.bind(this);\n    this._tablePropertyChangeHandler = this._onTablePropertyChange.bind(this);\n  }\n  _init(options) {\n    super._init(options);\n\n    // Keystroke context for the search field.\n    this.searchFieldKeyStrokeContext = new InputFieldKeyStrokeContext();\n    this.searchFieldKeyStrokeContext.$bindTarget = function () {\n      return this._$textFilter;\n    }.bind(this);\n    this.searchFieldKeyStrokeContext.$scopeTarget = function () {\n      return this._$textFilter;\n    }.bind(this);\n    this._focusFilterFieldKeyStroke = null;\n  }\n  _render() {\n    let filter, $filter;\n    this.$container = this.$parent.appendDiv('table-footer');\n    this._$window = this.$parent.window();\n    this._$body = this.$parent.body();\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new TableFooterLayout(this));\n\n    // --- container for an open control ---\n    this.$controlContainer = this.$container.appendDiv('table-control-container').hide();\n    this.$controlContent = this.$controlContainer.appendDiv('table-control-content');\n\n    // --- table controls section ---\n    this._$controls = this.$container.appendDiv('table-controls');\n\n    // --- info section ---\n    this._$info = this.$container.appendDiv('table-info');\n\n    // text filter\n    $filter = this._$info.appendDiv('table-filter');\n    this._$textFilter = fields.makeTextField(this.$container, 'table-text-filter').appendTo($filter).on('input', '', this._createOnFilterFieldInputFunction().bind(this)).placeholder(this.session.text('ui.FilterBy_'));\n    this.table.$container.data('filter-field', this._$textFilter);\n    this._focusFilterFieldKeyStroke = new FocusFilterFieldKeyStroke(this.table);\n    this.table.keyStrokeContext.registerKeyStroke(this._focusFilterFieldKeyStroke);\n    filter = this.table.getFilter(TableTextUserFilter.TYPE);\n    if (filter) {\n      this._$textFilter.val(filter.text);\n    }\n    this.$clearIcon = $filter.appendSpan('clear-icon unfocusable action text-field-icon').on('mousedown', this._onDeleteFilterMouseDown.bind(this));\n\n    // load info (\"X rows loaded, click to reload\")\n    this._$infoLoad = this._$info.appendDiv('table-info-item table-info-load').on('click', '', this._onInfoLoadClick.bind(this));\n\n    // filter info (\"X rows filtered by Y, click to remove filter\")\n    this._$infoFilter = this._$info.appendDiv('table-info-item table-info-filter').on('click', '', this._onInfoFilterClick.bind(this));\n\n    // selection info (\"X rows selected, click to select all/none\")\n    this._$infoSelection = this._$info.appendDiv('table-info-item table-info-selection').on('click', '', this._onInfoSelectionClick.bind(this));\n\n    // table status\n    this._$infoTableStatus = this._$info.appendDiv('table-info-item table-info-status').on('mousedown', this._onStatusMouseDown.bind(this));\n    this._$infoTableStatusIcon = this._$infoTableStatus.appendSpan('icon font-icon');\n\n    // ------\n\n    this._renderControls();\n    this._renderInfo();\n    this._updateInfoVisibility();\n    this.table.on('rowsInserted', this._tableRowsChangedHandler);\n    this.table.on('rowsDeleted', this._tableRowsChangedHandler);\n    this.table.on('allRowsDeleted', this._tableRowsChangedHandler);\n    this.table.on('filter', this._tableFilterHandler);\n    this.table.on('filterAdded', this._tableFilterAddedHandler);\n    this.table.on('filterRemoved', this._tableFilterRemovedHandler);\n    this.table.on('rowsSelected', this._tableRowsSelectedHandler);\n    this.table.on('statusChanged', this._tableStatusChangedHandler);\n    this.table.on('propertyChange', this._tablePropertyChangeHandler);\n    this.session.keyStrokeManager.installKeyStrokeContext(this.searchFieldKeyStrokeContext);\n  }\n  getFocusableElement() {\n    return this._$textFilter;\n  }\n  _renderProperties() {\n    this._updateHasFilterText();\n  }\n  _remove() {\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.searchFieldKeyStrokeContext);\n    this._hideTableStatusTooltip();\n    this.$resizer = null;\n    this.$controlContainer.stop(false, true);\n    this.animating = false; // Animation may not be started yet due to the delay, hence complete callback may not be executed -> make sure the flag is reset anyway\n    this.open = false;\n    this.table.keyStrokeContext.unregisterKeyStroke(this._focusFilterFieldKeyStroke);\n    this._focusFilterFieldKeyStroke = null;\n    this.table.off('rowsInserted', this._tableRowsChangedHandler);\n    this.table.off('rowsDeleted', this._tableRowsChangedHandler);\n    this.table.off('allRowsDeleted', this._tableRowsChangedHandler);\n    this.table.off('filter', this._tableFilterHandler);\n    this.table.off('filterAdded', this._tableFilterAddedHandler);\n    this.table.off('filterRemoved', this._tableFilterRemovedHandler);\n    this.table.off('rowsSelected', this._tableRowsSelectedHandler);\n    this.table.off('statusChanged', this._tableStatusChangedHandler);\n    this.table.off('propertyChange', this._tablePropertyChangeHandler);\n    super._remove();\n  }\n  _renderResizerVisible() {\n    if (this.selectedControl.resizerVisible) {\n      this._renderResizer();\n      this.$controlContainer.addClass('has-resizer');\n    } else if (this.$resizer) {\n      this.$resizer.remove();\n      this.$resizer = null;\n      this.$controlContainer.removeClass('has-resizer');\n    }\n  }\n  _renderResizer() {\n    if (this.$resizer) {\n      return;\n    }\n    this.$resizer = this.$controlContainer.prependDiv('table-control-resize').on('mousedown', '', resize.bind(this));\n    function resize(event) {\n      // Remember current height and start position\n      let startHeight = this.$controlContainer.height(),\n        startX = Math.floor(event.pageY);\n      this._$window.on('mousemove.tablefooter', resizeMove.bind(this)).one('mouseup', resizeEnd.bind(this));\n      this._$body.addClass('row-resize');\n      this.resizing = true;\n      function resizeMove(event) {\n        if (!this.rendered) {\n          // footer may be removed in the meantime\n          return;\n        }\n        // Calculate position delta\n        let x = Math.floor(event.pageY);\n        let dx = x - startX;\n        // Ensure control container does not get bigger than the table\n        let maxHeight = this.table.$container.height() - this.table.footer.$container.height();\n        // Calculate new height of table control container\n        let newHeight = Math.min(startHeight - dx, maxHeight);\n        this.$controlContainer.height(newHeight);\n        let controlContainerInsets = graphics.insets(this.$controlContainer);\n        this.$controlContent.outerHeight(newHeight - controlContainerInsets.vertical());\n        this._revalidateTableLayout();\n      }\n      function resizeEnd() {\n        if (this.selectedControl && this.rendered && this.$controlContainer.height() < 100) {\n          this.selectedControl.setSelected(false);\n        }\n        this._$window.off('mousemove.tablefooter');\n        this._$body.removeClass('row-resize');\n        this.resizing = false;\n      }\n      return false;\n    }\n  }\n  _renderControls() {\n    let controls = this.table.tableControls;\n    if (controls) {\n      controls.forEach(control => {\n        control.setParent(this);\n        control.render(this._$controls);\n      });\n    } else {\n      this._$controls.empty();\n    }\n  }\n  _renderInfo() {\n    this._renderInfoLoad();\n    this._renderInfoTableStatus();\n    this._renderInfoFilter();\n    this._renderInfoSelection();\n  }\n  _renderInfoLoad() {\n    let $info = this._$infoLoad,\n      numRows = this.table.rows.length,\n      estRows = this.table.estimatedRowCount,\n      maxRows = this.table.maxRowCount;\n    $info.empty();\n    if (!this._compactStyle) {\n      if (numRows <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowLoaded', this.computeCountInfo(numRows)));\n      } else if (estRows && estRows > numRows) {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoaded', this.computeCountInfo(numRows, estRows)));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoaded', this.computeCountInfo(numRows)));\n      }\n      if (this.table.hasReloadHandler) {\n        if (estRows && maxRows && numRows < estRows && numRows < maxRows) {\n          if (estRows < maxRows) {\n            $info.appendSpan('table-info-button').text(this.session.text('ui.LoadAllData')).appendTo($info);\n          } else {\n            $info.appendSpan('table-info-button').text(this.session.text('ui.LoadNData', this.computeCountInfo(maxRows))).appendTo($info);\n          }\n        } else {\n          $info.appendSpan('table-info-button').text(this.session.text('ui.ReloadData')).appendTo($info);\n        }\n      }\n    } else {\n      if (numRows <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowLoadedMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoadedMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRows));\n    }\n    $info.setEnabled(this.table.hasReloadHandler);\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n  _renderInfoFilter() {\n    let $info = this._$infoFilter;\n    let numRowsFiltered = this.table.filteredRows().length;\n    let filteredBy = this.table.filteredBy().join(', '); // filteredBy() returns an array\n\n    $info.empty();\n    if (!this._compactStyle) {\n      if (filteredBy) {\n        if (numRowsFiltered <= 1) {\n          $info.appendSpan().text(this.session.text('ui.NumRowFilteredBy', this.computeCountInfo(numRowsFiltered), filteredBy));\n        } else {\n          $info.appendSpan().text(this.session.text('ui.NumRowsFilteredBy', this.computeCountInfo(numRowsFiltered), filteredBy));\n        }\n      } else {\n        if (numRowsFiltered <= 1) {\n          $info.appendSpan().text(this.session.text('ui.NumRowFiltered', this.computeCountInfo(numRowsFiltered)));\n        } else {\n          $info.appendSpan().text(this.session.text('ui.NumRowsFiltered', this.computeCountInfo(numRowsFiltered)));\n        }\n      }\n      if (this.table.hasUserFilter()) {\n        $info.appendSpan('table-info-button').text(this.session.text('ui.RemoveFilter')).appendTo($info);\n      }\n    } else {\n      if (numRowsFiltered <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowFilteredMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsFilteredMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRowsFiltered));\n    }\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n  _renderInfoSelection() {\n    let $info = this._$infoSelection,\n      numRows = this.table.filteredRows().length,\n      numRowsSelected = this.table.selectedRows.length,\n      all = numRows > 0 && numRows === numRowsSelected;\n    $info.empty();\n    if (!this._compactStyle) {\n      if (numRowsSelected <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowSelected', this.computeCountInfo(numRowsSelected)));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsSelected', this.computeCountInfo(numRowsSelected)));\n      }\n      $info.appendSpan('table-info-button').text(this.session.text(all ? 'ui.SelectNone' : 'ui.SelectAll')).appendTo($info);\n    } else {\n      if (numRowsSelected <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowSelectedMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsSelectedMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRowsSelected));\n    }\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n  _renderInfoTableStatus() {\n    let $info = this._$infoTableStatus;\n    let tableStatus = this.table.tableStatus;\n    $info.removeClass(Status.SEVERITY_CSS_CLASSES);\n    if (tableStatus) {\n      $info.addClass(tableStatus.cssClass());\n    }\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n  _updateInfoVisibility() {\n    this._updateInfoFilterVisibility();\n    this._updateInfoSelectionVisibility();\n    this._updateInfoTableStatusVisibility();\n  }\n  _updateInfoFilterVisibility() {\n    let visible = this.table.filteredBy().length > 0;\n    this._setInfoVisible(this._$infoFilter, visible);\n  }\n  _updateInfoSelectionVisibility() {\n    let visible = this.table.multiSelect;\n    this._setInfoVisible(this._$infoSelection, visible);\n  }\n  _updateInfoTableStatusVisibility() {\n    let visible = this.table.tableStatus;\n    if (visible) {\n      // If the uiState of the tableStatus was not set to hidden (either manually by the\n      // user or automatically by a timeout or other event), show the tooltip when the\n      // \"info visible\" animation has finished. Otherwise, we don't show the tooltip to\n      // not disturb the user.\n      let complete = null;\n      if (!scout.isOneOf(this.table.tableStatus.uiState, 'user-hidden', 'auto-hidden')) {\n        this._$infoTableStatus.addClass('tooltip-active'); // color icon before animation starts\n        complete = function () {\n          // Same check is required again, because this function is called asynchronously\n          if (this.table.tableStatus && !scout.isOneOf(this.table.tableStatus.uiState, 'user-hidden', 'auto-hidden')) {\n            this._showTableStatusTooltip();\n          }\n        }.bind(this);\n      }\n      this._setInfoVisible(this._$infoTableStatus, true, complete);\n    } else {\n      this._hideTableStatusTooltip();\n      this._setInfoVisible(this._$infoTableStatus, false);\n    }\n  }\n  _setInfoVisible($info, visible, complete) {\n    if ($info.isVisible() === visible && !(visible && $info.hasClass('hiding'))) {\n      if (complete) {\n        complete();\n      }\n      return;\n    }\n    let animate = this.rendered; // Animate only on a user interaction, no while the table gets rendered\n    if (!animate) {\n      $info.setVisible(visible);\n      return;\n    }\n    if (visible) {\n      let animationOpts = {\n        progress: this.revalidateLayout.bind(this),\n        complete: () => {\n          if (complete) {\n            complete();\n          }\n        }\n      };\n      // Save complete function so that layout may use it\n      $info.data('animationComplete', animationOpts.complete);\n      // If info is shown the first time, set the width to 0 to make animation work\n      if ($info[0].style.width === '') {\n        $info.cssWidth(0);\n      }\n      $info.stop().removeClass('hiding').setVisible(true).widthToContent(animationOpts);\n    } else {\n      // Mark element as hiding so that the layout does not try to resize it\n      $info.addClass('hiding');\n      $info.stop().animate({\n        width: 0\n      }, {\n        progress: this.revalidateLayout.bind(this),\n        complete: () => {\n          $info.removeClass('hiding');\n          $info.setVisible(false);\n        }\n      });\n    }\n  }\n  _toggleTableInfoTooltip($info, tooltipType) {\n    if (this._tableInfoTooltip) {\n      this._tableInfoTooltip.destroy();\n    } else {\n      this._tableInfoTooltip = scout.create(tooltipType, {\n        parent: this,\n        tableFooter: this,\n        arrowPosition: 50,\n        arrowPositionUnit: '%',\n        $anchor: $info\n      });\n      this._tableInfoTooltip.one('destroy', () => {\n        this._tableInfoTooltip = null;\n      });\n      this._tableInfoTooltip.render();\n    }\n  }\n\n  // n: row count\n  // m: total count, optional. Meaning is '3 of 10 rows'\n  computeCountInfo(n, m) {\n    n = scout.nvl(n, 0);\n    if (m) {\n      return this.session.text('ui.TableRowCount', this.session.text('ui.CountOfApproxTotal', this.session.locale.decimalFormat.format(n), this.session.locale.decimalFormat.format(m)));\n    }\n    if (n === 0) {\n      if (this._compactStyle) {\n        return this.session.text('ui.TableRowCount', 0);\n      }\n      return this.session.text('ui.TableRowCount0');\n    } else if (n === 1) {\n      return this.session.text('ui.TableRowCount1');\n    }\n    return this.session.text('ui.TableRowCount', this.session.locale.decimalFormat.format(n));\n  }\n\n  /* open, close and resize of the container */\n\n  _revalidateTableLayout() {\n    this.table.htmlComp.revalidateLayoutTree();\n  }\n  openControlContainer(control) {\n    if (this.open) {\n      // Calling open again may resize the container -> don't return\n    }\n    let currentControl = this.$controlContent.data('control');\n    if (this.animating && currentControl !== control) {\n      // Make sure the existing content is removed if the close animation was aborted and another control selected while the container is still closing\n      // (The done callback won't be executed when calling stop(true))\n      currentControl.onControlContainerClosed();\n    }\n    this.animating = true;\n    this.open = true;\n    let allowedControlHeight = this.computeControlContainerHeight(this.table, control);\n    let insets = graphics.insets(this.$controlContainer);\n    this.$controlContent.outerHeight(allowedControlHeight - insets.vertical());\n\n    // If container is opened the first time, set the height to 0 to make animation work\n    if (this.$controlContainer[0].style.height === '') {\n      this.$controlContainer.outerHeight(0);\n    }\n    if (this.$controlContainer.outerHeight() > allowedControlHeight) {\n      // Container gets smaller -> layout first to prevent having a white area\n      this.table.invalidateLayoutTree();\n    }\n\n    // open container, stop existing (close) animations before\n    // use delay to make sure form is rendered and layouted with new size\n    this.$controlContainer.stop(true).show().delay(1).animate({\n      height: allowedControlHeight\n    }, {\n      duration: this.rendered ? control.animateDuration : 0,\n      complete: function () {\n        this.animating = false;\n        control.onControlContainerOpened();\n        this.table.invalidateLayoutTree();\n      }.bind(this)\n    });\n  }\n  closeControlContainer(control, options) {\n    if (!this.open) {\n      return;\n    }\n    options = $.extend({}, {\n      animate: true\n    }, options);\n    this.open = false;\n    this.animating = true;\n    this.table.invalidateLayoutTree();\n    let completeFunc = function () {\n      this.animating = false;\n      this.$controlContainer.hide();\n      control.onControlContainerClosed();\n    }.bind(this);\n    if (options.animate) {\n      this.$controlContainer.stop(true).show().animate({\n        height: 0\n      }, {\n        duration: control.animateDuration,\n        complete: completeFunc\n      });\n    } else {\n      completeFunc();\n    }\n  }\n  computeControlContainerHeight(table, control, growControl) {\n    let menuBarHeight = 0,\n      footerHeight = 0,\n      containerHeight = graphics.size(table.$container).height,\n      maxControlHeight,\n      controlContainerHeight = 0,\n      dataMargins = graphics.margins(scout.nvl(table.$data, table.$container)),\n      dataMarginsHeight = dataMargins.top + dataMargins.bottom,\n      menuBar = table.menuBar,\n      footer = table.footer,\n      htmlContainer = table.htmlComp,\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n    if (!footer) {\n      return;\n    }\n    if (table.menuBarVisible && menuBar.visible) {\n      let htmlMenuBar = HtmlComponent.get(menuBar.$container);\n      menuBarHeight = MenuBarLayout.size(htmlMenuBar, containerSize).height;\n    }\n    // Layout table footer and add size of footer (including the control content) to 'height'\n    footerHeight = graphics.size(footer.$container).height;\n    if (footer.open) {\n      if (footer.animating) {\n        // Layout may be called when container stays open but changes its size using an animation.\n        // At that time the controlContainer has not yet the final size, therefore measuring is not possible, but not necessary anyway.\n        controlContainerHeight = scout.nvl(control && control.height, controlContainerHeight);\n      } else {\n        // Measure the real height\n        controlContainerHeight = graphics.size(footer.$controlContainer).height;\n        // Expand control height? (but only if not resizing)\n        if (!footer.resizing && growControl) {\n          controlContainerHeight = Math.max(control && control.height, controlContainerHeight);\n        }\n      }\n    }\n    // Crop control height (don't do it if table does not have the correct size yet)\n    if (this.table.htmlComp.layouted) {\n      maxControlHeight = containerHeight - (dataMarginsHeight + menuBarHeight + footerHeight);\n      controlContainerHeight = Math.min(controlContainerHeight, maxControlHeight);\n    }\n    return controlContainerHeight;\n  }\n  _hideTableStatusTooltip() {\n    clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n    if (this._tableStatusTooltip) {\n      this._tableStatusTooltip.destroy();\n    }\n  }\n  _showTableStatusTooltip() {\n    // Remove existing tooltip (might have the wrong css class)\n    if (this._tableStatusTooltip) {\n      this._tableStatusTooltip.destroy();\n      this._tableStatusTooltip = null;\n    }\n\n    // Check needed because the table footer might already be removed again when this\n    // callback is executed (e.g. when the user clicks on another page while the opening\n    // animation is still running).\n    if (!this.rendered && !this.rendering) {\n      return;\n    }\n    let tableStatus = this.table.tableStatus;\n    let text = tableStatus ? tableStatus.message : null;\n    if (strings.empty(text)) {\n      return; // Refuse to show empty tooltip\n    }\n\n    // Create new tooltip\n    let opts = {\n      parent: this,\n      text: text,\n      severity: tableStatus.severity,\n      autoRemove: !tableStatus.isError(),\n      $anchor: this._$infoTableStatusIcon\n    };\n    this._tableStatusTooltip = scout.create('Tooltip', opts);\n    this._tableStatusTooltip.one('destroy', () => {\n      this._tableStatusTooltip = null;\n    });\n    this._tableStatusTooltip.render();\n\n    // Adjust icon style\n    this._$infoTableStatus.addClass('tooltip-active');\n    this._tableStatusTooltip.on('remove', () => {\n      this._$infoTableStatus.removeClass('tooltip-active');\n      // When the tooltip is removed (e.g. because of the auto-remove timeout, or\n      // The user clicked somewhere) set the uiStatus accordingly. Otherwise, it\n      // might pop up again when the table layout is revalidated.\n      clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n      if (this.table.tableStatus && !this.table.tableStatus.isError()) {\n        this.table.tableStatus.uiState = 'auto-hidden';\n      }\n    });\n\n    // Auto-hide unimportant messages\n    clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n    if (!tableStatus.isError() && !tableStatus.isWarning() && !tableStatus.uiState) {\n      // Already set status to 'auto-hidden', in case the user changes outline before timeout elapses\n      this.table.tableStatus.uiState = 'auto-hidden';\n      this._autoHideTableStatusTooltipTimeoutId = setTimeout(() => {\n        this._hideTableStatusTooltip();\n      }, 5000);\n    }\n  }\n  _updateHasFilterText() {\n    this._$textFilter.toggleClass('has-text', !!this._$textFilter.val());\n  }\n  onControlSelected(control) {\n    let previousControl = this.selectedControl;\n    this.selectedControl = control;\n    if (control) {\n      this._renderResizerVisible();\n      if (previousControl && previousControl.height !== control.height) {\n        this.openControlContainer(control);\n      }\n    }\n  }\n  _onStatusMouseDown(event) {\n    // Toggle tooltip\n    if (this._tableStatusTooltip) {\n      this._hideTableStatusTooltip();\n      this.table.tableStatus.uiState = 'user-hidden';\n    } else {\n      this._showTableStatusTooltip();\n      if (this._tableStatusTooltip.rendered) {\n        this.table.tableStatus.uiState = 'user-shown';\n      }\n    }\n  }\n  _createOnFilterFieldInputFunction() {\n    let debounceFunction = $.debounce(this._applyFilter.bind(this));\n    return function (event) {\n      this._updateHasFilterText();\n      // debounced filter\n      debounceFunction();\n    };\n  }\n  _onDeleteFilterMouseDown(event) {\n    this._$textFilter.val('');\n    this._updateHasFilterText();\n    this._applyFilter();\n    event.preventDefault();\n  }\n  _applyFilter(event) {\n    let filter,\n      filterText = this._$textFilter.val();\n    if (this.filterText !== filterText) {\n      this.filterText = filterText;\n      if (filterText) {\n        filter = scout.create('TableTextUserFilter', {\n          session: this.session,\n          table: this.table\n        });\n        filter.text = filterText;\n        this.table.addFilter(filter);\n      } else {\n        this.table.removeFilterByKey(TableTextUserFilter.TYPE);\n      }\n    }\n  }\n  _onInfoLoadClick() {\n    if (!this._$infoLoad.isEnabled()) {\n      return;\n    }\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoLoad, 'TableInfoLoadTooltip');\n    } else {\n      let numRows = this.table.rows.length;\n      let estRows = this.table.estimatedRowCount;\n      let maxRows = this.table.maxRowCount;\n      if (estRows && maxRows && numRows < estRows && numRows < maxRows) {\n        this.table.reload(Table.ReloadReason.OVERRIDE_ROW_LIMIT);\n      } else {\n        this.table.reload();\n      }\n    }\n  }\n  _onInfoFilterClick() {\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoFilter, 'TableInfoFilterTooltip');\n    } else {\n      this.table.resetUserFilter();\n    }\n  }\n  _onInfoSelectionClick() {\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoSelection, 'TableInfoSelectionTooltip');\n    } else {\n      this.table.toggleSelection();\n    }\n  }\n  _onTableRowsChanged(event) {\n    this._renderInfoLoad();\n  }\n  _onTableFilter(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    this._renderInfoSelection();\n  }\n  _onTableFilterAdded(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    if (event.filter.filterType === TableTextUserFilter.TYPE) {\n      // Do not update the content when the value does not change. This is the case when typing text in\n      // the UI. If we would call val() unconditionally, the current cursor position will get lost.\n      let currentText = this._$textFilter.val();\n      if (currentText !== event.filter.text) {\n        this._$textFilter.val(event.filter.text);\n        this._updateHasFilterText();\n        this._applyFilter();\n      }\n    }\n  }\n  _onTableFilterRemoved(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    if (event.filter.filterType === TableTextUserFilter.TYPE) {\n      this._$textFilter.val('');\n      this._updateHasFilterText();\n      this._applyFilter();\n    }\n  }\n  _onTableRowsSelected(event) {\n    this._renderInfoSelection();\n  }\n  _onTableStatusChanged(event) {\n    this._renderInfoTableStatus();\n    this._updateInfoTableStatusVisibility();\n  }\n  _onTablePropertyChange(event) {\n    if (event.propertyName === 'multiSelect') {\n      this._updateInfoSelectionVisibility();\n    }\n  }\n}","map":{"version":3,"names":["fields","graphics","HtmlComponent","InputFieldKeyStrokeContext","MenuBarLayout","scout","Status","strings","Table","TableFooterLayout","TableTextUserFilter","Widget","$","FocusFilterFieldKeyStroke","TableFooter","constructor","_compactStyle","animating","open","resizing","table","_tableRowsChangedHandler","_onTableRowsChanged","bind","_tableFilterHandler","_onTableFilter","_tableFilterAddedHandler","_onTableFilterAdded","_tableFilterRemovedHandler","_onTableFilterRemoved","_tableRowsSelectedHandler","_onTableRowsSelected","_tableStatusChangedHandler","_onTableStatusChanged","_tablePropertyChangeHandler","_onTablePropertyChange","_init","options","searchFieldKeyStrokeContext","$bindTarget","_$textFilter","$scopeTarget","_focusFilterFieldKeyStroke","_render","filter","$filter","$container","$parent","appendDiv","_$window","window","_$body","body","htmlComp","install","session","setLayout","$controlContainer","hide","$controlContent","_$controls","_$info","makeTextField","appendTo","on","_createOnFilterFieldInputFunction","placeholder","text","data","keyStrokeContext","registerKeyStroke","getFilter","TYPE","val","$clearIcon","appendSpan","_onDeleteFilterMouseDown","_$infoLoad","_onInfoLoadClick","_$infoFilter","_onInfoFilterClick","_$infoSelection","_onInfoSelectionClick","_$infoTableStatus","_onStatusMouseDown","_$infoTableStatusIcon","_renderControls","_renderInfo","_updateInfoVisibility","keyStrokeManager","installKeyStrokeContext","getFocusableElement","_renderProperties","_updateHasFilterText","_remove","uninstallKeyStrokeContext","_hideTableStatusTooltip","$resizer","stop","unregisterKeyStroke","off","_renderResizerVisible","selectedControl","resizerVisible","_renderResizer","addClass","remove","removeClass","prependDiv","resize","event","startHeight","height","startX","Math","floor","pageY","resizeMove","one","resizeEnd","rendered","x","dx","maxHeight","footer","newHeight","min","controlContainerInsets","insets","outerHeight","vertical","_revalidateTableLayout","setSelected","controls","tableControls","forEach","control","setParent","render","empty","_renderInfoLoad","_renderInfoTableStatus","_renderInfoFilter","_renderInfoSelection","$info","numRows","rows","length","estRows","estimatedRowCount","maxRows","maxRowCount","computeCountInfo","hasReloadHandler","setEnabled","layouting","invalidateLayoutTree","numRowsFiltered","filteredRows","filteredBy","join","hasUserFilter","numRowsSelected","selectedRows","all","tableStatus","SEVERITY_CSS_CLASSES","cssClass","_updateInfoFilterVisibility","_updateInfoSelectionVisibility","_updateInfoTableStatusVisibility","visible","_setInfoVisible","multiSelect","complete","isOneOf","uiState","_showTableStatusTooltip","isVisible","hasClass","animate","setVisible","animationOpts","progress","revalidateLayout","style","width","cssWidth","widthToContent","_toggleTableInfoTooltip","tooltipType","_tableInfoTooltip","destroy","create","parent","tableFooter","arrowPosition","arrowPositionUnit","$anchor","n","m","nvl","locale","decimalFormat","format","revalidateLayoutTree","openControlContainer","currentControl","onControlContainerClosed","allowedControlHeight","computeControlContainerHeight","show","delay","duration","animateDuration","onControlContainerOpened","closeControlContainer","extend","completeFunc","growControl","menuBarHeight","footerHeight","containerHeight","size","maxControlHeight","controlContainerHeight","dataMargins","margins","$data","dataMarginsHeight","top","bottom","menuBar","htmlContainer","containerSize","availableSize","subtract","menuBarVisible","htmlMenuBar","get","max","layouted","clearTimeout","_autoHideTableStatusTooltipTimeoutId","_tableStatusTooltip","rendering","message","opts","severity","autoRemove","isError","isWarning","setTimeout","toggleClass","onControlSelected","previousControl","debounceFunction","debounce","_applyFilter","preventDefault","filterText","addFilter","removeFilterByKey","isEnabled","reload","ReloadReason","OVERRIDE_ROW_LIMIT","resetUserFilter","toggleSelection","filterType","currentText","propertyName"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TableFooter.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {fields, graphics, HtmlComponent, InputFieldKeyStrokeContext, MenuBarLayout, scout, Status, strings, Table, TableFooterLayout, TableTextUserFilter, Widget} from '../index';\nimport $ from 'jquery';\nimport FocusFilterFieldKeyStroke from '../keystroke/FocusFilterFieldKeyStroke';\n\nexport default class TableFooter extends Widget {\n\n  constructor() {\n    super();\n\n    this._compactStyle = false;\n    this.animating = false;\n    this.open = false;\n    this.resizing = false;\n    this.table = null;\n    this._tableRowsChangedHandler = this._onTableRowsChanged.bind(this);\n    this._tableFilterHandler = this._onTableFilter.bind(this);\n    this._tableFilterAddedHandler = this._onTableFilterAdded.bind(this);\n    this._tableFilterRemovedHandler = this._onTableFilterRemoved.bind(this);\n    this._tableRowsSelectedHandler = this._onTableRowsSelected.bind(this);\n    this._tableStatusChangedHandler = this._onTableStatusChanged.bind(this);\n    this._tablePropertyChangeHandler = this._onTablePropertyChange.bind(this);\n  }\n\n  _init(options) {\n    super._init(options);\n\n    // Keystroke context for the search field.\n    this.searchFieldKeyStrokeContext = new InputFieldKeyStrokeContext();\n    this.searchFieldKeyStrokeContext.$bindTarget = function() {\n      return this._$textFilter;\n    }.bind(this);\n    this.searchFieldKeyStrokeContext.$scopeTarget = function() {\n      return this._$textFilter;\n    }.bind(this);\n\n    this._focusFilterFieldKeyStroke = null;\n  }\n\n  _render() {\n    let filter, $filter;\n\n    this.$container = this.$parent.appendDiv('table-footer');\n    this._$window = this.$parent.window();\n    this._$body = this.$parent.body();\n\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new TableFooterLayout(this));\n\n    // --- container for an open control ---\n    this.$controlContainer = this.$container.appendDiv('table-control-container').hide();\n    this.$controlContent = this.$controlContainer.appendDiv('table-control-content');\n\n    // --- table controls section ---\n    this._$controls = this.$container.appendDiv('table-controls');\n\n    // --- info section ---\n    this._$info = this.$container.appendDiv('table-info');\n\n    // text filter\n    $filter = this._$info.appendDiv('table-filter');\n    this._$textFilter = fields.makeTextField(this.$container, 'table-text-filter')\n      .appendTo($filter)\n      .on('input', '', this._createOnFilterFieldInputFunction().bind(this))\n      .placeholder(this.session.text('ui.FilterBy_'));\n\n    this.table.$container.data('filter-field', this._$textFilter);\n    this._focusFilterFieldKeyStroke = new FocusFilterFieldKeyStroke(this.table);\n    this.table.keyStrokeContext.registerKeyStroke(this._focusFilterFieldKeyStroke);\n\n    filter = this.table.getFilter(TableTextUserFilter.TYPE);\n    if (filter) {\n      this._$textFilter.val(filter.text);\n    }\n    this.$clearIcon = $filter.appendSpan('clear-icon unfocusable action text-field-icon')\n      .on('mousedown', this._onDeleteFilterMouseDown.bind(this));\n\n    // load info (\"X rows loaded, click to reload\")\n    this._$infoLoad = this._$info\n      .appendDiv('table-info-item table-info-load')\n      .on('click', '', this._onInfoLoadClick.bind(this));\n\n    // filter info (\"X rows filtered by Y, click to remove filter\")\n    this._$infoFilter = this._$info\n      .appendDiv('table-info-item table-info-filter')\n      .on('click', '', this._onInfoFilterClick.bind(this));\n\n    // selection info (\"X rows selected, click to select all/none\")\n    this._$infoSelection = this._$info\n      .appendDiv('table-info-item table-info-selection')\n      .on('click', '', this._onInfoSelectionClick.bind(this));\n\n    // table status\n    this._$infoTableStatus = this._$info\n      .appendDiv('table-info-item table-info-status')\n      .on('mousedown', this._onStatusMouseDown.bind(this));\n    this._$infoTableStatusIcon = this._$infoTableStatus\n      .appendSpan('icon font-icon');\n\n    // ------\n\n    this._renderControls();\n    this._renderInfo();\n    this._updateInfoVisibility();\n\n    this.table.on('rowsInserted', this._tableRowsChangedHandler);\n    this.table.on('rowsDeleted', this._tableRowsChangedHandler);\n    this.table.on('allRowsDeleted', this._tableRowsChangedHandler);\n    this.table.on('filter', this._tableFilterHandler);\n    this.table.on('filterAdded', this._tableFilterAddedHandler);\n    this.table.on('filterRemoved', this._tableFilterRemovedHandler);\n    this.table.on('rowsSelected', this._tableRowsSelectedHandler);\n    this.table.on('statusChanged', this._tableStatusChangedHandler);\n    this.table.on('propertyChange', this._tablePropertyChangeHandler);\n\n    this.session.keyStrokeManager.installKeyStrokeContext(this.searchFieldKeyStrokeContext);\n  }\n\n  getFocusableElement() {\n    return this._$textFilter;\n  }\n\n  _renderProperties() {\n    this._updateHasFilterText();\n  }\n\n  _remove() {\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.searchFieldKeyStrokeContext);\n    this._hideTableStatusTooltip();\n    this.$resizer = null;\n    this.$controlContainer.stop(false, true);\n    this.animating = false; // Animation may not be started yet due to the delay, hence complete callback may not be executed -> make sure the flag is reset anyway\n    this.open = false;\n\n    this.table.keyStrokeContext.unregisterKeyStroke(this._focusFilterFieldKeyStroke);\n    this._focusFilterFieldKeyStroke = null;\n\n    this.table.off('rowsInserted', this._tableRowsChangedHandler);\n    this.table.off('rowsDeleted', this._tableRowsChangedHandler);\n    this.table.off('allRowsDeleted', this._tableRowsChangedHandler);\n    this.table.off('filter', this._tableFilterHandler);\n    this.table.off('filterAdded', this._tableFilterAddedHandler);\n    this.table.off('filterRemoved', this._tableFilterRemovedHandler);\n    this.table.off('rowsSelected', this._tableRowsSelectedHandler);\n    this.table.off('statusChanged', this._tableStatusChangedHandler);\n    this.table.off('propertyChange', this._tablePropertyChangeHandler);\n\n    super._remove();\n  }\n\n  _renderResizerVisible() {\n    if (this.selectedControl.resizerVisible) {\n      this._renderResizer();\n      this.$controlContainer.addClass('has-resizer');\n    } else if (this.$resizer) {\n      this.$resizer.remove();\n      this.$resizer = null;\n      this.$controlContainer.removeClass('has-resizer');\n    }\n  }\n\n  _renderResizer() {\n    if (this.$resizer) {\n      return;\n    }\n    this.$resizer = this.$controlContainer.prependDiv('table-control-resize')\n      .on('mousedown', '', resize.bind(this));\n\n    function resize(event) {\n      // Remember current height and start position\n      let startHeight = this.$controlContainer.height(),\n        startX = Math.floor(event.pageY);\n      this._$window\n        .on('mousemove.tablefooter', resizeMove.bind(this))\n        .one('mouseup', resizeEnd.bind(this));\n      this._$body.addClass('row-resize');\n      this.resizing = true;\n\n      function resizeMove(event) {\n        if (!this.rendered) {\n          // footer may be removed in the meantime\n          return;\n        }\n        // Calculate position delta\n        let x = Math.floor(event.pageY);\n        let dx = x - startX;\n        // Ensure control container does not get bigger than the table\n        let maxHeight = this.table.$container.height() - this.table.footer.$container.height();\n        // Calculate new height of table control container\n        let newHeight = Math.min(startHeight - dx, maxHeight);\n        this.$controlContainer.height(newHeight);\n        let controlContainerInsets = graphics.insets(this.$controlContainer);\n        this.$controlContent.outerHeight(newHeight - controlContainerInsets.vertical());\n        this._revalidateTableLayout();\n      }\n\n      function resizeEnd() {\n        if (this.selectedControl && this.rendered && this.$controlContainer.height() < 100) {\n          this.selectedControl.setSelected(false);\n        }\n\n        this._$window.off('mousemove.tablefooter');\n        this._$body.removeClass('row-resize');\n        this.resizing = false;\n      }\n\n      return false;\n    }\n  }\n\n  _renderControls() {\n    let controls = this.table.tableControls;\n    if (controls) {\n      controls.forEach(control => {\n        control.setParent(this);\n        control.render(this._$controls);\n      });\n    } else {\n      this._$controls.empty();\n    }\n  }\n\n  _renderInfo() {\n    this._renderInfoLoad();\n    this._renderInfoTableStatus();\n    this._renderInfoFilter();\n    this._renderInfoSelection();\n  }\n\n  _renderInfoLoad() {\n    let $info = this._$infoLoad,\n      numRows = this.table.rows.length,\n      estRows = this.table.estimatedRowCount,\n      maxRows = this.table.maxRowCount;\n\n    $info.empty();\n    if (!this._compactStyle) {\n      if (numRows <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowLoaded', this.computeCountInfo(numRows)));\n      } else if (estRows && estRows > numRows) {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoaded', this.computeCountInfo(numRows, estRows)));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoaded', this.computeCountInfo(numRows)));\n      }\n      if (this.table.hasReloadHandler) {\n        if (estRows && maxRows && numRows < estRows && numRows < maxRows) {\n          if (estRows < maxRows) {\n            $info.appendSpan('table-info-button').text(this.session.text('ui.LoadAllData')).appendTo($info);\n          } else {\n            $info.appendSpan('table-info-button').text(this.session.text('ui.LoadNData', this.computeCountInfo(maxRows))).appendTo($info);\n          }\n        } else {\n          $info.appendSpan('table-info-button').text(this.session.text('ui.ReloadData')).appendTo($info);\n        }\n      }\n    } else {\n      if (numRows <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowLoadedMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsLoadedMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRows));\n    }\n    $info.setEnabled(this.table.hasReloadHandler);\n\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n\n  _renderInfoFilter() {\n    let $info = this._$infoFilter;\n    let numRowsFiltered = this.table.filteredRows().length;\n    let filteredBy = this.table.filteredBy().join(', '); // filteredBy() returns an array\n\n    $info.empty();\n    if (!this._compactStyle) {\n      if (filteredBy) {\n        if (numRowsFiltered <= 1) {\n          $info.appendSpan().text(this.session.text('ui.NumRowFilteredBy', this.computeCountInfo(numRowsFiltered), filteredBy));\n        } else {\n          $info.appendSpan().text(this.session.text('ui.NumRowsFilteredBy', this.computeCountInfo(numRowsFiltered), filteredBy));\n        }\n      } else {\n        if (numRowsFiltered <= 1) {\n          $info.appendSpan().text(this.session.text('ui.NumRowFiltered', this.computeCountInfo(numRowsFiltered)));\n        } else {\n          $info.appendSpan().text(this.session.text('ui.NumRowsFiltered', this.computeCountInfo(numRowsFiltered)));\n        }\n      }\n      if (this.table.hasUserFilter()) {\n        $info.appendSpan('table-info-button').text(this.session.text('ui.RemoveFilter')).appendTo($info);\n      }\n    } else {\n      if (numRowsFiltered <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowFilteredMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsFilteredMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRowsFiltered));\n    }\n\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n\n  _renderInfoSelection() {\n    let $info = this._$infoSelection,\n      numRows = this.table.filteredRows().length,\n      numRowsSelected = this.table.selectedRows.length,\n      all = numRows > 0 && numRows === numRowsSelected;\n\n    $info.empty();\n    if (!this._compactStyle) {\n      if (numRowsSelected <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowSelected', this.computeCountInfo(numRowsSelected)));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsSelected', this.computeCountInfo(numRowsSelected)));\n      }\n      $info.appendSpan('table-info-button').text(this.session.text(all ? 'ui.SelectNone' : 'ui.SelectAll')).appendTo($info);\n    } else {\n      if (numRowsSelected <= 1) {\n        $info.appendSpan().text(this.session.text('ui.NumRowSelectedMin'));\n      } else {\n        $info.appendSpan().text(this.session.text('ui.NumRowsSelectedMin'));\n      }\n      $info.appendSpan('table-info-button').text(this.computeCountInfo(numRowsSelected));\n    }\n\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n\n  _renderInfoTableStatus() {\n    let $info = this._$infoTableStatus;\n    let tableStatus = this.table.tableStatus;\n    $info.removeClass(Status.SEVERITY_CSS_CLASSES);\n    if (tableStatus) {\n      $info.addClass(tableStatus.cssClass());\n    }\n\n    if (!this.htmlComp.layouting) {\n      this.invalidateLayoutTree(false);\n    }\n  }\n\n  _updateInfoVisibility() {\n    this._updateInfoFilterVisibility();\n    this._updateInfoSelectionVisibility();\n    this._updateInfoTableStatusVisibility();\n  }\n\n  _updateInfoFilterVisibility() {\n    let visible = this.table.filteredBy().length > 0;\n    this._setInfoVisible(this._$infoFilter, visible);\n  }\n\n  _updateInfoSelectionVisibility() {\n    let visible = this.table.multiSelect;\n    this._setInfoVisible(this._$infoSelection, visible);\n  }\n\n  _updateInfoTableStatusVisibility() {\n    let visible = this.table.tableStatus;\n    if (visible) {\n      // If the uiState of the tableStatus was not set to hidden (either manually by the\n      // user or automatically by a timeout or other event), show the tooltip when the\n      // \"info visible\" animation has finished. Otherwise, we don't show the tooltip to\n      // not disturb the user.\n      let complete = null;\n      if (!scout.isOneOf(this.table.tableStatus.uiState, 'user-hidden', 'auto-hidden')) {\n        this._$infoTableStatus.addClass('tooltip-active'); // color icon before animation starts\n        complete = function() {\n          // Same check is required again, because this function is called asynchronously\n          if (this.table.tableStatus && !scout.isOneOf(this.table.tableStatus.uiState, 'user-hidden', 'auto-hidden')) {\n            this._showTableStatusTooltip();\n          }\n        }.bind(this);\n      }\n      this._setInfoVisible(this._$infoTableStatus, true, complete);\n    } else {\n      this._hideTableStatusTooltip();\n      this._setInfoVisible(this._$infoTableStatus, false);\n    }\n  }\n\n  _setInfoVisible($info, visible, complete) {\n    if ($info.isVisible() === visible && !(visible && $info.hasClass('hiding'))) {\n      if (complete) {\n        complete();\n      }\n      return;\n    }\n    let animate = this.rendered; // Animate only on a user interaction, no while the table gets rendered\n    if (!animate) {\n      $info.setVisible(visible);\n      return;\n    }\n    if (visible) {\n      let animationOpts = {\n        progress: this.revalidateLayout.bind(this),\n        complete: () => {\n          if (complete) {\n            complete();\n          }\n        }\n      };\n      // Save complete function so that layout may use it\n      $info.data('animationComplete', animationOpts.complete);\n      // If info is shown the first time, set the width to 0 to make animation work\n      if ($info[0].style.width === '') {\n        $info.cssWidth(0);\n      }\n      $info.stop().removeClass('hiding').setVisible(true).widthToContent(animationOpts);\n    } else {\n      // Mark element as hiding so that the layout does not try to resize it\n      $info.addClass('hiding');\n      $info.stop().animate({\n        width: 0\n      }, {\n        progress: this.revalidateLayout.bind(this),\n        complete: () => {\n          $info.removeClass('hiding');\n          $info.setVisible(false);\n        }\n      });\n    }\n  }\n\n  _toggleTableInfoTooltip($info, tooltipType) {\n    if (this._tableInfoTooltip) {\n      this._tableInfoTooltip.destroy();\n    } else {\n      this._tableInfoTooltip = scout.create(tooltipType, {\n        parent: this,\n        tableFooter: this,\n        arrowPosition: 50,\n        arrowPositionUnit: '%',\n        $anchor: $info\n      });\n      this._tableInfoTooltip.one('destroy', () => {\n        this._tableInfoTooltip = null;\n      });\n      this._tableInfoTooltip.render();\n    }\n  }\n\n  // n: row count\n  // m: total count, optional. Meaning is '3 of 10 rows'\n  computeCountInfo(n, m) {\n    n = scout.nvl(n, 0);\n    if (m) {\n      return this.session.text('ui.TableRowCount',\n        this.session.text('ui.CountOfApproxTotal',\n          this.session.locale.decimalFormat.format(n),\n          this.session.locale.decimalFormat.format(m)));\n    }\n\n    if (n === 0) {\n      if (this._compactStyle) {\n        return this.session.text('ui.TableRowCount', 0);\n      }\n      return this.session.text('ui.TableRowCount0');\n\n    } else if (n === 1) {\n      return this.session.text('ui.TableRowCount1');\n    }\n    return this.session.text('ui.TableRowCount', this.session.locale.decimalFormat.format(n));\n\n  }\n\n  /* open, close and resize of the container */\n\n  _revalidateTableLayout() {\n    this.table.htmlComp.revalidateLayoutTree();\n  }\n\n  openControlContainer(control) {\n    if (this.open) {\n      // Calling open again may resize the container -> don't return\n    }\n    let currentControl = this.$controlContent.data('control');\n    if (this.animating && currentControl !== control) {\n      // Make sure the existing content is removed if the close animation was aborted and another control selected while the container is still closing\n      // (The done callback won't be executed when calling stop(true))\n      currentControl.onControlContainerClosed();\n    }\n    this.animating = true;\n    this.open = true;\n\n    let allowedControlHeight = this.computeControlContainerHeight(this.table, control);\n\n    let insets = graphics.insets(this.$controlContainer);\n    this.$controlContent.outerHeight(allowedControlHeight - insets.vertical());\n\n    // If container is opened the first time, set the height to 0 to make animation work\n    if (this.$controlContainer[0].style.height === '') {\n      this.$controlContainer.outerHeight(0);\n    }\n\n    if (this.$controlContainer.outerHeight() > allowedControlHeight) {\n      // Container gets smaller -> layout first to prevent having a white area\n      this.table.invalidateLayoutTree();\n    }\n\n    // open container, stop existing (close) animations before\n    // use delay to make sure form is rendered and layouted with new size\n    this.$controlContainer.stop(true).show().delay(1).animate({\n      height: allowedControlHeight\n    }, {\n      duration: this.rendered ? control.animateDuration : 0,\n      complete: function() {\n        this.animating = false;\n        control.onControlContainerOpened();\n        this.table.invalidateLayoutTree();\n      }.bind(this)\n    });\n  }\n\n  closeControlContainer(control, options) {\n    if (!this.open) {\n      return;\n    }\n    options = $.extend({}, {animate: true}, options);\n    this.open = false;\n    this.animating = true;\n    this.table.invalidateLayoutTree();\n\n    let completeFunc = function() {\n      this.animating = false;\n      this.$controlContainer.hide();\n      control.onControlContainerClosed();\n    }.bind(this);\n\n    if (options.animate) {\n      this.$controlContainer.stop(true).show().animate({\n        height: 0\n      }, {\n        duration: control.animateDuration,\n        complete: completeFunc\n      });\n    } else {\n      completeFunc();\n    }\n  }\n\n  computeControlContainerHeight(table, control, growControl) {\n    let menuBarHeight = 0,\n      footerHeight = 0,\n      containerHeight = graphics.size(table.$container).height,\n      maxControlHeight,\n      controlContainerHeight = 0,\n      dataMargins = graphics.margins(scout.nvl(table.$data, table.$container)),\n      dataMarginsHeight = dataMargins.top + dataMargins.bottom,\n      menuBar = table.menuBar,\n      footer = table.footer,\n      htmlContainer = table.htmlComp,\n      containerSize = htmlContainer.availableSize()\n        .subtract(htmlContainer.insets());\n\n    if (!footer) {\n      return;\n    }\n\n    if (table.menuBarVisible && menuBar.visible) {\n      let htmlMenuBar = HtmlComponent.get(menuBar.$container);\n      menuBarHeight = MenuBarLayout.size(htmlMenuBar, containerSize).height;\n    }\n    // Layout table footer and add size of footer (including the control content) to 'height'\n    footerHeight = graphics.size(footer.$container).height;\n    if (footer.open) {\n      if (footer.animating) {\n        // Layout may be called when container stays open but changes its size using an animation.\n        // At that time the controlContainer has not yet the final size, therefore measuring is not possible, but not necessary anyway.\n        controlContainerHeight = scout.nvl(control && control.height, controlContainerHeight);\n      } else {\n        // Measure the real height\n        controlContainerHeight = graphics.size(footer.$controlContainer).height;\n        // Expand control height? (but only if not resizing)\n        if (!footer.resizing && growControl) {\n          controlContainerHeight = Math.max(control && control.height, controlContainerHeight);\n        }\n      }\n    }\n    // Crop control height (don't do it if table does not have the correct size yet)\n    if (this.table.htmlComp.layouted) {\n      maxControlHeight = containerHeight - (dataMarginsHeight + menuBarHeight + footerHeight);\n      controlContainerHeight = Math.min(controlContainerHeight, maxControlHeight);\n    }\n    return controlContainerHeight;\n  }\n\n  _hideTableStatusTooltip() {\n    clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n    if (this._tableStatusTooltip) {\n      this._tableStatusTooltip.destroy();\n    }\n  }\n\n  _showTableStatusTooltip() {\n    // Remove existing tooltip (might have the wrong css class)\n    if (this._tableStatusTooltip) {\n      this._tableStatusTooltip.destroy();\n      this._tableStatusTooltip = null;\n    }\n\n    // Check needed because the table footer might already be removed again when this\n    // callback is executed (e.g. when the user clicks on another page while the opening\n    // animation is still running).\n    if (!this.rendered && !this.rendering) {\n      return;\n    }\n\n    let tableStatus = this.table.tableStatus;\n    let text = (tableStatus ? tableStatus.message : null);\n    if (strings.empty(text)) {\n      return; // Refuse to show empty tooltip\n    }\n\n    // Create new tooltip\n    let opts = {\n      parent: this,\n      text: text,\n      severity: tableStatus.severity,\n      autoRemove: !tableStatus.isError(),\n      $anchor: this._$infoTableStatusIcon\n    };\n    this._tableStatusTooltip = scout.create('Tooltip', opts);\n    this._tableStatusTooltip.one('destroy', () => {\n      this._tableStatusTooltip = null;\n    });\n    this._tableStatusTooltip.render();\n\n    // Adjust icon style\n    this._$infoTableStatus.addClass('tooltip-active');\n    this._tableStatusTooltip.on('remove', () => {\n      this._$infoTableStatus.removeClass('tooltip-active');\n      // When the tooltip is removed (e.g. because of the auto-remove timeout, or\n      // The user clicked somewhere) set the uiStatus accordingly. Otherwise, it\n      // might pop up again when the table layout is revalidated.\n      clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n      if (this.table.tableStatus && !this.table.tableStatus.isError()) {\n        this.table.tableStatus.uiState = 'auto-hidden';\n      }\n    });\n\n    // Auto-hide unimportant messages\n    clearTimeout(this._autoHideTableStatusTooltipTimeoutId);\n    if (!tableStatus.isError() && !tableStatus.isWarning() && !tableStatus.uiState) {\n      // Already set status to 'auto-hidden', in case the user changes outline before timeout elapses\n      this.table.tableStatus.uiState = 'auto-hidden';\n      this._autoHideTableStatusTooltipTimeoutId = setTimeout(() => {\n        this._hideTableStatusTooltip();\n      }, 5000);\n    }\n  }\n\n  _updateHasFilterText() {\n    this._$textFilter.toggleClass('has-text', !!this._$textFilter.val());\n  }\n\n  onControlSelected(control) {\n    let previousControl = this.selectedControl;\n    this.selectedControl = control;\n\n    if (control) {\n      this._renderResizerVisible();\n      if (previousControl && previousControl.height !== control.height) {\n        this.openControlContainer(control);\n      }\n    }\n  }\n\n  _onStatusMouseDown(event) {\n    // Toggle tooltip\n    if (this._tableStatusTooltip) {\n      this._hideTableStatusTooltip();\n      this.table.tableStatus.uiState = 'user-hidden';\n    } else {\n      this._showTableStatusTooltip();\n      if (this._tableStatusTooltip.rendered) {\n        this.table.tableStatus.uiState = 'user-shown';\n      }\n    }\n  }\n\n  _createOnFilterFieldInputFunction() {\n    let debounceFunction = $.debounce(this._applyFilter.bind(this));\n    return function(event) {\n      this._updateHasFilterText();\n      // debounced filter\n      debounceFunction();\n    };\n  }\n\n  _onDeleteFilterMouseDown(event) {\n    this._$textFilter.val('');\n    this._updateHasFilterText();\n    this._applyFilter();\n    event.preventDefault();\n  }\n\n  _applyFilter(event) {\n    let filter,\n      filterText = this._$textFilter.val();\n    if (this.filterText !== filterText) {\n      this.filterText = filterText;\n      if (filterText) {\n        filter = scout.create('TableTextUserFilter', {\n          session: this.session,\n          table: this.table\n        });\n\n        filter.text = filterText;\n        this.table.addFilter(filter);\n      } else {\n        this.table.removeFilterByKey(TableTextUserFilter.TYPE);\n      }\n    }\n  }\n\n  _onInfoLoadClick() {\n    if (!this._$infoLoad.isEnabled()) {\n      return;\n    }\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoLoad, 'TableInfoLoadTooltip');\n    } else {\n      let numRows = this.table.rows.length;\n      let estRows = this.table.estimatedRowCount;\n      let maxRows = this.table.maxRowCount;\n      if (estRows && maxRows && numRows < estRows && numRows < maxRows) {\n        this.table.reload(Table.ReloadReason.OVERRIDE_ROW_LIMIT);\n      } else {\n        this.table.reload();\n      }\n    }\n  }\n\n  _onInfoFilterClick() {\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoFilter, 'TableInfoFilterTooltip');\n    } else {\n      this.table.resetUserFilter();\n    }\n  }\n\n  _onInfoSelectionClick() {\n    if (this._compactStyle) {\n      this._toggleTableInfoTooltip(this._$infoSelection, 'TableInfoSelectionTooltip');\n    } else {\n      this.table.toggleSelection();\n    }\n  }\n\n  _onTableRowsChanged(event) {\n    this._renderInfoLoad();\n  }\n\n  _onTableFilter(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    this._renderInfoSelection();\n  }\n\n  _onTableFilterAdded(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    if (event.filter.filterType === TableTextUserFilter.TYPE) {\n      // Do not update the content when the value does not change. This is the case when typing text in\n      // the UI. If we would call val() unconditionally, the current cursor position will get lost.\n      let currentText = this._$textFilter.val();\n      if (currentText !== event.filter.text) {\n        this._$textFilter.val(event.filter.text);\n        this._updateHasFilterText();\n        this._applyFilter();\n      }\n    }\n  }\n\n  _onTableFilterRemoved(event) {\n    this._renderInfoFilter();\n    this._updateInfoFilterVisibility();\n    if (event.filter.filterType === TableTextUserFilter.TYPE) {\n      this._$textFilter.val('');\n      this._updateHasFilterText();\n      this._applyFilter();\n    }\n  }\n\n  _onTableRowsSelected(event) {\n    this._renderInfoSelection();\n  }\n\n  _onTableStatusChanged(event) {\n    this._renderInfoTableStatus();\n    this._updateInfoTableStatusVisibility();\n  }\n\n  _onTablePropertyChange(event) {\n    if (event.propertyName === 'multiSelect') {\n      this._updateInfoSelectionVisibility();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}