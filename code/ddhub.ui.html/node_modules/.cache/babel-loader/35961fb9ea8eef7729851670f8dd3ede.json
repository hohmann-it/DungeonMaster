{"ast":null,"code":"/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Cell, CompactLineBlock } from '../../index';\nexport default class CompactLine {\n  constructor(labelOrHeaderCell, textOrCell) {\n    /** @type {CompactLineBlock} */\n    this.labelBlock = null;\n    /** @type {CompactLineBlock} */\n    this.textBlock = null;\n    if (labelOrHeaderCell instanceof Cell) {\n      this.setLabelBlock(this.convertHeaderCellToBlock(labelOrHeaderCell));\n    } else {\n      this.setLabelBlock(new CompactLineBlock(labelOrHeaderCell));\n    }\n    if (textOrCell instanceof Cell) {\n      this.setTextBlock(this.convertCellToBlock(textOrCell));\n    } else {\n      this.setTextBlock(new CompactLineBlock(textOrCell));\n    }\n  }\n  convertHeaderCellToBlock(cell) {\n    return this.convertCellToBlock(cell);\n  }\n  convertCellToBlock(cell) {\n    let block = new CompactLineBlock();\n    if (cell != null) {\n      block.setText(cell.text);\n      block.setIcon(cell.iconId);\n      block.setEncodeHtmlEnabled(!cell.htmlEnabled);\n    }\n    return block;\n  }\n  setLabelBlock(block) {\n    scout.assertParameter('block', block);\n    this.labelBlock = block;\n  }\n  setTextBlock(block) {\n    scout.assertParameter('block', block);\n    this.textBlock = block;\n  }\n  build() {\n    let label = this.labelBlock.build();\n    if (label) {\n      label += ': ';\n    }\n    let value = this.textBlock.build();\n    if (!value) {\n      return '';\n    }\n    return \"\\n<div class=\\\"compact-cell-line\\\">\\n  <span class=\\\"compact-cell-line-label\\\">\".concat(label, \"</span>\\n  <span class=\\\"compact-cell-line-value\\\">\").concat(value, \"</span>\\n</div>\");\n  }\n}","map":{"version":3,"names":["Cell","CompactLineBlock","CompactLine","constructor","labelOrHeaderCell","textOrCell","labelBlock","textBlock","setLabelBlock","convertHeaderCellToBlock","setTextBlock","convertCellToBlock","cell","block","setText","text","setIcon","iconId","setEncodeHtmlEnabled","htmlEnabled","scout","assertParameter","build","label","value"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/columns/CompactLine.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Cell, CompactLineBlock} from '../../index';\n\nexport default class CompactLine {\n\n  constructor(labelOrHeaderCell, textOrCell) {\n    /** @type {CompactLineBlock} */\n    this.labelBlock = null;\n    /** @type {CompactLineBlock} */\n    this.textBlock = null;\n    if (labelOrHeaderCell instanceof Cell) {\n      this.setLabelBlock(this.convertHeaderCellToBlock(labelOrHeaderCell));\n    } else {\n      this.setLabelBlock(new CompactLineBlock(labelOrHeaderCell));\n    }\n    if (textOrCell instanceof Cell) {\n      this.setTextBlock(this.convertCellToBlock(textOrCell));\n    } else {\n      this.setTextBlock(new CompactLineBlock(textOrCell));\n    }\n  }\n\n  convertHeaderCellToBlock(cell) {\n    return this.convertCellToBlock(cell);\n  }\n\n  convertCellToBlock(cell) {\n    let block = new CompactLineBlock();\n    if (cell != null) {\n      block.setText(cell.text);\n      block.setIcon(cell.iconId);\n      block.setEncodeHtmlEnabled(!cell.htmlEnabled);\n    }\n    return block;\n  }\n\n  setLabelBlock(block) {\n    scout.assertParameter('block', block);\n    this.labelBlock = block;\n  }\n\n  setTextBlock(block) {\n    scout.assertParameter('block', block);\n    this.textBlock = block;\n  }\n\n  build() {\n    let label = this.labelBlock.build();\n    if (label) {\n      label += ': ';\n    }\n    let value = this.textBlock.build();\n    if (!value) {\n      return '';\n    }\n    return `\n<div class=\"compact-cell-line\">\n  <span class=\"compact-cell-line-label\">${label}</span>\n  <span class=\"compact-cell-line-value\">${value}</span>\n</div>`;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,gBAAgB,QAAO,aAAa;AAElD,eAAe,MAAMC,WAAW,CAAC;EAE/BC,WAAW,CAACC,iBAAiB,EAAEC,UAAU,EAAE;IACzC;IACA,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAIH,iBAAiB,YAAYJ,IAAI,EAAE;MACrC,IAAI,CAACQ,aAAa,CAAC,IAAI,CAACC,wBAAwB,CAACL,iBAAiB,CAAC,CAAC;IACtE,CAAC,MAAM;MACL,IAAI,CAACI,aAAa,CAAC,IAAIP,gBAAgB,CAACG,iBAAiB,CAAC,CAAC;IAC7D;IACA,IAAIC,UAAU,YAAYL,IAAI,EAAE;MAC9B,IAAI,CAACU,YAAY,CAAC,IAAI,CAACC,kBAAkB,CAACN,UAAU,CAAC,CAAC;IACxD,CAAC,MAAM;MACL,IAAI,CAACK,YAAY,CAAC,IAAIT,gBAAgB,CAACI,UAAU,CAAC,CAAC;IACrD;EACF;EAEAI,wBAAwB,CAACG,IAAI,EAAE;IAC7B,OAAO,IAAI,CAACD,kBAAkB,CAACC,IAAI,CAAC;EACtC;EAEAD,kBAAkB,CAACC,IAAI,EAAE;IACvB,IAAIC,KAAK,GAAG,IAAIZ,gBAAgB,EAAE;IAClC,IAAIW,IAAI,IAAI,IAAI,EAAE;MAChBC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,IAAI,CAAC;MACxBF,KAAK,CAACG,OAAO,CAACJ,IAAI,CAACK,MAAM,CAAC;MAC1BJ,KAAK,CAACK,oBAAoB,CAAC,CAACN,IAAI,CAACO,WAAW,CAAC;IAC/C;IACA,OAAON,KAAK;EACd;EAEAL,aAAa,CAACK,KAAK,EAAE;IACnBO,KAAK,CAACC,eAAe,CAAC,OAAO,EAAER,KAAK,CAAC;IACrC,IAAI,CAACP,UAAU,GAAGO,KAAK;EACzB;EAEAH,YAAY,CAACG,KAAK,EAAE;IAClBO,KAAK,CAACC,eAAe,CAAC,OAAO,EAAER,KAAK,CAAC;IACrC,IAAI,CAACN,SAAS,GAAGM,KAAK;EACxB;EAEAS,KAAK,GAAG;IACN,IAAIC,KAAK,GAAG,IAAI,CAACjB,UAAU,CAACgB,KAAK,EAAE;IACnC,IAAIC,KAAK,EAAE;MACTA,KAAK,IAAI,IAAI;IACf;IACA,IAAIC,KAAK,GAAG,IAAI,CAACjB,SAAS,CAACe,KAAK,EAAE;IAClC,IAAI,CAACE,KAAK,EAAE;MACV,OAAO,EAAE;IACX;IACA,gGAEsCD,KAAK,gEACLC,KAAK;EAE7C;AACF"},"metadata":{},"sourceType":"module"}