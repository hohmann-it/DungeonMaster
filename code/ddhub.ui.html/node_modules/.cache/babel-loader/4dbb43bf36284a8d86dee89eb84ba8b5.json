{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FormField, HAlign, keys, KeyStroke, objects, scout, strings, styles, ValueField, WidgetSupport } from '../index';\nimport FocusFilterFieldKeyStroke from '../keystroke/FocusFilterFieldKeyStroke';\nexport default class FilterSupport extends WidgetSupport {\n  /**\n   * @typedef {WidgetSupportOptions} FilterSupportOptions\n   * @property {function} filterElements Filter all elements.\n   * @property {function} getElementsForFiltering Get all elements to which the filters should be applied.\n   * @property {function} getElementText Get text of an element.\n   * @property {function} createTextFilter Create a text filter.\n   * @property {function} updateTextFilterText Update the text on the filter, this is mandatory if createTextFilter is set.\n   */\n\n  /**\n   * @typedef Filter\n   * @property {function} accept A function that returns true or false, whether the filter accepts the element or not.\n   */\n\n  /**\n   * @typedef FilterResult\n   * @property {object[]} newlyHidden An array of the newly hidden elements.\n   * @property {object[]} newlyShown An array of the newly shown elements.\n   */\n\n  /**\n   * @typedef SetFiltersResult\n   * @property {Filter[]} filtersAdded An array of the filters added.\n   * @property {Filter[]} filtersRemoved An array of the filters removed.\n   */\n\n  /**\n   * @param {FilterSupportOptions} options a mandatory options object\n   */\n  constructor(options) {\n    super(options);\n    if (options.filterElements) {\n      this._filterElements = options.filterElements;\n    } else {\n      this._filterElements = this._filter.bind(this);\n      scout.assertParameter('getElementsForFiltering', options.getElementsForFiltering);\n      this._getElementsForFiltering = options.getElementsForFiltering;\n    }\n    this._getElementText = options.getElementText || (element => $(element).text());\n    if (options.createTextFilter) {\n      scout.assertParameter('updateTextFilterText', options.updateTextFilterText);\n      this._createTextFilter = options.createTextFilter;\n      this._updateTextFilterText = options.updateTextFilterText;\n    } else {\n      this._createTextFilter = this._createDefaultTextFilter.bind(this);\n      this._updateTextFilterText = this._updateDefaultTextFilterText.bind(this);\n    }\n    this._filterField = null;\n    this._filterFieldDisplayTextChangedHandler = this._onFilterFieldDisplayTextChanged.bind(this);\n    this._focusInHandler = this._onFocusIn.bind(this);\n    this._focusOutHandler = this._onFocusOut.bind(this);\n    this._focusFilterFieldKeyStroke = null;\n    this._cancelFilterFieldKeyStroke = null;\n    this._exitFilterFieldKeyStroke = null;\n    this._textFilter = null;\n  }\n  _createDefaultTextFilter() {\n    return {\n      acceptedText: null,\n      accept: element => {\n        if (strings.empty(this._textFilter.acceptedText) || !this.widget.isTextFilterFieldVisible()) {\n          return true;\n        }\n        let text = this._getElementText(element);\n        if (strings.empty(text)) {\n          return false;\n        }\n        return strings.contains(text.toLowerCase(), this._textFilter.acceptedText.toLowerCase());\n      }\n    };\n  }\n  _updateDefaultTextFilterText(filter, text) {\n    if (objects.equals(filter.acceptedText, text)) {\n      return false;\n    }\n    filter.acceptedText = text;\n    return true;\n  }\n  renderFilterField() {\n    if (this.widget.isTextFilterFieldVisible()) {\n      this._renderFilterField();\n    } else {\n      this._removeFilterField();\n    }\n  }\n  _renderFilterField() {\n    this._ensure$Container();\n    this._filterField = scout.create('StringField', {\n      parent: this.widget,\n      label: this.widget.session.text('ui.Filter'),\n      labelVisible: false,\n      inheritAccessibility: false,\n      cssClass: 'filter-field empty',\n      fieldStyle: FormField.FieldStyle.CLASSIC,\n      statusVisible: false,\n      clearable: ValueField.Clearable.ALWAYS,\n      updateDisplayTextOnModify: true,\n      preventInitialFocus: true\n    });\n    this._filterField.render(this.$container);\n    this._filterField.$field.attr('tabIndex', -1);\n    if (!this.widget.rendered) {\n      this.widget.session.layoutValidator.schedulePostValidateFunction(this._updateFilterFieldBackgroundColor.bind(this));\n    } else {\n      this._updateFilterFieldBackgroundColor();\n    }\n    this._textFilter = this._createTextFilter();\n    this._textFilter.synthetic = true;\n    this.addFilter(this._textFilter);\n    this._filterField.on('propertyChange:displayText', this._filterFieldDisplayTextChangedHandler);\n    this.widget.$container.on('focusin', this._focusInHandler);\n    this.widget.$container.on('focusout', this._focusOutHandler);\n    this.widget.$container.data('filter-field', this._filterField.$field);\n    this._focusFilterFieldKeyStroke = new FocusFilterFieldKeyStroke(this.widget);\n    this.widget.keyStrokeContext.registerKeyStroke(this._focusFilterFieldKeyStroke);\n    this._cancelFilterFieldKeyStroke = new KeyStroke();\n    this._cancelFilterFieldKeyStroke.field = this._filterField;\n    this._cancelFilterFieldKeyStroke.which = [keys.ESC];\n    this._cancelFilterFieldKeyStroke.stopPropagation = true;\n    this._cancelFilterFieldKeyStroke.renderingHints.hAlign = HAlign.RIGHT;\n    this._cancelFilterFieldKeyStroke.handle = this._cancelFilterField.bind(this);\n    this._filterField.keyStrokeContext.registerKeyStroke(this._cancelFilterFieldKeyStroke);\n    this._exitFilterFieldKeyStroke = new KeyStroke();\n    this._exitFilterFieldKeyStroke.field = this._filterField;\n    this._exitFilterFieldKeyStroke.which = [keys.ENTER];\n    this._exitFilterFieldKeyStroke.stopPropagation = true;\n    this._exitFilterFieldKeyStroke.renderingHints.hAlign = HAlign.RIGHT;\n    this._exitFilterFieldKeyStroke.handle = this._exitFilterField.bind(this);\n    this._filterField.keyStrokeContext.registerKeyStroke(this._exitFilterFieldKeyStroke);\n  }\n  _updateFilterFieldBackgroundColor() {\n    if (!this._filterField || !this._filterField.rendered) {\n      return;\n    }\n    let color = styles.getFirstOpaqueBackgroundColor(this._filterField.$container),\n      colorRgba = $.extend(true, {\n        red: 0,\n        green: 0,\n        blue: 0,\n        alpha: 1\n      }, styles.rgb(color)),\n      transparent50Color = 'rgba(' + colorRgba.red + ', ' + colorRgba.green + ', ' + colorRgba.blue + ', ' + 0.5 + ')',\n      transparent80Color = 'rgba(' + colorRgba.red + ', ' + colorRgba.green + ', ' + colorRgba.blue + ', ' + 0.8 + ')';\n    this._filterField.$container.css('--filter-field-background-color', color);\n    this._filterField.$container.css('--filter-field-transparent-50-background-color', transparent50Color);\n    this._filterField.$container.css('--filter-field-transparent-80-background-color', transparent80Color);\n  }\n  _onFilterFieldDisplayTextChanged(event) {\n    if (this._filterField && this._filterField.rendered) {\n      this._filterField.$container.toggleClass('empty', !event.newValue);\n    }\n    if (!this._updateTextFilterText(this._textFilter, event.newValue)) {\n      return;\n    }\n    this.filter();\n  }\n  _onFocusIn(event) {\n    this._updateFocusInsideWidget(event.target);\n  }\n  _onFocusOut(event) {\n    this._updateFocusInsideWidget(event.relatedTarget);\n  }\n  _updateFocusInsideWidget(target) {\n    let focusInsideWidget = this.widget.$container.isOrHas(target);\n    if (this._filterField && this._filterField.rendered) {\n      this._filterField.$container.toggleClass('focus-inside-widget', focusInsideWidget);\n    }\n    return focusInsideWidget;\n  }\n  _exitFilterField() {\n    this.widget.focus();\n  }\n  _cancelFilterField() {\n    this._resetFilterField();\n    this._exitFilterField();\n  }\n  _resetFilterField() {\n    if (this._filterField) {\n      this._filterField.setValue(null);\n    }\n  }\n  _removeFilterField() {\n    if (!this._filterField) {\n      return;\n    }\n    this.widget.$container.off('focusin', this._focusInHandler);\n    this.widget.$container.off('focusout', this._focusOutHandler);\n    this.widget.keyStrokeContext.unregisterKeyStroke(this._focusFilterFieldKeyStroke);\n    this._focusFilterFieldKeyStroke = null;\n    this._resetFilterField();\n    this._filterField.destroy();\n    this._filterField = null;\n    this.removeFilter(this._textFilter);\n    this._textFilter = null;\n  }\n  remove() {\n    this._removeFilterField();\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The filters to add.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {Filter[]} Returns the added filters.\n   */\n  addFilter(filter) {\n    let applyFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let filtersToAdd = arrays.ensure(filter);\n    let filters = this._getFilters().slice(),\n      oldFilters = filters.slice();\n    filtersToAdd.forEach(f => {\n      if (this._hasFilter(filters, f)) {\n        return;\n      }\n      filters.push(f);\n    });\n    if (filters.length === this._getFilters().length) {\n      return [];\n    }\n    this._setFilters(filters, applyFilter);\n    let newFilters = this._getFilters().slice();\n    arrays.removeAll(newFilters, oldFilters);\n    return newFilters;\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The filters to remove.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {Filter[]} Returns the removed filters.\n   */\n  removeFilter(filter) {\n    let applyFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    let filtersToRemove = arrays.ensure(filter);\n    let filters = this._getFilters().slice(),\n      oldFilters = filters.slice();\n    let changed = false;\n    filtersToRemove.forEach(f => {\n      f = this._findFilter(filters, f);\n      changed = arrays.remove(filters, f) || changed;\n    });\n    if (!changed) {\n      return [];\n    }\n    this._setFilters(filters, applyFilter);\n    let newFilters = this._getFilters().slice();\n    arrays.removeAll(oldFilters, newFilters);\n    return oldFilters;\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The new filters.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {SetFiltersResult}\n   */\n  setFilters(filters) {\n    let applyFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    filters = arrays.ensure(filters);\n    this._addSyntheticFilters(filters);\n    if (this._getFilters().length === filters.length && filters.every(filter => this._hasFilter(this._getFilters(), filter))) {\n      return {\n        filtersAdded: [],\n        filtersRemoved: []\n      };\n    }\n    let oldFilters = this._getFilters().slice();\n    this._setFilters(filters, applyFilter);\n    let filtersAdded = this._getFilters().filter(filter => !this._findFilter(oldFilters, filter)),\n      filtersRemoved = oldFilters.filter(filter => !this._findFilter(this._getFilters(), filter));\n    return {\n      filtersAdded: filtersAdded,\n      filtersRemoved: filtersRemoved\n    };\n  }\n  _setFilters(filters) {\n    let applyFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.widget.setProperty('filters', filters.map(filter => {\n      if (objects.isFunction(filter)) {\n        return this._createFilterByFunction(filter);\n      }\n      return filter;\n    }));\n    if (applyFilter) {\n      this.filter();\n    }\n  }\n  _addSyntheticFilters(filters) {\n    this._getFilters().filter(filter => filter.synthetic).forEach(filter => this._addSyntheticFilter(filters, filter));\n    this._addSyntheticFilter(filters, this._textFilter);\n  }\n  _addSyntheticFilter(filters, syntheticFilter) {\n    if (!syntheticFilter || this._hasFilter(filters, syntheticFilter)) {\n      return;\n    }\n    filters.push(syntheticFilter);\n  }\n  _getFilters() {\n    return this.widget.filters;\n  }\n  _findFilter(filters, filter) {\n    if (objects.isFunction(filter)) {\n      return this._getFilterCreatedByFunction(filters, filter);\n    }\n    return arrays.find(filters, f => objects.equals(f, filter));\n  }\n  _getFilterCreatedByFunction(filters, filterFunc) {\n    return arrays.find(filters, filter => filter.createdByFunction && filter.accept === filterFunc);\n  }\n  _hasFilter(filters, filter) {\n    return !!this._findFilter(filters, filter);\n  }\n  _createFilterByFunction(filterFunc) {\n    return {\n      createdByFunction: true,\n      accept: filterFunc\n    };\n  }\n  filter() {\n    let result = this._filterElements(),\n      changed = result && (arrays.ensure(result.newlyHidden).length || arrays.ensure(result.newlyShown).length);\n    if (changed) {\n      this.widget.filteredElementsDirty = true;\n      let opts = {};\n      if (this._filterField) {\n        opts.textFilterText = this._filterField.displayText;\n      }\n      this.widget.updateFilteredElements(result, opts);\n    }\n    return result;\n  }\n  _filter() {\n    return this.applyFilters(this._getElementsForFiltering(), true);\n  }\n  applyFilters(elements, fullReset) {\n    if (this._getFilters().length === 0 && !scout.nvl(fullReset, false)) {\n      return;\n    }\n    let newlyShown = [];\n    let newlyHidden = [];\n    elements.forEach(element => {\n      if (this.applyFiltersForElement(element)) {\n        if (element.filterAccepted) {\n          newlyShown.push(element);\n        } else {\n          newlyHidden.push(element);\n        }\n      }\n    });\n    return {\n      newlyHidden: newlyHidden,\n      newlyShown: newlyShown\n    };\n  }\n  applyFiltersForElement(element) {\n    if (this.elementAcceptedByFilters(element)) {\n      if (!element.filterAccepted) {\n        element.setFilterAccepted(true);\n        return true;\n      }\n    } else if (element.filterAccepted) {\n      element.setFilterAccepted(false);\n      return true;\n    }\n    return false;\n  }\n  elementAcceptedByFilters(element) {\n    return this._getFilters().every(filter => filter.accept(element));\n  }\n}","map":{"version":3,"names":["arrays","FormField","HAlign","keys","KeyStroke","objects","scout","strings","styles","ValueField","WidgetSupport","FocusFilterFieldKeyStroke","FilterSupport","constructor","options","filterElements","_filterElements","_filter","bind","assertParameter","getElementsForFiltering","_getElementsForFiltering","_getElementText","getElementText","element","$","text","createTextFilter","updateTextFilterText","_createTextFilter","_updateTextFilterText","_createDefaultTextFilter","_updateDefaultTextFilterText","_filterField","_filterFieldDisplayTextChangedHandler","_onFilterFieldDisplayTextChanged","_focusInHandler","_onFocusIn","_focusOutHandler","_onFocusOut","_focusFilterFieldKeyStroke","_cancelFilterFieldKeyStroke","_exitFilterFieldKeyStroke","_textFilter","acceptedText","accept","empty","widget","isTextFilterFieldVisible","contains","toLowerCase","filter","equals","renderFilterField","_renderFilterField","_removeFilterField","_ensure$Container","create","parent","label","session","labelVisible","inheritAccessibility","cssClass","fieldStyle","FieldStyle","CLASSIC","statusVisible","clearable","Clearable","ALWAYS","updateDisplayTextOnModify","preventInitialFocus","render","$container","$field","attr","rendered","layoutValidator","schedulePostValidateFunction","_updateFilterFieldBackgroundColor","synthetic","addFilter","on","data","keyStrokeContext","registerKeyStroke","field","which","ESC","stopPropagation","renderingHints","hAlign","RIGHT","handle","_cancelFilterField","ENTER","_exitFilterField","color","getFirstOpaqueBackgroundColor","colorRgba","extend","red","green","blue","alpha","rgb","transparent50Color","transparent80Color","css","event","toggleClass","newValue","_updateFocusInsideWidget","target","relatedTarget","focusInsideWidget","isOrHas","focus","_resetFilterField","setValue","off","unregisterKeyStroke","destroy","removeFilter","remove","applyFilter","filtersToAdd","ensure","filters","_getFilters","slice","oldFilters","forEach","f","_hasFilter","push","length","_setFilters","newFilters","removeAll","filtersToRemove","changed","_findFilter","setFilters","_addSyntheticFilters","every","filtersAdded","filtersRemoved","setProperty","map","isFunction","_createFilterByFunction","_addSyntheticFilter","syntheticFilter","_getFilterCreatedByFunction","find","filterFunc","createdByFunction","result","newlyHidden","newlyShown","filteredElementsDirty","opts","textFilterText","displayText","updateFilteredElements","applyFilters","elements","fullReset","nvl","applyFiltersForElement","filterAccepted","elementAcceptedByFilters","setFilterAccepted"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/widget/FilterSupport.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FormField, HAlign, keys, KeyStroke, objects, scout, strings, styles, ValueField, WidgetSupport} from '../index';\nimport FocusFilterFieldKeyStroke from '../keystroke/FocusFilterFieldKeyStroke';\n\nexport default class FilterSupport extends WidgetSupport {\n  /**\n   * @typedef {WidgetSupportOptions} FilterSupportOptions\n   * @property {function} filterElements Filter all elements.\n   * @property {function} getElementsForFiltering Get all elements to which the filters should be applied.\n   * @property {function} getElementText Get text of an element.\n   * @property {function} createTextFilter Create a text filter.\n   * @property {function} updateTextFilterText Update the text on the filter, this is mandatory if createTextFilter is set.\n   */\n\n  /**\n   * @typedef Filter\n   * @property {function} accept A function that returns true or false, whether the filter accepts the element or not.\n   */\n\n  /**\n   * @typedef FilterResult\n   * @property {object[]} newlyHidden An array of the newly hidden elements.\n   * @property {object[]} newlyShown An array of the newly shown elements.\n   */\n\n  /**\n   * @typedef SetFiltersResult\n   * @property {Filter[]} filtersAdded An array of the filters added.\n   * @property {Filter[]} filtersRemoved An array of the filters removed.\n   */\n\n  /**\n   * @param {FilterSupportOptions} options a mandatory options object\n   */\n  constructor(options) {\n    super(options);\n\n    if (options.filterElements) {\n      this._filterElements = options.filterElements;\n    } else {\n      this._filterElements = this._filter.bind(this);\n      scout.assertParameter('getElementsForFiltering', options.getElementsForFiltering);\n      this._getElementsForFiltering = options.getElementsForFiltering;\n    }\n    this._getElementText = options.getElementText || (element => $(element).text());\n\n    if (options.createTextFilter) {\n      scout.assertParameter('updateTextFilterText', options.updateTextFilterText);\n      this._createTextFilter = options.createTextFilter;\n      this._updateTextFilterText = options.updateTextFilterText;\n    } else {\n      this._createTextFilter = this._createDefaultTextFilter.bind(this);\n      this._updateTextFilterText = this._updateDefaultTextFilterText.bind(this);\n    }\n\n    this._filterField = null;\n\n    this._filterFieldDisplayTextChangedHandler = this._onFilterFieldDisplayTextChanged.bind(this);\n    this._focusInHandler = this._onFocusIn.bind(this);\n    this._focusOutHandler = this._onFocusOut.bind(this);\n\n    this._focusFilterFieldKeyStroke = null;\n    this._cancelFilterFieldKeyStroke = null;\n    this._exitFilterFieldKeyStroke = null;\n\n    this._textFilter = null;\n  }\n\n  _createDefaultTextFilter() {\n    return {\n      acceptedText: null,\n      accept: element => {\n        if (strings.empty(this._textFilter.acceptedText) || !this.widget.isTextFilterFieldVisible()) {\n          return true;\n        }\n        let text = this._getElementText(element);\n        if (strings.empty(text)) {\n          return false;\n        }\n        return strings.contains(text.toLowerCase(), this._textFilter.acceptedText.toLowerCase());\n      }\n    };\n  }\n\n  _updateDefaultTextFilterText(filter, text) {\n    if (objects.equals(filter.acceptedText, text)) {\n      return false;\n    }\n    filter.acceptedText = text;\n    return true;\n  }\n\n  renderFilterField() {\n    if (this.widget.isTextFilterFieldVisible()) {\n      this._renderFilterField();\n    } else {\n      this._removeFilterField();\n    }\n  }\n\n  _renderFilterField() {\n    this._ensure$Container();\n    this._filterField = scout.create('StringField', {\n      parent: this.widget,\n      label: this.widget.session.text('ui.Filter'),\n      labelVisible: false,\n      inheritAccessibility: false,\n      cssClass: 'filter-field empty',\n      fieldStyle: FormField.FieldStyle.CLASSIC,\n      statusVisible: false,\n      clearable: ValueField.Clearable.ALWAYS,\n      updateDisplayTextOnModify: true,\n      preventInitialFocus: true\n    });\n    this._filterField.render(this.$container);\n\n    this._filterField.$field.attr('tabIndex', -1);\n\n    if (!this.widget.rendered) {\n      this.widget.session.layoutValidator.schedulePostValidateFunction(this._updateFilterFieldBackgroundColor.bind(this));\n    } else {\n      this._updateFilterFieldBackgroundColor();\n    }\n\n    this._textFilter = this._createTextFilter();\n    this._textFilter.synthetic = true;\n    this.addFilter(this._textFilter);\n\n    this._filterField.on('propertyChange:displayText', this._filterFieldDisplayTextChangedHandler);\n    this.widget.$container.on('focusin', this._focusInHandler);\n    this.widget.$container.on('focusout', this._focusOutHandler);\n\n    this.widget.$container.data('filter-field', this._filterField.$field);\n    this._focusFilterFieldKeyStroke = new FocusFilterFieldKeyStroke(this.widget);\n    this.widget.keyStrokeContext.registerKeyStroke(this._focusFilterFieldKeyStroke);\n\n    this._cancelFilterFieldKeyStroke = new KeyStroke();\n    this._cancelFilterFieldKeyStroke.field = this._filterField;\n    this._cancelFilterFieldKeyStroke.which = [keys.ESC];\n    this._cancelFilterFieldKeyStroke.stopPropagation = true;\n    this._cancelFilterFieldKeyStroke.renderingHints.hAlign = HAlign.RIGHT;\n    this._cancelFilterFieldKeyStroke.handle = this._cancelFilterField.bind(this);\n\n    this._filterField.keyStrokeContext.registerKeyStroke(this._cancelFilterFieldKeyStroke);\n\n    this._exitFilterFieldKeyStroke = new KeyStroke();\n    this._exitFilterFieldKeyStroke.field = this._filterField;\n    this._exitFilterFieldKeyStroke.which = [keys.ENTER];\n    this._exitFilterFieldKeyStroke.stopPropagation = true;\n    this._exitFilterFieldKeyStroke.renderingHints.hAlign = HAlign.RIGHT;\n    this._exitFilterFieldKeyStroke.handle = this._exitFilterField.bind(this);\n\n    this._filterField.keyStrokeContext.registerKeyStroke(this._exitFilterFieldKeyStroke);\n  }\n\n  _updateFilterFieldBackgroundColor() {\n    if (!this._filterField || !this._filterField.rendered) {\n      return;\n    }\n    let color = styles.getFirstOpaqueBackgroundColor(this._filterField.$container),\n      colorRgba = $.extend(true, {red: 0, green: 0, blue: 0, alpha: 1}, styles.rgb(color)),\n      transparent50Color = 'rgba(' + colorRgba.red + ', ' + colorRgba.green + ', ' + colorRgba.blue + ', ' + 0.5 + ')',\n      transparent80Color = 'rgba(' + colorRgba.red + ', ' + colorRgba.green + ', ' + colorRgba.blue + ', ' + 0.8 + ')';\n    this._filterField.$container.css('--filter-field-background-color', color);\n    this._filterField.$container.css('--filter-field-transparent-50-background-color', transparent50Color);\n    this._filterField.$container.css('--filter-field-transparent-80-background-color', transparent80Color);\n  }\n\n  _onFilterFieldDisplayTextChanged(event) {\n    if (this._filterField && this._filterField.rendered) {\n      this._filterField.$container.toggleClass('empty', !event.newValue);\n    }\n    if (!this._updateTextFilterText(this._textFilter, event.newValue)) {\n      return;\n    }\n    this.filter();\n  }\n\n  _onFocusIn(event) {\n    this._updateFocusInsideWidget(event.target);\n  }\n\n  _onFocusOut(event) {\n    this._updateFocusInsideWidget(event.relatedTarget);\n  }\n\n  _updateFocusInsideWidget(target) {\n    let focusInsideWidget = this.widget.$container.isOrHas(target);\n    if (this._filterField && this._filterField.rendered) {\n      this._filterField.$container.toggleClass('focus-inside-widget', focusInsideWidget);\n    }\n    return focusInsideWidget;\n  }\n\n  _exitFilterField() {\n    this.widget.focus();\n  }\n\n  _cancelFilterField() {\n    this._resetFilterField();\n    this._exitFilterField();\n  }\n\n  _resetFilterField() {\n    if (this._filterField) {\n      this._filterField.setValue(null);\n    }\n  }\n\n  _removeFilterField() {\n    if (!this._filterField) {\n      return;\n    }\n    this.widget.$container.off('focusin', this._focusInHandler);\n    this.widget.$container.off('focusout', this._focusOutHandler);\n\n    this.widget.keyStrokeContext.unregisterKeyStroke(this._focusFilterFieldKeyStroke);\n    this._focusFilterFieldKeyStroke = null;\n\n    this._resetFilterField();\n    this._filterField.destroy();\n    this._filterField = null;\n\n    this.removeFilter(this._textFilter);\n    this._textFilter = null;\n  }\n\n  remove() {\n    this._removeFilterField();\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The filters to add.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {Filter[]} Returns the added filters.\n   */\n  addFilter(filter, applyFilter = true) {\n    let filtersToAdd = arrays.ensure(filter);\n    let filters = this._getFilters().slice(),\n      oldFilters = filters.slice();\n    filtersToAdd.forEach(f => {\n      if (this._hasFilter(filters, f)) {\n        return;\n      }\n      filters.push(f);\n    });\n    if (filters.length === this._getFilters().length) {\n      return [];\n    }\n    this._setFilters(filters, applyFilter);\n\n    let newFilters = this._getFilters().slice();\n    arrays.removeAll(newFilters, oldFilters);\n\n    return newFilters;\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The filters to remove.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {Filter[]} Returns the removed filters.\n   */\n  removeFilter(filter, applyFilter = true) {\n    let filtersToRemove = arrays.ensure(filter);\n    let filters = this._getFilters().slice(),\n      oldFilters = filters.slice();\n\n    let changed = false;\n    filtersToRemove.forEach(f => {\n      f = this._findFilter(filters, f);\n      changed = arrays.remove(filters, f) || changed;\n    });\n\n    if (!changed) {\n      return [];\n    }\n    this._setFilters(filters, applyFilter);\n\n    let newFilters = this._getFilters().slice();\n    arrays.removeAll(oldFilters, newFilters);\n\n    return oldFilters;\n  }\n\n  /**\n   * @param {Filter|function|(Filter|function)[]} filter The new filters.\n   * @param {boolean} applyFilter Whether to apply the filters after modifying the filter list or not. Default is true.\n   * @return {SetFiltersResult}\n   */\n  setFilters(filters, applyFilter = true) {\n    filters = arrays.ensure(filters);\n    this._addSyntheticFilters(filters);\n\n    if (this._getFilters().length === filters.length && filters.every(filter => this._hasFilter(this._getFilters(), filter))) {\n      return {\n        filtersAdded: [],\n        filtersRemoved: []\n      };\n    }\n\n    let oldFilters = this._getFilters().slice();\n\n    this._setFilters(filters, applyFilter);\n\n    let filtersAdded = this._getFilters().filter(filter => !this._findFilter(oldFilters, filter)),\n      filtersRemoved = oldFilters.filter(filter => !this._findFilter(this._getFilters(), filter));\n\n    return {\n      filtersAdded: filtersAdded,\n      filtersRemoved: filtersRemoved\n    };\n  }\n\n  _setFilters(filters, applyFilter = true) {\n    this.widget.setProperty('filters', filters.map(filter => {\n      if (objects.isFunction(filter)) {\n        return this._createFilterByFunction(filter);\n      }\n      return filter;\n    }));\n    if (applyFilter) {\n      this.filter();\n    }\n  }\n\n  _addSyntheticFilters(filters) {\n    this._getFilters().filter(filter => filter.synthetic)\n      .forEach(filter => this._addSyntheticFilter(filters, filter));\n\n    this._addSyntheticFilter(filters, this._textFilter);\n  }\n\n  _addSyntheticFilter(filters, syntheticFilter) {\n    if (!syntheticFilter || this._hasFilter(filters, syntheticFilter)) {\n      return;\n    }\n    filters.push(syntheticFilter);\n  }\n\n  _getFilters() {\n    return this.widget.filters;\n  }\n\n  _findFilter(filters, filter) {\n    if (objects.isFunction(filter)) {\n      return this._getFilterCreatedByFunction(filters, filter);\n    }\n    return arrays.find(filters, f => objects.equals(f, filter));\n  }\n\n  _getFilterCreatedByFunction(filters, filterFunc) {\n    return arrays.find(filters, filter => filter.createdByFunction && filter.accept === filterFunc);\n  }\n\n  _hasFilter(filters, filter) {\n    return !!this._findFilter(filters, filter);\n  }\n\n  _createFilterByFunction(filterFunc) {\n    return {\n      createdByFunction: true,\n      accept: filterFunc\n    };\n  }\n\n  filter() {\n    let result = this._filterElements(),\n      changed = result && (arrays.ensure(result.newlyHidden).length || arrays.ensure(result.newlyShown).length);\n\n    if (changed) {\n      this.widget.filteredElementsDirty = true;\n\n      let opts = {};\n      if (this._filterField) {\n        opts.textFilterText = this._filterField.displayText;\n      }\n      this.widget.updateFilteredElements(result, opts);\n    }\n\n    return result;\n  }\n\n  _filter() {\n    return this.applyFilters(this._getElementsForFiltering(), true);\n  }\n\n  applyFilters(elements, fullReset) {\n    if (this._getFilters().length === 0 && !scout.nvl(fullReset, false)) {\n      return;\n    }\n    let newlyShown = [];\n    let newlyHidden = [];\n    elements.forEach(element => {\n      if (this.applyFiltersForElement(element)) {\n        if (element.filterAccepted) {\n          newlyShown.push(element);\n        } else {\n          newlyHidden.push(element);\n        }\n      }\n    });\n\n    return {\n      newlyHidden: newlyHidden,\n      newlyShown: newlyShown\n    };\n  }\n\n  applyFiltersForElement(element) {\n    if (this.elementAcceptedByFilters(element)) {\n      if (!element.filterAccepted) {\n        element.setFilterAccepted(true);\n        return true;\n      }\n    } else if (element.filterAccepted) {\n      element.setFilterAccepted(false);\n      return true;\n    }\n    return false;\n  }\n\n  elementAcceptedByFilters(element) {\n    return this._getFilters().every(filter => filter.accept(element));\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAAO,UAAU;AAC/H,OAAOC,yBAAyB,MAAM,wCAAwC;AAE9E,eAAe,MAAMC,aAAa,SAASF,aAAa,CAAC;EACvD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE;AACF;AACA;EACEG,WAAW,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IAEd,IAAIA,OAAO,CAACC,cAAc,EAAE;MAC1B,IAAI,CAACC,eAAe,GAAGF,OAAO,CAACC,cAAc;IAC/C,CAAC,MAAM;MACL,IAAI,CAACC,eAAe,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;MAC9CZ,KAAK,CAACa,eAAe,CAAC,yBAAyB,EAAEL,OAAO,CAACM,uBAAuB,CAAC;MACjF,IAAI,CAACC,wBAAwB,GAAGP,OAAO,CAACM,uBAAuB;IACjE;IACA,IAAI,CAACE,eAAe,GAAGR,OAAO,CAACS,cAAc,KAAKC,OAAO,IAAIC,CAAC,CAACD,OAAO,CAAC,CAACE,IAAI,EAAE,CAAC;IAE/E,IAAIZ,OAAO,CAACa,gBAAgB,EAAE;MAC5BrB,KAAK,CAACa,eAAe,CAAC,sBAAsB,EAAEL,OAAO,CAACc,oBAAoB,CAAC;MAC3E,IAAI,CAACC,iBAAiB,GAAGf,OAAO,CAACa,gBAAgB;MACjD,IAAI,CAACG,qBAAqB,GAAGhB,OAAO,CAACc,oBAAoB;IAC3D,CAAC,MAAM;MACL,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACE,wBAAwB,CAACb,IAAI,CAAC,IAAI,CAAC;MACjE,IAAI,CAACY,qBAAqB,GAAG,IAAI,CAACE,4BAA4B,CAACd,IAAI,CAAC,IAAI,CAAC;IAC3E;IAEA,IAAI,CAACe,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,qCAAqC,GAAG,IAAI,CAACC,gCAAgC,CAACjB,IAAI,CAAC,IAAI,CAAC;IAC7F,IAAI,CAACkB,eAAe,GAAG,IAAI,CAACC,UAAU,CAACnB,IAAI,CAAC,IAAI,CAAC;IACjD,IAAI,CAACoB,gBAAgB,GAAG,IAAI,CAACC,WAAW,CAACrB,IAAI,CAAC,IAAI,CAAC;IAEnD,IAAI,CAACsB,0BAA0B,GAAG,IAAI;IACtC,IAAI,CAACC,2BAA2B,GAAG,IAAI;IACvC,IAAI,CAACC,yBAAyB,GAAG,IAAI;IAErC,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAZ,wBAAwB,GAAG;IACzB,OAAO;MACLa,YAAY,EAAE,IAAI;MAClBC,MAAM,EAAErB,OAAO,IAAI;QACjB,IAAIjB,OAAO,CAACuC,KAAK,CAAC,IAAI,CAACH,WAAW,CAACC,YAAY,CAAC,IAAI,CAAC,IAAI,CAACG,MAAM,CAACC,wBAAwB,EAAE,EAAE;UAC3F,OAAO,IAAI;QACb;QACA,IAAItB,IAAI,GAAG,IAAI,CAACJ,eAAe,CAACE,OAAO,CAAC;QACxC,IAAIjB,OAAO,CAACuC,KAAK,CAACpB,IAAI,CAAC,EAAE;UACvB,OAAO,KAAK;QACd;QACA,OAAOnB,OAAO,CAAC0C,QAAQ,CAACvB,IAAI,CAACwB,WAAW,EAAE,EAAE,IAAI,CAACP,WAAW,CAACC,YAAY,CAACM,WAAW,EAAE,CAAC;MAC1F;IACF,CAAC;EACH;EAEAlB,4BAA4B,CAACmB,MAAM,EAAEzB,IAAI,EAAE;IACzC,IAAIrB,OAAO,CAAC+C,MAAM,CAACD,MAAM,CAACP,YAAY,EAAElB,IAAI,CAAC,EAAE;MAC7C,OAAO,KAAK;IACd;IACAyB,MAAM,CAACP,YAAY,GAAGlB,IAAI;IAC1B,OAAO,IAAI;EACb;EAEA2B,iBAAiB,GAAG;IAClB,IAAI,IAAI,CAACN,MAAM,CAACC,wBAAwB,EAAE,EAAE;MAC1C,IAAI,CAACM,kBAAkB,EAAE;IAC3B,CAAC,MAAM;MACL,IAAI,CAACC,kBAAkB,EAAE;IAC3B;EACF;EAEAD,kBAAkB,GAAG;IACnB,IAAI,CAACE,iBAAiB,EAAE;IACxB,IAAI,CAACvB,YAAY,GAAG3B,KAAK,CAACmD,MAAM,CAAC,aAAa,EAAE;MAC9CC,MAAM,EAAE,IAAI,CAACX,MAAM;MACnBY,KAAK,EAAE,IAAI,CAACZ,MAAM,CAACa,OAAO,CAAClC,IAAI,CAAC,WAAW,CAAC;MAC5CmC,YAAY,EAAE,KAAK;MACnBC,oBAAoB,EAAE,KAAK;MAC3BC,QAAQ,EAAE,oBAAoB;MAC9BC,UAAU,EAAE/D,SAAS,CAACgE,UAAU,CAACC,OAAO;MACxCC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE3D,UAAU,CAAC4D,SAAS,CAACC,MAAM;MACtCC,yBAAyB,EAAE,IAAI;MAC/BC,mBAAmB,EAAE;IACvB,CAAC,CAAC;IACF,IAAI,CAACvC,YAAY,CAACwC,MAAM,CAAC,IAAI,CAACC,UAAU,CAAC;IAEzC,IAAI,CAACzC,YAAY,CAAC0C,MAAM,CAACC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAE7C,IAAI,CAAC,IAAI,CAAC7B,MAAM,CAAC8B,QAAQ,EAAE;MACzB,IAAI,CAAC9B,MAAM,CAACa,OAAO,CAACkB,eAAe,CAACC,4BAA4B,CAAC,IAAI,CAACC,iCAAiC,CAAC9D,IAAI,CAAC,IAAI,CAAC,CAAC;IACrH,CAAC,MAAM;MACL,IAAI,CAAC8D,iCAAiC,EAAE;IAC1C;IAEA,IAAI,CAACrC,WAAW,GAAG,IAAI,CAACd,iBAAiB,EAAE;IAC3C,IAAI,CAACc,WAAW,CAACsC,SAAS,GAAG,IAAI;IACjC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACvC,WAAW,CAAC;IAEhC,IAAI,CAACV,YAAY,CAACkD,EAAE,CAAC,4BAA4B,EAAE,IAAI,CAACjD,qCAAqC,CAAC;IAC9F,IAAI,CAACa,MAAM,CAAC2B,UAAU,CAACS,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC/C,eAAe,CAAC;IAC1D,IAAI,CAACW,MAAM,CAAC2B,UAAU,CAACS,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC7C,gBAAgB,CAAC;IAE5D,IAAI,CAACS,MAAM,CAAC2B,UAAU,CAACU,IAAI,CAAC,cAAc,EAAE,IAAI,CAACnD,YAAY,CAAC0C,MAAM,CAAC;IACrE,IAAI,CAACnC,0BAA0B,GAAG,IAAI7B,yBAAyB,CAAC,IAAI,CAACoC,MAAM,CAAC;IAC5E,IAAI,CAACA,MAAM,CAACsC,gBAAgB,CAACC,iBAAiB,CAAC,IAAI,CAAC9C,0BAA0B,CAAC;IAE/E,IAAI,CAACC,2BAA2B,GAAG,IAAIrC,SAAS,EAAE;IAClD,IAAI,CAACqC,2BAA2B,CAAC8C,KAAK,GAAG,IAAI,CAACtD,YAAY;IAC1D,IAAI,CAACQ,2BAA2B,CAAC+C,KAAK,GAAG,CAACrF,IAAI,CAACsF,GAAG,CAAC;IACnD,IAAI,CAAChD,2BAA2B,CAACiD,eAAe,GAAG,IAAI;IACvD,IAAI,CAACjD,2BAA2B,CAACkD,cAAc,CAACC,MAAM,GAAG1F,MAAM,CAAC2F,KAAK;IACrE,IAAI,CAACpD,2BAA2B,CAACqD,MAAM,GAAG,IAAI,CAACC,kBAAkB,CAAC7E,IAAI,CAAC,IAAI,CAAC;IAE5E,IAAI,CAACe,YAAY,CAACoD,gBAAgB,CAACC,iBAAiB,CAAC,IAAI,CAAC7C,2BAA2B,CAAC;IAEtF,IAAI,CAACC,yBAAyB,GAAG,IAAItC,SAAS,EAAE;IAChD,IAAI,CAACsC,yBAAyB,CAAC6C,KAAK,GAAG,IAAI,CAACtD,YAAY;IACxD,IAAI,CAACS,yBAAyB,CAAC8C,KAAK,GAAG,CAACrF,IAAI,CAAC6F,KAAK,CAAC;IACnD,IAAI,CAACtD,yBAAyB,CAACgD,eAAe,GAAG,IAAI;IACrD,IAAI,CAAChD,yBAAyB,CAACiD,cAAc,CAACC,MAAM,GAAG1F,MAAM,CAAC2F,KAAK;IACnE,IAAI,CAACnD,yBAAyB,CAACoD,MAAM,GAAG,IAAI,CAACG,gBAAgB,CAAC/E,IAAI,CAAC,IAAI,CAAC;IAExE,IAAI,CAACe,YAAY,CAACoD,gBAAgB,CAACC,iBAAiB,CAAC,IAAI,CAAC5C,yBAAyB,CAAC;EACtF;EAEAsC,iCAAiC,GAAG;IAClC,IAAI,CAAC,IAAI,CAAC/C,YAAY,IAAI,CAAC,IAAI,CAACA,YAAY,CAAC4C,QAAQ,EAAE;MACrD;IACF;IACA,IAAIqB,KAAK,GAAG1F,MAAM,CAAC2F,6BAA6B,CAAC,IAAI,CAAClE,YAAY,CAACyC,UAAU,CAAC;MAC5E0B,SAAS,GAAG3E,CAAC,CAAC4E,MAAM,CAAC,IAAI,EAAE;QAACC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAC,CAAC,EAAEjG,MAAM,CAACkG,GAAG,CAACR,KAAK,CAAC,CAAC;MACpFS,kBAAkB,GAAG,OAAO,GAAGP,SAAS,CAACE,GAAG,GAAG,IAAI,GAAGF,SAAS,CAACG,KAAK,GAAG,IAAI,GAAGH,SAAS,CAACI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;MAChHI,kBAAkB,GAAG,OAAO,GAAGR,SAAS,CAACE,GAAG,GAAG,IAAI,GAAGF,SAAS,CAACG,KAAK,GAAG,IAAI,GAAGH,SAAS,CAACI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;IAClH,IAAI,CAACvE,YAAY,CAACyC,UAAU,CAACmC,GAAG,CAAC,iCAAiC,EAAEX,KAAK,CAAC;IAC1E,IAAI,CAACjE,YAAY,CAACyC,UAAU,CAACmC,GAAG,CAAC,gDAAgD,EAAEF,kBAAkB,CAAC;IACtG,IAAI,CAAC1E,YAAY,CAACyC,UAAU,CAACmC,GAAG,CAAC,gDAAgD,EAAED,kBAAkB,CAAC;EACxG;EAEAzE,gCAAgC,CAAC2E,KAAK,EAAE;IACtC,IAAI,IAAI,CAAC7E,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC4C,QAAQ,EAAE;MACnD,IAAI,CAAC5C,YAAY,CAACyC,UAAU,CAACqC,WAAW,CAAC,OAAO,EAAE,CAACD,KAAK,CAACE,QAAQ,CAAC;IACpE;IACA,IAAI,CAAC,IAAI,CAAClF,qBAAqB,CAAC,IAAI,CAACa,WAAW,EAAEmE,KAAK,CAACE,QAAQ,CAAC,EAAE;MACjE;IACF;IACA,IAAI,CAAC7D,MAAM,EAAE;EACf;EAEAd,UAAU,CAACyE,KAAK,EAAE;IAChB,IAAI,CAACG,wBAAwB,CAACH,KAAK,CAACI,MAAM,CAAC;EAC7C;EAEA3E,WAAW,CAACuE,KAAK,EAAE;IACjB,IAAI,CAACG,wBAAwB,CAACH,KAAK,CAACK,aAAa,CAAC;EACpD;EAEAF,wBAAwB,CAACC,MAAM,EAAE;IAC/B,IAAIE,iBAAiB,GAAG,IAAI,CAACrE,MAAM,CAAC2B,UAAU,CAAC2C,OAAO,CAACH,MAAM,CAAC;IAC9D,IAAI,IAAI,CAACjF,YAAY,IAAI,IAAI,CAACA,YAAY,CAAC4C,QAAQ,EAAE;MACnD,IAAI,CAAC5C,YAAY,CAACyC,UAAU,CAACqC,WAAW,CAAC,qBAAqB,EAAEK,iBAAiB,CAAC;IACpF;IACA,OAAOA,iBAAiB;EAC1B;EAEAnB,gBAAgB,GAAG;IACjB,IAAI,CAAClD,MAAM,CAACuE,KAAK,EAAE;EACrB;EAEAvB,kBAAkB,GAAG;IACnB,IAAI,CAACwB,iBAAiB,EAAE;IACxB,IAAI,CAACtB,gBAAgB,EAAE;EACzB;EAEAsB,iBAAiB,GAAG;IAClB,IAAI,IAAI,CAACtF,YAAY,EAAE;MACrB,IAAI,CAACA,YAAY,CAACuF,QAAQ,CAAC,IAAI,CAAC;IAClC;EACF;EAEAjE,kBAAkB,GAAG;IACnB,IAAI,CAAC,IAAI,CAACtB,YAAY,EAAE;MACtB;IACF;IACA,IAAI,CAACc,MAAM,CAAC2B,UAAU,CAAC+C,GAAG,CAAC,SAAS,EAAE,IAAI,CAACrF,eAAe,CAAC;IAC3D,IAAI,CAACW,MAAM,CAAC2B,UAAU,CAAC+C,GAAG,CAAC,UAAU,EAAE,IAAI,CAACnF,gBAAgB,CAAC;IAE7D,IAAI,CAACS,MAAM,CAACsC,gBAAgB,CAACqC,mBAAmB,CAAC,IAAI,CAAClF,0BAA0B,CAAC;IACjF,IAAI,CAACA,0BAA0B,GAAG,IAAI;IAEtC,IAAI,CAAC+E,iBAAiB,EAAE;IACxB,IAAI,CAACtF,YAAY,CAAC0F,OAAO,EAAE;IAC3B,IAAI,CAAC1F,YAAY,GAAG,IAAI;IAExB,IAAI,CAAC2F,YAAY,CAAC,IAAI,CAACjF,WAAW,CAAC;IACnC,IAAI,CAACA,WAAW,GAAG,IAAI;EACzB;EAEAkF,MAAM,GAAG;IACP,IAAI,CAACtE,kBAAkB,EAAE;EAC3B;;EAEA;AACF;AACA;AACA;AACA;EACE2B,SAAS,CAAC/B,MAAM,EAAsB;IAAA,IAApB2E,WAAW,uEAAG,IAAI;IAClC,IAAIC,YAAY,GAAG/H,MAAM,CAACgI,MAAM,CAAC7E,MAAM,CAAC;IACxC,IAAI8E,OAAO,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,KAAK,EAAE;MACtCC,UAAU,GAAGH,OAAO,CAACE,KAAK,EAAE;IAC9BJ,YAAY,CAACM,OAAO,CAACC,CAAC,IAAI;MACxB,IAAI,IAAI,CAACC,UAAU,CAACN,OAAO,EAAEK,CAAC,CAAC,EAAE;QAC/B;MACF;MACAL,OAAO,CAACO,IAAI,CAACF,CAAC,CAAC;IACjB,CAAC,CAAC;IACF,IAAIL,OAAO,CAACQ,MAAM,KAAK,IAAI,CAACP,WAAW,EAAE,CAACO,MAAM,EAAE;MAChD,OAAO,EAAE;IACX;IACA,IAAI,CAACC,WAAW,CAACT,OAAO,EAAEH,WAAW,CAAC;IAEtC,IAAIa,UAAU,GAAG,IAAI,CAACT,WAAW,EAAE,CAACC,KAAK,EAAE;IAC3CnI,MAAM,CAAC4I,SAAS,CAACD,UAAU,EAAEP,UAAU,CAAC;IAExC,OAAOO,UAAU;EACnB;;EAEA;AACF;AACA;AACA;AACA;EACEf,YAAY,CAACzE,MAAM,EAAsB;IAAA,IAApB2E,WAAW,uEAAG,IAAI;IACrC,IAAIe,eAAe,GAAG7I,MAAM,CAACgI,MAAM,CAAC7E,MAAM,CAAC;IAC3C,IAAI8E,OAAO,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,KAAK,EAAE;MACtCC,UAAU,GAAGH,OAAO,CAACE,KAAK,EAAE;IAE9B,IAAIW,OAAO,GAAG,KAAK;IACnBD,eAAe,CAACR,OAAO,CAACC,CAAC,IAAI;MAC3BA,CAAC,GAAG,IAAI,CAACS,WAAW,CAACd,OAAO,EAAEK,CAAC,CAAC;MAChCQ,OAAO,GAAG9I,MAAM,CAAC6H,MAAM,CAACI,OAAO,EAAEK,CAAC,CAAC,IAAIQ,OAAO;IAChD,CAAC,CAAC;IAEF,IAAI,CAACA,OAAO,EAAE;MACZ,OAAO,EAAE;IACX;IACA,IAAI,CAACJ,WAAW,CAACT,OAAO,EAAEH,WAAW,CAAC;IAEtC,IAAIa,UAAU,GAAG,IAAI,CAACT,WAAW,EAAE,CAACC,KAAK,EAAE;IAC3CnI,MAAM,CAAC4I,SAAS,CAACR,UAAU,EAAEO,UAAU,CAAC;IAExC,OAAOP,UAAU;EACnB;;EAEA;AACF;AACA;AACA;AACA;EACEY,UAAU,CAACf,OAAO,EAAsB;IAAA,IAApBH,WAAW,uEAAG,IAAI;IACpCG,OAAO,GAAGjI,MAAM,CAACgI,MAAM,CAACC,OAAO,CAAC;IAChC,IAAI,CAACgB,oBAAoB,CAAChB,OAAO,CAAC;IAElC,IAAI,IAAI,CAACC,WAAW,EAAE,CAACO,MAAM,KAAKR,OAAO,CAACQ,MAAM,IAAIR,OAAO,CAACiB,KAAK,CAAC/F,MAAM,IAAI,IAAI,CAACoF,UAAU,CAAC,IAAI,CAACL,WAAW,EAAE,EAAE/E,MAAM,CAAC,CAAC,EAAE;MACxH,OAAO;QACLgG,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE;MAClB,CAAC;IACH;IAEA,IAAIhB,UAAU,GAAG,IAAI,CAACF,WAAW,EAAE,CAACC,KAAK,EAAE;IAE3C,IAAI,CAACO,WAAW,CAACT,OAAO,EAAEH,WAAW,CAAC;IAEtC,IAAIqB,YAAY,GAAG,IAAI,CAACjB,WAAW,EAAE,CAAC/E,MAAM,CAACA,MAAM,IAAI,CAAC,IAAI,CAAC4F,WAAW,CAACX,UAAU,EAAEjF,MAAM,CAAC,CAAC;MAC3FiG,cAAc,GAAGhB,UAAU,CAACjF,MAAM,CAACA,MAAM,IAAI,CAAC,IAAI,CAAC4F,WAAW,CAAC,IAAI,CAACb,WAAW,EAAE,EAAE/E,MAAM,CAAC,CAAC;IAE7F,OAAO;MACLgG,YAAY,EAAEA,YAAY;MAC1BC,cAAc,EAAEA;IAClB,CAAC;EACH;EAEAV,WAAW,CAACT,OAAO,EAAsB;IAAA,IAApBH,WAAW,uEAAG,IAAI;IACrC,IAAI,CAAC/E,MAAM,CAACsG,WAAW,CAAC,SAAS,EAAEpB,OAAO,CAACqB,GAAG,CAACnG,MAAM,IAAI;MACvD,IAAI9C,OAAO,CAACkJ,UAAU,CAACpG,MAAM,CAAC,EAAE;QAC9B,OAAO,IAAI,CAACqG,uBAAuB,CAACrG,MAAM,CAAC;MAC7C;MACA,OAAOA,MAAM;IACf,CAAC,CAAC,CAAC;IACH,IAAI2E,WAAW,EAAE;MACf,IAAI,CAAC3E,MAAM,EAAE;IACf;EACF;EAEA8F,oBAAoB,CAAChB,OAAO,EAAE;IAC5B,IAAI,CAACC,WAAW,EAAE,CAAC/E,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC8B,SAAS,CAAC,CAClDoD,OAAO,CAAClF,MAAM,IAAI,IAAI,CAACsG,mBAAmB,CAACxB,OAAO,EAAE9E,MAAM,CAAC,CAAC;IAE/D,IAAI,CAACsG,mBAAmB,CAACxB,OAAO,EAAE,IAAI,CAACtF,WAAW,CAAC;EACrD;EAEA8G,mBAAmB,CAACxB,OAAO,EAAEyB,eAAe,EAAE;IAC5C,IAAI,CAACA,eAAe,IAAI,IAAI,CAACnB,UAAU,CAACN,OAAO,EAAEyB,eAAe,CAAC,EAAE;MACjE;IACF;IACAzB,OAAO,CAACO,IAAI,CAACkB,eAAe,CAAC;EAC/B;EAEAxB,WAAW,GAAG;IACZ,OAAO,IAAI,CAACnF,MAAM,CAACkF,OAAO;EAC5B;EAEAc,WAAW,CAACd,OAAO,EAAE9E,MAAM,EAAE;IAC3B,IAAI9C,OAAO,CAACkJ,UAAU,CAACpG,MAAM,CAAC,EAAE;MAC9B,OAAO,IAAI,CAACwG,2BAA2B,CAAC1B,OAAO,EAAE9E,MAAM,CAAC;IAC1D;IACA,OAAOnD,MAAM,CAAC4J,IAAI,CAAC3B,OAAO,EAAEK,CAAC,IAAIjI,OAAO,CAAC+C,MAAM,CAACkF,CAAC,EAAEnF,MAAM,CAAC,CAAC;EAC7D;EAEAwG,2BAA2B,CAAC1B,OAAO,EAAE4B,UAAU,EAAE;IAC/C,OAAO7J,MAAM,CAAC4J,IAAI,CAAC3B,OAAO,EAAE9E,MAAM,IAAIA,MAAM,CAAC2G,iBAAiB,IAAI3G,MAAM,CAACN,MAAM,KAAKgH,UAAU,CAAC;EACjG;EAEAtB,UAAU,CAACN,OAAO,EAAE9E,MAAM,EAAE;IAC1B,OAAO,CAAC,CAAC,IAAI,CAAC4F,WAAW,CAACd,OAAO,EAAE9E,MAAM,CAAC;EAC5C;EAEAqG,uBAAuB,CAACK,UAAU,EAAE;IAClC,OAAO;MACLC,iBAAiB,EAAE,IAAI;MACvBjH,MAAM,EAAEgH;IACV,CAAC;EACH;EAEA1G,MAAM,GAAG;IACP,IAAI4G,MAAM,GAAG,IAAI,CAAC/I,eAAe,EAAE;MACjC8H,OAAO,GAAGiB,MAAM,KAAK/J,MAAM,CAACgI,MAAM,CAAC+B,MAAM,CAACC,WAAW,CAAC,CAACvB,MAAM,IAAIzI,MAAM,CAACgI,MAAM,CAAC+B,MAAM,CAACE,UAAU,CAAC,CAACxB,MAAM,CAAC;IAE3G,IAAIK,OAAO,EAAE;MACX,IAAI,CAAC/F,MAAM,CAACmH,qBAAqB,GAAG,IAAI;MAExC,IAAIC,IAAI,GAAG,CAAC,CAAC;MACb,IAAI,IAAI,CAAClI,YAAY,EAAE;QACrBkI,IAAI,CAACC,cAAc,GAAG,IAAI,CAACnI,YAAY,CAACoI,WAAW;MACrD;MACA,IAAI,CAACtH,MAAM,CAACuH,sBAAsB,CAACP,MAAM,EAAEI,IAAI,CAAC;IAClD;IAEA,OAAOJ,MAAM;EACf;EAEA9I,OAAO,GAAG;IACR,OAAO,IAAI,CAACsJ,YAAY,CAAC,IAAI,CAAClJ,wBAAwB,EAAE,EAAE,IAAI,CAAC;EACjE;EAEAkJ,YAAY,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAChC,IAAI,IAAI,CAACvC,WAAW,EAAE,CAACO,MAAM,KAAK,CAAC,IAAI,CAACnI,KAAK,CAACoK,GAAG,CAACD,SAAS,EAAE,KAAK,CAAC,EAAE;MACnE;IACF;IACA,IAAIR,UAAU,GAAG,EAAE;IACnB,IAAID,WAAW,GAAG,EAAE;IACpBQ,QAAQ,CAACnC,OAAO,CAAC7G,OAAO,IAAI;MAC1B,IAAI,IAAI,CAACmJ,sBAAsB,CAACnJ,OAAO,CAAC,EAAE;QACxC,IAAIA,OAAO,CAACoJ,cAAc,EAAE;UAC1BX,UAAU,CAACzB,IAAI,CAAChH,OAAO,CAAC;QAC1B,CAAC,MAAM;UACLwI,WAAW,CAACxB,IAAI,CAAChH,OAAO,CAAC;QAC3B;MACF;IACF,CAAC,CAAC;IAEF,OAAO;MACLwI,WAAW,EAAEA,WAAW;MACxBC,UAAU,EAAEA;IACd,CAAC;EACH;EAEAU,sBAAsB,CAACnJ,OAAO,EAAE;IAC9B,IAAI,IAAI,CAACqJ,wBAAwB,CAACrJ,OAAO,CAAC,EAAE;MAC1C,IAAI,CAACA,OAAO,CAACoJ,cAAc,EAAE;QAC3BpJ,OAAO,CAACsJ,iBAAiB,CAAC,IAAI,CAAC;QAC/B,OAAO,IAAI;MACb;IACF,CAAC,MAAM,IAAItJ,OAAO,CAACoJ,cAAc,EAAE;MACjCpJ,OAAO,CAACsJ,iBAAiB,CAAC,KAAK,CAAC;MAChC,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAD,wBAAwB,CAACrJ,OAAO,EAAE;IAChC,OAAO,IAAI,CAAC0G,WAAW,EAAE,CAACgB,KAAK,CAAC/F,MAAM,IAAIA,MAAM,CAACN,MAAM,CAACrB,OAAO,CAAC,CAAC;EACnE;AACF"},"metadata":{},"sourceType":"module"}