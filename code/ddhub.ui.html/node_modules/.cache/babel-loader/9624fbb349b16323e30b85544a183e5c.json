{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { comparators, EventSupport, strings, TableMatrix, TableUserFilter } from '../../index';\nexport default class ColumnUserFilter extends TableUserFilter {\n  constructor() {\n    super();\n    this.filterType = ColumnUserFilter.TYPE;\n    this.events = new EventSupport();\n\n    /**\n     * This property is used to check early whether or not this filter can produce filter-fields.\n     * Set this property to true in your sub-class, if it creates filter fields.\n     */\n    this.hasFilterFields = false;\n\n    /**\n     * array of (normalized) key, text composite\n     */\n    this.availableValues = [];\n\n    /**\n     * array of (normalized) keys\n     */\n    this.selectedValues = [];\n  }\n  axisGroup() {\n    return TableMatrix.NumberGroup.COUNT;\n  }\n  calculate() {\n    let containsSelectedValue, reorderAxis;\n    this.matrix = new TableMatrix(this.table, this.session);\n    this.matrix.addData(this.column, TableMatrix.NumberGroup.COUNT);\n    this.xAxis = this.matrix.addAxis(this.column, this.axisGroup());\n    let cube = this.matrix.calculate();\n    this.selectedValues.forEach(function (selectedValue) {\n      containsSelectedValue = false;\n      this.xAxis.some(key => {\n        if (this.xAxis.keyToDeterministicKey(key) === selectedValue) {\n          containsSelectedValue = true;\n          return true;\n        }\n        return false;\n      }, this);\n      if (!containsSelectedValue) {\n        this.xAxis.push(this.xAxis.deterministicKeyToKey(selectedValue));\n        reorderAxis = true;\n      }\n    }, this);\n    if (reorderAxis) {\n      this.xAxis.reorder();\n    }\n    let text, deterministicKey, cubeValue, iconId;\n    this.availableValues = [];\n    this.xAxis.forEach(function (key) {\n      deterministicKey = this.xAxis.keyToDeterministicKey(key);\n      text = this.xAxis.format(key);\n      iconId = null;\n      if (key !== null && this.xAxis.textIsIcon) {\n        // Only display icon if textIsIcon (still display empty text if key is null)\n        iconId = text;\n        text = null;\n      }\n      cubeValue = cube.getValue([key]);\n      this.availableValues.push({\n        key: deterministicKey,\n        text: text,\n        iconId: iconId,\n        htmlEnabled: false,\n        cssClass: null,\n        count: cubeValue ? cubeValue[0] : 0\n      });\n    }, this);\n  }\n\n  /**\n   * @override TableUserFilter.js\n   */\n  createFilterAddedEventData() {\n    let data = super.createFilterAddedEventData();\n    data.columnId = this.column.id;\n    data.selectedValues = this.selectedValues;\n    return data;\n  }\n  createFilterRemovedEventData() {\n    let data = super.createFilterRemovedEventData();\n    data.columnId = this.column.id;\n    return data;\n  }\n  createLabel() {\n    if (this.column.headerHtmlEnabled) {\n      let plainText = strings.plainText(this.column.text);\n      return plainText.replace(/\\n/g, ' ');\n    }\n    return this.column.text || '';\n  }\n  createKey() {\n    return this.column.id;\n  }\n  accept(row) {\n    if (!this.xAxis) {\n      // Lazy calculation. It is not possible on init, because the table is not rendered yet.\n      this.calculate();\n    }\n    let acceptByTable = true,\n      acceptByFields = true,\n      value = this.column.cellValueOrTextForCalculation(row),\n      deterministicKey = this.xAxis.normDeterministic(value);\n    if (this.tableFilterActive()) {\n      acceptByTable = this.selectedValues.indexOf(deterministicKey) > -1;\n    }\n    if (this.fieldsFilterActive()) {\n      acceptByFields = this.acceptByFields(value, deterministicKey, row);\n    }\n    return acceptByTable && acceptByFields;\n  }\n  filterActive() {\n    return this.tableFilterActive() || this.fieldsFilterActive();\n  }\n  tableFilterActive() {\n    return this.selectedValues.length > 0;\n  }\n  triggerFilterFieldsChanged(event) {\n    this.events.trigger('filterFieldsChanged', event);\n  }\n  on(type, func) {\n    this.events.on(type, func);\n  }\n  off(type, func) {\n    this.events.off(type, func);\n  }\n\n  /**\n   * Returns whether or not the given key is accepted by the filter-fields in their current state.\n   * The default impl. returns true.\n   */\n  acceptByFields(key, normKey, row) {\n    return true;\n  }\n\n  /**\n   * Returns whether or not filter-fields have an effect on the column-filter in their current state.\n   * The default impl. returns false.\n   */\n  fieldsFilterActive() {\n    return false;\n  }\n\n  /**\n   * Adds filter fields for this type of column filter.\n   * The default impl. adds no fields.\n   *\n   * @param groupBox FilterFieldsGroupBox\n   */\n  addFilterFields(groupBox) {\n    // NOP\n  }\n\n  /**\n   * Called after filter group-box has been rendered. Gives the filter impl. a chance to\n   * modify the rendered fields. The default impl. does nothing.\n   */\n  modifyFilterFields() {\n    // NOP\n  }\n\n  /**\n   * Returns the title displayed above the filter fields.\n   * The default impl. returns a null value, which means the title is not displayed.\n   */\n  filterFieldsTitle() {\n    return null;\n  }\n  createComparator() {\n    return comparators.NUMERIC;\n  }\n}\n_defineProperty(ColumnUserFilter, \"TYPE\", 'column');","map":{"version":3,"names":["comparators","EventSupport","strings","TableMatrix","TableUserFilter","ColumnUserFilter","constructor","filterType","TYPE","events","hasFilterFields","availableValues","selectedValues","axisGroup","NumberGroup","COUNT","calculate","containsSelectedValue","reorderAxis","matrix","table","session","addData","column","xAxis","addAxis","cube","forEach","selectedValue","some","key","keyToDeterministicKey","push","deterministicKeyToKey","reorder","text","deterministicKey","cubeValue","iconId","format","textIsIcon","getValue","htmlEnabled","cssClass","count","createFilterAddedEventData","data","columnId","id","createFilterRemovedEventData","createLabel","headerHtmlEnabled","plainText","replace","createKey","accept","row","acceptByTable","acceptByFields","value","cellValueOrTextForCalculation","normDeterministic","tableFilterActive","indexOf","fieldsFilterActive","filterActive","length","triggerFilterFieldsChanged","event","trigger","on","type","func","off","normKey","addFilterFields","groupBox","modifyFilterFields","filterFieldsTitle","createComparator","NUMERIC"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/userfilter/ColumnUserFilter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {comparators, EventSupport, strings, TableMatrix, TableUserFilter} from '../../index';\n\nexport default class ColumnUserFilter extends TableUserFilter {\n\n  constructor() {\n    super();\n    this.filterType = ColumnUserFilter.TYPE;\n    this.events = new EventSupport();\n\n    /**\n     * This property is used to check early whether or not this filter can produce filter-fields.\n     * Set this property to true in your sub-class, if it creates filter fields.\n     */\n    this.hasFilterFields = false;\n\n    /**\n     * array of (normalized) key, text composite\n     */\n    this.availableValues = [];\n\n    /**\n     * array of (normalized) keys\n     */\n    this.selectedValues = [];\n  }\n\n  static TYPE = 'column';\n\n  axisGroup() {\n    return TableMatrix.NumberGroup.COUNT;\n  }\n\n  calculate() {\n    let containsSelectedValue, reorderAxis;\n\n    this.matrix = new TableMatrix(this.table, this.session);\n    this.matrix.addData(this.column, TableMatrix.NumberGroup.COUNT);\n    this.xAxis = this.matrix.addAxis(this.column, this.axisGroup());\n    let cube = this.matrix.calculate();\n\n    this.selectedValues.forEach(function(selectedValue) {\n      containsSelectedValue = false;\n      this.xAxis.some(key => {\n        if (this.xAxis.keyToDeterministicKey(key) === selectedValue) {\n          containsSelectedValue = true;\n          return true;\n        }\n        return false;\n      }, this);\n\n      if (!containsSelectedValue) {\n        this.xAxis.push(this.xAxis.deterministicKeyToKey(selectedValue));\n        reorderAxis = true;\n      }\n    }, this);\n\n    if (reorderAxis) {\n      this.xAxis.reorder();\n    }\n\n    let text, deterministicKey, cubeValue, iconId;\n    this.availableValues = [];\n    this.xAxis.forEach(function(key) {\n      deterministicKey = this.xAxis.keyToDeterministicKey(key);\n      text = this.xAxis.format(key);\n      iconId = null;\n      if (key !== null && this.xAxis.textIsIcon) {\n        // Only display icon if textIsIcon (still display empty text if key is null)\n        iconId = text;\n        text = null;\n      }\n      cubeValue = cube.getValue([key]);\n      this.availableValues.push({\n        key: deterministicKey,\n        text: text,\n        iconId: iconId,\n        htmlEnabled: false,\n        cssClass: null,\n        count: cubeValue ? cubeValue[0] : 0\n      });\n    }, this);\n  }\n\n  /**\n   * @override TableUserFilter.js\n   */\n  createFilterAddedEventData() {\n    let data = super.createFilterAddedEventData();\n    data.columnId = this.column.id;\n    data.selectedValues = this.selectedValues;\n    return data;\n  }\n\n  createFilterRemovedEventData() {\n    let data = super.createFilterRemovedEventData();\n    data.columnId = this.column.id;\n    return data;\n  }\n\n  createLabel() {\n    if (this.column.headerHtmlEnabled) {\n      let plainText = strings.plainText(this.column.text);\n      return plainText.replace(/\\n/g, ' ');\n    }\n    return this.column.text || '';\n  }\n\n  createKey() {\n    return this.column.id;\n  }\n\n  accept(row) {\n    if (!this.xAxis) {\n      // Lazy calculation. It is not possible on init, because the table is not rendered yet.\n      this.calculate();\n    }\n    let\n      acceptByTable = true,\n      acceptByFields = true,\n      value = this.column.cellValueOrTextForCalculation(row),\n      deterministicKey = this.xAxis.normDeterministic(value);\n\n    if (this.tableFilterActive()) {\n      acceptByTable = this.selectedValues.indexOf(deterministicKey) > -1;\n    }\n    if (this.fieldsFilterActive()) {\n      acceptByFields = this.acceptByFields(value, deterministicKey, row);\n    }\n\n    return acceptByTable && acceptByFields;\n  }\n\n  filterActive() {\n    return this.tableFilterActive() || this.fieldsFilterActive();\n  }\n\n  tableFilterActive() {\n    return this.selectedValues.length > 0;\n  }\n\n  triggerFilterFieldsChanged(event) {\n    this.events.trigger('filterFieldsChanged', event);\n  }\n\n  on(type, func) {\n    this.events.on(type, func);\n  }\n\n  off(type, func) {\n    this.events.off(type, func);\n  }\n\n  /**\n   * Returns whether or not the given key is accepted by the filter-fields in their current state.\n   * The default impl. returns true.\n   */\n  acceptByFields(key, normKey, row) {\n    return true;\n  }\n\n  /**\n   * Returns whether or not filter-fields have an effect on the column-filter in their current state.\n   * The default impl. returns false.\n   */\n  fieldsFilterActive() {\n    return false;\n  }\n\n  /**\n   * Adds filter fields for this type of column filter.\n   * The default impl. adds no fields.\n   *\n   * @param groupBox FilterFieldsGroupBox\n   */\n  addFilterFields(groupBox) {\n    // NOP\n  }\n\n  /**\n   * Called after filter group-box has been rendered. Gives the filter impl. a chance to\n   * modify the rendered fields. The default impl. does nothing.\n   */\n  modifyFilterFields() {\n    // NOP\n  }\n\n  /**\n   * Returns the title displayed above the filter fields.\n   * The default impl. returns a null value, which means the title is not displayed.\n   */\n  filterFieldsTitle() {\n    return null;\n  }\n\n  createComparator() {\n    return comparators.NUMERIC;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}