{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, FormField, graphics, GroupBox, HtmlComponent, HtmlEnvironment, MenuBarLayout, ResponsiveManager, scrollbars } from '../../../index';\nimport $ from 'jquery';\nexport default class GroupBoxLayout extends AbstractLayout {\n  constructor(groupBox) {\n    super();\n    this.groupBox = groupBox;\n    this._initDefaults();\n    this._htmlPropertyChangeHandler = this._onHtmlEnvironmentPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this._htmlPropertyChangeHandler);\n    this.groupBox.one('remove', () => {\n      HtmlEnvironment.get().off('propertyChange', this._htmlPropertyChangeHandler);\n    });\n  }\n  _initDefaults() {\n    this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n  _onHtmlEnvironmentPropertyChange() {\n    this._initDefaults();\n    this.groupBox.invalidateLayoutTree();\n  }\n  layout($container) {\n    let gbBodySize,\n      menuBarSize,\n      menuBarHeight = 0,\n      statusWidth = 0,\n      statusPosition = this.groupBox.statusPosition,\n      htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar = this._htmlMenuBar(),\n      tooltip = this.groupBox._tooltip(),\n      $header = this.groupBox.$header,\n      $title = this.groupBox.$title,\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n\n    // apply responsive transformations if necessary.\n    if (this.groupBox.responsive) {\n      ResponsiveManager.get().handleResponsive(this.groupBox, containerSize.width);\n    }\n    let $status = this._$status();\n    if ($status && $status.isVisible()) {\n      this._layoutStatus();\n      statusWidth = $status.outerWidth(true);\n    }\n\n    // Menu-bar\n    if (htmlMenuBar) {\n      if (this.groupBox.menuBarPosition === GroupBox.MenuBarPosition.TITLE) {\n        // position: TITLE\n        menuBarSize = this._updateHeaderMenuBar(htmlMenuBar, $header, $title, statusWidth);\n      } else {\n        // position: TOP and BOTTOM\n        menuBarSize = this._updateMenuBar(htmlMenuBar, containerSize, statusWidth);\n        menuBarHeight = menuBarSize.height;\n        setWidthForStatus($title);\n      }\n      htmlMenuBar.setSize(menuBarSize);\n    } else {\n      setWidthForStatus($title);\n    }\n    if (statusPosition !== FormField.StatusPosition.TOP) {\n      setWidthForStatus($header, statusWidth);\n    } else {\n      setWidthForStatus($header);\n    }\n    if (this.groupBox.notification) {\n      setWidthForStatus(this.groupBox.notification.$container, statusWidth);\n    }\n    gbBodySize = containerSize.subtract(htmlGbBody.margins());\n    gbBodySize.height -= this._headerHeight();\n    gbBodySize.height -= this._notificationHeight();\n    gbBodySize.height -= menuBarHeight;\n    $.log.isTraceEnabled() && $.log.trace('(GroupBoxLayout#layout) gbBodySize=' + gbBodySize);\n    htmlGbBody.setSize(gbBodySize);\n\n    // Make sure tooltip is at correct position after layouting, if there is one\n    if (tooltip && tooltip.rendered) {\n      tooltip.position();\n    }\n    if (htmlGbBody.scrollable || this.groupBox.bodyLayoutConfig.minWidth > 0) {\n      scrollbars.update(htmlGbBody.$comp);\n    }\n\n    // Make $element wider, so status is on the left\n    function setWidthForStatus($element, statusWidth) {\n      if (statusWidth) {\n        let marginX = $element.cssMarginX() + statusWidth;\n        $element.cssWidth('calc(100% - ' + marginX + 'px)');\n      } else {\n        $element.cssWidth('');\n      }\n    }\n  }\n  _updateMenuBar(htmlMenuBar, containerSize, statusWidth) {\n    let $groupBox = this.groupBox.$container;\n    let $menuBar = htmlMenuBar.$comp;\n    if (!this.groupBox.mainBox && $groupBox.hasClass('menubar-position-top') && $groupBox.hasClass('has-scroll-shadow-top') || $groupBox.hasClass('menubar-position-bottom') && $groupBox.hasClass('has-scroll-shadow-bottom')) {\n      // Replace margin resp. status space with a padding so that menubar line is drawn as width as the shadow\n      // The left margin (mandatory indicator space) could actually be removed by css,\n      // but doing it here does not require any css adjustments for customized group boxes.\n      let margin = graphics.margins($menuBar);\n      if (margin.left > 0) {\n        $menuBar.cssPaddingLeft(margin.left);\n        $menuBar.cssMarginLeft(0);\n      }\n      if (statusWidth > 0) {\n        $menuBar.cssPaddingRight(statusWidth);\n        statusWidth = 0;\n      }\n    } else {\n      $menuBar.cssPaddingLeft('');\n      $menuBar.cssMarginLeft('');\n      $menuBar.cssPaddingRight('');\n    }\n    return this._menuBarSize(htmlMenuBar, containerSize, statusWidth);\n  }\n  _menuBarSize(htmlMenuBar, containerSize, statusWidth) {\n    let menuBarSize = MenuBarLayout.size(htmlMenuBar, containerSize);\n    if (!this.groupBox.mainBox) {\n      // adjust size of menubar as well if it is in a regular group box\n      menuBarSize.width -= statusWidth;\n    }\n    return menuBarSize;\n  }\n  _updateHeaderMenuBar(htmlMenuBar, $header, $title, statusWidth) {\n    // Use Math.floor/ceil and +1 to avoid rounding issues with text-ellipsis and title label\n    let menuBarSize = htmlMenuBar.prefSize({\n      exact: true\n    });\n    let headerSize = graphics.prefSize($header).subtract(graphics.insets($header));\n    let headerWidth = headerSize.width - statusWidth;\n    let $control = $header.children('.group-box-control');\n    if ($control.length > 0) {\n      headerWidth -= graphics.size($control, true).width;\n    }\n    let titleWidth = Math.ceil(graphics.prefSize($title, true).width) + 1;\n    let menuBarWidth = menuBarSize.width;\n    if (titleWidth + menuBarWidth < headerWidth) {\n      // title and menu-bar both fit into the title\n      // let menu-bar use all the available width\n      menuBarWidth = Math.floor(headerWidth - titleWidth);\n      menuBarSize.width = menuBarWidth;\n      $title.cssWidth('');\n    } else {\n      // title and menu-bar don't fit into the title\n      // scale down until both fit into the title, try to keep the same width-ratio (r)\n      let scaleFactor = (titleWidth + menuBarWidth) / headerWidth;\n      let rLabel = titleWidth / headerWidth / scaleFactor;\n      let rMenuBar = menuBarWidth / headerWidth / scaleFactor;\n      if (rLabel < rMenuBar) {\n        rLabel = Math.max(0.33, rLabel);\n        rMenuBar = 1.0 - rLabel;\n      } else {\n        rMenuBar = Math.max(0.33, rMenuBar);\n        rLabel = 1.0 - rMenuBar;\n      }\n      titleWidth = rLabel * headerWidth;\n      menuBarWidth = rMenuBar * headerWidth;\n      menuBarSize.width = Math.floor(menuBarWidth);\n      $title.cssWidth(Math.floor(titleWidth));\n    }\n    return menuBarSize;\n  }\n  _$status() {\n    return this.groupBox.$status;\n  }\n  _layoutStatus() {\n    let htmlContainer = this.groupBox.htmlComp,\n      containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n      top = containerPadding.top,\n      right = containerPadding.right,\n      $header = this.groupBox.$header,\n      headerInnerHeight = $header.innerHeight(),\n      $status = this._$status(),\n      statusMargins = graphics.margins($status),\n      statusPosition = this.groupBox.statusPosition;\n    $status.cssWidth(this._statusWidth);\n    if (statusPosition === FormField.StatusPosition.DEFAULT) {\n      top += $header.cssMarginTop();\n    }\n    $status.cssTop(top).cssRight(right).cssHeight(headerInnerHeight - statusMargins.vertical());\n  }\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    let htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar,\n      prefSize,\n      widthInPixel = 0,\n      heightInPixel = 0,\n      gridData = this.groupBox.gridData,\n      undoResponsive = false;\n    if (this.groupBox.responsive && options.widthHint) {\n      undoResponsive = ResponsiveManager.get().handleResponsive(this.groupBox, options.widthHint);\n    }\n    if (gridData) {\n      widthInPixel = gridData.widthInPixel;\n      heightInPixel = gridData.heightInPixel;\n    }\n    if (widthInPixel && heightInPixel) {\n      // If width and height are set there is no need to calculate anything -> just return it as preferred size\n      prefSize = new Dimension(widthInPixel, heightInPixel).add(htmlContainer.insets());\n      return prefSize;\n    }\n    // Use explicit width as hint if set\n    if (!options.widthHint && widthInPixel) {\n      options.widthHint = widthInPixel;\n    }\n    // HeightHint not supported\n    options.heightHint = null;\n    if (this.groupBox.expanded) {\n      prefSize = htmlGbBody.prefSize(options).add(htmlGbBody.margins());\n      htmlMenuBar = this._htmlMenuBar();\n      if (htmlMenuBar && this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n        prefSize.height += htmlMenuBar.prefSize(options).height;\n      }\n    } else {\n      prefSize = new Dimension(0, 0);\n    }\n    prefSize = prefSize.add(htmlContainer.insets());\n    prefSize.height += this._headerHeight();\n    prefSize.height += this._notificationHeight(options);\n\n    // predefined height or width in pixel override other values\n    if (widthInPixel) {\n      prefSize.width = widthInPixel;\n    }\n    if (heightInPixel) {\n      prefSize.height = heightInPixel;\n    }\n    if (undoResponsive) {\n      ResponsiveManager.get().reset(this.groupBox);\n    }\n    return prefSize;\n  }\n  _headerHeight() {\n    return graphics.prefSize(this.groupBox.$header, true).height;\n  }\n  _notificationHeight(options) {\n    options = options || {};\n    if (!this.groupBox.notification) {\n      return 0;\n    }\n    options.includeMargin = true;\n    return this.groupBox.notification.htmlComp.prefSize(options).height;\n  }\n\n  /**\n   * Return menu-bar when it exists and it is visible.\n   */\n  _htmlMenuBar() {\n    if (this.groupBox.menuBar && this.groupBox.menuBarVisible) {\n      let htmlMenuBar = HtmlComponent.optGet(this.groupBox.menuBar.$container);\n      if (htmlMenuBar && htmlMenuBar.isVisible()) {\n        return htmlMenuBar;\n      }\n    }\n    return null;\n  }\n  _htmlGbBody() {\n    return HtmlComponent.get(this.groupBox.$body);\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","FormField","graphics","GroupBox","HtmlComponent","HtmlEnvironment","MenuBarLayout","ResponsiveManager","scrollbars","$","GroupBoxLayout","constructor","groupBox","_initDefaults","_htmlPropertyChangeHandler","_onHtmlEnvironmentPropertyChange","bind","get","on","one","off","_statusWidth","fieldStatusWidth","invalidateLayoutTree","layout","$container","gbBodySize","menuBarSize","menuBarHeight","statusWidth","statusPosition","htmlContainer","htmlComp","htmlGbBody","_htmlGbBody","htmlMenuBar","_htmlMenuBar","tooltip","_tooltip","$header","$title","containerSize","availableSize","subtract","insets","responsive","handleResponsive","width","$status","_$status","isVisible","_layoutStatus","outerWidth","menuBarPosition","MenuBarPosition","TITLE","_updateHeaderMenuBar","_updateMenuBar","height","setWidthForStatus","setSize","StatusPosition","TOP","notification","margins","_headerHeight","_notificationHeight","log","isTraceEnabled","trace","rendered","position","scrollable","bodyLayoutConfig","minWidth","update","$comp","$element","marginX","cssMarginX","cssWidth","$groupBox","$menuBar","mainBox","hasClass","margin","left","cssPaddingLeft","cssMarginLeft","cssPaddingRight","_menuBarSize","size","prefSize","exact","headerSize","headerWidth","$control","children","length","titleWidth","Math","ceil","menuBarWidth","floor","scaleFactor","rLabel","rMenuBar","max","containerPadding","includeBorder","top","right","headerInnerHeight","innerHeight","statusMargins","DEFAULT","cssMarginTop","cssTop","cssRight","cssHeight","vertical","preferredLayoutSize","options","widthInPixel","heightInPixel","gridData","undoResponsive","widthHint","add","heightHint","expanded","reset","includeMargin","menuBar","menuBarVisible","optGet","$body"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/groupbox/GroupBoxLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, FormField, graphics, GroupBox, HtmlComponent, HtmlEnvironment, MenuBarLayout, ResponsiveManager, scrollbars} from '../../../index';\nimport $ from 'jquery';\n\nexport default class GroupBoxLayout extends AbstractLayout {\n\n  constructor(groupBox) {\n    super();\n    this.groupBox = groupBox;\n\n    this._initDefaults();\n\n    this._htmlPropertyChangeHandler = this._onHtmlEnvironmentPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this._htmlPropertyChangeHandler);\n    this.groupBox.one('remove', () => {\n      HtmlEnvironment.get().off('propertyChange', this._htmlPropertyChangeHandler);\n    });\n  }\n\n  _initDefaults() {\n    this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n\n  _onHtmlEnvironmentPropertyChange() {\n    this._initDefaults();\n    this.groupBox.invalidateLayoutTree();\n  }\n\n  layout($container) {\n    let gbBodySize,\n      menuBarSize,\n      menuBarHeight = 0,\n      statusWidth = 0,\n      statusPosition = this.groupBox.statusPosition,\n      htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar = this._htmlMenuBar(),\n      tooltip = this.groupBox._tooltip(),\n      $header = this.groupBox.$header,\n      $title = this.groupBox.$title,\n      containerSize = htmlContainer.availableSize()\n        .subtract(htmlContainer.insets());\n\n    // apply responsive transformations if necessary.\n    if (this.groupBox.responsive) {\n      ResponsiveManager.get().handleResponsive(this.groupBox, containerSize.width);\n    }\n\n    let $status = this._$status();\n    if ($status && $status.isVisible()) {\n      this._layoutStatus();\n      statusWidth = $status.outerWidth(true);\n    }\n\n    // Menu-bar\n    if (htmlMenuBar) {\n      if (this.groupBox.menuBarPosition === GroupBox.MenuBarPosition.TITLE) {\n        // position: TITLE\n        menuBarSize = this._updateHeaderMenuBar(htmlMenuBar, $header, $title, statusWidth);\n      } else {\n        // position: TOP and BOTTOM\n        menuBarSize = this._updateMenuBar(htmlMenuBar, containerSize, statusWidth);\n        menuBarHeight = menuBarSize.height;\n        setWidthForStatus($title);\n      }\n      htmlMenuBar.setSize(menuBarSize);\n    } else {\n      setWidthForStatus($title);\n    }\n\n    if (statusPosition !== FormField.StatusPosition.TOP) {\n      setWidthForStatus($header, statusWidth);\n    } else {\n      setWidthForStatus($header);\n    }\n\n    if (this.groupBox.notification) {\n      setWidthForStatus(this.groupBox.notification.$container, statusWidth);\n    }\n\n    gbBodySize = containerSize.subtract(htmlGbBody.margins());\n    gbBodySize.height -= this._headerHeight();\n    gbBodySize.height -= this._notificationHeight();\n    gbBodySize.height -= menuBarHeight;\n    $.log.isTraceEnabled() && $.log.trace('(GroupBoxLayout#layout) gbBodySize=' + gbBodySize);\n    htmlGbBody.setSize(gbBodySize);\n\n    // Make sure tooltip is at correct position after layouting, if there is one\n    if (tooltip && tooltip.rendered) {\n      tooltip.position();\n    }\n\n    if (htmlGbBody.scrollable || this.groupBox.bodyLayoutConfig.minWidth > 0) {\n      scrollbars.update(htmlGbBody.$comp);\n    }\n\n    // Make $element wider, so status is on the left\n    function setWidthForStatus($element, statusWidth) {\n      if (statusWidth) {\n        let marginX = $element.cssMarginX() + statusWidth;\n        $element.cssWidth('calc(100% - ' + marginX + 'px)');\n      } else {\n        $element.cssWidth('');\n      }\n    }\n  }\n\n  _updateMenuBar(htmlMenuBar, containerSize, statusWidth) {\n    let $groupBox = this.groupBox.$container;\n    let $menuBar = htmlMenuBar.$comp;\n    if (!this.groupBox.mainBox &&\n      ($groupBox.hasClass('menubar-position-top') && $groupBox.hasClass('has-scroll-shadow-top')) ||\n      ($groupBox.hasClass('menubar-position-bottom') && $groupBox.hasClass('has-scroll-shadow-bottom'))) {\n      // Replace margin resp. status space with a padding so that menubar line is drawn as width as the shadow\n      // The left margin (mandatory indicator space) could actually be removed by css,\n      // but doing it here does not require any css adjustments for customized group boxes.\n      let margin = graphics.margins($menuBar);\n      if (margin.left > 0) {\n        $menuBar.cssPaddingLeft(margin.left);\n        $menuBar.cssMarginLeft(0);\n      }\n      if (statusWidth > 0) {\n        $menuBar.cssPaddingRight(statusWidth);\n        statusWidth = 0;\n      }\n    } else {\n      $menuBar.cssPaddingLeft('');\n      $menuBar.cssMarginLeft('');\n      $menuBar.cssPaddingRight('');\n    }\n    return this._menuBarSize(htmlMenuBar, containerSize, statusWidth);\n  }\n\n  _menuBarSize(htmlMenuBar, containerSize, statusWidth) {\n    let menuBarSize = MenuBarLayout.size(htmlMenuBar, containerSize);\n    if (!this.groupBox.mainBox) {\n      // adjust size of menubar as well if it is in a regular group box\n      menuBarSize.width -= statusWidth;\n    }\n    return menuBarSize;\n  }\n\n  _updateHeaderMenuBar(htmlMenuBar, $header, $title, statusWidth) {\n    // Use Math.floor/ceil and +1 to avoid rounding issues with text-ellipsis and title label\n    let menuBarSize = htmlMenuBar.prefSize({\n      exact: true\n    });\n    let headerSize = graphics.prefSize($header).subtract(graphics.insets($header));\n    let headerWidth = headerSize.width - statusWidth;\n    let $control = $header.children('.group-box-control');\n    if ($control.length > 0) {\n      headerWidth -= graphics.size($control, true).width;\n    }\n    let titleWidth = Math.ceil(graphics.prefSize($title, true).width) + 1;\n    let menuBarWidth = menuBarSize.width;\n\n    if ((titleWidth + menuBarWidth) < headerWidth) {\n      // title and menu-bar both fit into the title\n      // let menu-bar use all the available width\n      menuBarWidth = Math.floor(headerWidth - titleWidth);\n      menuBarSize.width = menuBarWidth;\n      $title.cssWidth('');\n    } else {\n      // title and menu-bar don't fit into the title\n      // scale down until both fit into the title, try to keep the same width-ratio (r)\n      let scaleFactor = (titleWidth + menuBarWidth) / headerWidth;\n      let rLabel = (titleWidth / headerWidth) / scaleFactor;\n      let rMenuBar = (menuBarWidth / headerWidth) / scaleFactor;\n\n      if (rLabel < rMenuBar) {\n        rLabel = Math.max(0.33, rLabel);\n        rMenuBar = 1.0 - rLabel;\n      } else {\n        rMenuBar = Math.max(0.33, rMenuBar);\n        rLabel = 1.0 - rMenuBar;\n      }\n\n      titleWidth = rLabel * headerWidth;\n      menuBarWidth = rMenuBar * headerWidth;\n\n      menuBarSize.width = Math.floor(menuBarWidth);\n      $title.cssWidth(Math.floor(titleWidth));\n    }\n    return menuBarSize;\n  }\n\n  _$status() {\n    return this.groupBox.$status;\n  }\n\n  _layoutStatus() {\n    let htmlContainer = this.groupBox.htmlComp,\n      containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n      top = containerPadding.top,\n      right = containerPadding.right,\n      $header = this.groupBox.$header,\n      headerInnerHeight = $header.innerHeight(),\n      $status = this._$status(),\n      statusMargins = graphics.margins($status),\n      statusPosition = this.groupBox.statusPosition;\n\n    $status.cssWidth(this._statusWidth);\n    if (statusPosition === FormField.StatusPosition.DEFAULT) {\n      top += $header.cssMarginTop();\n    }\n\n    $status\n      .cssTop(top)\n      .cssRight(right)\n      .cssHeight(headerInnerHeight - statusMargins.vertical());\n  }\n\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    let htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar,\n      prefSize,\n      widthInPixel = 0,\n      heightInPixel = 0,\n      gridData = this.groupBox.gridData,\n      undoResponsive = false;\n\n    if (this.groupBox.responsive &&\n      options.widthHint) {\n      undoResponsive = ResponsiveManager.get().handleResponsive(this.groupBox, options.widthHint);\n    }\n\n    if (gridData) {\n      widthInPixel = gridData.widthInPixel;\n      heightInPixel = gridData.heightInPixel;\n    }\n    if (widthInPixel && heightInPixel) {\n      // If width and height are set there is no need to calculate anything -> just return it as preferred size\n      prefSize = new Dimension(widthInPixel, heightInPixel)\n        .add(htmlContainer.insets());\n      return prefSize;\n    }\n    // Use explicit width as hint if set\n    if (!options.widthHint && widthInPixel) {\n      options.widthHint = widthInPixel;\n    }\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (this.groupBox.expanded) {\n      prefSize = htmlGbBody.prefSize(options)\n        .add(htmlGbBody.margins());\n\n      htmlMenuBar = this._htmlMenuBar();\n      if (htmlMenuBar && this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n        prefSize.height += htmlMenuBar.prefSize(options).height;\n      }\n    } else {\n      prefSize = new Dimension(0, 0);\n    }\n    prefSize = prefSize.add(htmlContainer.insets());\n    prefSize.height += this._headerHeight();\n    prefSize.height += this._notificationHeight(options);\n\n    // predefined height or width in pixel override other values\n    if (widthInPixel) {\n      prefSize.width = widthInPixel;\n    }\n    if (heightInPixel) {\n      prefSize.height = heightInPixel;\n    }\n\n    if (undoResponsive) {\n      ResponsiveManager.get().reset(this.groupBox);\n    }\n\n    return prefSize;\n  }\n\n  _headerHeight() {\n    return graphics.prefSize(this.groupBox.$header, true).height;\n  }\n\n  _notificationHeight(options) {\n    options = options || {};\n    if (!this.groupBox.notification) {\n      return 0;\n    }\n    options.includeMargin = true;\n    return this.groupBox.notification.htmlComp.prefSize(options).height;\n  }\n\n  /**\n   * Return menu-bar when it exists and it is visible.\n   */\n  _htmlMenuBar() {\n    if (this.groupBox.menuBar && this.groupBox.menuBarVisible) {\n      let htmlMenuBar = HtmlComponent.optGet(this.groupBox.menuBar.$container);\n      if (htmlMenuBar && htmlMenuBar.isVisible()) {\n        return htmlMenuBar;\n      }\n    }\n    return null;\n  }\n\n  _htmlGbBody() {\n    return HtmlComponent.get(this.groupBox.$body);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}