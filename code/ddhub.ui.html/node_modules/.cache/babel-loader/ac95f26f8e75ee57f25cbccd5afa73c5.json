{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTreeNavigationKeyStroke, HAlign, keys } from '../../index';\nexport default class TreeCollapseAllKeyStroke extends AbstractTreeNavigationKeyStroke {\n  constructor(tree, keyStrokeModifier) {\n    super(tree, keyStrokeModifier);\n    this.which = [keys.HOME];\n    this.renderingHints.hAlign = HAlign.RIGHT;\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      if (this.field.visibleNodesFlat.length > 0) {\n        return this.field.visibleNodesFlat[0].$node;\n      }\n    };\n  }\n  handle(event) {\n    this.field.collapseAll();\n    if (this.field.visibleNodesFlat.length > 0) {\n      this.selectNodesAndReveal(this.field.visibleNodesFlat[0]);\n    }\n  }\n}","map":{"version":3,"names":["AbstractTreeNavigationKeyStroke","HAlign","keys","TreeCollapseAllKeyStroke","constructor","tree","keyStrokeModifier","which","HOME","renderingHints","hAlign","RIGHT","$drawingArea","event","field","visibleNodesFlat","length","$node","handle","collapseAll","selectNodesAndReveal"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/keystrokes/TreeCollapseAllKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTreeNavigationKeyStroke, HAlign, keys} from '../../index';\n\nexport default class TreeCollapseAllKeyStroke extends AbstractTreeNavigationKeyStroke {\n\n  constructor(tree, keyStrokeModifier) {\n    super(tree, keyStrokeModifier);\n    this.which = [keys.HOME];\n    this.renderingHints.hAlign = HAlign.RIGHT;\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      if (this.field.visibleNodesFlat.length > 0) {\n        return this.field.visibleNodesFlat[0].$node;\n      }\n    };\n  }\n\n  handle(event) {\n    this.field.collapseAll();\n    if (this.field.visibleNodesFlat.length > 0) {\n      this.selectNodesAndReveal(this.field.visibleNodesFlat[0]);\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,+BAA+B,EAAEC,MAAM,EAAEC,IAAI,QAAO,aAAa;AAEzE,eAAe,MAAMC,wBAAwB,SAASH,+BAA+B,CAAC;EAEpFI,WAAW,CAACC,IAAI,EAAEC,iBAAiB,EAAE;IACnC,KAAK,CAACD,IAAI,EAAEC,iBAAiB,CAAC;IAC9B,IAAI,CAACC,KAAK,GAAG,CAACL,IAAI,CAACM,IAAI,CAAC;IACxB,IAAI,CAACC,cAAc,CAACC,MAAM,GAAGT,MAAM,CAACU,KAAK;IACzC,IAAI,CAACF,cAAc,CAACG,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAI,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1C,OAAO,IAAI,CAACF,KAAK,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAACE,KAAK;MAC7C;IACF,CAAC;EACH;EAEAC,MAAM,CAACL,KAAK,EAAE;IACZ,IAAI,CAACC,KAAK,CAACK,WAAW,EAAE;IACxB,IAAI,IAAI,CAACL,KAAK,CAACC,gBAAgB,CAACC,MAAM,GAAG,CAAC,EAAE;MAC1C,IAAI,CAACI,oBAAoB,CAAC,IAAI,CAACN,KAAK,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC3D;EACF;AACF"},"metadata":{},"sourceType":"module"}