{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, LoadingSupport, LogicalGridData, LogicalGridLayoutConfig, LookupCall, objects, RadioButton, RadioButtonGroupGridConfig, RadioButtonGroupLayout, RadioButtonGroupLeftOrUpKeyStroke, RadioButtonGroupRightOrDownKeyStroke, scout, Status, TreeVisitResult, ValueField } from '../../../index';\nimport $ from 'jquery';\nexport default class RadioButtonGroup extends ValueField {\n  constructor() {\n    super();\n    this.logicalGrid = scout.create('scout.HorizontalGrid');\n    this.layoutConfig = null;\n    this.fields = [];\n    this.radioButtons = [];\n    this.gridColumnCount = RadioButtonGroup.DEFAULT_GRID_COLUMN_COUNT;\n    this.selectedButton = null;\n    this.$body = null;\n    this.lookupStatus = null;\n    this.lookupCall = null;\n    this._lookupExecuted = false;\n    this._selectButtonLocked = false;\n    this._pendingLookup = null;\n    this._lookupInProgress = false;\n    this._currentLookupCall = null;\n    this._addWidgetProperties(['fields']);\n    this._addCloneProperties(['lookupCall', 'layoutConfig', 'gridColumnCount']);\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this._setLayoutConfig(this.layoutConfig);\n    this._setGridColumnCount(this.gridColumnCount);\n  }\n  _initValue(value) {\n    if (this.lookupCall) {\n      this._setLookupCall(this.lookupCall);\n    }\n    // must be called before value is set\n    this._setFields(this.fields);\n    super._initValue(value);\n  }\n\n  /**\n   * @override ModelAdapter.js\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.registerKeyStroke([new RadioButtonGroupLeftOrUpKeyStroke(this), new RadioButtonGroupRightOrDownKeyStroke(this)]);\n  }\n  _initButtons() {\n    this.radioButtons = this.fields.filter(formField => {\n      return formField instanceof RadioButton;\n    });\n    this.radioButtons.forEach(this._initButton.bind(this));\n  }\n  _initButton(button) {\n    if (button.events.count('propertyChange', this._buttonPropertyChangeHandler) === 0) {\n      button.on('propertyChange', this._buttonPropertyChangeHandler);\n    }\n    if (button.selected) {\n      this.setValue(button.radioValue);\n      this.selectButton(button);\n      if (button.focused) {\n        this.setFocused(true);\n      }\n    }\n  }\n  _render() {\n    this.addContainer(this.$parent, 'radiobutton-group');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.$body = this.$container.appendDiv('radiobutton-group-body');\n    this.htmlBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlBody.setLayout(this._createBodyLayout());\n\n    // fields are rendered in _renderFields\n    this.addField(this.$body);\n    this.addStatus();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFields();\n    this._renderLayoutConfig();\n  }\n  _createBodyLayout() {\n    return new RadioButtonGroupLayout(this, this.layoutConfig);\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  _setLogicalGrid(logicalGrid) {\n    super._setLogicalGrid(logicalGrid);\n    if (this.logicalGrid) {\n      this.logicalGrid.setGridConfig(new RadioButtonGroupGridConfig());\n    }\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  invalidateLogicalGrid(invalidateLayout) {\n    super.invalidateLogicalGrid(false);\n    if (scout.nvl(invalidateLayout, true) && this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n  setLayoutConfig(layoutConfig) {\n    this.setProperty('layoutConfig', layoutConfig);\n  }\n  _setLayoutConfig(layoutConfig) {\n    if (!layoutConfig) {\n      layoutConfig = new LogicalGridLayoutConfig();\n    }\n    this._setProperty('layoutConfig', LogicalGridLayoutConfig.ensure(layoutConfig));\n  }\n  _renderLayoutConfig() {\n    this.layoutConfig.applyToLayout(this.htmlBody.layout);\n    if (this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  isClearable() {\n    return false;\n  }\n  getFields() {\n    return this.fields;\n  }\n\n  /**\n   * @override\n   */\n  visitFields(visitor) {\n    let treeVisitResult = super.visitFields(visitor);\n    if (treeVisitResult === TreeVisitResult.TERMINATE) {\n      return TreeVisitResult.TERMINATE;\n    }\n    if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n      return;\n    }\n    let fields = this.getFields();\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i];\n      treeVisitResult = field.visitFields(visitor);\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    // The first button may not be focusable because it is not selected and therefore has no tab index -> find the first focusable button\n    return this.session.focusManager.findFirstFocusableElement(this.$container);\n  }\n  setFields(fields) {\n    this.setProperty('fields', fields);\n  }\n  _setFields(fields) {\n    this._setProperty('fields', fields);\n    this._initButtons();\n  }\n  _renderFields() {\n    this._ensureLookupCallExecuted();\n    this.fields.forEach(function (formField) {\n      formField.render(this.$body);\n\n      // set each children layout data to logical grid data\n      formField.setLayoutData(new LogicalGridData(formField));\n      this._linkWithLabel(formField.$field);\n    }, this);\n    this._provideTabIndex(); // depends on rendered fields\n    this.invalidateLogicalGrid();\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    this._provideTabIndex();\n  }\n\n  /**\n   * Set the selected (or first if none is selected) to tabbable\n   */\n  _provideTabIndex() {\n    let tabSet;\n    this.radioButtons.forEach(function (radioButton) {\n      if (radioButton.enabledComputed && this.enabledComputed && !tabSet) {\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else if (tabSet && this.enabledComputed && radioButton.enabledComputed && radioButton.selected) {\n        tabSet.setTabbable(false);\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else {\n        radioButton.setTabbable(false);\n      }\n    }, this);\n  }\n  setGridColumnCount(gridColumnCount) {\n    this.setProperty('gridColumnCount', gridColumnCount);\n  }\n  _setGridColumnCount(gridColumnCount) {\n    if (gridColumnCount < 0) {\n      gridColumnCount = this._calcDefaultGridColumnCount();\n    }\n    if (gridColumnCount === this.gridColumnCount) {\n      return false;\n    }\n    this._setProperty('gridColumnCount', gridColumnCount);\n    this.invalidateLogicalGrid();\n    return true;\n  }\n  _calcDefaultGridColumnCount() {\n    let height = 1,\n      hints = this.gridDataHints;\n    if (hints && hints.h > 1) {\n      height = hints.h;\n    }\n    return Math.ceil(this.fields.length / height);\n  }\n  getButtonForRadioValue(radioValue) {\n    if (radioValue === null) {\n      return null;\n    }\n    return arrays.find(this.radioButtons, button => {\n      return objects.equals(button.radioValue, radioValue);\n    });\n  }\n\n  /**\n   * Search and then select the button with the corresponding radioValue\n   */\n  _validateValue(value) {\n    super._validateValue(value);\n    if (!this.initialized && this.lookupCall) {\n      // lookup call may not be started during field initialization. otherwise lookup prepare listeners cannot be attached.\n      // do not validate now (as there are no buttons yet, because the lookup call has not yet been executed).\n      // validation will be done later again when the lookup call is executed.\n      return value;\n    }\n    let lookupScheduled = this._ensureLookupCallExecuted();\n    if (lookupScheduled) {\n      // the first lookup was scheduled now: buttons are not yet available, not possible to select one. will be done later as soon as the lookup call is finished.\n      return value;\n    }\n\n    // only show error if value is not null or undefined\n    let buttonToSelect = this.getButtonForRadioValue(value);\n    if (!buttonToSelect && value !== null && value !== undefined && !this._lookupInProgress) {\n      throw this.session.text('InvalidValueMessageX', value);\n    }\n    return value;\n  }\n  _valueChanged() {\n    super._valueChanged();\n    // Don't select button during initialization if value is null to not override selected state of a button\n    if (this.value !== null || this.initialized) {\n      this.selectButton(this.getButtonForRadioValue(this.value));\n    }\n  }\n  selectFirstButton() {\n    this.selectButtonByIndex(0);\n  }\n  selectLastButton() {\n    this.selectButtonByIndex(this.radioButtons.length - 1);\n  }\n  selectButtonByIndex(index) {\n    if (this.radioButtons.length && index >= 0 && index < this.radioButtons.length) {\n      this.selectButton(this.radioButtons[index]);\n    }\n  }\n  selectButton(radioButton) {\n    if (this.selectedButton === radioButton) {\n      // Already selected\n      return;\n    }\n    if (this._selectButtonLocked) {\n      // Don't execute when triggered by this function to make sure the states are updated before firing the selectButton event\n      return;\n    }\n    this._selectButtonLocked = true;\n\n    // Deselect previously selected button\n    if (this.selectedButton) {\n      // Do not unset tabbable here, because at least one button has to be tabbable even if the button is deselected\n      this.selectedButton.setSelected(false);\n    }\n\n    // Select new button\n    if (radioButton) {\n      let tabbableButton = this.getTabbableButton();\n      let needsFocus = false;\n      if (tabbableButton) {\n        // Only one button in the group should have a tab index -> remove it from the current tabbable button after the new button is tabbable.\n        // If that button is focused the newly selected button needs to gain the focus otherwise the focus would fall back to the body.\n        needsFocus = tabbableButton.isFocused();\n      }\n      radioButton.setSelected(true);\n      radioButton.setTabbable(true);\n      if (needsFocus) {\n        radioButton.focus();\n      }\n      if (tabbableButton && tabbableButton !== radioButton) {\n        tabbableButton.setTabbable(false);\n      }\n    }\n    this._selectButtonLocked = false;\n    this.setProperty('selectedButton', radioButton);\n  }\n  getTabbableButton() {\n    return arrays.find(this.radioButtons, button => {\n      return button.visible && button.isTabbable();\n    });\n  }\n  insertButton(radioButton) {\n    let newFields = this.fields.slice();\n    newFields.push(radioButton);\n    this.setFields(newFields);\n  }\n  _onButtonPropertyChange(event) {\n    if (event.propertyName === 'selected') {\n      let selected = event.newValue;\n      if (selected) {\n        this.setValue(event.source.radioValue);\n        this.selectButton(event.source);\n      } else if (event.source === this.selectedButton) {\n        this.selectButton(null);\n      }\n    } else if (event.propertyName === 'focused') {\n      this.setFocused(event.newValue);\n    }\n  }\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n    this._lookupExecuted = false;\n    if (this.rendered) {\n      this._ensureLookupCallExecuted();\n    }\n  }\n\n  /**\n   * @return {boolean} true if a lookup call execution has been scheduled now. false otherwise.\n   */\n  _ensureLookupCallExecuted() {\n    if (!this.lookupCall) {\n      return false;\n    }\n    if (this._lookupExecuted) {\n      return false;\n    }\n    this._lookupByAll();\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function () {\n        return this.$body;\n      }.bind(this)\n    });\n  }\n  _lookupByAll() {\n    if (!this.lookupCall) {\n      return;\n    }\n    this._clearPendingLookup();\n    let deferred = $.Deferred();\n    let doneHandler = function (result) {\n      this._lookupByAllDone(result);\n      deferred.resolve(result);\n    }.bind(this);\n    this._executeLookup(this.lookupCall.cloneForAll(), true).done(doneHandler);\n    return deferred.promise();\n  }\n  _clearPendingLookup() {\n    if (this._pendingLookup) {\n      clearTimeout(this._pendingLookup);\n      this._pendingLookup = null;\n    }\n  }\n\n  /**\n   * A wrapper function around lookup calls used to set the _lookupInProgress flag, and display the state in the UI.\n   */\n  _executeLookup(lookupCall, abortExisting) {\n    if (abortExisting && this._currentLookupCall) {\n      this._currentLookupCall.abort();\n    }\n    this._lookupInProgress = true;\n    this.setLoading(true);\n    this._currentLookupCall = lookupCall;\n    this.trigger('prepareLookupCall', {\n      lookupCall: lookupCall\n    });\n    return lookupCall.execute().always(() => {\n      this._lookupInProgress = false;\n      this._lookupExecuted = true;\n      this._currentLookupCall = null;\n      this.setLoading(false);\n      this._clearLookupStatus();\n    });\n  }\n  _lookupByAllDone(result) {\n    try {\n      if (result.exception) {\n        // Oops! Something went wrong while the lookup has been processed.\n        this.setErrorStatus(Status.error({\n          message: result.exception\n        }));\n        return;\n      }\n\n      // 'No data' case\n      if (result.lookupRows.length === 0) {\n        this.setLookupStatus(Status.warning({\n          message: this.session.text('SmartFieldNoDataFound'),\n          code: RadioButtonGroup.ErrorCode.NO_DATA\n        }));\n        return;\n      }\n      this._populateRadioButtonGroup(result);\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n  _populateRadioButtonGroup(result) {\n    let lookupRows = result.lookupRows;\n    let newFields = this.fields.slice();\n    lookupRows.forEach(function (lookupRow) {\n      newFields.push(this._createLookupRowRadioButton(lookupRow));\n    }, this);\n    this.setFields(newFields);\n\n    // because the lookup call is asynchronus, reset the value so that it is revalidated.\n    this.setValue(this.value);\n    // also select the button (the line above does not change the value, therefore _valueChanged is not called)\n    this.selectButton(this.getButtonForRadioValue(this.value));\n  }\n  _clearLookupStatus() {\n    this.setLookupStatus(null);\n  }\n  setLookupStatus(lookupStatus) {\n    this.setProperty('lookupStatus', lookupStatus);\n    if (this.rendered) {\n      this._renderErrorStatus();\n    }\n  }\n  _errorStatus() {\n    return this.lookupStatus || this.errorStatus;\n  }\n  _createLookupRowRadioButton(lookupRow) {\n    let button = {\n      parent: this,\n      label: lookupRow.text,\n      radioValue: lookupRow.key,\n      lookupRow: lookupRow\n    };\n    if (lookupRow.iconId) {\n      button.iconId = lookupRow.iconId;\n    }\n    if (lookupRow.tooltipText) {\n      button.tooltipText = lookupRow.tooltipText;\n    }\n    if (lookupRow.backgroundColor) {\n      button.backgroundColor = lookupRow.backgroundColor;\n    }\n    if (lookupRow.foregroundColor) {\n      button.foregroundColor = lookupRow.foregroundColor;\n    }\n    if (lookupRow.font) {\n      button.font = lookupRow.font;\n    }\n    if (lookupRow.enabled === false) {\n      button.enabled = false;\n    }\n    if (lookupRow.active === false) {\n      button.visible = false;\n    }\n    if (lookupRow.cssClass) {\n      button.cssClass = lookupRow.cssClass;\n    }\n    return scout.create('RadioButton', button);\n  }\n  clone(model, options) {\n    let clone = super.clone(model, options);\n    this._deepCloneProperties(clone, 'fields', options);\n    clone._initButtons();\n    return clone;\n  }\n}\n_defineProperty(RadioButtonGroup, \"DEFAULT_GRID_COLUMN_COUNT\", -1);\n_defineProperty(RadioButtonGroup, \"ErrorCode\", {\n  NO_DATA: 1\n});","map":{"version":3,"names":["arrays","HtmlComponent","LoadingSupport","LogicalGridData","LogicalGridLayoutConfig","LookupCall","objects","RadioButton","RadioButtonGroupGridConfig","RadioButtonGroupLayout","RadioButtonGroupLeftOrUpKeyStroke","RadioButtonGroupRightOrDownKeyStroke","scout","Status","TreeVisitResult","ValueField","$","RadioButtonGroup","constructor","logicalGrid","create","layoutConfig","fields","radioButtons","gridColumnCount","DEFAULT_GRID_COLUMN_COUNT","selectedButton","$body","lookupStatus","lookupCall","_lookupExecuted","_selectButtonLocked","_pendingLookup","_lookupInProgress","_currentLookupCall","_addWidgetProperties","_addCloneProperties","_buttonPropertyChangeHandler","_onButtonPropertyChange","bind","_init","model","_setLayoutConfig","_setGridColumnCount","_initValue","value","_setLookupCall","_setFields","_initKeyStrokeContext","keyStrokeContext","registerKeyStroke","_initButtons","filter","formField","forEach","_initButton","button","events","count","on","selected","setValue","radioValue","selectButton","focused","setFocused","_render","addContainer","$parent","addLabel","addMandatoryIndicator","$container","appendDiv","htmlBody","install","session","setLayout","_createBodyLayout","addField","addStatus","_renderProperties","_renderFields","_renderLayoutConfig","_setLogicalGrid","setGridConfig","invalidateLogicalGrid","invalidateLayout","nvl","rendered","invalidateLayoutTree","setLayoutConfig","setProperty","_setProperty","ensure","applyToLayout","layout","isClearable","getFields","visitFields","visitor","treeVisitResult","TERMINATE","SKIP_SUBTREE","i","length","field","getFocusableElement","focusManager","findFirstFocusableElement","setFields","_ensureLookupCallExecuted","render","setLayoutData","_linkWithLabel","$field","_provideTabIndex","_renderEnabled","tabSet","radioButton","enabledComputed","setTabbable","setGridColumnCount","_calcDefaultGridColumnCount","height","hints","gridDataHints","h","Math","ceil","getButtonForRadioValue","find","equals","_validateValue","initialized","lookupScheduled","buttonToSelect","undefined","text","_valueChanged","selectFirstButton","selectButtonByIndex","selectLastButton","index","setSelected","tabbableButton","getTabbableButton","needsFocus","isFocused","focus","visible","isTabbable","insertButton","newFields","slice","push","event","propertyName","newValue","source","_lookupByAll","_createLoadingSupport","widget","_clearPendingLookup","deferred","Deferred","doneHandler","result","_lookupByAllDone","resolve","_executeLookup","cloneForAll","done","promise","clearTimeout","abortExisting","abort","setLoading","trigger","execute","always","_clearLookupStatus","exception","setErrorStatus","error","message","lookupRows","setLookupStatus","warning","code","ErrorCode","NO_DATA","_populateRadioButtonGroup","lookupRow","_createLookupRowRadioButton","_renderErrorStatus","_errorStatus","errorStatus","parent","label","key","iconId","tooltipText","backgroundColor","foregroundColor","font","enabled","active","cssClass","clone","options","_deepCloneProperties"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/radiobutton/RadioButtonGroup.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  HtmlComponent,\n  LoadingSupport,\n  LogicalGridData,\n  LogicalGridLayoutConfig,\n  LookupCall,\n  objects,\n  RadioButton,\n  RadioButtonGroupGridConfig,\n  RadioButtonGroupLayout,\n  RadioButtonGroupLeftOrUpKeyStroke,\n  RadioButtonGroupRightOrDownKeyStroke,\n  scout,\n  Status,\n  TreeVisitResult,\n  ValueField\n} from '../../../index';\nimport $ from 'jquery';\n\nexport default class RadioButtonGroup extends ValueField {\n\n  constructor() {\n    super();\n    this.logicalGrid = scout.create('scout.HorizontalGrid');\n    this.layoutConfig = null;\n    this.fields = [];\n    this.radioButtons = [];\n    this.gridColumnCount = RadioButtonGroup.DEFAULT_GRID_COLUMN_COUNT;\n    this.selectedButton = null;\n    this.$body = null;\n    this.lookupStatus = null;\n    this.lookupCall = null;\n\n    this._lookupExecuted = false;\n    this._selectButtonLocked = false;\n    this._pendingLookup = null;\n    this._lookupInProgress = false;\n    this._currentLookupCall = null;\n\n    this._addWidgetProperties(['fields']);\n    this._addCloneProperties(['lookupCall', 'layoutConfig', 'gridColumnCount']);\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n  }\n\n  static DEFAULT_GRID_COLUMN_COUNT = -1;\n\n  static ErrorCode = {\n    NO_DATA: 1\n  };\n\n  _init(model) {\n    super._init(model);\n\n    this._setLayoutConfig(this.layoutConfig);\n    this._setGridColumnCount(this.gridColumnCount);\n  }\n\n  _initValue(value) {\n    if (this.lookupCall) {\n      this._setLookupCall(this.lookupCall);\n    }\n    // must be called before value is set\n    this._setFields(this.fields);\n    super._initValue(value);\n  }\n\n  /**\n   * @override ModelAdapter.js\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.registerKeyStroke([\n      new RadioButtonGroupLeftOrUpKeyStroke(this),\n      new RadioButtonGroupRightOrDownKeyStroke(this)\n    ]);\n  }\n\n  _initButtons() {\n    this.radioButtons = this.fields.filter(formField => {\n      return formField instanceof RadioButton;\n    });\n    this.radioButtons.forEach(this._initButton.bind(this));\n  }\n\n  _initButton(button) {\n    if (button.events.count('propertyChange', this._buttonPropertyChangeHandler) === 0) {\n      button.on('propertyChange', this._buttonPropertyChangeHandler);\n    }\n    if (button.selected) {\n      this.setValue(button.radioValue);\n      this.selectButton(button);\n      if (button.focused) {\n        this.setFocused(true);\n      }\n    }\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'radiobutton-group');\n    this.addLabel();\n    this.addMandatoryIndicator();\n\n    this.$body = this.$container.appendDiv('radiobutton-group-body');\n    this.htmlBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlBody.setLayout(this._createBodyLayout());\n\n    // fields are rendered in _renderFields\n    this.addField(this.$body);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFields();\n    this._renderLayoutConfig();\n  }\n\n  _createBodyLayout() {\n    return new RadioButtonGroupLayout(this, this.layoutConfig);\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  _setLogicalGrid(logicalGrid) {\n    super._setLogicalGrid(logicalGrid);\n    if (this.logicalGrid) {\n      this.logicalGrid.setGridConfig(new RadioButtonGroupGridConfig());\n    }\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  invalidateLogicalGrid(invalidateLayout) {\n    super.invalidateLogicalGrid(false);\n    if (scout.nvl(invalidateLayout, true) && this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n\n  setLayoutConfig(layoutConfig) {\n    this.setProperty('layoutConfig', layoutConfig);\n  }\n\n  _setLayoutConfig(layoutConfig) {\n    if (!layoutConfig) {\n      layoutConfig = new LogicalGridLayoutConfig();\n    }\n    this._setProperty('layoutConfig', LogicalGridLayoutConfig.ensure(layoutConfig));\n  }\n\n  _renderLayoutConfig() {\n    this.layoutConfig.applyToLayout(this.htmlBody.layout);\n    if (this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  isClearable() {\n    return false;\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  /**\n   * @override\n   */\n  visitFields(visitor) {\n    let treeVisitResult = super.visitFields(visitor);\n    if (treeVisitResult === TreeVisitResult.TERMINATE) {\n      return TreeVisitResult.TERMINATE;\n    }\n\n    if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n      return;\n    }\n\n    let fields = this.getFields();\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i];\n      treeVisitResult = field.visitFields(visitor);\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    // The first button may not be focusable because it is not selected and therefore has no tab index -> find the first focusable button\n    return this.session.focusManager.findFirstFocusableElement(this.$container);\n  }\n\n  setFields(fields) {\n    this.setProperty('fields', fields);\n  }\n\n  _setFields(fields) {\n    this._setProperty('fields', fields);\n    this._initButtons();\n  }\n\n  _renderFields() {\n    this._ensureLookupCallExecuted();\n    this.fields.forEach(function(formField) {\n      formField.render(this.$body);\n\n      // set each children layout data to logical grid data\n      formField.setLayoutData(new LogicalGridData(formField));\n\n      this._linkWithLabel(formField.$field);\n    }, this);\n    this._provideTabIndex(); // depends on rendered fields\n    this.invalidateLogicalGrid();\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    this._provideTabIndex();\n  }\n\n  /**\n   * Set the selected (or first if none is selected) to tabbable\n   */\n  _provideTabIndex() {\n    let tabSet;\n    this.radioButtons.forEach(function(radioButton) {\n      if (radioButton.enabledComputed && this.enabledComputed && !tabSet) {\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else if (tabSet && this.enabledComputed && radioButton.enabledComputed && radioButton.selected) {\n        tabSet.setTabbable(false);\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else {\n        radioButton.setTabbable(false);\n      }\n    }, this);\n  }\n\n  setGridColumnCount(gridColumnCount) {\n    this.setProperty('gridColumnCount', gridColumnCount);\n  }\n\n  _setGridColumnCount(gridColumnCount) {\n    if (gridColumnCount < 0) {\n      gridColumnCount = this._calcDefaultGridColumnCount();\n    }\n    if (gridColumnCount === this.gridColumnCount) {\n      return false;\n    }\n\n    this._setProperty('gridColumnCount', gridColumnCount);\n    this.invalidateLogicalGrid();\n    return true;\n  }\n\n  _calcDefaultGridColumnCount() {\n    let height = 1,\n      hints = this.gridDataHints;\n    if (hints && hints.h > 1) {\n      height = hints.h;\n    }\n    return Math.ceil(this.fields.length / height);\n  }\n\n  getButtonForRadioValue(radioValue) {\n    if (radioValue === null) {\n      return null;\n    }\n    return arrays.find(this.radioButtons, button => {\n      return objects.equals(button.radioValue, radioValue);\n    });\n  }\n\n  /**\n   * Search and then select the button with the corresponding radioValue\n   */\n  _validateValue(value) {\n    super._validateValue(value);\n\n    if (!this.initialized && this.lookupCall) {\n      // lookup call may not be started during field initialization. otherwise lookup prepare listeners cannot be attached.\n      // do not validate now (as there are no buttons yet, because the lookup call has not yet been executed).\n      // validation will be done later again when the lookup call is executed.\n      return value;\n    }\n\n    let lookupScheduled = this._ensureLookupCallExecuted();\n    if (lookupScheduled) {\n      // the first lookup was scheduled now: buttons are not yet available, not possible to select one. will be done later as soon as the lookup call is finished.\n      return value;\n    }\n\n    // only show error if value is not null or undefined\n    let buttonToSelect = this.getButtonForRadioValue(value);\n    if (!buttonToSelect && value !== null && value !== undefined && !this._lookupInProgress) {\n      throw this.session.text('InvalidValueMessageX', value);\n    }\n    return value;\n  }\n\n  _valueChanged() {\n    super._valueChanged();\n    // Don't select button during initialization if value is null to not override selected state of a button\n    if (this.value !== null || this.initialized) {\n      this.selectButton(this.getButtonForRadioValue(this.value));\n    }\n  }\n\n  selectFirstButton() {\n    this.selectButtonByIndex(0);\n  }\n\n  selectLastButton() {\n    this.selectButtonByIndex(this.radioButtons.length - 1);\n  }\n\n  selectButtonByIndex(index) {\n    if (this.radioButtons.length && index >= 0 && index < this.radioButtons.length) {\n      this.selectButton(this.radioButtons[index]);\n    }\n  }\n\n  selectButton(radioButton) {\n    if (this.selectedButton === radioButton) {\n      // Already selected\n      return;\n    }\n    if (this._selectButtonLocked) {\n      // Don't execute when triggered by this function to make sure the states are updated before firing the selectButton event\n      return;\n    }\n    this._selectButtonLocked = true;\n\n    // Deselect previously selected button\n    if (this.selectedButton) {\n      // Do not unset tabbable here, because at least one button has to be tabbable even if the button is deselected\n      this.selectedButton.setSelected(false);\n    }\n\n    // Select new button\n    if (radioButton) {\n      let tabbableButton = this.getTabbableButton();\n      let needsFocus = false;\n      if (tabbableButton) {\n        // Only one button in the group should have a tab index -> remove it from the current tabbable button after the new button is tabbable.\n        // If that button is focused the newly selected button needs to gain the focus otherwise the focus would fall back to the body.\n        needsFocus = tabbableButton.isFocused();\n      }\n      radioButton.setSelected(true);\n      radioButton.setTabbable(true);\n      if (needsFocus) {\n        radioButton.focus();\n      }\n      if (tabbableButton && tabbableButton !== radioButton) {\n        tabbableButton.setTabbable(false);\n      }\n    }\n    this._selectButtonLocked = false;\n    this.setProperty('selectedButton', radioButton);\n  }\n\n  getTabbableButton() {\n    return arrays.find(this.radioButtons, button => {\n      return button.visible && button.isTabbable();\n    });\n  }\n\n  insertButton(radioButton) {\n    let newFields = this.fields.slice();\n    newFields.push(radioButton);\n    this.setFields(newFields);\n  }\n\n  _onButtonPropertyChange(event) {\n    if (event.propertyName === 'selected') {\n      let selected = event.newValue;\n      if (selected) {\n        this.setValue(event.source.radioValue);\n        this.selectButton(event.source);\n      } else if (event.source === this.selectedButton) {\n        this.selectButton(null);\n      }\n    } else if (event.propertyName === 'focused') {\n      this.setFocused(event.newValue);\n    }\n  }\n\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n    this._lookupExecuted = false;\n    if (this.rendered) {\n      this._ensureLookupCallExecuted();\n    }\n  }\n\n  /**\n   * @return {boolean} true if a lookup call execution has been scheduled now. false otherwise.\n   */\n  _ensureLookupCallExecuted() {\n    if (!this.lookupCall) {\n      return false;\n    }\n    if (this._lookupExecuted) {\n      return false;\n    }\n    this._lookupByAll();\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$body;\n      }.bind(this)\n    });\n  }\n\n  _lookupByAll() {\n    if (!this.lookupCall) {\n      return;\n    }\n\n    this._clearPendingLookup();\n\n    let deferred = $.Deferred();\n    let doneHandler = function(result) {\n      this._lookupByAllDone(result);\n      deferred.resolve(result);\n    }.bind(this);\n\n    this._executeLookup(this.lookupCall.cloneForAll(), true)\n      .done(doneHandler);\n\n    return deferred.promise();\n  }\n\n  _clearPendingLookup() {\n    if (this._pendingLookup) {\n      clearTimeout(this._pendingLookup);\n      this._pendingLookup = null;\n    }\n  }\n\n  /**\n   * A wrapper function around lookup calls used to set the _lookupInProgress flag, and display the state in the UI.\n   */\n  _executeLookup(lookupCall, abortExisting) {\n    if (abortExisting && this._currentLookupCall) {\n      this._currentLookupCall.abort();\n    }\n\n    this._lookupInProgress = true;\n    this.setLoading(true);\n\n    this._currentLookupCall = lookupCall;\n    this.trigger('prepareLookupCall', {\n      lookupCall: lookupCall\n    });\n\n    return lookupCall\n      .execute()\n      .always(() => {\n        this._lookupInProgress = false;\n        this._lookupExecuted = true;\n        this._currentLookupCall = null;\n        this.setLoading(false);\n        this._clearLookupStatus();\n      });\n  }\n\n  _lookupByAllDone(result) {\n    try {\n\n      if (result.exception) {\n        // Oops! Something went wrong while the lookup has been processed.\n        this.setErrorStatus(Status.error({\n          message: result.exception\n        }));\n        return;\n      }\n\n      // 'No data' case\n      if (result.lookupRows.length === 0) {\n        this.setLookupStatus(Status.warning({\n          message: this.session.text('SmartFieldNoDataFound'),\n          code: RadioButtonGroup.ErrorCode.NO_DATA\n        }));\n        return;\n      }\n\n      this._populateRadioButtonGroup(result);\n\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n\n  _populateRadioButtonGroup(result) {\n    let lookupRows = result.lookupRows;\n    let newFields = this.fields.slice();\n    lookupRows.forEach(function(lookupRow) {\n      newFields.push(this._createLookupRowRadioButton(lookupRow));\n    }, this);\n    this.setFields(newFields);\n\n    // because the lookup call is asynchronus, reset the value so that it is revalidated.\n    this.setValue(this.value);\n    // also select the button (the line above does not change the value, therefore _valueChanged is not called)\n    this.selectButton(this.getButtonForRadioValue(this.value));\n  }\n\n  _clearLookupStatus() {\n    this.setLookupStatus(null);\n  }\n\n  setLookupStatus(lookupStatus) {\n    this.setProperty('lookupStatus', lookupStatus);\n    if (this.rendered) {\n      this._renderErrorStatus();\n    }\n  }\n\n  _errorStatus() {\n    return this.lookupStatus || this.errorStatus;\n  }\n\n  _createLookupRowRadioButton(lookupRow) {\n    let button = {\n      parent: this,\n      label: lookupRow.text,\n      radioValue: lookupRow.key,\n      lookupRow: lookupRow\n    };\n\n    if (lookupRow.iconId) {\n      button.iconId = lookupRow.iconId;\n    }\n    if (lookupRow.tooltipText) {\n      button.tooltipText = lookupRow.tooltipText;\n    }\n    if (lookupRow.backgroundColor) {\n      button.backgroundColor = lookupRow.backgroundColor;\n    }\n    if (lookupRow.foregroundColor) {\n      button.foregroundColor = lookupRow.foregroundColor;\n    }\n    if (lookupRow.font) {\n      button.font = lookupRow.font;\n    }\n    if (lookupRow.enabled === false) {\n      button.enabled = false;\n    }\n    if (lookupRow.active === false) {\n      button.visible = false;\n    }\n    if (lookupRow.cssClass) {\n      button.cssClass = lookupRow.cssClass;\n    }\n\n    return scout.create('RadioButton', button);\n  }\n\n  clone(model, options) {\n    let clone = super.clone(model, options);\n    this._deepCloneProperties(clone, 'fields', options);\n    clone._initButtons();\n    return clone;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}