{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTreeNavigationKeyStroke, arrays, keys } from '../../index';\nexport default class TreeNavigationUpKeyStroke extends AbstractTreeNavigationKeyStroke {\n  constructor(tree, modifierBitMask) {\n    super(tree, modifierBitMask);\n    this.which = [keys.UP];\n    this.renderingHints.text = '↑';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    };\n  }\n  _computeNewSelection(currentNode) {\n    let nodes = this.field.visibleNodesFlat;\n    if (nodes.length === 0) {\n      return;\n    }\n    if (!currentNode) {\n      return arrays.last(nodes);\n    }\n    return nodes[nodes.indexOf(currentNode) - 1];\n  }\n}","map":{"version":3,"names":["AbstractTreeNavigationKeyStroke","arrays","keys","TreeNavigationUpKeyStroke","constructor","tree","modifierBitMask","which","UP","renderingHints","text","$drawingArea","event","newSelectedNode","_computeNewSelection","_treeCurrentNode","$node","currentNode","nodes","field","visibleNodesFlat","length","last","indexOf"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/keystrokes/TreeNavigationUpKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTreeNavigationKeyStroke, arrays, keys} from '../../index';\n\nexport default class TreeNavigationUpKeyStroke extends AbstractTreeNavigationKeyStroke {\n\n  constructor(tree, modifierBitMask) {\n    super(tree, modifierBitMask);\n    this.which = [keys.UP];\n    this.renderingHints.text = '↑';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    };\n  }\n\n  _computeNewSelection(currentNode) {\n    let nodes = this.field.visibleNodesFlat;\n    if (nodes.length === 0) {\n      return;\n    }\n    if (!currentNode) {\n      return arrays.last(nodes);\n    }\n    return nodes[nodes.indexOf(currentNode) - 1];\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,+BAA+B,EAAEC,MAAM,EAAEC,IAAI,QAAO,aAAa;AAEzE,eAAe,MAAMC,yBAAyB,SAASH,+BAA+B,CAAC;EAErFI,WAAW,CAACC,IAAI,EAAEC,eAAe,EAAE;IACjC,KAAK,CAACD,IAAI,EAAEC,eAAe,CAAC;IAC5B,IAAI,CAACC,KAAK,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC;IACtB,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACD,cAAc,CAACE,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,eAAe,GAAG,IAAI,CAACC,oBAAoB,CAACF,KAAK,CAACG,gBAAgB,CAAC;MACvE,IAAIF,eAAe,EAAE;QACnB,OAAOA,eAAe,CAACG,KAAK;MAC9B;IACF,CAAC;EACH;EAEAF,oBAAoB,CAACG,WAAW,EAAE;IAChC,IAAIC,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,gBAAgB;IACvC,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACA,IAAI,CAACJ,WAAW,EAAE;MAChB,OAAOhB,MAAM,CAACqB,IAAI,CAACJ,KAAK,CAAC;IAC3B;IACA,OAAOA,KAAK,CAACA,KAAK,CAACK,OAAO,CAACN,WAAW,CAAC,GAAG,CAAC,CAAC;EAC9C;AACF"},"metadata":{},"sourceType":"module"}