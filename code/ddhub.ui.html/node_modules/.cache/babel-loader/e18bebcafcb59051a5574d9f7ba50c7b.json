{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, BenchColumn, DesktopTabSelectKeyStroke, FlexboxLayout, FlexboxLayoutData, HtmlComponent, KeyStrokeContext, scout, Splitter, styles, Table, Widget, widgets } from '../../index';\nimport $ from 'jquery';\nexport default class DesktopBench extends Widget {\n  constructor() {\n    super();\n    this.columns = [];\n    this.components = null;\n    this.tabBoxMap = {}; // [key=viewId, value=SimpleTabBox instance]\n    this._removeViewInProgress = 0;\n    this.changingCounter = 0;\n    this.changed = false;\n    this.layoutCacheKey = [];\n    this._desktopOutlineChangeHandler = this._onDesktopOutlineChange.bind(this);\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._outlineNodesSelectedHandler = this._onOutlineNodesSelected.bind(this);\n    this._outlinePageChangedHandler = this._onOutlinePageChanged.bind(this);\n    this._outlinePropertyChangeHandler = this._onOutlinePropertyChange.bind(this);\n    this._outlineContentDestroyHandler = this._onOutlineContentDestroy.bind(this);\n    this._outlineContentCssClassChangeHandler = this._onOutlineContentCssClassChange.bind(this);\n\n    // event listener functions\n    this._viewAddHandler = this._onViewAdd.bind(this);\n    this._viewRemoveHandler = this._onViewRemove.bind(this);\n    this._viewActivateHandler = this._onViewActivate.bind(this);\n    this._viewDeactivateHandler = this._onViewDeactivate.bind(this);\n    this._desktopAnimationEndHandler = this._onDesktopAnimationEnd.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    DesktopBench.VIEW_MIN_HEIGHT = $.pxToNumber(styles.get('view-tab-box', 'min-height').minHeight);\n    DesktopBench.VIEW_MIN_WIDTH = $.pxToNumber(styles.get('view-tab-box', 'min-width').minWidth);\n    this.desktop = this.session.desktop;\n    this.setLayoutData(this.desktop.benchLayoutData);\n    this._createColumns();\n    this.headerTabArea = model.headerTabArea;\n    // controller for headerTabArea\n    if (this.headerTabArea) {\n      this.headerTabAreaController = scout.create('HeaderTabBoxController');\n      this.headerTabAreaController.install(this, this.headerTabArea);\n    }\n    this.outlineContentVisible = scout.nvl(model.outlineContentVisible, true);\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n  _setTabArea(headerTabArea) {\n    this.headerTabArea = headerTabArea;\n    if (this.headerTabAreaController) {\n      this.headerTabAreaController.install(this, this.headerTabArea);\n      // for all views\n      let tabBox = this.getTabBox('C');\n      tabBox.viewStack.slice().reverse().forEach(function (view) {\n        this.headerTabAreaController._onViewAdd({\n          view: view\n        });\n        if (tabBox.currentView === view) {\n          this.headerTabAreaController._onViewActivate({\n            view: view\n          });\n        }\n      }, this);\n      // ensure the correct view tab area is visible (header or center part)\n      this.headerTabAreaController._onViewsChanged();\n    }\n  }\n  _createColumns() {\n    let layoutData = this.getLayoutData(),\n      columnLayoutData = [];\n    if (layoutData) {\n      columnLayoutData = this.getLayoutData().getColumns();\n    }\n    for (let i = 0; i < 3; i++) {\n      let cacheKey = this.layoutCacheKey.slice();\n      if (cacheKey.length > 0) {\n        cacheKey.push('column' + i);\n      }\n      let column = scout.create('BenchColumn', {\n        parent: this,\n        layoutData: columnLayoutData[i],\n        cacheKey: cacheKey,\n        cssClass: DesktopBench.VIEW_AREA_COLUMN_CLASSES[i]\n      });\n      column.on('viewAdd', this._viewAddHandler);\n      column.on('viewRemove', this._viewRemoveHandler);\n      column.on('viewActivate', this._viewActivateHandler);\n      column.on('viewDeactivate', this._viewDeactivateHandler);\n      this.columns.push(column);\n    }\n  }\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke(new DesktopTabSelectKeyStroke(this.desktop));\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-bench');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n    this.htmlComp.layoutData = this.getLayoutData();\n    this._renderColumns();\n    this._revalidateSplitters();\n    this._renderNavigationHandleVisible();\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n  }\n  _createLayout() {\n    return new FlexboxLayout(FlexboxLayout.Direction.ROW, this.layoutCacheKey);\n  }\n  visibleColumns() {\n    return this.columns.filter(column => {\n      return column.hasViews();\n    });\n  }\n  _renderColumns() {\n    this.visibleColumns().forEach(function (column) {\n      this._renderColumn(column);\n    }, this);\n    this.updateFirstLastMarker();\n  }\n  _renderColumn(column) {\n    if (!column || column.rendered) {\n      return;\n    }\n    column.render();\n  }\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n  }\n  updateFirstLastMarker() {\n    widgets.updateFirstLastMarker(this.visibleColumns());\n  }\n  _renderOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n\n    // Reset view tab relevant properties to make sure no tab is visible for the outline content\n    delete this.outlineContent.title;\n    delete this.outlineContent.subTitle;\n    delete this.outlineContent.iconId;\n\n    // bring the view to top if the desktop is not in background.\n    this.addView(this.outlineContent, !this.desktop.inBackground);\n    if (this.desktop.rendered) {\n      // Request focus on first element in outline content\n      this.session.focusManager.validateFocus();\n    }\n  }\n  _removeOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.removeView(this.outlineContent, false);\n  }\n  _createNavigationHandle() {\n    return scout.create('DesktopNavigationHandle', {\n      parent: this,\n      leftVisible: false\n    });\n  }\n  _renderNavigationHandle() {\n    if (this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle = this._createNavigationHandle();\n    this.navigationHandle.render();\n    this.navigationHandle.addCssClass('navigation-closed');\n    this.navigationHandle.on('action', this._onNavigationHandleAction.bind(this));\n  }\n  _removeNavigationHandle() {\n    if (!this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle.destroy();\n    this.navigationHandle = null;\n  }\n  _renderNavigationHandleVisible() {\n    if (this.navigationHandleVisible) {\n      this._renderNavigationHandle();\n    } else {\n      this._removeNavigationHandle();\n    }\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n\n  /**\n   * is called in post render of desktop used to initialize the ui state. E.g. show default views\n   */\n  postRender() {\n    this.columns.forEach(column => {\n      column.postRender();\n    });\n  }\n  setChanging(changing) {\n    if (changing) {\n      this.changingCounter++;\n    } else {\n      this.changingCounter--;\n    }\n    if (this.changingCounter === 0 && this.changed && this.rendered) {\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n      this.changed = false;\n    }\n  }\n  updateLayoutData(layoutData) {\n    if (this.getLayoutData() === layoutData) {\n      return;\n    }\n    this.setLayoutData(layoutData);\n\n    // update columns\n    let columnDatas = layoutData.getColumns();\n    this.columns.forEach((c, i) => {\n      let cacheKey;\n      if (this.layoutCacheKey && this.layoutCacheKey.length > 0) {\n        cacheKey = this.layoutCacheKey.slice();\n        cacheKey.push('column' + i);\n      }\n      c.updateLayoutData(columnDatas[i], cacheKey);\n    });\n    if (this.rendered) {\n      this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n    this._updateSplitterMovable();\n  }\n  setLayoutData(layoutData) {\n    if (this.layoutData === layoutData) {\n      return;\n    }\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n    this.layoutCacheKey = [];\n    if (layoutData.cacheKey) {\n      this.layoutCacheKey.push(layoutData.cacheKey);\n    }\n  }\n  getLayoutData() {\n    return this.layoutData;\n  }\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n  setOutline(outline) {\n    if (this.outline) {\n      this.outline.off('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.off('pageChanged', this._outlinePageChangedHandler);\n      this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this._setProperty('outline', outline);\n    if (this.outline) {\n      this.outline.on('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.on('pageChanged', this._outlinePageChangedHandler);\n      this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this.updateOutlineContent();\n  }\n  setOutlineContent(content) {\n    let oldContent = this.outlineContent;\n    if (this.outlineContent === content) {\n      return;\n    }\n    if (oldContent) {\n      oldContent.off('destroy', this._outlineContentDestroyHandler);\n      oldContent.off('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n    }\n    if (this.rendered) {\n      this._removeOutlineContent();\n    }\n    // add a destroy listener to the outline-content, so we can reset the property - otherwise we'd work\n    // with a potentially destroyed content which would cause an error later, when we try to render the\n    // bench with the outline-content.\n    if (content) {\n      content.one('destroy', this._outlineContentDestroyHandler);\n      content.on('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n    }\n    this._setProperty('outlineContent', content);\n\n    // Inform header that outline content has changed\n    // (having a listener in the header is quite complex due to initialization phase, a direct call here is much easier to implement)\n    if (this.desktop.header) {\n      this.desktop.header.onBenchOutlineContentChange(content, oldContent);\n    }\n    this._updateOutlineContentHasDimmedBackground();\n    this._renderOutlineContent();\n  }\n  setOutlineContentVisible(visible) {\n    if (visible === this.outlineContentVisible) {\n      return;\n    }\n    this._setProperty('outlineContentVisible', visible);\n    this.updateOutlineContent();\n  }\n  bringToFront() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this._renderOutlineContent();\n  }\n  sendToBack() {\n    // nop\n  }\n  _updateOutlineContentHasDimmedBackground() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let hasDimmedBackground = false;\n    if (this.outlineContent.cssClass) {\n      hasDimmedBackground = this.outlineContent.cssClass.indexOf('dimmed-background') > -1;\n    }\n    this.toggleCssClass('outline-content-has-dimmed-background', hasDimmedBackground);\n  }\n  _computeDetailContentForPage(node) {\n    if (!node) {\n      throw new Error('called _showDetailContentForPage without node');\n    }\n    let content;\n    if (node.detailForm && node.detailFormVisible && node.detailFormVisibleByUi) {\n      content = node.detailForm;\n      content.uiCssClass = 'detail-form';\n    } else if (node.detailTable && node.detailTableVisible) {\n      content = node.detailTable;\n      content.uiCssClass = 'detail-table perma-focus';\n    }\n    return content;\n  }\n  updateOutlineContent() {\n    if (!this.outlineContentVisible || !this.outline) {\n      return;\n    }\n    let content,\n      selectedPage = this.outline.selectedNode();\n    if (selectedPage) {\n      // Outline does not support multi selection\n      content = this._computeDetailContentForPage(selectedPage);\n    } else {\n      content = this.outline._computeRootContent();\n    }\n    if (content) {\n      if (content instanceof Table) {\n        content.menuBar.addCssClass('main-menubar');\n        content.menuBar.removeCssClass('bounded');\n      }\n      content.displayViewId = 'C';\n    }\n    this.setOutlineContent(content);\n  }\n  updateOutlineContentDebounced() {\n    clearTimeout(this._updateOutlineContentTimeout);\n    this._updateOutlineContentTimeout = setTimeout(() => {\n      this.updateOutlineContent();\n    }, 300);\n  }\n  updateNavigationHandleVisibility() {\n    // Don't show handle if desktop says handle must not be visible\n    // Only show handle if navigation is invisible\n    this.setNavigationHandleVisible(this.desktop.navigationHandleVisible && !this.desktop.navigationVisible);\n  }\n  _onDesktopOutlineChange(event) {\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n  _onOutlineContentDestroy(event) {\n    this.setOutlineContent(null);\n  }\n  _onOutlineContentCssClassChange(event) {\n    this._updateOutlineContentHasDimmedBackground();\n  }\n  _onOutlineNodesSelected(event) {\n    if (event.debounce) {\n      this.updateOutlineContentDebounced();\n    } else {\n      this.updateOutlineContent();\n    }\n  }\n  _onOutlinePageChanged(event) {\n    let selectedPage = this.outline.selectedNode();\n    if (!event.page && !selectedPage || event.page === selectedPage) {\n      this.updateOutlineContent();\n    }\n  }\n  _onOutlinePropertyChange(event) {\n    if (scout.isOneOf(event.propertyName, ['defaultDetailForm', 'outlineOverview'])) {\n      this.updateOutlineContent();\n    }\n  }\n  _onDesktopNavigationVisibleChange(event) {\n    // If navigation gets visible: Hide handle immediately\n    // If navigation gets hidden using animation: Show handle when animation ends\n    if (this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n  _onDesktopNavigationHandleVisibleChange(event) {\n    this.updateNavigationHandleVisibility();\n  }\n  _onDesktopAnimationEnd(event) {\n    if (!this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n  _onBenchLayoutDataChange(event) {\n    this.updateLayoutData(this.desktop.benchLayoutData);\n  }\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationVisible') {\n      this._onDesktopNavigationVisibleChange();\n    } else if (event.propertyName === 'navigationHandleVisible') {\n      this._onDesktopNavigationHandleVisibleChange();\n    }\n    if (event.propertyName === 'benchLayoutData') {\n      this._onBenchLayoutDataChange();\n    }\n  }\n  _onNavigationHandleAction(event) {\n    this.desktop.enlargeNavigation();\n  }\n  _revalidateSplitters() {\n    // remove old splitters\n    if (this.components) {\n      this.components.forEach(comp => {\n        if (comp instanceof Splitter) {\n          comp.destroy();\n        }\n      });\n    }\n    this.components = this.visibleColumns().reduce((arr, col) => {\n      if (arr.length > 0) {\n        // add sep\n        let splitter = scout.create('Splitter', {\n          parent: this,\n          $anchor: arr[arr.length - 1].$container,\n          $root: this.$container,\n          maxRatio: 1\n        });\n        splitter.render();\n        splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n        splitter.$container.addClass('line');\n        arr.push(splitter);\n      }\n      arr.push(col);\n      return arr;\n    }, []);\n    // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n    this.components.filter(comp => {\n      return comp instanceof BenchColumn;\n    }).reduce((c1, c2, index) => {\n      if (index > 0) {\n        c2.$container.insertAfter(c1.$container);\n      }\n      return c2;\n    }, undefined);\n    this._updateSplitterMovable();\n  }\n  _updateSplitterMovable() {\n    if (!this.components) {\n      return;\n    }\n    this.components.forEach((c, i) => {\n      if (c instanceof Splitter) {\n        let componentsBefore = this.components.slice(0, i).reverse();\n        let componentsAfter = this.components.slice(i + 1);\n        // shrink\n        if (componentsBefore.filter(c => {\n          return c.getLayoutData().shrink > 0;\n        }).length > 0 && componentsAfter.filter(c => {\n          return c.getLayoutData().grow > 0;\n        }).length > 0) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        // grow\n        if (componentsBefore.filter(c => {\n          return c.getLayoutData().grow > 0;\n        }).length > 0 && componentsAfter.filter(c => {\n          return c.getLayoutData().shrink > 0;\n        }).length > 0) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        c.setEnabled(false);\n      }\n    });\n  }\n  _onSplitterMove(event) {\n    let splitter = event.source;\n    // noinspection UnnecessaryLocalVariableJS\n    let diff = event.position - splitter.htmlComp.location().x - splitter.htmlComp.margins().left - splitter.htmlComp.insets().left;\n    splitter.getLayoutData().diff = diff;\n    this.revalidateLayout();\n    splitter.getLayoutData().diff = null;\n    event.preventDefault();\n  }\n  _onViewAdd(event) {\n    this.trigger('viewAdd', {\n      view: event.view\n    });\n  }\n  _onViewRemove(event) {\n    this.trigger('viewRemove', {\n      view: event.view\n    });\n  }\n  _onViewActivate(event) {\n    let view = event.view;\n    if (this.outlineContent === view) {\n      this.desktop.bringOutlineToFront();\n    }\n    this.trigger('viewActivate', {\n      view: view\n    });\n  }\n  _onViewDeactivate(event) {\n    if (this.outlineContent === event.view) {\n      this.desktop.sendOutlineToBack();\n    }\n    this.trigger('viewDeactivate', {\n      view: event.view\n    });\n  }\n  addView(view, activate) {\n    // normalize displayViewId\n    switch (view.displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n      case 'N':\n      case 'C':\n      case 'S':\n      case 'NE':\n      case 'E':\n      case 'SE':\n        break;\n      default:\n        // map all other displayViewIds to center\n        view.displayViewId = 'C';\n        break;\n    }\n    let column = this._getColumn(view.displayViewId);\n    this.tabBoxMap[view.id] = column;\n    column.addView(view, activate);\n    if (this.rendered) {\n      if (column.viewCount() === 1) {\n        this._renderColumn(column);\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n        }\n      }\n    }\n  }\n  activateView(view) {\n    // activate views is only for existing views allowed.\n    if (!this.hasView(view)) {\n      return;\n    }\n    let column = this._getColumn(view.displayViewId);\n    if (column) {\n      column.activateView(view);\n    }\n  }\n  _getColumn(displayViewId) {\n    let column;\n    switch (displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.LEFT];\n        break;\n      case 'NE':\n      case 'E':\n      case 'SE':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.RIGHT];\n        break;\n      default:\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.CENTER];\n        break;\n    }\n    return column;\n  }\n  removeView(view, showSiblingView) {\n    let column = this.tabBoxMap[view.id];\n    if (column) {\n      this._removeViewInProgress++;\n      column.removeView(view, showSiblingView);\n      this._removeViewInProgress--;\n      delete this.tabBoxMap[view.id];\n      // remove if empty\n      if (this.rendered && column.viewCount() === 0 && this._removeViewInProgress === 0) {\n        column.remove();\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n        }\n      }\n    }\n  }\n  getComponents() {\n    return this.components;\n  }\n  getTabBox(displayViewId) {\n    let viewColumn = this._getColumn(displayViewId);\n    if (!viewColumn) {\n      return;\n    }\n    return viewColumn.getTabBox(displayViewId);\n  }\n  visibleTabBoxes() {\n    return this.visibleColumns().reduce((arr, column) => {\n      arrays.pushAll(arr, column.visibleTabBoxes());\n      return arr;\n    }, []);\n  }\n  hasView(view) {\n    return this.columns.filter(column => {\n      return column.hasView(view);\n    }).length > 0;\n  }\n  getViews(displayViewId) {\n    return this.columns.reduce((arr, column) => {\n      arrays.pushAll(arr, column.getViews(displayViewId));\n      return arr;\n    }, []);\n  }\n  getViewTab(view) {\n    let viewTab = null;\n    this.getTabs().some(vt => {\n      if (vt.view === view) {\n        viewTab = vt;\n        return true;\n      }\n      return false;\n    });\n    return viewTab;\n  }\n  getTabs() {\n    let tabs = [];\n    // consider right order\n    tabs = tabs.concat(this.getTabBox('NW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('W').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('N').getController().getTabs());\n    if (this.headerTabAreaController) {\n      tabs = tabs.concat(this.headerTabAreaController.getTabs());\n    } else {\n      tabs = tabs.concat(this.getTabBox('C').getController().getTabs());\n    }\n    tabs = tabs.concat(this.getTabBox('S').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('NE').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('E').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SE').getController().getTabs());\n    return tabs;\n  }\n\n  /**\n   * @returns {array} all the currently active views (the selected ones) of all the visible tab boxes\n   */\n  activeViews() {\n    let activeViews = [];\n    this.visibleColumns().forEach(column => {\n      column.visibleTabBoxes().forEach(tabBox => {\n        activeViews.push(tabBox.currentView);\n      });\n    });\n    return activeViews;\n  }\n}\n_defineProperty(DesktopBench, \"VIEW_MIN_HEIGHT\", null);\n_defineProperty(DesktopBench, \"VIEW_MIN_WIDTH\", null);\n_defineProperty(DesktopBench, \"VIEW_AREA_COLUMN_INDEX\", {\n  LEFT: 0,\n  CENTER: 1,\n  RIGHT: 2\n});\n_defineProperty(DesktopBench, \"VIEW_AREA_COLUMN_CLASSES\", ['west', 'center', 'east']);","map":{"version":3,"names":["arrays","BenchColumn","DesktopTabSelectKeyStroke","FlexboxLayout","FlexboxLayoutData","HtmlComponent","KeyStrokeContext","scout","Splitter","styles","Table","Widget","widgets","$","DesktopBench","constructor","columns","components","tabBoxMap","_removeViewInProgress","changingCounter","changed","layoutCacheKey","_desktopOutlineChangeHandler","_onDesktopOutlineChange","bind","_desktopPropertyChangeHandler","_onDesktopPropertyChange","_outlineNodesSelectedHandler","_onOutlineNodesSelected","_outlinePageChangedHandler","_onOutlinePageChanged","_outlinePropertyChangeHandler","_onOutlinePropertyChange","_outlineContentDestroyHandler","_onOutlineContentDestroy","_outlineContentCssClassChangeHandler","_onOutlineContentCssClassChange","_viewAddHandler","_onViewAdd","_viewRemoveHandler","_onViewRemove","_viewActivateHandler","_onViewActivate","_viewDeactivateHandler","_onViewDeactivate","_desktopAnimationEndHandler","_onDesktopAnimationEnd","_init","model","VIEW_MIN_HEIGHT","pxToNumber","get","minHeight","VIEW_MIN_WIDTH","minWidth","desktop","session","setLayoutData","benchLayoutData","_createColumns","headerTabArea","headerTabAreaController","create","install","outlineContentVisible","nvl","setOutline","outline","updateNavigationHandleVisibility","_setTabArea","tabBox","getTabBox","viewStack","slice","reverse","forEach","view","currentView","_onViewsChanged","layoutData","getLayoutData","columnLayoutData","getColumns","i","cacheKey","length","push","column","parent","cssClass","VIEW_AREA_COLUMN_CLASSES","on","_initKeyStrokeContext","desktopKeyStrokeContext","invokeAcceptInputOnActiveValueField","$bindTarget","$container","$scopeTarget","registerKeyStroke","_render","$parent","appendDiv","htmlComp","setLayout","_createLayout","_renderColumns","_revalidateSplitters","_renderNavigationHandleVisible","keyStrokeManager","installKeyStrokeContext","Direction","ROW","visibleColumns","filter","hasViews","_renderColumn","updateFirstLastMarker","rendered","render","_remove","off","uninstallKeyStrokeContext","_renderOutlineContent","outlineContent","title","subTitle","iconId","addView","inBackground","focusManager","validateFocus","_removeOutlineContent","removeView","_createNavigationHandle","leftVisible","_renderNavigationHandle","navigationHandle","addCssClass","_onNavigationHandleAction","_removeNavigationHandle","destroy","navigationHandleVisible","toggleClass","postRender","setChanging","changing","layout","reset","invalidateLayoutTree","updateLayoutData","columnDatas","c","setCacheKey","_updateSplitterMovable","setNavigationHandleVisible","visible","setProperty","_setProperty","updateOutlineContent","setOutlineContent","content","oldContent","one","header","onBenchOutlineContentChange","_updateOutlineContentHasDimmedBackground","setOutlineContentVisible","bringToFront","sendToBack","hasDimmedBackground","indexOf","toggleCssClass","_computeDetailContentForPage","node","Error","detailForm","detailFormVisible","detailFormVisibleByUi","uiCssClass","detailTable","detailTableVisible","selectedPage","selectedNode","_computeRootContent","menuBar","removeCssClass","displayViewId","updateOutlineContentDebounced","clearTimeout","_updateOutlineContentTimeout","setTimeout","navigationVisible","event","debounce","page","isOneOf","propertyName","_onDesktopNavigationVisibleChange","_onDesktopNavigationHandleVisibleChange","_onBenchLayoutDataChange","enlargeNavigation","comp","reduce","arr","col","splitter","$anchor","$root","maxRatio","fixed","withOrder","order","addClass","c1","c2","index","insertAfter","undefined","componentsBefore","componentsAfter","shrink","grow","setEnabled","_onSplitterMove","source","diff","position","location","x","margins","left","insets","revalidateLayout","preventDefault","trigger","bringOutlineToFront","sendOutlineToBack","activate","_getColumn","id","viewCount","activateView","hasView","VIEW_AREA_COLUMN_INDEX","LEFT","RIGHT","CENTER","showSiblingView","remove","getComponents","viewColumn","visibleTabBoxes","pushAll","getViews","getViewTab","viewTab","getTabs","some","vt","tabs","concat","getController","activeViews"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/bench/DesktopBench.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, BenchColumn, DesktopTabSelectKeyStroke, FlexboxLayout, FlexboxLayoutData, HtmlComponent, KeyStrokeContext, scout, Splitter, styles, Table, Widget, widgets} from '../../index';\nimport $ from 'jquery';\n\nexport default class DesktopBench extends Widget {\n\n  constructor() {\n    super();\n    this.columns = [];\n    this.components = null;\n    this.tabBoxMap = {}; // [key=viewId, value=SimpleTabBox instance]\n    this._removeViewInProgress = 0;\n    this.changingCounter = 0;\n    this.changed = false;\n    this.layoutCacheKey = [];\n\n    this._desktopOutlineChangeHandler = this._onDesktopOutlineChange.bind(this);\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._outlineNodesSelectedHandler = this._onOutlineNodesSelected.bind(this);\n    this._outlinePageChangedHandler = this._onOutlinePageChanged.bind(this);\n    this._outlinePropertyChangeHandler = this._onOutlinePropertyChange.bind(this);\n    this._outlineContentDestroyHandler = this._onOutlineContentDestroy.bind(this);\n    this._outlineContentCssClassChangeHandler = this._onOutlineContentCssClassChange.bind(this);\n\n    // event listener functions\n    this._viewAddHandler = this._onViewAdd.bind(this);\n    this._viewRemoveHandler = this._onViewRemove.bind(this);\n    this._viewActivateHandler = this._onViewActivate.bind(this);\n    this._viewDeactivateHandler = this._onViewDeactivate.bind(this);\n\n    this._desktopAnimationEndHandler = this._onDesktopAnimationEnd.bind(this);\n  }\n\n  static VIEW_MIN_HEIGHT = null; // Configured in sizes.css\n  static VIEW_MIN_WIDTH = null; // Configured in sizes.css\n\n  static VIEW_AREA_COLUMN_INDEX = {\n    LEFT: 0,\n    CENTER: 1,\n    RIGHT: 2\n  };\n\n  static VIEW_AREA_COLUMN_CLASSES = [\n    'west',\n    'center',\n    'east'\n  ];\n\n  _init(model) {\n    super._init(model);\n\n    DesktopBench.VIEW_MIN_HEIGHT = $.pxToNumber(styles.get('view-tab-box', 'min-height').minHeight);\n    DesktopBench.VIEW_MIN_WIDTH = $.pxToNumber(styles.get('view-tab-box', 'min-width').minWidth);\n\n    this.desktop = this.session.desktop;\n\n    this.setLayoutData(this.desktop.benchLayoutData);\n    this._createColumns();\n    this.headerTabArea = model.headerTabArea;\n    // controller for headerTabArea\n    if (this.headerTabArea) {\n      this.headerTabAreaController = scout.create('HeaderTabBoxController');\n      this.headerTabAreaController.install(this, this.headerTabArea);\n    }\n    this.outlineContentVisible = scout.nvl(model.outlineContentVisible, true);\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n\n  _setTabArea(headerTabArea) {\n    this.headerTabArea = headerTabArea;\n    if (this.headerTabAreaController) {\n      this.headerTabAreaController.install(this, this.headerTabArea);\n      // for all views\n      let tabBox = this.getTabBox('C');\n      tabBox.viewStack.slice().reverse().forEach(function(view) {\n        this.headerTabAreaController._onViewAdd({\n          view: view\n        });\n        if (tabBox.currentView === view) {\n          this.headerTabAreaController._onViewActivate({\n            view: view\n          });\n        }\n      }, this);\n      // ensure the correct view tab area is visible (header or center part)\n      this.headerTabAreaController._onViewsChanged();\n    }\n  }\n\n  _createColumns() {\n    let layoutData = this.getLayoutData(),\n      columnLayoutData = [];\n\n    if (layoutData) {\n      columnLayoutData = this.getLayoutData().getColumns();\n    }\n    for (let i = 0; i < 3; i++) {\n      let cacheKey = this.layoutCacheKey.slice();\n      if (cacheKey.length > 0) {\n        cacheKey.push('column' + i);\n      }\n      let column = scout.create('BenchColumn', {\n        parent: this,\n        layoutData: columnLayoutData[i],\n        cacheKey: cacheKey,\n        cssClass: DesktopBench.VIEW_AREA_COLUMN_CLASSES[i]\n      });\n      column.on('viewAdd', this._viewAddHandler);\n      column.on('viewRemove', this._viewRemoveHandler);\n      column.on('viewActivate', this._viewActivateHandler);\n      column.on('viewDeactivate', this._viewDeactivateHandler);\n      this.columns.push(column);\n    }\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke(new DesktopTabSelectKeyStroke(this.desktop));\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-bench');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this.htmlComp.setLayout(this._createLayout());\n    this.htmlComp.layoutData = this.getLayoutData();\n\n    this._renderColumns();\n    this._revalidateSplitters();\n    this._renderNavigationHandleVisible();\n\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n  }\n\n  _createLayout() {\n    return new FlexboxLayout(FlexboxLayout.Direction.ROW, this.layoutCacheKey);\n  }\n\n  visibleColumns() {\n    return this.columns.filter(column => {\n      return column.hasViews();\n    });\n  }\n\n  _renderColumns() {\n    this.visibleColumns().forEach(function(column) {\n      this._renderColumn(column);\n    }, this);\n    this.updateFirstLastMarker();\n  }\n\n  _renderColumn(column) {\n    if (!column || column.rendered) {\n      return;\n    }\n    column.render();\n  }\n\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n  }\n\n  updateFirstLastMarker() {\n    widgets.updateFirstLastMarker(this.visibleColumns());\n  }\n\n  _renderOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n\n    // Reset view tab relevant properties to make sure no tab is visible for the outline content\n    delete this.outlineContent.title;\n    delete this.outlineContent.subTitle;\n    delete this.outlineContent.iconId;\n\n    // bring the view to top if the desktop is not in background.\n    this.addView(this.outlineContent, !this.desktop.inBackground);\n\n    if (this.desktop.rendered) {\n      // Request focus on first element in outline content\n      this.session.focusManager.validateFocus();\n    }\n  }\n\n  _removeOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.removeView(this.outlineContent, false);\n  }\n\n  _createNavigationHandle() {\n    return scout.create('DesktopNavigationHandle', {\n      parent: this,\n      leftVisible: false\n    });\n  }\n\n  _renderNavigationHandle() {\n    if (this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle = this._createNavigationHandle();\n    this.navigationHandle.render();\n    this.navigationHandle.addCssClass('navigation-closed');\n    this.navigationHandle.on('action', this._onNavigationHandleAction.bind(this));\n  }\n\n  _removeNavigationHandle() {\n    if (!this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle.destroy();\n    this.navigationHandle = null;\n  }\n\n  _renderNavigationHandleVisible() {\n    if (this.navigationHandleVisible) {\n      this._renderNavigationHandle();\n    } else {\n      this._removeNavigationHandle();\n    }\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n\n  /**\n   * is called in post render of desktop used to initialize the ui state. E.g. show default views\n   */\n  postRender() {\n    this.columns.forEach(column => {\n      column.postRender();\n    });\n  }\n\n  setChanging(changing) {\n    if (changing) {\n      this.changingCounter++;\n    } else {\n      this.changingCounter--;\n    }\n    if (this.changingCounter === 0 && this.changed && this.rendered) {\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n      this.changed = false;\n    }\n  }\n\n  updateLayoutData(layoutData) {\n    if (this.getLayoutData() === layoutData) {\n      return;\n    }\n    this.setLayoutData(layoutData);\n\n    // update columns\n    let columnDatas = layoutData.getColumns();\n\n    this.columns.forEach((c, i) => {\n      let cacheKey;\n      if (this.layoutCacheKey && this.layoutCacheKey.length > 0) {\n        cacheKey = this.layoutCacheKey.slice();\n        cacheKey.push('column' + i);\n      }\n      c.updateLayoutData(columnDatas[i], cacheKey);\n    });\n    if (this.rendered) {\n      this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n    this._updateSplitterMovable();\n  }\n\n  setLayoutData(layoutData) {\n    if (this.layoutData === layoutData) {\n      return;\n    }\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n    this.layoutCacheKey = [];\n    if (layoutData.cacheKey) {\n      this.layoutCacheKey.push(layoutData.cacheKey);\n    }\n  }\n\n  getLayoutData() {\n    return this.layoutData;\n  }\n\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n\n  setOutline(outline) {\n    if (this.outline) {\n      this.outline.off('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.off('pageChanged', this._outlinePageChangedHandler);\n      this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this._setProperty('outline', outline);\n    if (this.outline) {\n      this.outline.on('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.on('pageChanged', this._outlinePageChangedHandler);\n      this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this.updateOutlineContent();\n  }\n\n  setOutlineContent(content) {\n    let oldContent = this.outlineContent;\n    if (this.outlineContent === content) {\n      return;\n    }\n    if (oldContent) {\n      oldContent.off('destroy', this._outlineContentDestroyHandler);\n      oldContent.off('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n    }\n    if (this.rendered) {\n      this._removeOutlineContent();\n    }\n    // add a destroy listener to the outline-content, so we can reset the property - otherwise we'd work\n    // with a potentially destroyed content which would cause an error later, when we try to render the\n    // bench with the outline-content.\n    if (content) {\n      content.one('destroy', this._outlineContentDestroyHandler);\n      content.on('propertyChange:cssClass', this._outlineContentCssClassChangeHandler);\n    }\n\n    this._setProperty('outlineContent', content);\n\n    // Inform header that outline content has changed\n    // (having a listener in the header is quite complex due to initialization phase, a direct call here is much easier to implement)\n    if (this.desktop.header) {\n      this.desktop.header.onBenchOutlineContentChange(content, oldContent);\n    }\n\n    this._updateOutlineContentHasDimmedBackground();\n\n    this._renderOutlineContent();\n  }\n\n  setOutlineContentVisible(visible) {\n    if (visible === this.outlineContentVisible) {\n      return;\n    }\n    this._setProperty('outlineContentVisible', visible);\n    this.updateOutlineContent();\n  }\n\n  bringToFront() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this._renderOutlineContent();\n  }\n\n  sendToBack() {\n    // nop\n  }\n\n  _updateOutlineContentHasDimmedBackground() {\n    if (!this.outlineContent) {\n      return;\n    }\n    let hasDimmedBackground = false;\n    if (this.outlineContent.cssClass) {\n      hasDimmedBackground = this.outlineContent.cssClass.indexOf('dimmed-background') > -1;\n    }\n    this.toggleCssClass('outline-content-has-dimmed-background', hasDimmedBackground);\n  }\n\n  _computeDetailContentForPage(node) {\n    if (!node) {\n      throw new Error('called _showDetailContentForPage without node');\n    }\n\n    let content;\n    if (node.detailForm && node.detailFormVisible && node.detailFormVisibleByUi) {\n      content = node.detailForm;\n      content.uiCssClass = 'detail-form';\n    } else if (node.detailTable && node.detailTableVisible) {\n      content = node.detailTable;\n      content.uiCssClass = 'detail-table perma-focus';\n    }\n\n    return content;\n  }\n\n  updateOutlineContent() {\n    if (!this.outlineContentVisible || !this.outline) {\n      return;\n    }\n    let content,\n      selectedPage = this.outline.selectedNode();\n    if (selectedPage) {\n      // Outline does not support multi selection\n      content = this._computeDetailContentForPage(selectedPage);\n    } else {\n      content = this.outline._computeRootContent();\n    }\n    if (content) {\n      if (content instanceof Table) {\n        content.menuBar.addCssClass('main-menubar');\n        content.menuBar.removeCssClass('bounded');\n      }\n      content.displayViewId = 'C';\n    }\n    this.setOutlineContent(content);\n  }\n\n  updateOutlineContentDebounced() {\n    clearTimeout(this._updateOutlineContentTimeout);\n    this._updateOutlineContentTimeout = setTimeout(() => {\n      this.updateOutlineContent();\n    }, 300);\n  }\n\n  updateNavigationHandleVisibility() {\n    // Don't show handle if desktop says handle must not be visible\n    // Only show handle if navigation is invisible\n    this.setNavigationHandleVisible(this.desktop.navigationHandleVisible && !this.desktop.navigationVisible);\n  }\n\n  _onDesktopOutlineChange(event) {\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n\n  _onOutlineContentDestroy(event) {\n    this.setOutlineContent(null);\n  }\n\n  _onOutlineContentCssClassChange(event) {\n    this._updateOutlineContentHasDimmedBackground();\n  }\n\n  _onOutlineNodesSelected(event) {\n    if (event.debounce) {\n      this.updateOutlineContentDebounced();\n    } else {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onOutlinePageChanged(event) {\n    let selectedPage = this.outline.selectedNode();\n    if (!event.page && !selectedPage || event.page === selectedPage) {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onOutlinePropertyChange(event) {\n    if (scout.isOneOf(event.propertyName, ['defaultDetailForm', 'outlineOverview'])) {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onDesktopNavigationVisibleChange(event) {\n    // If navigation gets visible: Hide handle immediately\n    // If navigation gets hidden using animation: Show handle when animation ends\n    if (this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n\n  _onDesktopNavigationHandleVisibleChange(event) {\n    this.updateNavigationHandleVisibility();\n  }\n\n  _onDesktopAnimationEnd(event) {\n    if (!this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n\n  _onBenchLayoutDataChange(event) {\n    this.updateLayoutData(this.desktop.benchLayoutData);\n  }\n\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationVisible') {\n      this._onDesktopNavigationVisibleChange();\n    } else if (event.propertyName === 'navigationHandleVisible') {\n      this._onDesktopNavigationHandleVisibleChange();\n    }\n    if (event.propertyName === 'benchLayoutData') {\n      this._onBenchLayoutDataChange();\n    }\n  }\n\n  _onNavigationHandleAction(event) {\n    this.desktop.enlargeNavigation();\n  }\n\n  _revalidateSplitters() {\n    // remove old splitters\n    if (this.components) {\n      this.components.forEach(comp => {\n        if (comp instanceof Splitter) {\n          comp.destroy();\n        }\n      });\n    }\n    this.components = this.visibleColumns()\n      .reduce((arr, col) => {\n        if (arr.length > 0) {\n          // add sep\n          let splitter = scout.create('Splitter', {\n            parent: this,\n            $anchor: arr[arr.length - 1].$container,\n            $root: this.$container,\n            maxRatio: 1\n          });\n          splitter.render();\n          splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n          splitter.$container.addClass('line');\n\n          arr.push(splitter);\n        }\n        arr.push(col);\n        return arr;\n      }, []);\n    // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n    this.components.filter(comp => {\n      return comp instanceof BenchColumn;\n    })\n      .reduce((c1, c2, index) => {\n        if (index > 0) {\n          c2.$container.insertAfter(c1.$container);\n        }\n        return c2;\n      }, undefined);\n    this._updateSplitterMovable();\n  }\n\n  _updateSplitterMovable() {\n    if (!this.components) {\n      return;\n    }\n    this.components.forEach((c, i) => {\n      if (c instanceof Splitter) {\n        let componentsBefore = this.components.slice(0, i).reverse();\n        let componentsAfter = this.components.slice(i + 1);\n        // shrink\n        if (\n          componentsBefore.filter(c => {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0 &&\n          componentsAfter.filter(c => {\n            return c.getLayoutData().grow > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        // grow\n        if (\n          componentsBefore.filter(c => {\n            return c.getLayoutData().grow > 0;\n          }).length > 0 &&\n          componentsAfter.filter(c => {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        c.setEnabled(false);\n\n      }\n    });\n  }\n\n  _onSplitterMove(event) {\n    let splitter = event.source;\n    // noinspection UnnecessaryLocalVariableJS\n    let diff = event.position - splitter.htmlComp.location().x - splitter.htmlComp.margins().left - splitter.htmlComp.insets().left;\n    splitter.getLayoutData().diff = diff;\n    this.revalidateLayout();\n    splitter.getLayoutData().diff = null;\n    event.preventDefault();\n  }\n\n  _onViewAdd(event) {\n    this.trigger('viewAdd', {\n      view: event.view\n    });\n  }\n\n  _onViewRemove(event) {\n    this.trigger('viewRemove', {\n      view: event.view\n    });\n  }\n\n  _onViewActivate(event) {\n    let view = event.view;\n    if (this.outlineContent === view) {\n      this.desktop.bringOutlineToFront();\n    }\n    this.trigger('viewActivate', {\n      view: view\n    });\n  }\n\n  _onViewDeactivate(event) {\n    if (this.outlineContent === event.view) {\n      this.desktop.sendOutlineToBack();\n    }\n    this.trigger('viewDeactivate', {\n      view: event.view\n    });\n  }\n\n  addView(view, activate) {\n    // normalize displayViewId\n    switch (view.displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n      case 'N':\n      case 'C':\n      case 'S':\n      case 'NE':\n      case 'E':\n      case 'SE':\n        break;\n      default:\n        // map all other displayViewIds to center\n        view.displayViewId = 'C';\n        break;\n    }\n    let column = this._getColumn(view.displayViewId);\n    this.tabBoxMap[view.id] = column;\n    column.addView(view, activate);\n\n    if (this.rendered) {\n      if (column.viewCount() === 1) {\n        this._renderColumn(column);\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n        }\n      }\n    }\n  }\n\n  activateView(view) {\n    // activate views is only for existing views allowed.\n    if (!this.hasView(view)) {\n      return;\n    }\n    let column = this._getColumn(view.displayViewId);\n    if (column) {\n      column.activateView(view);\n    }\n  }\n\n  _getColumn(displayViewId) {\n    let column;\n\n    switch (displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.LEFT];\n        break;\n      case 'NE':\n      case 'E':\n      case 'SE':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.RIGHT];\n        break;\n      default:\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.CENTER];\n        break;\n    }\n    return column;\n  }\n\n  removeView(view, showSiblingView) {\n    let column = this.tabBoxMap[view.id];\n    if (column) {\n      this._removeViewInProgress++;\n      column.removeView(view, showSiblingView);\n      this._removeViewInProgress--;\n      delete this.tabBoxMap[view.id];\n      // remove if empty\n      if (this.rendered && column.viewCount() === 0 && this._removeViewInProgress === 0) {\n        column.remove();\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n        }\n      }\n    }\n  }\n\n  getComponents() {\n    return this.components;\n  }\n\n  getTabBox(displayViewId) {\n    let viewColumn = this._getColumn(displayViewId);\n    if (!viewColumn) {\n      return;\n    }\n    return viewColumn.getTabBox(displayViewId);\n  }\n\n  visibleTabBoxes() {\n    return this.visibleColumns().reduce((arr, column) => {\n      arrays.pushAll(arr, column.visibleTabBoxes());\n      return arr;\n    }, []);\n  }\n\n  hasView(view) {\n    return this.columns.filter(column => {\n      return column.hasView(view);\n    }).length > 0;\n  }\n\n  getViews(displayViewId) {\n    return this.columns.reduce((arr, column) => {\n      arrays.pushAll(arr, column.getViews(displayViewId));\n      return arr;\n    }, []);\n  }\n\n  getViewTab(view) {\n    let viewTab = null;\n    this.getTabs().some(vt => {\n      if (vt.view === view) {\n        viewTab = vt;\n        return true;\n      }\n      return false;\n    });\n    return viewTab;\n  }\n\n  getTabs() {\n    let tabs = [];\n    // consider right order\n    tabs = tabs.concat(this.getTabBox('NW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('W').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('N').getController().getTabs());\n    if (this.headerTabAreaController) {\n      tabs = tabs.concat(this.headerTabAreaController.getTabs());\n    } else {\n      tabs = tabs.concat(this.getTabBox('C').getController().getTabs());\n    }\n    tabs = tabs.concat(this.getTabBox('S').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('NE').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('E').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SE').getController().getTabs());\n    return tabs;\n  }\n\n  /**\n   * @returns {array} all the currently active views (the selected ones) of all the visible tab boxes\n   */\n  activeViews() {\n    let activeViews = [];\n    this.visibleColumns().forEach(column => {\n      column.visibleTabBoxes().forEach(tabBox => {\n        activeViews.push(tabBox.currentView);\n      });\n    });\n    return activeViews;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}