{"ast":null,"code":"/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\n\n/**\n * This class is used to reset and restore styles in the DOM, so we can measure the preferred size of the table.\n */\nexport default class TableLayoutResetter {\n  constructor(table) {\n    this._table = table;\n    this._fillerWidth = null;\n    this.cssSelector = '.table';\n  }\n\n  /**\n   * Modifies the table in a way that the preferred width may be read.\n   * Removes explicit widths on rows, cells, fillers and sets display to inline-block.\n   */\n  modifyDom() {\n    this._table.$container.css('display', 'inline-block').css('width', 'auto').css('height', 'auto');\n    this._table.$data.css('display', 'inline-block');\n    this._modifyFiller(this._table.$fillBefore);\n    this._modifyFiller(this._table.$fillAfter);\n    this._modifyTableData(this._cssBackup);\n  }\n  restoreDom() {\n    this._table.$container.css('display', 'block').css('width', '100%').css('height', '100%');\n    this._table.$data.css('display', 'block');\n    this._restoreFiller(this._table.$fillBefore);\n    this._restoreFiller(this._table.$fillAfter);\n    this._modifyTableData(this._cssRestore);\n  }\n\n  /**\n   * Clears the given CSS property and stores the old value as data with prefix 'backup'\n   * which is used to restore the CSS property later.\n   */\n  _cssBackup($element, property) {\n    let oldValue = $element.css(property);\n    $element.css(property, '').data('backup' + property, oldValue);\n  }\n  _cssRestore($element, property) {\n    let dataProperty = 'backup' + property,\n      oldValue = $element.data(dataProperty);\n    $element.css(property, oldValue).removeData(dataProperty);\n  }\n\n  /**\n   * Go through all rows and cells and call the given modifyFunc (backup/restore) on each element.\n   */\n  _modifyTableData(modifyFunc) {\n    let that = this;\n    this._table.$rows().each(function () {\n      let $row = $(this);\n      modifyFunc($row, 'width');\n      that._table.$cellsForRow($row).each(function () {\n        let $cell = $(this);\n        modifyFunc($cell, 'min-width');\n        modifyFunc($cell, 'max-width');\n      });\n    });\n  }\n  _modifyFiller($filler) {\n    if ($filler) {\n      this._fillerWidth = $filler.css('width');\n      $filler.css('width', '');\n    }\n  }\n  _restoreFiller($filler) {\n    if ($filler) {\n      $filler.css('width', this._fillerWidth);\n    }\n  }\n}","map":{"version":3,"names":["$","TableLayoutResetter","constructor","table","_table","_fillerWidth","cssSelector","modifyDom","$container","css","$data","_modifyFiller","$fillBefore","$fillAfter","_modifyTableData","_cssBackup","restoreDom","_restoreFiller","_cssRestore","$element","property","oldValue","data","dataProperty","removeData","modifyFunc","that","$rows","each","$row","$cellsForRow","$cell","$filler"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/smartfield/TableLayoutResetter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\n\n/**\n * This class is used to reset and restore styles in the DOM, so we can measure the preferred size of the table.\n */\nexport default class TableLayoutResetter {\n\n  constructor(table) {\n    this._table = table;\n    this._fillerWidth = null;\n    this.cssSelector = '.table';\n  }\n\n  /**\n   * Modifies the table in a way that the preferred width may be read.\n   * Removes explicit widths on rows, cells, fillers and sets display to inline-block.\n   */\n  modifyDom() {\n    this._table.$container\n      .css('display', 'inline-block')\n      .css('width', 'auto')\n      .css('height', 'auto');\n    this._table.$data\n      .css('display', 'inline-block');\n\n    this._modifyFiller(this._table.$fillBefore);\n    this._modifyFiller(this._table.$fillAfter);\n    this._modifyTableData(this._cssBackup);\n  }\n\n  restoreDom() {\n    this._table.$container\n      .css('display', 'block')\n      .css('width', '100%')\n      .css('height', '100%');\n    this._table.$data\n      .css('display', 'block');\n\n    this._restoreFiller(this._table.$fillBefore);\n    this._restoreFiller(this._table.$fillAfter);\n    this._modifyTableData(this._cssRestore);\n  }\n\n  /**\n   * Clears the given CSS property and stores the old value as data with prefix 'backup'\n   * which is used to restore the CSS property later.\n   */\n  _cssBackup($element, property) {\n    let oldValue = $element.css(property);\n    $element\n      .css(property, '')\n      .data('backup' + property, oldValue);\n  }\n\n  _cssRestore($element, property) {\n    let dataProperty = 'backup' + property,\n      oldValue = $element.data(dataProperty);\n    $element\n      .css(property, oldValue)\n      .removeData(dataProperty);\n  }\n\n  /**\n   * Go through all rows and cells and call the given modifyFunc (backup/restore) on each element.\n   */\n  _modifyTableData(modifyFunc) {\n    let that = this;\n    this._table.$rows().each(function() {\n      let $row = $(this);\n      modifyFunc($row, 'width');\n      that._table.$cellsForRow($row).each(function() {\n        let $cell = $(this);\n        modifyFunc($cell, 'min-width');\n        modifyFunc($cell, 'max-width');\n      });\n    });\n  }\n\n  _modifyFiller($filler) {\n    if ($filler) {\n      this._fillerWidth = $filler.css('width');\n      $filler.css('width', '');\n    }\n  }\n\n  _restoreFiller($filler) {\n    if ($filler) {\n      $filler.css('width', this._fillerWidth);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}