{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { codes, scout, StaticLookupCall, strings } from '../index';\nexport default class CodeLookupCall extends StaticLookupCall {\n  constructor() {\n    super();\n    this.codeType = null;\n  }\n  _lookupRowByKey(key) {\n    let codeType = codes.codeType(this.codeType, true);\n    if (!codeType) {\n      return null;\n    }\n    return this._createLookupRow(codeType.optGet(key));\n  }\n  _lookupRowsByAll() {\n    return this._collectLookupRows();\n  }\n  _lookupRowsByText(text) {\n    return this._collectLookupRows(lookupRow => {\n      let lookupRowText = lookupRow.text || '';\n      return strings.startsWith(lookupRowText.toLowerCase(), text.toLowerCase());\n    });\n  }\n  _lookupRowsByRec(rec) {\n    return this._collectLookupRows(lookupRow => {\n      return lookupRow.parentKey === rec;\n    });\n  }\n  _collectLookupRows(predicate) {\n    let codeType = codes.codeType(this.codeType, true);\n    if (!codeType) {\n      return [];\n    }\n    let lookupRows = [];\n    codeType.visit(code => {\n      let lookupRow = this._createLookupRow(code);\n      if (!predicate || predicate(lookupRow)) {\n        lookupRows.push(lookupRow);\n      }\n    });\n    return lookupRows;\n  }\n  _createLookupRow(code) {\n    if (!code) {\n      return null;\n    }\n    return scout.create('LookupRow', {\n      key: code.id,\n      text: code.text(this.session.locale),\n      parentKey: code.parent && code.parent.id\n    });\n  }\n}","map":{"version":3,"names":["codes","scout","StaticLookupCall","strings","CodeLookupCall","constructor","codeType","_lookupRowByKey","key","_createLookupRow","optGet","_lookupRowsByAll","_collectLookupRows","_lookupRowsByText","text","lookupRow","lookupRowText","startsWith","toLowerCase","_lookupRowsByRec","rec","parentKey","predicate","lookupRows","visit","code","push","create","id","session","locale","parent"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/code/CodeLookupCall.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {codes, scout, StaticLookupCall, strings} from '../index';\n\nexport default class CodeLookupCall extends StaticLookupCall {\n\n  constructor() {\n    super();\n    this.codeType = null;\n  }\n\n  _lookupRowByKey(key) {\n    let codeType = codes.codeType(this.codeType, true);\n    if (!codeType) {\n      return null;\n    }\n    return this._createLookupRow(codeType.optGet(key));\n  }\n\n  _lookupRowsByAll() {\n    return this._collectLookupRows();\n  }\n\n  _lookupRowsByText(text) {\n    return this._collectLookupRows(lookupRow => {\n      let lookupRowText = lookupRow.text || '';\n      return strings.startsWith(lookupRowText.toLowerCase(), text.toLowerCase());\n    });\n  }\n\n  _lookupRowsByRec(rec) {\n    return this._collectLookupRows(lookupRow => {\n      return lookupRow.parentKey === rec;\n    });\n  }\n\n  _collectLookupRows(predicate) {\n    let codeType = codes.codeType(this.codeType, true);\n    if (!codeType) {\n      return [];\n    }\n    let lookupRows = [];\n    codeType.visit(code => {\n      let lookupRow = this._createLookupRow(code);\n      if (!predicate || predicate(lookupRow)) {\n        lookupRows.push(lookupRow);\n      }\n    });\n    return lookupRows;\n  }\n\n  _createLookupRow(code) {\n    if (!code) {\n      return null;\n    }\n    return scout.create('LookupRow', {\n      key: code.id,\n      text: code.text(this.session.locale),\n      parentKey: code.parent && code.parent.id\n    });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAK,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,OAAO,QAAO,UAAU;AAEhE,eAAe,MAAMC,cAAc,SAASF,gBAAgB,CAAC;EAE3DG,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEAC,eAAe,CAACC,GAAG,EAAE;IACnB,IAAIF,QAAQ,GAAGN,KAAK,CAACM,QAAQ,CAAC,IAAI,CAACA,QAAQ,EAAE,IAAI,CAAC;IAClD,IAAI,CAACA,QAAQ,EAAE;MACb,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACG,gBAAgB,CAACH,QAAQ,CAACI,MAAM,CAACF,GAAG,CAAC,CAAC;EACpD;EAEAG,gBAAgB,GAAG;IACjB,OAAO,IAAI,CAACC,kBAAkB,EAAE;EAClC;EAEAC,iBAAiB,CAACC,IAAI,EAAE;IACtB,OAAO,IAAI,CAACF,kBAAkB,CAACG,SAAS,IAAI;MAC1C,IAAIC,aAAa,GAAGD,SAAS,CAACD,IAAI,IAAI,EAAE;MACxC,OAAOX,OAAO,CAACc,UAAU,CAACD,aAAa,CAACE,WAAW,EAAE,EAAEJ,IAAI,CAACI,WAAW,EAAE,CAAC;IAC5E,CAAC,CAAC;EACJ;EAEAC,gBAAgB,CAACC,GAAG,EAAE;IACpB,OAAO,IAAI,CAACR,kBAAkB,CAACG,SAAS,IAAI;MAC1C,OAAOA,SAAS,CAACM,SAAS,KAAKD,GAAG;IACpC,CAAC,CAAC;EACJ;EAEAR,kBAAkB,CAACU,SAAS,EAAE;IAC5B,IAAIhB,QAAQ,GAAGN,KAAK,CAACM,QAAQ,CAAC,IAAI,CAACA,QAAQ,EAAE,IAAI,CAAC;IAClD,IAAI,CAACA,QAAQ,EAAE;MACb,OAAO,EAAE;IACX;IACA,IAAIiB,UAAU,GAAG,EAAE;IACnBjB,QAAQ,CAACkB,KAAK,CAACC,IAAI,IAAI;MACrB,IAAIV,SAAS,GAAG,IAAI,CAACN,gBAAgB,CAACgB,IAAI,CAAC;MAC3C,IAAI,CAACH,SAAS,IAAIA,SAAS,CAACP,SAAS,CAAC,EAAE;QACtCQ,UAAU,CAACG,IAAI,CAACX,SAAS,CAAC;MAC5B;IACF,CAAC,CAAC;IACF,OAAOQ,UAAU;EACnB;EAEAd,gBAAgB,CAACgB,IAAI,EAAE;IACrB,IAAI,CAACA,IAAI,EAAE;MACT,OAAO,IAAI;IACb;IACA,OAAOxB,KAAK,CAAC0B,MAAM,CAAC,WAAW,EAAE;MAC/BnB,GAAG,EAAEiB,IAAI,CAACG,EAAE;MACZd,IAAI,EAAEW,IAAI,CAACX,IAAI,CAAC,IAAI,CAACe,OAAO,CAACC,MAAM,CAAC;MACpCT,SAAS,EAAEI,IAAI,CAACM,MAAM,IAAIN,IAAI,CAACM,MAAM,CAACH;IACxC,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module"}