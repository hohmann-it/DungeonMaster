{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, fields, HtmlComponent, InputFieldKeyStrokeContext, keys, LookupCall, scout, strings, TagFieldContainerLayout, TagFieldDeleteKeyStroke, TagFieldEnterKeyStroke, TagFieldLayout, TagFieldNavigationKeyStroke, TagFieldOpenPopupKeyStroke, ValueField } from '../../../index';\nexport default class TagField extends ValueField {\n  constructor() {\n    super();\n    this.$field = null;\n    this.fieldHtmlComp = null;\n    this.popup = null;\n    this.lookupCall = null;\n    this._currentLookupCall = null;\n    this.tagBar = null;\n    this.maxLength = 500;\n    this.maxLengthHandler = scout.create('MaxLengthHandler', {\n      target: this\n    });\n  }\n  _init(model) {\n    super._init(model);\n    this.tagBar = scout.create('TagBar', {\n      parent: this,\n      tags: this.value,\n      clickable: model.clickable\n    });\n    this.tagBar.on('tagRemove', this._onTagRemove.bind(this));\n    this.on('propertyChange', this._onValueChange.bind(this));\n    this._setLookupCall(this.lookupCall);\n  }\n  _onTagRemove(event) {\n    this.removeTag(event.tag);\n  }\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.registerKeyStroke([new TagFieldEnterKeyStroke(this), new TagFieldNavigationKeyStroke(this._createFieldAdapter()), new TagFieldDeleteKeyStroke(this._createFieldAdapter()), new TagFieldOpenPopupKeyStroke(this)]);\n  }\n  _createKeyStrokeContext() {\n    return new InputFieldKeyStrokeContext();\n  }\n  _render() {\n    this.addContainer(this.$parent, 'tag-field', new TagFieldLayout(this));\n    this.addLabel();\n    this.addMandatoryIndicator();\n    let $fieldContainer = this.$container.appendDiv();\n    this.fieldHtmlComp = HtmlComponent.install($fieldContainer, this.session);\n    this.fieldHtmlComp.setLayout(new TagFieldContainerLayout(this));\n    this.tagBar.render($fieldContainer);\n    let $field = $fieldContainer.appendElement('<input>', 'field').attr('type', 'text') // So that css rules from main.less are applied\n    .on('keydown', this._onInputKeydown.bind(this)).on('keyup', this._onInputKeyup.bind(this)).on('input', this._onFieldInput.bind(this));\n    this.addFieldContainer($fieldContainer);\n    this.addField($field);\n    this.maxLengthHandler.install($field);\n    this.addStatus();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderValue();\n    this._renderMaxLength();\n  }\n  _renderValue() {\n    this.tagBar.updateTags();\n  }\n  _setValue(value) {\n    super._setValue(value);\n    if (this.tagBar) {\n      // required for _init case\n      this.tagBar.setTags(this.value /* do not use the function parameter here. instead use the member variable because the value might have changed in a validator. */);\n    }\n  }\n\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n  }\n  formatValue(value) {\n    // Info: value and displayText are not related in the TagField\n    return '';\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  _validateValue(value) {\n    let tags = arrays.ensure(value);\n    let result = [];\n    tags.forEach(tag => {\n      if (!strings.empty(tag)) {\n        tag = tag.toLowerCase();\n        if (result.indexOf(tag) < 0) {\n          result.push(tag);\n        }\n      }\n    });\n    return result;\n  }\n  _parseValue(displayText) {\n    let tags = arrays.ensure(this.value);\n    tags = tags.slice();\n    tags.push(displayText);\n    return tags;\n  }\n  _renderDisplayText() {\n    this.$field.val(this.displayText); // needs to be before super call (otherwise updateHasText fails)\n    super._renderDisplayText();\n    this._updateInputVisible();\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateInputVisible();\n  }\n  _renderFieldStyle() {\n    super._renderFieldStyle();\n    if (this.rendered) {\n      this.fieldHtmlComp.invalidateLayoutTree();\n    }\n  }\n  setMaxLength(maxLength) {\n    this.setProperty('maxLength', maxLength);\n  }\n  _renderMaxLength() {\n    this.maxLengthHandler.render();\n  }\n  _updateInputVisible() {\n    let visible,\n      oldVisible = !this.$field.isVisible();\n    if (this.enabledComputed) {\n      visible = true;\n    } else {\n      visible = strings.hasText(this.displayText);\n    }\n    this.$field.setVisible(visible);\n    // update tag-elements (must remove X when disabled)\n    if (visible !== oldVisible) {\n      this._renderValue();\n    }\n  }\n  _readDisplayText() {\n    return this.$field.val();\n  }\n  _clear() {\n    this.$field.val('');\n  }\n\n  /**\n   * @override\n   */\n  acceptInput(whileTyping) {\n    if (this.popup) {\n      if (this.popup.selectedRow()) {\n        this.popup.triggerLookupRowSelected();\n      } else {\n        this.closePopup();\n      }\n      return;\n    }\n    super.acceptInput(false);\n  }\n  _triggerAcceptInput() {\n    this.trigger('acceptInput', {\n      displayText: this.displayText,\n      value: this.value\n    });\n  }\n  aboutToBlurByMouseDown(target) {\n    if (fields.eventOutsideProposalField(this, target)) {\n      this.acceptInput(true);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldBlur(event) {\n    // We cannot call super until chooser popup has been closed (see #acceptInput)\n    this.closePopup();\n    super._onFieldBlur(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.blur();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldFocus(event) {\n    super._onFieldFocus(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.focus();\n    }\n  }\n  _onFieldInput() {\n    this._updateHasText();\n  }\n  addTag(text) {\n    let value = this._parseValue(text);\n    this.setValue(value);\n    this._triggerAcceptInput();\n  }\n  removeTag(tag) {\n    if (strings.empty(tag)) {\n      return;\n    }\n    tag = tag.toLowerCase();\n    let tags = arrays.ensure(this.value);\n    if (tags.indexOf(tag) === -1) {\n      return;\n    }\n    tags = tags.slice();\n    arrays.remove(tags, tag);\n    this.setValue(tags);\n    this._triggerAcceptInput();\n    // focus was previously on the removed tag, restore focus on the field.\n    this.focus();\n  }\n  _onInputKeydown(event) {\n    if (this._isNavigationKey(event) && this.popup) {\n      this.popup.delegateKeyEvent(event);\n    } else if (event.which === keys.ESC) {\n      this.closePopup();\n    }\n  }\n  _isNavigationKey(event) {\n    return scout.isOneOf(event.which, [keys.PAGE_UP, keys.PAGE_DOWN, keys.UP, keys.DOWN]);\n  }\n  _onInputKeyup(event) {\n    // Prevent chooser popup from being opened again, after it has been closed by pressing ESC\n    if (event.which === keys.ESC) {\n      return;\n    }\n    if (!this._isNavigationKey(event)) {\n      this._lookupByText(this.$field.val());\n    }\n  }\n  _lookupByText(text) {\n    if (!this.lookupCall) {\n      return null;\n    }\n    if (strings.empty(text) || text.length < 2) {\n      this.closePopup();\n      return;\n    }\n    this._currentLookupCall = this.lookupCall.cloneForText(text);\n    this.trigger('prepareLookupCall', {\n      lookupCall: this._currentLookupCall\n    });\n    return this._currentLookupCall.execute().always(() => {\n      this._currentLookupCall = null;\n    }).done(this._onLookupDone.bind(this));\n  }\n  _onLookupDone(result) {\n    try {\n      if (!this.rendered || !this.isFocused() || result.lookupRows.length === 0) {\n        this.closePopup();\n        return;\n      }\n      this.openPopup();\n      this.popup.setLookupResult(result);\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n  openPopup() {\n    if (this.popup) {\n      return;\n    }\n    this.popup = scout.create('TagChooserPopup', {\n      parent: this,\n      $anchor: this.$field,\n      boundToAnchor: true,\n      closeOnAnchorMouseDown: false,\n      field: this\n    });\n    this.popup.on('lookupRowSelected', this._onLookupRowSelected.bind(this));\n    this.popup.one('close', this._onPopupClose.bind(this));\n    this.popup.open();\n  }\n  closePopup() {\n    if (this.popup && !this.popup.destroying) {\n      this.popup.close();\n    }\n  }\n  _onLookupRowSelected(event) {\n    this._clear();\n    this._updateHasText();\n    this.addTag(event.lookupRow.key);\n    this.closePopup();\n  }\n  _onPopupClose(event) {\n    this.popup = null;\n  }\n  isInputFocused() {\n    let ae = this.$fieldContainer.activeElement();\n    return this.$field.is(ae);\n  }\n  _onValueChange(event) {\n    if ('value' === event.propertyName) {\n      this._renderLabel();\n    }\n  }\n  _renderPlaceholder($field) {\n    // only render placeholder when tag field is empty (has no tags)\n    let hasTags = !!arrays.ensure(this.value).length;\n    $field = scout.nvl($field, this.$field);\n    if ($field) {\n      $field.placeholder(hasTags ? '' : this.label);\n    }\n  }\n  _createFieldAdapter() {\n    return TagField.createFieldAdapter(this);\n  }\n  static createFieldAdapter(field) {\n    return {\n      $container: () => field.$fieldContainer,\n      enabled: () => strings.empty(field._readDisplayText()),\n      focus: () => {\n        field.$field.focus();\n      },\n      one: (p1, p2) => {\n        field.one(p1, p2);\n      },\n      off: (p1, p2) => {\n        field.off(p1, p2);\n      },\n      removeTag: tag => {\n        field.removeTag(tag);\n      }\n    };\n  }\n}","map":{"version":3,"names":["arrays","fields","HtmlComponent","InputFieldKeyStrokeContext","keys","LookupCall","scout","strings","TagFieldContainerLayout","TagFieldDeleteKeyStroke","TagFieldEnterKeyStroke","TagFieldLayout","TagFieldNavigationKeyStroke","TagFieldOpenPopupKeyStroke","ValueField","TagField","constructor","$field","fieldHtmlComp","popup","lookupCall","_currentLookupCall","tagBar","maxLength","maxLengthHandler","create","target","_init","model","parent","tags","value","clickable","on","_onTagRemove","bind","_onValueChange","_setLookupCall","event","removeTag","tag","_initKeyStrokeContext","keyStrokeContext","registerKeyStroke","_createFieldAdapter","_createKeyStrokeContext","_render","addContainer","$parent","addLabel","addMandatoryIndicator","$fieldContainer","$container","appendDiv","install","session","setLayout","render","appendElement","attr","_onInputKeydown","_onInputKeyup","_onFieldInput","addFieldContainer","addField","addStatus","_renderProperties","_renderValue","_renderMaxLength","updateTags","_setValue","setTags","_setProperty","ensure","formatValue","_validateValue","result","forEach","empty","toLowerCase","indexOf","push","_parseValue","displayText","slice","_renderDisplayText","val","_updateInputVisible","_renderEnabled","_renderFieldStyle","rendered","invalidateLayoutTree","setMaxLength","setProperty","visible","oldVisible","isVisible","enabledComputed","hasText","setVisible","_readDisplayText","_clear","acceptInput","whileTyping","selectedRow","triggerLookupRowSelected","closePopup","_triggerAcceptInput","trigger","aboutToBlurByMouseDown","eventOutsideProposalField","_onFieldBlur","removing","blur","_onFieldFocus","focus","_updateHasText","addTag","text","setValue","remove","_isNavigationKey","delegateKeyEvent","which","ESC","isOneOf","PAGE_UP","PAGE_DOWN","UP","DOWN","_lookupByText","length","cloneForText","execute","always","done","_onLookupDone","isFocused","lookupRows","openPopup","setLookupResult","$anchor","boundToAnchor","closeOnAnchorMouseDown","field","_onLookupRowSelected","one","_onPopupClose","open","destroying","close","lookupRow","key","isInputFocused","ae","activeElement","is","propertyName","_renderLabel","_renderPlaceholder","hasTags","nvl","placeholder","label","createFieldAdapter","enabled","p1","p2","off"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/tagfield/TagField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  fields,\n  HtmlComponent,\n  InputFieldKeyStrokeContext,\n  keys,\n  LookupCall,\n  scout,\n  strings,\n  TagFieldContainerLayout,\n  TagFieldDeleteKeyStroke,\n  TagFieldEnterKeyStroke,\n  TagFieldLayout,\n  TagFieldNavigationKeyStroke,\n  TagFieldOpenPopupKeyStroke,\n  ValueField\n} from '../../../index';\n\nexport default class TagField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.$field = null;\n    this.fieldHtmlComp = null;\n    this.popup = null;\n    this.lookupCall = null;\n    this._currentLookupCall = null;\n    this.tagBar = null;\n    this.maxLength = 500;\n    this.maxLengthHandler = scout.create('MaxLengthHandler', {target: this});\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.tagBar = scout.create('TagBar', {\n      parent: this,\n      tags: this.value,\n      clickable: model.clickable\n    });\n    this.tagBar.on('tagRemove', this._onTagRemove.bind(this));\n    this.on('propertyChange', this._onValueChange.bind(this));\n    this._setLookupCall(this.lookupCall);\n  }\n\n  _onTagRemove(event) {\n    this.removeTag(event.tag);\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.registerKeyStroke([\n      new TagFieldEnterKeyStroke(this),\n      new TagFieldNavigationKeyStroke(this._createFieldAdapter()),\n      new TagFieldDeleteKeyStroke(this._createFieldAdapter()),\n      new TagFieldOpenPopupKeyStroke(this)\n    ]);\n  }\n\n  _createKeyStrokeContext() {\n    return new InputFieldKeyStrokeContext();\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'tag-field', new TagFieldLayout(this));\n    this.addLabel();\n    this.addMandatoryIndicator();\n    let $fieldContainer = this.$container.appendDiv();\n    this.fieldHtmlComp = HtmlComponent.install($fieldContainer, this.session);\n    this.fieldHtmlComp.setLayout(new TagFieldContainerLayout(this));\n    this.tagBar.render($fieldContainer);\n    let $field = $fieldContainer.appendElement('<input>', 'field')\n      .attr('type', 'text') // So that css rules from main.less are applied\n      .on('keydown', this._onInputKeydown.bind(this))\n      .on('keyup', this._onInputKeyup.bind(this))\n      .on('input', this._onFieldInput.bind(this));\n    this.addFieldContainer($fieldContainer);\n    this.addField($field);\n    this.maxLengthHandler.install($field);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderValue();\n    this._renderMaxLength();\n  }\n\n  _renderValue() {\n    this.tagBar.updateTags();\n  }\n\n  _setValue(value) {\n    super._setValue(value);\n    if (this.tagBar) { // required for _init case\n      this.tagBar.setTags(this.value /* do not use the function parameter here. instead use the member variable because the value might have changed in a validator. */);\n    }\n  }\n\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n  }\n\n  formatValue(value) {\n    // Info: value and displayText are not related in the TagField\n    return '';\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  _validateValue(value) {\n    let tags = arrays.ensure(value);\n    let result = [];\n    tags.forEach(tag => {\n      if (!strings.empty(tag)) {\n        tag = tag.toLowerCase();\n        if (result.indexOf(tag) < 0) {\n          result.push(tag);\n        }\n      }\n    });\n    return result;\n  }\n\n  _parseValue(displayText) {\n    let tags = arrays.ensure(this.value);\n    tags = tags.slice();\n    tags.push(displayText);\n    return tags;\n  }\n\n  _renderDisplayText() {\n    this.$field.val(this.displayText); // needs to be before super call (otherwise updateHasText fails)\n    super._renderDisplayText();\n    this._updateInputVisible();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateInputVisible();\n  }\n\n  _renderFieldStyle() {\n    super._renderFieldStyle();\n    if (this.rendered) {\n      this.fieldHtmlComp.invalidateLayoutTree();\n    }\n  }\n\n  setMaxLength(maxLength) {\n    this.setProperty('maxLength', maxLength);\n  }\n\n  _renderMaxLength() {\n    this.maxLengthHandler.render();\n  }\n\n  _updateInputVisible() {\n    let visible, oldVisible = !this.$field.isVisible();\n    if (this.enabledComputed) {\n      visible = true;\n    } else {\n      visible = strings.hasText(this.displayText);\n    }\n    this.$field.setVisible(visible);\n    // update tag-elements (must remove X when disabled)\n    if (visible !== oldVisible) {\n      this._renderValue();\n    }\n  }\n\n  _readDisplayText() {\n    return this.$field.val();\n  }\n\n  _clear() {\n    this.$field.val('');\n  }\n\n  /**\n   * @override\n   */\n  acceptInput(whileTyping) {\n    if (this.popup) {\n      if (this.popup.selectedRow()) {\n        this.popup.triggerLookupRowSelected();\n      } else {\n        this.closePopup();\n      }\n      return;\n    }\n    super.acceptInput(false);\n  }\n\n  _triggerAcceptInput() {\n    this.trigger('acceptInput', {\n      displayText: this.displayText,\n      value: this.value\n    });\n  }\n\n  aboutToBlurByMouseDown(target) {\n    if (fields.eventOutsideProposalField(this, target)) {\n      this.acceptInput(true);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldBlur(event) {\n    // We cannot call super until chooser popup has been closed (see #acceptInput)\n    this.closePopup();\n    super._onFieldBlur(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.blur();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldFocus(event) {\n    super._onFieldFocus(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.focus();\n    }\n  }\n\n  _onFieldInput() {\n    this._updateHasText();\n  }\n\n  addTag(text) {\n    let value = this._parseValue(text);\n    this.setValue(value);\n    this._triggerAcceptInput();\n  }\n\n  removeTag(tag) {\n    if (strings.empty(tag)) {\n      return;\n    }\n    tag = tag.toLowerCase();\n    let tags = arrays.ensure(this.value);\n    if (tags.indexOf(tag) === -1) {\n      return;\n    }\n    tags = tags.slice();\n    arrays.remove(tags, tag);\n    this.setValue(tags);\n    this._triggerAcceptInput();\n    // focus was previously on the removed tag, restore focus on the field.\n    this.focus();\n  }\n\n  _onInputKeydown(event) {\n    if (this._isNavigationKey(event) && this.popup) {\n      this.popup.delegateKeyEvent(event);\n    } else if (event.which === keys.ESC) {\n      this.closePopup();\n    }\n  }\n\n  _isNavigationKey(event) {\n    return scout.isOneOf(event.which, [\n      keys.PAGE_UP,\n      keys.PAGE_DOWN,\n      keys.UP,\n      keys.DOWN\n    ]);\n  }\n\n  _onInputKeyup(event) {\n    // Prevent chooser popup from being opened again, after it has been closed by pressing ESC\n    if (event.which === keys.ESC) {\n      return;\n    }\n    if (!this._isNavigationKey(event)) {\n      this._lookupByText(this.$field.val());\n    }\n  }\n\n  _lookupByText(text) {\n    if (!this.lookupCall) {\n      return null;\n    }\n    if (strings.empty(text) || text.length < 2) {\n      this.closePopup();\n      return;\n    }\n\n    this._currentLookupCall = this.lookupCall.cloneForText(text);\n    this.trigger('prepareLookupCall', {\n      lookupCall: this._currentLookupCall\n    });\n    return this._currentLookupCall\n      .execute()\n      .always(() => {\n        this._currentLookupCall = null;\n      })\n      .done(this._onLookupDone.bind(this));\n  }\n\n  _onLookupDone(result) {\n    try {\n      if (!this.rendered || !this.isFocused() || result.lookupRows.length === 0) {\n        this.closePopup();\n        return;\n      }\n\n      this.openPopup();\n      this.popup.setLookupResult(result);\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n\n  openPopup() {\n    if (this.popup) {\n      return;\n    }\n    this.popup = scout.create('TagChooserPopup', {\n      parent: this,\n      $anchor: this.$field,\n      boundToAnchor: true,\n      closeOnAnchorMouseDown: false,\n      field: this\n    });\n    this.popup.on('lookupRowSelected', this._onLookupRowSelected.bind(this));\n    this.popup.one('close', this._onPopupClose.bind(this));\n    this.popup.open();\n  }\n\n  closePopup() {\n    if (this.popup && !this.popup.destroying) {\n      this.popup.close();\n    }\n  }\n\n  _onLookupRowSelected(event) {\n    this._clear();\n    this._updateHasText();\n    this.addTag(event.lookupRow.key);\n    this.closePopup();\n  }\n\n  _onPopupClose(event) {\n    this.popup = null;\n  }\n\n  isInputFocused() {\n    let ae = this.$fieldContainer.activeElement();\n    return this.$field.is(ae);\n  }\n\n  _onValueChange(event) {\n    if ('value' === event.propertyName) {\n      this._renderLabel();\n    }\n  }\n\n  _renderPlaceholder($field) {\n    // only render placeholder when tag field is empty (has no tags)\n    let hasTags = !!arrays.ensure(this.value).length;\n    $field = scout.nvl($field, this.$field);\n    if ($field) {\n      $field.placeholder(hasTags ? '' : this.label);\n    }\n  }\n\n  _createFieldAdapter() {\n    return TagField.createFieldAdapter(this);\n  }\n\n  static createFieldAdapter(field) {\n    return {\n      $container: () => field.$fieldContainer,\n\n      enabled: () => strings.empty(field._readDisplayText()),\n\n      focus: () => {\n        field.$field.focus();\n      },\n\n      one: (p1, p2) => {\n        field.one(p1, p2);\n      },\n\n      off: (p1, p2) => {\n        field.off(p1, p2);\n      },\n\n      removeTag: tag => {\n        field.removeTag(tag);\n      }\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}