{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n/*\n * A simple calculator similar to eval but safe in use.\n * Supports the following format:\n * group character ( )\n * digits 0-9\n * operators + - * /\n * decimal separator .\n * no grouping character\n * no whitespace\n */\nexport default class Calculator {\n  constructor() {}\n  isFormula(input) {\n    return input.match(/^[\\d()+\\-*/.]+$/);\n  }\n  evalFormula(input) {\n    this._tokens = input.split(/([\\d.]+|\\(|\\)|[+\\-*/])/).filter(e => {\n      return e.length !== 0;\n    });\n    return this._expr();\n  }\n  _next() {\n    if (this._tokens.length === 0) {\n      return undefined;\n    }\n    return this._tokens[0];\n  }\n  _consumeNext() {\n    let cur = this._tokens[0];\n    this._tokens = this._tokens.slice(1, this._tokens.length);\n    return cur;\n  }\n  _expr() {\n    return this._sum();\n  }\n\n  // a+b+...\n  _sum() {\n    let v = this._prod();\n    while (this._next() === '+' || this._next() === '-') {\n      switch (this._consumeNext()) {\n        // NOSONAR\n        case '+':\n          v = v + this._prod();\n          break;\n        case '-':\n          v = v - this._prod();\n          break;\n      }\n    }\n    return v;\n  }\n\n  // a*b*...\n  _prod() {\n    let v = this._unary();\n    while (this._next() === '*' || this._next() === '/') {\n      switch (this._consumeNext()) {\n        // NOSONAR\n        case '*':\n          v = v * this._unary();\n          break;\n        case '/':\n          v = v / this._unary();\n          break;\n      }\n    }\n    return v;\n  }\n\n  // [+-]123, [+-](a)\n  _unary() {\n    let qualifier = 1;\n    if (this._next() === '+') {\n      this._consumeNext();\n    } else if (this._next() === '-') {\n      this._consumeNext();\n      qualifier = -1;\n    }\n    let v;\n    if ((v = this._group()) !== undefined) {\n      return qualifier * v;\n    }\n    // must be num\n    v = this._consumeNext();\n    return qualifier * v;\n  }\n\n  // (a)\n  _group() {\n    if (this._next() === '(') {\n      this._consumeNext();\n      let v = this._expr();\n      if (this._next() !== ')') {\n        throw 'missing closing bracket';\n      }\n      this._consumeNext();\n      return v;\n    }\n    return undefined;\n  }\n}","map":{"version":3,"names":["Calculator","constructor","isFormula","input","match","evalFormula","_tokens","split","filter","e","length","_expr","_next","undefined","_consumeNext","cur","slice","_sum","v","_prod","_unary","qualifier","_group"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/numberfield/Calculator.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n/*\n * A simple calculator similar to eval but safe in use.\n * Supports the following format:\n * group character ( )\n * digits 0-9\n * operators + - * /\n * decimal separator .\n * no grouping character\n * no whitespace\n */\nexport default class Calculator {\n\n  constructor() {\n  }\n\n  isFormula(input) {\n    return input.match(/^[\\d()+\\-*/.]+$/);\n  }\n\n  evalFormula(input) {\n    this._tokens = input\n      .split(/([\\d.]+|\\(|\\)|[+\\-*/])/)\n      .filter(e => {\n        return e.length !== 0;\n      });\n    return this._expr();\n  }\n\n  _next() {\n    if (this._tokens.length === 0) {\n      return undefined;\n    }\n    return this._tokens[0];\n  }\n\n  _consumeNext() {\n    let cur = this._tokens[0];\n    this._tokens = this._tokens.slice(1, this._tokens.length);\n    return cur;\n  }\n\n  _expr() {\n    return this._sum();\n  }\n\n  // a+b+...\n  _sum() {\n    let v = this._prod();\n    while (this._next() === '+' || this._next() === '-') {\n      switch (this._consumeNext()) { // NOSONAR\n        case '+':\n          v = v + this._prod();\n          break;\n        case '-':\n          v = v - this._prod();\n          break;\n      }\n    }\n    return v;\n  }\n\n  // a*b*...\n  _prod() {\n    let v = this._unary();\n    while (this._next() === '*' || this._next() === '/') {\n      switch (this._consumeNext()) { // NOSONAR\n        case '*':\n          v = v * this._unary();\n          break;\n        case '/':\n          v = v / this._unary();\n          break;\n      }\n    }\n    return v;\n  }\n\n  // [+-]123, [+-](a)\n  _unary() {\n    let qualifier = 1;\n    if (this._next() === '+') {\n      this._consumeNext();\n    } else if (this._next() === '-') {\n      this._consumeNext();\n      qualifier = -1;\n    }\n    let v;\n    if ((v = this._group()) !== undefined) {\n      return qualifier * v;\n    }\n    // must be num\n    v = this._consumeNext();\n    return qualifier * v;\n  }\n\n  // (a)\n  _group() {\n    if (this._next() === '(') {\n      this._consumeNext();\n      let v = this._expr();\n      if (this._next() !== ')') {\n        throw 'missing closing bracket';\n      }\n      this._consumeNext();\n      return v;\n    }\n    return undefined;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}