{"ast":null,"code":"/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, FormField, graphics, HtmlComponent, HtmlEnvironment, Rectangle } from '../../../index';\nexport default class TabBoxHeaderLayout extends AbstractLayout {\n  constructor(tabBoxHeader) {\n    super();\n    this.tabBoxHeader = tabBoxHeader;\n    this._initDefaults();\n    this.htmlPropertyChangeHandler = this._onHtmlEnvironmentPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this.htmlPropertyChangeHandler);\n    this.tabBoxHeader.one('remove', () => {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    });\n  }\n  _initDefaults() {\n    this.fieldStatusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n  _onHtmlEnvironmentPropertyChange() {\n    this._initDefaults();\n    this.tabBoxHeader.invalidateLayoutTree();\n  }\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container),\n      tabArea = this.tabBoxHeader.tabArea,\n      tabAreaMargins = tabArea.htmlComp.margins(),\n      tabAreaPrefSize,\n      menuBar = this.tabBoxHeader.menuBar,\n      menuBarMargins = menuBar.htmlComp.margins(),\n      menuBarMinimumSize,\n      $status = this.tabBoxHeader.tabBox.$status,\n      statusSizeLarge = new Dimension(),\n      insets = htmlContainer.insets(),\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      }).subtract(htmlContainer.insets());\n    menuBarMinimumSize = menuBar.htmlComp.prefSize({\n      widthHint: 0\n    });\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      statusSizeLarge.height = $status.outerHeight(true);\n      statusSizeLarge.width = this.fieldStatusWidth + graphics.margins($status).horizontal();\n    }\n    tabAreaPrefSize = tabArea.htmlComp.prefSize({\n      widthHint: containerSize.width - menuBarMinimumSize.width - menuBarMargins.horizontal() - statusSizeLarge.width,\n      exact: false\n    });\n\n    // layout tabArea\n    tabArea.htmlComp.setSize(new Dimension(tabAreaPrefSize.width, containerSize.height - tabAreaMargins.vertical()));\n    menuBar.htmlComp.layout.collapsed = tabArea.htmlComp.layout.overflowTabs.length > 0;\n    // layout menuBar\n    menuBar.htmlComp.setBounds(new Rectangle(insets.left + tabAreaPrefSize.width + tabAreaMargins.horizontal(), insets.top, containerSize.width - tabAreaPrefSize.width - tabAreaMargins.horizontal() - menuBarMargins.horizontal() - statusSizeLarge.width, containerSize.height - menuBarMargins.vertical()));\n\n    // layout status\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      $status.cssWidth(this.fieldStatusWidth).cssRight(insets.right).cssHeight(containerSize.height - graphics.margins($status).vertical());\n    }\n  }\n  preferredLayoutSize($container, options) {\n    let htmlContainer = HtmlComponent.get($container),\n      insets = htmlContainer.insets(),\n      wHint = (options.widthHint || htmlContainer.availableSize().width) - htmlContainer.insets().horizontal(),\n      prefSize = new Dimension(),\n      $status = this.tabBoxHeader.tabBox.$status,\n      statusSizeLarge = new Dimension(),\n      tabArea = this.tabBoxHeader.tabArea,\n      tabAreaMargins = tabArea.htmlComp.margins(),\n      menuBar = this.tabBoxHeader.menuBar,\n      menuBarMargins = menuBar.htmlComp.margins();\n    let menuBarMinSize = menuBar.htmlComp.prefSize({\n      widthHint: 0\n    });\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      statusSizeLarge.height = $status.outerHeight(true);\n      statusSizeLarge.width = this.fieldStatusWidth + graphics.margins($status).horizontal();\n      prefSize.width += statusSizeLarge.width;\n      prefSize.height = Math.max(prefSize.height, statusSizeLarge.height);\n    }\n    let tabAreaPrefSize = tabArea.htmlComp.prefSize({\n      widthHint: wHint - menuBarMinSize.width - menuBarMargins.horizontal() - tabAreaMargins.horizontal() - statusSizeLarge.width\n    });\n    prefSize.width += tabAreaPrefSize.width + tabAreaMargins.horizontal();\n    prefSize.height = Math.max(prefSize.height, tabAreaPrefSize.height + tabAreaMargins.vertical());\n    let menuBarPrefSize = menuBar.htmlComp.prefSize({\n      widthHint: wHint - tabAreaPrefSize.width - tabAreaMargins.horizontal() - menuBarMargins.horizontal() - statusSizeLarge.width\n    });\n    prefSize.width += menuBarPrefSize.width + menuBarMargins.horizontal();\n    prefSize.height = Math.max(prefSize.height, menuBarPrefSize.height + menuBarMargins.vertical());\n    return prefSize.add(insets);\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","FormField","graphics","HtmlComponent","HtmlEnvironment","Rectangle","TabBoxHeaderLayout","constructor","tabBoxHeader","_initDefaults","htmlPropertyChangeHandler","_onHtmlEnvironmentPropertyChange","bind","get","on","one","off","fieldStatusWidth","invalidateLayoutTree","layout","$container","htmlContainer","tabArea","tabAreaMargins","htmlComp","margins","tabAreaPrefSize","menuBar","menuBarMargins","menuBarMinimumSize","$status","tabBox","statusSizeLarge","insets","containerSize","availableSize","exact","subtract","prefSize","widthHint","statusPosition","StatusPosition","TOP","isVisible","height","outerHeight","width","horizontal","setSize","vertical","collapsed","overflowTabs","length","setBounds","left","top","cssWidth","cssRight","right","cssHeight","preferredLayoutSize","options","wHint","menuBarMinSize","Math","max","menuBarPrefSize","add"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/tabbox/TabBoxHeaderLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, FormField, graphics, HtmlComponent, HtmlEnvironment, Rectangle} from '../../../index';\n\nexport default class TabBoxHeaderLayout extends AbstractLayout {\n\n  constructor(tabBoxHeader) {\n    super();\n    this.tabBoxHeader = tabBoxHeader;\n\n    this._initDefaults();\n\n    this.htmlPropertyChangeHandler = this._onHtmlEnvironmentPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this.htmlPropertyChangeHandler);\n    this.tabBoxHeader.one('remove', () => {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    });\n  }\n\n  _initDefaults() {\n    this.fieldStatusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n\n  _onHtmlEnvironmentPropertyChange() {\n    this._initDefaults();\n    this.tabBoxHeader.invalidateLayoutTree();\n  }\n\n  layout($container) {\n    let htmlContainer = HtmlComponent.get($container),\n      tabArea = this.tabBoxHeader.tabArea,\n      tabAreaMargins = tabArea.htmlComp.margins(),\n      tabAreaPrefSize,\n      menuBar = this.tabBoxHeader.menuBar,\n      menuBarMargins = menuBar.htmlComp.margins(),\n      menuBarMinimumSize,\n      $status = this.tabBoxHeader.tabBox.$status,\n      statusSizeLarge = new Dimension(),\n      insets = htmlContainer.insets(),\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      }).subtract(htmlContainer.insets());\n\n    menuBarMinimumSize = menuBar.htmlComp.prefSize({\n      widthHint: 0\n    });\n\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      statusSizeLarge.height = $status.outerHeight(true);\n      statusSizeLarge.width = this.fieldStatusWidth + graphics.margins($status).horizontal();\n    }\n\n    tabAreaPrefSize = tabArea.htmlComp.prefSize({\n      widthHint: containerSize.width - menuBarMinimumSize.width - menuBarMargins.horizontal() - statusSizeLarge.width,\n      exact: false\n    });\n\n    // layout tabArea\n    tabArea.htmlComp.setSize(new Dimension(\n      tabAreaPrefSize.width,\n      containerSize.height - tabAreaMargins.vertical()\n    ));\n\n    menuBar.htmlComp.layout.collapsed = tabArea.htmlComp.layout.overflowTabs.length > 0;\n    // layout menuBar\n    menuBar.htmlComp.setBounds(new Rectangle(\n      insets.left + tabAreaPrefSize.width + tabAreaMargins.horizontal(),\n      insets.top,\n      containerSize.width - tabAreaPrefSize.width - tabAreaMargins.horizontal() - menuBarMargins.horizontal() - statusSizeLarge.width,\n      containerSize.height - menuBarMargins.vertical()\n    ));\n\n    // layout status\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      $status.cssWidth(this.fieldStatusWidth)\n        .cssRight(insets.right)\n        .cssHeight(containerSize.height - graphics.margins($status).vertical());\n    }\n  }\n\n  preferredLayoutSize($container, options) {\n    let htmlContainer = HtmlComponent.get($container),\n      insets = htmlContainer.insets(),\n      wHint = (options.widthHint || htmlContainer.availableSize().width) - htmlContainer.insets().horizontal(),\n      prefSize = new Dimension(),\n      $status = this.tabBoxHeader.tabBox.$status,\n      statusSizeLarge = new Dimension(),\n      tabArea = this.tabBoxHeader.tabArea,\n      tabAreaMargins = tabArea.htmlComp.margins(),\n      menuBar = this.tabBoxHeader.menuBar,\n      menuBarMargins = menuBar.htmlComp.margins();\n\n    let menuBarMinSize = menuBar.htmlComp.prefSize({\n      widthHint: 0\n    });\n\n    if (this.tabBoxHeader.tabBox.statusPosition === FormField.StatusPosition.TOP && $status && $status.isVisible()) {\n      statusSizeLarge.height = $status.outerHeight(true);\n      statusSizeLarge.width = this.fieldStatusWidth + graphics.margins($status).horizontal();\n\n      prefSize.width += statusSizeLarge.width;\n      prefSize.height = Math.max(prefSize.height, statusSizeLarge.height);\n    }\n\n    let tabAreaPrefSize = tabArea.htmlComp.prefSize({\n      widthHint: wHint - menuBarMinSize.width - menuBarMargins.horizontal() - tabAreaMargins.horizontal() - statusSizeLarge.width\n    });\n\n    prefSize.width += tabAreaPrefSize.width + tabAreaMargins.horizontal();\n    prefSize.height = Math.max(prefSize.height, tabAreaPrefSize.height + tabAreaMargins.vertical());\n\n    let menuBarPrefSize = menuBar.htmlComp.prefSize({\n      widthHint: wHint - tabAreaPrefSize.width - tabAreaMargins.horizontal() - menuBarMargins.horizontal() - statusSizeLarge.width\n    });\n\n    prefSize.width += menuBarPrefSize.width + menuBarMargins.horizontal();\n    prefSize.height = Math.max(prefSize.height, menuBarPrefSize.height + menuBarMargins.vertical());\n\n    return prefSize.add(insets);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}