{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTreeNavigationKeyStroke, arrays, keys } from '../../index';\nexport default class TreeNavigationEndKeyStroke extends AbstractTreeNavigationKeyStroke {\n  constructor(tree, modifierBitMask) {\n    super(tree, modifierBitMask);\n    this.which = [keys.END];\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    };\n  }\n  handle(event) {\n    let newSelection = this._computeNewSelection(event._treeCurrentNode);\n    if (newSelection) {\n      this.selectNodesAndReveal(newSelection);\n    }\n  }\n  _computeNewSelection(currentNode) {\n    let nodes = this.field.visibleNodesFlat;\n    if (nodes.length === 0) {\n      return;\n    }\n    return arrays.last(nodes);\n  }\n}","map":{"version":3,"names":["AbstractTreeNavigationKeyStroke","arrays","keys","TreeNavigationEndKeyStroke","constructor","tree","modifierBitMask","which","END","renderingHints","$drawingArea","event","newSelectedNode","_computeNewSelection","_treeCurrentNode","$node","handle","newSelection","selectNodesAndReveal","currentNode","nodes","field","visibleNodesFlat","length","last"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/keystrokes/TreeNavigationEndKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTreeNavigationKeyStroke, arrays, keys} from '../../index';\n\nexport default class TreeNavigationEndKeyStroke extends AbstractTreeNavigationKeyStroke {\n\n  constructor(tree, modifierBitMask) {\n    super(tree, modifierBitMask);\n    this.which = [keys.END];\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    };\n  }\n\n  handle(event) {\n    let newSelection = this._computeNewSelection(event._treeCurrentNode);\n    if (newSelection) {\n      this.selectNodesAndReveal(newSelection);\n    }\n  }\n\n  _computeNewSelection(currentNode) {\n    let nodes = this.field.visibleNodesFlat;\n    if (nodes.length === 0) {\n      return;\n    }\n    return arrays.last(nodes);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,+BAA+B,EAAEC,MAAM,EAAEC,IAAI,QAAO,aAAa;AAEzE,eAAe,MAAMC,0BAA0B,SAASH,+BAA+B,CAAC;EAEtFI,WAAW,CAACC,IAAI,EAAEC,eAAe,EAAE;IACjC,KAAK,CAACD,IAAI,EAAEC,eAAe,CAAC;IAC5B,IAAI,CAACC,KAAK,GAAG,CAACL,IAAI,CAACM,GAAG,CAAC;IACvB,IAAI,CAACC,cAAc,CAACC,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,eAAe,GAAG,IAAI,CAACC,oBAAoB,CAACF,KAAK,CAACG,gBAAgB,CAAC;MACvE,IAAIF,eAAe,EAAE;QACnB,OAAOA,eAAe,CAACG,KAAK;MAC9B;IACF,CAAC;EACH;EAEAC,MAAM,CAACL,KAAK,EAAE;IACZ,IAAIM,YAAY,GAAG,IAAI,CAACJ,oBAAoB,CAACF,KAAK,CAACG,gBAAgB,CAAC;IACpE,IAAIG,YAAY,EAAE;MAChB,IAAI,CAACC,oBAAoB,CAACD,YAAY,CAAC;IACzC;EACF;EAEAJ,oBAAoB,CAACM,WAAW,EAAE;IAChC,IAAIC,KAAK,GAAG,IAAI,CAACC,KAAK,CAACC,gBAAgB;IACvC,IAAIF,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;MACtB;IACF;IACA,OAAOtB,MAAM,CAACuB,IAAI,CAACJ,KAAK,CAAC;EAC3B;AACF"},"metadata":{},"sourceType":"module"}