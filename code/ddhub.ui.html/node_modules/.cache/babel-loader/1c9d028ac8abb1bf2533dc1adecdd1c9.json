{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractGrid, VerticalGridMatrix } from '../../index';\nexport default class VerticalSmartGrid extends AbstractGrid {\n  constructor(options) {\n    super(options);\n  }\n  layoutAllDynamic(widgets) {\n    let cellCount = 0;\n    widgets.forEach(f => {\n      let hints = AbstractGrid.getGridDataFromHints(f, this.getGridColumnCount());\n      cellCount += hints.w * hints.h;\n    });\n\n    // do the calc\n    let rowCount = Math.floor((cellCount + this.getGridColumnCount() - 1) / this.getGridColumnCount());\n    let matrix = new VerticalGridMatrix(this.getGridColumnCount(), rowCount);\n    while (!matrix.computeGridData(widgets)) {\n      matrix.resetAll(this.getGridColumnCount(), ++rowCount);\n    }\n\n    // set gridData\n    widgets.forEach(f => {\n      f.gridData = matrix.getGridData(f);\n    });\n    this.gridRows = matrix.getRowCount();\n  }\n}","map":{"version":3,"names":["AbstractGrid","VerticalGridMatrix","VerticalSmartGrid","constructor","options","layoutAllDynamic","widgets","cellCount","forEach","f","hints","getGridDataFromHints","getGridColumnCount","w","h","rowCount","Math","floor","matrix","computeGridData","resetAll","gridData","getGridData","gridRows","getRowCount"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/logicalgrid/VerticalSmartGrid.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractGrid, VerticalGridMatrix} from '../../index';\n\nexport default class VerticalSmartGrid extends AbstractGrid {\n\n  constructor(options) {\n    super(options);\n  }\n\n  layoutAllDynamic(widgets) {\n    let cellCount = 0;\n    widgets.forEach(f => {\n      let hints = AbstractGrid.getGridDataFromHints(f, this.getGridColumnCount());\n      cellCount += hints.w * hints.h;\n    });\n\n    // do the calc\n    let rowCount = Math.floor((cellCount + this.getGridColumnCount() - 1) / this.getGridColumnCount());\n    let matrix = new VerticalGridMatrix(this.getGridColumnCount(), rowCount);\n    while (!matrix.computeGridData(widgets)) {\n      matrix.resetAll(this.getGridColumnCount(), ++rowCount);\n    }\n\n    // set gridData\n    widgets.forEach(f => {\n      f.gridData = matrix.getGridData(f);\n    });\n    this.gridRows = matrix.getRowCount();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAY,EAAEC,kBAAkB,QAAO,aAAa;AAE5D,eAAe,MAAMC,iBAAiB,SAASF,YAAY,CAAC;EAE1DG,WAAW,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;EAChB;EAEAC,gBAAgB,CAACC,OAAO,EAAE;IACxB,IAAIC,SAAS,GAAG,CAAC;IACjBD,OAAO,CAACE,OAAO,CAACC,CAAC,IAAI;MACnB,IAAIC,KAAK,GAAGV,YAAY,CAACW,oBAAoB,CAACF,CAAC,EAAE,IAAI,CAACG,kBAAkB,EAAE,CAAC;MAC3EL,SAAS,IAAIG,KAAK,CAACG,CAAC,GAAGH,KAAK,CAACI,CAAC;IAChC,CAAC,CAAC;;IAEF;IACA,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACV,SAAS,GAAG,IAAI,CAACK,kBAAkB,EAAE,GAAG,CAAC,IAAI,IAAI,CAACA,kBAAkB,EAAE,CAAC;IAClG,IAAIM,MAAM,GAAG,IAAIjB,kBAAkB,CAAC,IAAI,CAACW,kBAAkB,EAAE,EAAEG,QAAQ,CAAC;IACxE,OAAO,CAACG,MAAM,CAACC,eAAe,CAACb,OAAO,CAAC,EAAE;MACvCY,MAAM,CAACE,QAAQ,CAAC,IAAI,CAACR,kBAAkB,EAAE,EAAE,EAAEG,QAAQ,CAAC;IACxD;;IAEA;IACAT,OAAO,CAACE,OAAO,CAACC,CAAC,IAAI;MACnBA,CAAC,CAACY,QAAQ,GAAGH,MAAM,CAACI,WAAW,CAACb,CAAC,CAAC;IACpC,CAAC,CAAC;IACF,IAAI,CAACc,QAAQ,GAAGL,MAAM,CAACM,WAAW,EAAE;EACtC;AACF"},"metadata":{},"sourceType":"module"}