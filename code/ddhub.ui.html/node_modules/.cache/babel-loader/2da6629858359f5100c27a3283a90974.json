{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, dragAndDrop, files as fileUtil, InputFieldKeyStrokeContext, strings, URL, Widget } from '../index';\nimport $ from 'jquery';\nexport default class FileInput extends Widget {\n  constructor() {\n    super();\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    this.multiSelect = false;\n    this.files = [];\n    this.legacyFileUploadUrl = null;\n    this.text = null;\n  }\n  // 50 MB\n\n  _init(model) {\n    super._init(model);\n    this.uploadController = model.uploadController || model.parent;\n    let url = new URL(model.legacyFileUploadUrl || 'upload/' + this.session.uiSessionId + '/' + this.uploadController.id);\n    url.setParameter('legacy', true);\n    this.legacyFileUploadUrl = url.toString();\n    this.legacy = !Device.get().supportsFile();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    // Need to create keystroke context here because this.legacy is not set at the time the constructor is executed\n    this.keyStrokeContext = this._createKeyStrokeContext();\n    super._initKeyStrokeContext();\n  }\n  _createKeyStrokeContext() {\n    if (this.legacy) {\n      // native input control is a text field -> use input field context to make sure backspace etc. does not bubble up\n      return new InputFieldKeyStrokeContext();\n    }\n  }\n  _render() {\n    this.$fileInput = this.$parent.makeElement('<input>').attr('type', 'file').on('change', this._onFileChange.bind(this));\n    if (!this.legacy) {\n      this.$container = this.$parent.appendDiv('file-input input-field');\n      this.$fileInput.appendTo(this.$container);\n      this.$container.on('mousedown', this._onMouseDown.bind(this));\n      this.$text = this.$container.appendDiv('file-input-text');\n    } else {\n      this._renderLegacyMode();\n    }\n    if (this.legacy) {\n      // Files may not be set into native control -> clear list in order to be sync again\n      this.clear();\n    }\n  }\n  _renderLegacyMode() {\n    this.$legacyFormTarget = this.$fileInput.appendElement('<iframe>').attr('name', 'legacyFileUpload' + this.uploadController.id).on('load', () => {\n      // Manually handle JSON response from iframe\n      try {\n        // \"onAjaxDone\"\n        let text = this.$legacyFormTarget.contents().text();\n        if (strings.hasText(text)) {\n          // Manually handle JSON response\n          let json = $.parseJSON(text);\n          this.session.responseQueue.process(json);\n        }\n      } finally {\n        // \"onAjaxAlways\"\n        this.session.setBusy(false);\n      }\n    });\n    this.$fileInput.attr('name', 'file').addClass('legacy-upload-file-input');\n    this.$legacyForm = this.$parent.appendElement('<form>', 'legacy-upload-form').attr('action', this.legacyFileUploadUrl).attr('enctype', 'multipart/form-data').attr('method', 'post').attr('target', 'legacyFileUpload' + this.uploadController.id).append(this.$fileInput);\n    this.$container = this.$legacyForm;\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderText();\n    this._renderAcceptTypes();\n    this._renderMultiSelect();\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this._installOrUninstallDragAndDropHandler();\n    if (this.legacy) {\n      this.$fileInput.setEnabled(this.enabledComputed);\n    } else {\n      this.$container.setTabbable(this.enabledComputed);\n    }\n  }\n  setText(text) {\n    this.setProperty('text', text);\n  }\n  _renderText() {\n    if (this.legacy) {\n      return;\n    }\n    let text = this.text || '';\n    this.$text.text(text);\n  }\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n  }\n  _renderAcceptTypes() {\n    let acceptTypes = this.acceptTypes || '';\n    this.$fileInput.attr('accept', acceptTypes);\n  }\n  setMultiSelect(multiSelect) {\n    this.setProperty('multiSelect', multiSelect);\n  }\n  _renderMultiSelect() {\n    this.$fileInput.prop('multiple', this.multiSelect);\n  }\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n  }\n  _remove() {\n    dragAndDrop.uninstallDragAndDropHandler(this);\n    super._remove();\n  }\n  _installOrUninstallDragAndDropHandler() {\n    dragAndDrop.installOrUninstallDragAndDropHandler({\n      target: this,\n      onDrop: event => {\n        if (event.files.length >= 1) {\n          this._setFiles(event.files);\n        }\n      },\n      dropMaximumSize: () => this.maximumUploadSize,\n      // disable file validation\n      validateFiles: (files, defaultValidator) => {}\n    });\n  }\n  clear() {\n    this._setFiles([]);\n    // _setFiles actually sets the text as well, but only if files have changed.\n    // Make sure text is cleared as well if there are no files but a text set.\n    this.setText(null);\n    if (this.rendered) {\n      this.$fileInput.val(null);\n    }\n  }\n  _setFiles(files) {\n    if (files instanceof FileList) {\n      files = fileUtil.fileListToArray(files);\n    }\n    files = arrays.ensure(files);\n    if (arrays.equals(this.files, files)) {\n      return;\n    }\n    let name = '';\n    if (files.length > 0) {\n      if (this.legacy) {\n        name = files[0];\n      } else {\n        name = files[0].name;\n      }\n    }\n    this.files = files;\n    this.setText(name);\n    this.trigger('change', {\n      files: files\n    });\n  }\n  upload() {\n    if (this.files.length === 0) {\n      return true;\n    }\n    if (!this.legacy) {\n      return this.session.uploadFiles(this.uploadController, this.files, undefined, this.maximumUploadSize);\n    }\n    this.session.setBusy(true);\n    this.$legacyForm[0].submit();\n    return true;\n  }\n  browse() {\n    // Trigger browser's file chooser\n    this.$fileInput.click();\n  }\n  _onFileChange(event) {\n    let files = [];\n    if (!this.legacy) {\n      files = this.$fileInput[0].files;\n    } else {\n      if (this.$fileInput[0].value) {\n        files.push(this.$fileInput[0].value);\n      }\n    }\n    if (files.length) {\n      this._setFiles(files);\n    }\n  }\n  _onMouseDown() {\n    if (!this.enabled) {\n      return;\n    }\n    this.browse();\n  }\n\n  /**\n   * @deprecated use files.fileListToArray instead\n   */\n  static fileListToArray(fileList) {\n    return fileUtil.fileListToArray(fileList);\n  }\n  validateMaximumUploadSize(files) {\n    if (!fileUtil.validateMaximumUploadSize(files, this.maximumUploadSize)) {\n      throw this.session.text('ui.FileSizeLimit', this.maximumUploadSize / 1024 / 1024);\n    }\n  }\n}\n_defineProperty(FileInput, \"DEFAULT_MAXIMUM_UPLOAD_SIZE\", 50 * 1024 * 1024);","map":{"version":3,"names":["arrays","Device","dragAndDrop","files","fileUtil","InputFieldKeyStrokeContext","strings","URL","Widget","$","FileInput","constructor","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","multiSelect","legacyFileUploadUrl","text","_init","model","uploadController","parent","url","session","uiSessionId","id","setParameter","toString","legacy","get","supportsFile","_initKeyStrokeContext","keyStrokeContext","_createKeyStrokeContext","_render","$fileInput","$parent","makeElement","attr","on","_onFileChange","bind","$container","appendDiv","appendTo","_onMouseDown","$text","_renderLegacyMode","clear","$legacyFormTarget","appendElement","contents","hasText","json","parseJSON","responseQueue","process","setBusy","addClass","$legacyForm","append","_renderProperties","_renderText","_renderAcceptTypes","_renderMultiSelect","_renderEnabled","_installOrUninstallDragAndDropHandler","setEnabled","enabledComputed","setTabbable","setText","setProperty","setAcceptTypes","setMultiSelect","prop","setMaximumUploadSize","_remove","uninstallDragAndDropHandler","installOrUninstallDragAndDropHandler","target","onDrop","event","length","_setFiles","dropMaximumSize","validateFiles","defaultValidator","rendered","val","FileList","fileListToArray","ensure","equals","name","trigger","upload","uploadFiles","undefined","submit","browse","click","value","push","enabled","fileList","validateMaximumUploadSize"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/filechooser/FileInput.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, dragAndDrop, files as fileUtil, InputFieldKeyStrokeContext, strings, URL, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class FileInput extends Widget {\n\n  constructor() {\n    super();\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    this.multiSelect = false;\n    this.files = [];\n    this.legacyFileUploadUrl = null;\n    this.text = null;\n  }\n\n  static DEFAULT_MAXIMUM_UPLOAD_SIZE = 50 * 1024 * 1024; // 50 MB\n\n  _init(model) {\n    super._init(model);\n    this.uploadController = model.uploadController || model.parent;\n    let url = new URL(model.legacyFileUploadUrl || 'upload/' + this.session.uiSessionId + '/' + this.uploadController.id);\n    url.setParameter('legacy', true);\n    this.legacyFileUploadUrl = url.toString();\n    this.legacy = !Device.get().supportsFile();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    // Need to create keystroke context here because this.legacy is not set at the time the constructor is executed\n    this.keyStrokeContext = this._createKeyStrokeContext();\n    super._initKeyStrokeContext();\n  }\n\n  _createKeyStrokeContext() {\n    if (this.legacy) {\n      // native input control is a text field -> use input field context to make sure backspace etc. does not bubble up\n      return new InputFieldKeyStrokeContext();\n    }\n  }\n\n  _render() {\n    this.$fileInput = this.$parent.makeElement('<input>')\n      .attr('type', 'file')\n      .on('change', this._onFileChange.bind(this));\n\n    if (!this.legacy) {\n      this.$container = this.$parent.appendDiv('file-input input-field');\n      this.$fileInput.appendTo(this.$container);\n      this.$container.on('mousedown', this._onMouseDown.bind(this));\n      this.$text = this.$container.appendDiv('file-input-text');\n    } else {\n      this._renderLegacyMode();\n    }\n\n    if (this.legacy) {\n      // Files may not be set into native control -> clear list in order to be sync again\n      this.clear();\n    }\n  }\n\n  _renderLegacyMode() {\n    this.$legacyFormTarget = this.$fileInput.appendElement('<iframe>')\n      .attr('name', 'legacyFileUpload' + this.uploadController.id)\n      .on('load', () => {\n        // Manually handle JSON response from iframe\n        try {\n          // \"onAjaxDone\"\n          let text = this.$legacyFormTarget.contents().text();\n          if (strings.hasText(text)) {\n            // Manually handle JSON response\n            let json = $.parseJSON(text);\n            this.session.responseQueue.process(json);\n          }\n        } finally {\n          // \"onAjaxAlways\"\n          this.session.setBusy(false);\n        }\n      });\n    this.$fileInput\n      .attr('name', 'file')\n      .addClass('legacy-upload-file-input');\n    this.$legacyForm = this.$parent.appendElement('<form>', 'legacy-upload-form')\n      .attr('action', this.legacyFileUploadUrl)\n      .attr('enctype', 'multipart/form-data')\n      .attr('method', 'post')\n      .attr('target', 'legacyFileUpload' + this.uploadController.id)\n      .append(this.$fileInput);\n    this.$container = this.$legacyForm;\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderText();\n    this._renderAcceptTypes();\n    this._renderMultiSelect();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._installOrUninstallDragAndDropHandler();\n\n    if (this.legacy) {\n      this.$fileInput.setEnabled(this.enabledComputed);\n    } else {\n      this.$container.setTabbable(this.enabledComputed);\n    }\n  }\n\n  setText(text) {\n    this.setProperty('text', text);\n  }\n\n  _renderText() {\n    if (this.legacy) {\n      return;\n    }\n    let text = this.text || '';\n    this.$text.text(text);\n  }\n\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n  }\n\n  _renderAcceptTypes() {\n    let acceptTypes = this.acceptTypes || '';\n    this.$fileInput.attr('accept', acceptTypes);\n  }\n\n  setMultiSelect(multiSelect) {\n    this.setProperty('multiSelect', multiSelect);\n  }\n\n  _renderMultiSelect() {\n    this.$fileInput.prop('multiple', this.multiSelect);\n  }\n\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n  }\n\n  _remove() {\n    dragAndDrop.uninstallDragAndDropHandler(this);\n    super._remove();\n  }\n\n  _installOrUninstallDragAndDropHandler() {\n    dragAndDrop.installOrUninstallDragAndDropHandler(\n      {\n        target: this,\n        onDrop: event => {\n          if (event.files.length >= 1) {\n            this._setFiles(event.files);\n          }\n        },\n        dropMaximumSize: () => this.maximumUploadSize,\n        // disable file validation\n        validateFiles: (files, defaultValidator) => {\n        }\n      });\n  }\n\n  clear() {\n    this._setFiles([]);\n    // _setFiles actually sets the text as well, but only if files have changed.\n    // Make sure text is cleared as well if there are no files but a text set.\n    this.setText(null);\n    if (this.rendered) {\n      this.$fileInput.val(null);\n    }\n  }\n\n  _setFiles(files) {\n    if (files instanceof FileList) {\n      files = fileUtil.fileListToArray(files);\n    }\n    files = arrays.ensure(files);\n    if (arrays.equals(this.files, files)) {\n      return;\n    }\n    let name = '';\n    if (files.length > 0) {\n      if (this.legacy) {\n        name = files[0];\n      } else {\n        name = files[0].name;\n      }\n    }\n    this.files = files;\n    this.setText(name);\n    this.trigger('change', {\n      files: files\n    });\n  }\n\n  upload() {\n    if (this.files.length === 0) {\n      return true;\n    }\n    if (!this.legacy) {\n      return this.session.uploadFiles(this.uploadController, this.files, undefined, this.maximumUploadSize);\n    }\n    this.session.setBusy(true);\n    this.$legacyForm[0].submit();\n    return true;\n  }\n\n  browse() {\n    // Trigger browser's file chooser\n    this.$fileInput.click();\n  }\n\n  _onFileChange(event) {\n    let files = [];\n\n    if (!this.legacy) {\n      files = this.$fileInput[0].files;\n    } else {\n      if (this.$fileInput[0].value) {\n        files.push(this.$fileInput[0].value);\n      }\n    }\n    if (files.length) {\n      this._setFiles(files);\n    }\n  }\n\n  _onMouseDown() {\n    if (!this.enabled) {\n      return;\n    }\n    this.browse();\n  }\n\n  /**\n   * @deprecated use files.fileListToArray instead\n   */\n  static fileListToArray(fileList) {\n    return fileUtil.fileListToArray(fileList);\n  }\n\n  validateMaximumUploadSize(files) {\n    if (!fileUtil.validateMaximumUploadSize(files, this.maximumUploadSize)) {\n      throw this.session.text('ui.FileSizeLimit', (this.maximumUploadSize / 1024 / 1024));\n    }\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,KAAK,IAAIC,QAAQ,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,GAAG,EAAEC,MAAM,QAAO,UAAU;AACzH,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,SAAS,SAASF,MAAM,CAAC;EAE5CG,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,iBAAiB,GAAGH,SAAS,CAACI,2BAA2B;IAC9D,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACZ,KAAK,GAAG,EAAE;IACf,IAAI,CAACa,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,IAAI,GAAG,IAAI;EAClB;EAEuD;;EAEvDC,KAAK,CAACC,KAAK,EAAE;IACX,KAAK,CAACD,KAAK,CAACC,KAAK,CAAC;IAClB,IAAI,CAACC,gBAAgB,GAAGD,KAAK,CAACC,gBAAgB,IAAID,KAAK,CAACE,MAAM;IAC9D,IAAIC,GAAG,GAAG,IAAIf,GAAG,CAACY,KAAK,CAACH,mBAAmB,IAAI,SAAS,GAAG,IAAI,CAACO,OAAO,CAACC,WAAW,GAAG,GAAG,GAAG,IAAI,CAACJ,gBAAgB,CAACK,EAAE,CAAC;IACrHH,GAAG,CAACI,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC;IAChC,IAAI,CAACV,mBAAmB,GAAGM,GAAG,CAACK,QAAQ,EAAE;IACzC,IAAI,CAACC,MAAM,GAAG,CAAC3B,MAAM,CAAC4B,GAAG,EAAE,CAACC,YAAY,EAAE;EAC5C;;EAEA;AACF;AACA;EACEC,qBAAqB,GAAG;IACtB;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,uBAAuB,EAAE;IACtD,KAAK,CAACF,qBAAqB,EAAE;EAC/B;EAEAE,uBAAuB,GAAG;IACxB,IAAI,IAAI,CAACL,MAAM,EAAE;MACf;MACA,OAAO,IAAIvB,0BAA0B,EAAE;IACzC;EACF;EAEA6B,OAAO,GAAG;IACR,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,OAAO,CAACC,WAAW,CAAC,SAAS,CAAC,CAClDC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE9C,IAAI,CAAC,IAAI,CAACb,MAAM,EAAE;MAChB,IAAI,CAACc,UAAU,GAAG,IAAI,CAACN,OAAO,CAACO,SAAS,CAAC,wBAAwB,CAAC;MAClE,IAAI,CAACR,UAAU,CAACS,QAAQ,CAAC,IAAI,CAACF,UAAU,CAAC;MACzC,IAAI,CAACA,UAAU,CAACH,EAAE,CAAC,WAAW,EAAE,IAAI,CAACM,YAAY,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7D,IAAI,CAACK,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACC,SAAS,CAAC,iBAAiB,CAAC;IAC3D,CAAC,MAAM;MACL,IAAI,CAACI,iBAAiB,EAAE;IAC1B;IAEA,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf;MACA,IAAI,CAACoB,KAAK,EAAE;IACd;EACF;EAEAD,iBAAiB,GAAG;IAClB,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACd,UAAU,CAACe,aAAa,CAAC,UAAU,CAAC,CAC/DZ,IAAI,CAAC,MAAM,EAAE,kBAAkB,GAAG,IAAI,CAAClB,gBAAgB,CAACK,EAAE,CAAC,CAC3Dc,EAAE,CAAC,MAAM,EAAE,MAAM;MAChB;MACA,IAAI;QACF;QACA,IAAItB,IAAI,GAAG,IAAI,CAACgC,iBAAiB,CAACE,QAAQ,EAAE,CAAClC,IAAI,EAAE;QACnD,IAAIX,OAAO,CAAC8C,OAAO,CAACnC,IAAI,CAAC,EAAE;UACzB;UACA,IAAIoC,IAAI,GAAG5C,CAAC,CAAC6C,SAAS,CAACrC,IAAI,CAAC;UAC5B,IAAI,CAACM,OAAO,CAACgC,aAAa,CAACC,OAAO,CAACH,IAAI,CAAC;QAC1C;MACF,CAAC,SAAS;QACR;QACA,IAAI,CAAC9B,OAAO,CAACkC,OAAO,CAAC,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC;IACJ,IAAI,CAACtB,UAAU,CACZG,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBoB,QAAQ,CAAC,0BAA0B,CAAC;IACvC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACvB,OAAO,CAACc,aAAa,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CAC1EZ,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACtB,mBAAmB,CAAC,CACxCsB,IAAI,CAAC,SAAS,EAAE,qBAAqB,CAAC,CACtCA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,QAAQ,EAAE,kBAAkB,GAAG,IAAI,CAAClB,gBAAgB,CAACK,EAAE,CAAC,CAC7DmC,MAAM,CAAC,IAAI,CAACzB,UAAU,CAAC;IAC1B,IAAI,CAACO,UAAU,GAAG,IAAI,CAACiB,WAAW;EACpC;EAEAE,iBAAiB,GAAG;IAClB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,cAAc,GAAG;IACf,KAAK,CAACA,cAAc,EAAE;IACtB,IAAI,CAACC,qCAAqC,EAAE;IAE5C,IAAI,IAAI,CAACtC,MAAM,EAAE;MACf,IAAI,CAACO,UAAU,CAACgC,UAAU,CAAC,IAAI,CAACC,eAAe,CAAC;IAClD,CAAC,MAAM;MACL,IAAI,CAAC1B,UAAU,CAAC2B,WAAW,CAAC,IAAI,CAACD,eAAe,CAAC;IACnD;EACF;EAEAE,OAAO,CAACrD,IAAI,EAAE;IACZ,IAAI,CAACsD,WAAW,CAAC,MAAM,EAAEtD,IAAI,CAAC;EAChC;EAEA6C,WAAW,GAAG;IACZ,IAAI,IAAI,CAAClC,MAAM,EAAE;MACf;IACF;IACA,IAAIX,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,EAAE;IAC1B,IAAI,CAAC6B,KAAK,CAAC7B,IAAI,CAACA,IAAI,CAAC;EACvB;EAEAuD,cAAc,CAAC5D,WAAW,EAAE;IAC1B,IAAI,CAAC2D,WAAW,CAAC,aAAa,EAAE3D,WAAW,CAAC;EAC9C;EAEAmD,kBAAkB,GAAG;IACnB,IAAInD,WAAW,GAAG,IAAI,CAACA,WAAW,IAAI,EAAE;IACxC,IAAI,CAACuB,UAAU,CAACG,IAAI,CAAC,QAAQ,EAAE1B,WAAW,CAAC;EAC7C;EAEA6D,cAAc,CAAC1D,WAAW,EAAE;IAC1B,IAAI,CAACwD,WAAW,CAAC,aAAa,EAAExD,WAAW,CAAC;EAC9C;EAEAiD,kBAAkB,GAAG;IACnB,IAAI,CAAC7B,UAAU,CAACuC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC3D,WAAW,CAAC;EACpD;EAEA4D,oBAAoB,CAAC9D,iBAAiB,EAAE;IACtC,IAAI,CAAC0D,WAAW,CAAC,mBAAmB,EAAE1D,iBAAiB,CAAC;EAC1D;EAEA+D,OAAO,GAAG;IACR1E,WAAW,CAAC2E,2BAA2B,CAAC,IAAI,CAAC;IAC7C,KAAK,CAACD,OAAO,EAAE;EACjB;EAEAV,qCAAqC,GAAG;IACtChE,WAAW,CAAC4E,oCAAoC,CAC9C;MACEC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAEC,KAAK,IAAI;QACf,IAAIA,KAAK,CAAC9E,KAAK,CAAC+E,MAAM,IAAI,CAAC,EAAE;UAC3B,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC9E,KAAK,CAAC;QAC7B;MACF,CAAC;MACDiF,eAAe,EAAE,MAAM,IAAI,CAACvE,iBAAiB;MAC7C;MACAwE,aAAa,EAAE,CAAClF,KAAK,EAAEmF,gBAAgB,KAAK,CAC5C;IACF,CAAC,CAAC;EACN;EAEAtC,KAAK,GAAG;IACN,IAAI,CAACmC,SAAS,CAAC,EAAE,CAAC;IAClB;IACA;IACA,IAAI,CAACb,OAAO,CAAC,IAAI,CAAC;IAClB,IAAI,IAAI,CAACiB,QAAQ,EAAE;MACjB,IAAI,CAACpD,UAAU,CAACqD,GAAG,CAAC,IAAI,CAAC;IAC3B;EACF;EAEAL,SAAS,CAAChF,KAAK,EAAE;IACf,IAAIA,KAAK,YAAYsF,QAAQ,EAAE;MAC7BtF,KAAK,GAAGC,QAAQ,CAACsF,eAAe,CAACvF,KAAK,CAAC;IACzC;IACAA,KAAK,GAAGH,MAAM,CAAC2F,MAAM,CAACxF,KAAK,CAAC;IAC5B,IAAIH,MAAM,CAAC4F,MAAM,CAAC,IAAI,CAACzF,KAAK,EAAEA,KAAK,CAAC,EAAE;MACpC;IACF;IACA,IAAI0F,IAAI,GAAG,EAAE;IACb,IAAI1F,KAAK,CAAC+E,MAAM,GAAG,CAAC,EAAE;MACpB,IAAI,IAAI,CAACtD,MAAM,EAAE;QACfiE,IAAI,GAAG1F,KAAK,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACL0F,IAAI,GAAG1F,KAAK,CAAC,CAAC,CAAC,CAAC0F,IAAI;MACtB;IACF;IACA,IAAI,CAAC1F,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACmE,OAAO,CAACuB,IAAI,CAAC;IAClB,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE;MACrB3F,KAAK,EAAEA;IACT,CAAC,CAAC;EACJ;EAEA4F,MAAM,GAAG;IACP,IAAI,IAAI,CAAC5F,KAAK,CAAC+E,MAAM,KAAK,CAAC,EAAE;MAC3B,OAAO,IAAI;IACb;IACA,IAAI,CAAC,IAAI,CAACtD,MAAM,EAAE;MAChB,OAAO,IAAI,CAACL,OAAO,CAACyE,WAAW,CAAC,IAAI,CAAC5E,gBAAgB,EAAE,IAAI,CAACjB,KAAK,EAAE8F,SAAS,EAAE,IAAI,CAACpF,iBAAiB,CAAC;IACvG;IACA,IAAI,CAACU,OAAO,CAACkC,OAAO,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC,CAACuC,MAAM,EAAE;IAC5B,OAAO,IAAI;EACb;EAEAC,MAAM,GAAG;IACP;IACA,IAAI,CAAChE,UAAU,CAACiE,KAAK,EAAE;EACzB;EAEA5D,aAAa,CAACyC,KAAK,EAAE;IACnB,IAAI9E,KAAK,GAAG,EAAE;IAEd,IAAI,CAAC,IAAI,CAACyB,MAAM,EAAE;MAChBzB,KAAK,GAAG,IAAI,CAACgC,UAAU,CAAC,CAAC,CAAC,CAAChC,KAAK;IAClC,CAAC,MAAM;MACL,IAAI,IAAI,CAACgC,UAAU,CAAC,CAAC,CAAC,CAACkE,KAAK,EAAE;QAC5BlG,KAAK,CAACmG,IAAI,CAAC,IAAI,CAACnE,UAAU,CAAC,CAAC,CAAC,CAACkE,KAAK,CAAC;MACtC;IACF;IACA,IAAIlG,KAAK,CAAC+E,MAAM,EAAE;MAChB,IAAI,CAACC,SAAS,CAAChF,KAAK,CAAC;IACvB;EACF;EAEA0C,YAAY,GAAG;IACb,IAAI,CAAC,IAAI,CAAC0D,OAAO,EAAE;MACjB;IACF;IACA,IAAI,CAACJ,MAAM,EAAE;EACf;;EAEA;AACF;AACA;EACE,OAAOT,eAAe,CAACc,QAAQ,EAAE;IAC/B,OAAOpG,QAAQ,CAACsF,eAAe,CAACc,QAAQ,CAAC;EAC3C;EAEAC,yBAAyB,CAACtG,KAAK,EAAE;IAC/B,IAAI,CAACC,QAAQ,CAACqG,yBAAyB,CAACtG,KAAK,EAAE,IAAI,CAACU,iBAAiB,CAAC,EAAE;MACtE,MAAM,IAAI,CAACU,OAAO,CAACN,IAAI,CAAC,kBAAkB,EAAG,IAAI,CAACJ,iBAAiB,GAAG,IAAI,GAAG,IAAI,CAAE;IACrF;EACF;AACF;AAAC,gBArPoBH,SAAS,iCAYS,EAAE,GAAG,IAAI,GAAG,IAAI"},"metadata":{},"sourceType":"module"}