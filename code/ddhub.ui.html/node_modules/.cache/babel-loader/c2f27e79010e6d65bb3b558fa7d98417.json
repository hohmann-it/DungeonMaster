{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, SimpleTabArea, SimpleTabAreaLayout } from '../../index';\nexport default class DesktopHeaderLayout extends AbstractLayout {\n  constructor(header) {\n    super();\n    this.header = header;\n    this.desktop = header.desktop;\n  }\n\n  /**\n   * @override AbstractLayout.js\n   */\n  layout($container) {\n    let viewButtonBoxPrefSize,\n      toolBoxPrefSize,\n      tabsPrefSize,\n      smallTabsPrefSize,\n      htmlContainer = this.header.htmlComp,\n      containerSize = htmlContainer.size(),\n      toolBox = this.header.toolBox,\n      viewButtonBox = this.header.viewButtonBox,\n      tabArea = this.header.tabArea,\n      tabsWidth = 0,\n      // = available width for tabs\n      logoWidth = 0,\n      viewButtonBoxWidth = 0,\n      toolBoxWidth = 0;\n    containerSize = containerSize.subtract(htmlContainer.insets());\n    if (this.header.logo) {\n      logoWidth = graphics.size(this.header.logo.$container, true).width;\n    }\n    if (viewButtonBox) {\n      viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize(true);\n      viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n      viewButtonBox.htmlComp.setSize(viewButtonBoxPrefSize.subtract(viewButtonBox.htmlComp.margins()));\n    }\n    tabArea.htmlComp.$comp.cssLeft(viewButtonBoxWidth);\n    if (toolBox) {\n      toolBoxPrefSize = toolBox.htmlComp.prefSize(true);\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n    tabsWidth = calcTabsWidth();\n    smallTabsPrefSize = getTabsSmallPrefSize();\n    tabsPrefSize = tabArea.htmlComp.prefSize({\n      widthHint: tabsWidth,\n      includeMargin: true\n    });\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      // All tabs fit when they have small size -> use available size but max the pref size -> prefSize = size of maximum tabs if tabs use their large (max) size\n      tabsWidth = Math.min(tabsPrefSize.width, tabsWidth);\n      setTabsSize();\n      return;\n    }\n\n    // 1st try to minimize padding around tool-bar items -> compact mode\n    if (toolBox) {\n      toolBoxPrefSize = getToolBoxCompactPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n    tabsWidth = calcTabsWidth();\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      setTabsSize();\n      return;\n    }\n\n    // 2nd remove text from tool-bar items, only show icon\n    if (toolBox) {\n      toolBoxPrefSize = getToolBoxShrinkPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n    tabsWidth = calcTabsWidth();\n    if (tabArea.displayStyle !== SimpleTabArea.DisplayStyle.SPREAD_EVEN) {\n      tabsWidth = Math.min(smallTabsPrefSize.width, tabsWidth);\n    }\n    // Ensure minimum width for the the overflow menu - expect if there are no tabs at all (in that case ensure min width of 0)\n    let overflowTabItemWidth = tabArea.htmlComp.layout.overflowTabItemWidth;\n    tabsWidth = Math.max(tabsWidth, tabArea.tabs.length ? overflowTabItemWidth : 0);\n    setTabsSize();\n\n    // 3rd if only the overflow menu is shown make toolBox smaller so that ellipsis may be displayed\n    if (toolBox && tabsWidth <= overflowTabItemWidth) {\n      // layout toolBox, now an ellipsis menu may be shown\n      toolBoxWidth = containerSize.width - tabsWidth - logoWidth - viewButtonBoxWidth;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n    function calcTabsWidth() {\n      return containerSize.width - toolBoxWidth - logoWidth - viewButtonBoxWidth;\n    }\n    function setTabsSize() {\n      tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height).subtract(tabArea.htmlComp.margins()));\n    }\n    function getTabsSmallPrefSize() {\n      return tabArea.htmlComp.layout.smallPrefSize({\n        widthHint: tabsWidth\n      }).add(tabArea.htmlComp.margins());\n    }\n    function setToolBoxSize() {\n      toolBox.htmlComp.setSize(new Dimension(toolBoxWidth, toolBoxPrefSize.height).subtract(toolBox.htmlComp.margins()));\n    }\n    function getToolBoxCompactPrefSize() {\n      return toolBox.htmlComp.layout.compactPrefSize().add(toolBox.htmlComp.margins());\n    }\n    function getToolBoxShrinkPrefSize() {\n      return toolBox.htmlComp.layout.shrinkPrefSize().add(toolBox.htmlComp.margins());\n    }\n    function getToolBoxActualPrefSize() {\n      return toolBox.htmlComp.layout.actualPrefSize().add(toolBox.htmlComp.margins());\n    }\n    function setToolBoxLocation() {\n      toolBox.htmlComp.$comp.cssLeft(containerSize.width - toolBoxWidth - logoWidth);\n    }\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","graphics","SimpleTabArea","SimpleTabAreaLayout","DesktopHeaderLayout","constructor","header","desktop","layout","$container","viewButtonBoxPrefSize","toolBoxPrefSize","tabsPrefSize","smallTabsPrefSize","htmlContainer","htmlComp","containerSize","size","toolBox","viewButtonBox","tabArea","tabsWidth","logoWidth","viewButtonBoxWidth","toolBoxWidth","subtract","insets","logo","width","prefSize","setSize","margins","$comp","cssLeft","setToolBoxSize","setToolBoxLocation","calcTabsWidth","getTabsSmallPrefSize","widthHint","includeMargin","Math","min","setTabsSize","getToolBoxCompactPrefSize","getToolBoxShrinkPrefSize","displayStyle","DisplayStyle","SPREAD_EVEN","overflowTabItemWidth","max","tabs","length","height","smallPrefSize","add","compactPrefSize","shrinkPrefSize","getToolBoxActualPrefSize","actualPrefSize"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/header/DesktopHeaderLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, SimpleTabArea, SimpleTabAreaLayout} from '../../index';\n\nexport default class DesktopHeaderLayout extends AbstractLayout {\n\n  constructor(header) {\n    super();\n    this.header = header;\n    this.desktop = header.desktop;\n  }\n\n  /**\n   * @override AbstractLayout.js\n   */\n  layout($container) {\n    let viewButtonBoxPrefSize, toolBoxPrefSize, tabsPrefSize, smallTabsPrefSize,\n      htmlContainer = this.header.htmlComp,\n      containerSize = htmlContainer.size(),\n      toolBox = this.header.toolBox,\n      viewButtonBox = this.header.viewButtonBox,\n      tabArea = this.header.tabArea,\n      tabsWidth = 0, // = available width for tabs\n      logoWidth = 0,\n      viewButtonBoxWidth = 0,\n      toolBoxWidth = 0;\n\n    containerSize = containerSize.subtract(htmlContainer.insets());\n\n    if (this.header.logo) {\n      logoWidth = graphics.size(this.header.logo.$container, true).width;\n    }\n\n    if (viewButtonBox) {\n      viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize(true);\n      viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n      viewButtonBox.htmlComp.setSize(viewButtonBoxPrefSize.subtract(viewButtonBox.htmlComp.margins()));\n    }\n    tabArea.htmlComp.$comp.cssLeft(viewButtonBoxWidth);\n\n    if (toolBox) {\n      toolBoxPrefSize = toolBox.htmlComp.prefSize(true);\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    smallTabsPrefSize = getTabsSmallPrefSize();\n    tabsPrefSize = tabArea.htmlComp.prefSize({widthHint: tabsWidth, includeMargin: true});\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      // All tabs fit when they have small size -> use available size but max the pref size -> prefSize = size of maximum tabs if tabs use their large (max) size\n      tabsWidth = Math.min(tabsPrefSize.width, tabsWidth);\n      setTabsSize();\n      return;\n    }\n\n    // 1st try to minimize padding around tool-bar items -> compact mode\n    if (toolBox) {\n      toolBoxPrefSize = getToolBoxCompactPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      setTabsSize();\n      return;\n    }\n\n    // 2nd remove text from tool-bar items, only show icon\n    if (toolBox) {\n      toolBoxPrefSize = getToolBoxShrinkPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    if (tabArea.displayStyle !== SimpleTabArea.DisplayStyle.SPREAD_EVEN) {\n      tabsWidth = Math.min(smallTabsPrefSize.width, tabsWidth);\n    }\n    // Ensure minimum width for the the overflow menu - expect if there are no tabs at all (in that case ensure min width of 0)\n    let overflowTabItemWidth = tabArea.htmlComp.layout.overflowTabItemWidth;\n    tabsWidth = Math.max(tabsWidth, (tabArea.tabs.length ? overflowTabItemWidth : 0));\n    setTabsSize();\n\n    // 3rd if only the overflow menu is shown make toolBox smaller so that ellipsis may be displayed\n    if (toolBox && tabsWidth <= overflowTabItemWidth) {\n      // layout toolBox, now an ellipsis menu may be shown\n      toolBoxWidth = containerSize.width - tabsWidth - logoWidth - viewButtonBoxWidth;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    function calcTabsWidth() {\n      return containerSize.width - toolBoxWidth - logoWidth - viewButtonBoxWidth;\n    }\n\n    function setTabsSize() {\n      tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height).subtract(tabArea.htmlComp.margins()));\n    }\n\n    function getTabsSmallPrefSize() {\n      return tabArea.htmlComp.layout.smallPrefSize({widthHint: tabsWidth}).add(tabArea.htmlComp.margins());\n    }\n\n    function setToolBoxSize() {\n      toolBox.htmlComp.setSize(new Dimension(toolBoxWidth, toolBoxPrefSize.height).subtract(toolBox.htmlComp.margins()));\n    }\n\n    function getToolBoxCompactPrefSize() {\n      return toolBox.htmlComp.layout.compactPrefSize().add(toolBox.htmlComp.margins());\n    }\n\n    function getToolBoxShrinkPrefSize() {\n      return toolBox.htmlComp.layout.shrinkPrefSize().add(toolBox.htmlComp.margins());\n    }\n\n    function getToolBoxActualPrefSize() {\n      return toolBox.htmlComp.layout.actualPrefSize().add(toolBox.htmlComp.margins());\n    }\n\n    function setToolBoxLocation() {\n      toolBox.htmlComp.$comp.cssLeft(containerSize.width - toolBoxWidth - logoWidth);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}