{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FlexboxLayout, FlexboxLayoutData, HtmlComponent, scout, SimpleTabBox, Splitter, strings, Widget, widgets } from '../../index';\nexport default class BenchColumn extends Widget {\n  constructor() {\n    super();\n    this.tabBoxes = [];\n    this._widgetToTabBox = {}; // [key=viewId, value=SimpleTabBox instance]\n    this.components = null;\n    this._removeViewInProgress = 0;\n    this.layoutData;\n\n    // event listener functions\n    this._viewAddHandler = this._onViewAdd.bind(this);\n    this._viewRemoveHandler = this._onViewRemove.bind(this);\n    this._viewActivateHandler = this._onViewActivate.bind(this);\n    this._viewDeactivateHandler = this._onViewDeactivate.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this.layoutData = model.layoutData;\n    this.layoutCacheKey = model.cacheKey;\n    this.cssClass = model.cssClass;\n    this._createTabBoxes();\n  }\n\n  /**\n   * Returns a $container used as a bind target for the key-stroke context of the group-box.\n   * By default this function returns the container of the form, or when group-box is has no\n   * form as a parent the container of the group-box.\n   */\n  _keyStrokeBindTarget() {\n    return this.$container;\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('bench-column');\n    if (this.cssClass) {\n      this.$container.addClass(this.cssClass);\n    }\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n    this.htmlComp.layoutData = this.getLayoutData();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTabBoxes();\n    this._revalidateSplitters();\n  }\n  _renderTabBoxes() {\n    this.visibleTabBoxes().forEach(tabBox => {\n      this._renderTabBox(tabBox);\n    });\n    this.updateFirstLastMarker();\n  }\n  _renderTabBox(tabBox) {\n    if (!tabBox.rendered) {\n      tabBox.render();\n    }\n  }\n  postRender() {\n    this.tabBoxes.forEach(tabBox => {\n      tabBox.postRender();\n    });\n  }\n  _createLayout() {\n    return new FlexboxLayout(FlexboxLayout.Direction.COLUMN, this.layoutCacheKey);\n  }\n  updateLayoutData(layoutData, cacheKey) {\n    if (this.getLayoutData() === layoutData) {\n      return;\n    }\n    this.layoutCacheKey = cacheKey;\n    this.setLayoutData(layoutData);\n\n    // update columns\n    let rowDatas = this.layoutData.getRows();\n    this.tabBoxes.forEach((tb, i) => {\n      tb.setLayoutData(rowDatas[i]);\n    });\n    this._updateSplitterMovable();\n    if (this.rendered) {\n      this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n  }\n  setLayoutData(layoutData) {\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n  }\n  getLayoutData() {\n    return this.layoutData;\n  }\n  _onViewAdd(event) {\n    this.trigger('viewAdd', {\n      view: event.view\n    });\n  }\n  _onViewRemove(event) {\n    this.trigger('viewRemove', {\n      view: event.view\n    });\n  }\n  _onViewActivate(event) {\n    this.trigger('viewActivate', {\n      view: event.view\n    });\n  }\n  _onViewDeactivate(event) {\n    this.trigger('viewDeactivate', {\n      view: event.view\n    });\n  }\n  activateView(view) {\n    let tabBox = this.getTabBox(view.displayViewId);\n    tabBox.activateView(view);\n  }\n  _createTabBoxes() {\n    let rowLayoutDatas = [];\n    if (this.layoutData) {\n      rowLayoutDatas = this.layoutData.getRows();\n    }\n    for (let i = 0; i < 3; i++) {\n      let tabBox = scout.create('SimpleTabBox', {\n        parent: this,\n        cssClass: strings.join(' ', 'view-tab-box', BenchColumn.TAB_BOX_CLASSES[i]),\n        controller: scout.create('DesktopTabBoxController')\n      });\n      tabBox.setLayoutData(rowLayoutDatas[i]);\n      tabBox.on('viewAdd', this._viewAddHandler);\n      tabBox.on('viewRemove', this._viewRemoveHandler);\n      tabBox.on('viewActivate', this._viewActivateHandler);\n      tabBox.on('viewDeactivate', this._viewDeactivateHandler);\n      this.tabBoxes.push(tabBox);\n    }\n  }\n  _revalidateSplitters(clearPosition) {\n    // remove old splitters\n    if (this.components) {\n      this.components.forEach(comp => {\n        if (comp instanceof Splitter) {\n          comp.destroy();\n        }\n      });\n    }\n    this.components = this.visibleTabBoxes().reduce((arr, col) => {\n      if (arr.length > 0) {\n        // add sep\n        let splitter = scout.create('Splitter', {\n          parent: this,\n          $anchor: arr[arr.length - 1].$container,\n          $root: this.$container,\n          splitHorizontal: false,\n          maxRatio: 1\n        });\n        splitter.render();\n        splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n        splitter.$container.addClass('line');\n        arr.push(splitter);\n      }\n      arr.push(col);\n      return arr;\n    }, []);\n    // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n    this.components.filter(comp => {\n      return comp instanceof SimpleTabBox;\n    }).reduce((c1, c2, index) => {\n      if (index > 0) {\n        c2.$container.insertAfter(c1.$container);\n      }\n      return c2;\n    }, undefined);\n    this._updateSplitterMovable();\n  }\n  _updateSplitterMovable() {\n    if (!this.components) {\n      return;\n    }\n    this.components.forEach((c, i) => {\n      if (c instanceof Splitter) {\n        let componentsBefore = this.components.slice(0, i).reverse();\n        let componentsAfter = this.components.slice(i + 1);\n        // shrink\n        if (componentsBefore.filter(c => {\n          return c.getLayoutData().shrink > 0;\n        }).length > 0 && componentsAfter.filter(c => {\n          return c.getLayoutData().grow > 0;\n        }).length > 0) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        // grow\n        if (componentsBefore.filter(c => {\n          return c.getLayoutData().grow > 0;\n        }).length > 0 && componentsAfter.filter(c => {\n          return c.getLayoutData().shrink > 0;\n        }).length > 0) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        c.setEnabled(false);\n      }\n    });\n  }\n  _onSplitterMove(event) {\n    let splitter = event.source;\n    // noinspection UnnecessaryLocalVariableJS\n    let diff = event.position - splitter.htmlComp.location().y - splitter.htmlComp.margins().top - splitter.htmlComp.insets().top;\n    splitter.getLayoutData().diff = diff;\n    this.revalidateLayout();\n    splitter.getLayoutData().diff = null;\n    event.preventDefault();\n  }\n  addView(view, bringToFront) {\n    let tabBox = this.getTabBox(view.displayViewId);\n    this._widgetToTabBox[view.id] = tabBox;\n    tabBox.addView(view, bringToFront);\n    if (this.rendered && tabBox.viewCount() === 1) {\n      if (!tabBox.rendered) {\n        // lazy render if the first view is added.\n        tabBox.render();\n      }\n      this._revalidateSplitters(true);\n      this.updateFirstLastMarker();\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n  }\n  getTabBox(displayViewId) {\n    let tabBox;\n    switch (displayViewId) {\n      case 'NW':\n      case 'N':\n      case 'NE':\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.TOP];\n        break;\n      case 'SW':\n      case 'S':\n      case 'SE':\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.BOTTOM];\n        break;\n      default:\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.CENTER];\n        break;\n    }\n    return tabBox;\n  }\n  removeView(view, showSiblingView) {\n    let tabBox = this._widgetToTabBox[view.id];\n    if (tabBox) {\n      this._removeViewInProgress++;\n      tabBox.removeView(view, showSiblingView);\n      this._removeViewInProgress--;\n      delete this._widgetToTabBox[view.id];\n      if (this.rendered && tabBox.viewCount() === 0 && this._removeViewInProgress === 0) {\n        // remove view area if no view is left.\n        tabBox.remove();\n        this._revalidateSplitters(true);\n        this.updateFirstLastMarker();\n        this.htmlComp.layout.reset();\n        this.htmlComp.invalidateLayoutTree();\n      }\n    }\n  }\n  viewCount() {\n    return this.tabBoxes.map(tabBox => {\n      return tabBox.viewCount();\n    }).reduce((c1, c2) => {\n      return c1 + c2;\n    }, 0);\n  }\n  hasView(view) {\n    return this.tabBoxes.filter(tabBox => {\n      return tabBox.hasView(view);\n    }).length > 0;\n  }\n  hasViews() {\n    return this.viewCount() > 0;\n  }\n  getViews(displayViewId) {\n    return this.tabBoxes.reduce((arr, tabBox) => {\n      arrays.pushAll(arr, tabBox.getViews(displayViewId));\n      return arr;\n    }, []);\n  }\n  getComponents() {\n    return this.components;\n  }\n  visibleTabBoxes() {\n    return this.tabBoxes.filter(tabBox => {\n      return tabBox.hasViews();\n    });\n  }\n  updateFirstLastMarker() {\n    widgets.updateFirstLastMarker(this.visibleTabBoxes());\n  }\n}\n_defineProperty(BenchColumn, \"TAB_BOX_INDEX\", {\n  TOP: 0,\n  CENTER: 1,\n  BOTTOM: 2\n});\n_defineProperty(BenchColumn, \"TAB_BOX_CLASSES\", ['north', 'center', 'south']);","map":{"version":3,"names":["arrays","FlexboxLayout","FlexboxLayoutData","HtmlComponent","scout","SimpleTabBox","Splitter","strings","Widget","widgets","BenchColumn","constructor","tabBoxes","_widgetToTabBox","components","_removeViewInProgress","layoutData","_viewAddHandler","_onViewAdd","bind","_viewRemoveHandler","_onViewRemove","_viewActivateHandler","_onViewActivate","_viewDeactivateHandler","_onViewDeactivate","_init","model","layoutCacheKey","cacheKey","cssClass","_createTabBoxes","_keyStrokeBindTarget","$container","_render","$parent","appendDiv","addClass","htmlComp","install","session","setLayout","_createLayout","getLayoutData","_renderProperties","_renderTabBoxes","_revalidateSplitters","visibleTabBoxes","forEach","tabBox","_renderTabBox","updateFirstLastMarker","rendered","render","postRender","Direction","COLUMN","updateLayoutData","setLayoutData","rowDatas","getRows","tb","i","_updateSplitterMovable","layout","setCacheKey","reset","invalidateLayoutTree","event","trigger","view","activateView","getTabBox","displayViewId","rowLayoutDatas","create","parent","join","TAB_BOX_CLASSES","controller","on","push","clearPosition","comp","destroy","reduce","arr","col","length","splitter","$anchor","$root","splitHorizontal","maxRatio","fixed","withOrder","order","filter","c1","c2","index","insertAfter","undefined","c","componentsBefore","slice","reverse","componentsAfter","shrink","grow","setEnabled","_onSplitterMove","source","diff","position","location","y","margins","top","insets","revalidateLayout","preventDefault","addView","bringToFront","id","viewCount","TAB_BOX_INDEX","TOP","BOTTOM","CENTER","removeView","showSiblingView","remove","map","hasView","hasViews","getViews","pushAll","getComponents"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/bench/BenchColumn.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FlexboxLayout, FlexboxLayoutData, HtmlComponent, scout, SimpleTabBox, Splitter, strings, Widget, widgets} from '../../index';\n\nexport default class BenchColumn extends Widget {\n\n  constructor() {\n    super();\n    this.tabBoxes = [];\n    this._widgetToTabBox = {}; // [key=viewId, value=SimpleTabBox instance]\n    this.components = null;\n    this._removeViewInProgress = 0;\n    this.layoutData;\n\n    // event listener functions\n    this._viewAddHandler = this._onViewAdd.bind(this);\n    this._viewRemoveHandler = this._onViewRemove.bind(this);\n    this._viewActivateHandler = this._onViewActivate.bind(this);\n    this._viewDeactivateHandler = this._onViewDeactivate.bind(this);\n  }\n\n  static TAB_BOX_INDEX = {\n    TOP: 0,\n    CENTER: 1,\n    BOTTOM: 2\n  };\n\n  static TAB_BOX_CLASSES = [\n    'north',\n    'center',\n    'south'\n  ];\n\n  _init(model) {\n    super._init(model);\n    this.layoutData = model.layoutData;\n    this.layoutCacheKey = model.cacheKey;\n    this.cssClass = model.cssClass;\n    this._createTabBoxes();\n  }\n\n  /**\n   * Returns a $container used as a bind target for the key-stroke context of the group-box.\n   * By default this function returns the container of the form, or when group-box is has no\n   * form as a parent the container of the group-box.\n   */\n  _keyStrokeBindTarget() {\n    return this.$container;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('bench-column');\n    if (this.cssClass) {\n      this.$container.addClass(this.cssClass);\n    }\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n\n    this.htmlComp.layoutData = this.getLayoutData();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTabBoxes();\n    this._revalidateSplitters();\n  }\n\n  _renderTabBoxes() {\n    this.visibleTabBoxes().forEach(tabBox => {\n      this._renderTabBox(tabBox);\n    });\n    this.updateFirstLastMarker();\n  }\n\n  _renderTabBox(tabBox) {\n    if (!tabBox.rendered) {\n      tabBox.render();\n    }\n  }\n\n  postRender() {\n    this.tabBoxes.forEach(tabBox => {\n      tabBox.postRender();\n    });\n  }\n\n  _createLayout() {\n    return new FlexboxLayout(FlexboxLayout.Direction.COLUMN, this.layoutCacheKey);\n  }\n\n  updateLayoutData(layoutData, cacheKey) {\n    if (this.getLayoutData() === layoutData) {\n      return;\n    }\n    this.layoutCacheKey = cacheKey;\n    this.setLayoutData(layoutData);\n\n    // update columns\n    let rowDatas = this.layoutData.getRows();\n    this.tabBoxes.forEach((tb, i) => {\n      tb.setLayoutData(rowDatas[i]);\n    });\n    this._updateSplitterMovable();\n    if (this.rendered) {\n      this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n  }\n\n  setLayoutData(layoutData) {\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n  }\n\n  getLayoutData() {\n    return this.layoutData;\n  }\n\n  _onViewAdd(event) {\n    this.trigger('viewAdd', {\n      view: event.view\n    });\n  }\n\n  _onViewRemove(event) {\n    this.trigger('viewRemove', {\n      view: event.view\n    });\n  }\n\n  _onViewActivate(event) {\n    this.trigger('viewActivate', {\n      view: event.view\n    });\n  }\n\n  _onViewDeactivate(event) {\n    this.trigger('viewDeactivate', {\n      view: event.view\n    });\n  }\n\n  activateView(view) {\n    let tabBox = this.getTabBox(view.displayViewId);\n    tabBox.activateView(view);\n  }\n\n  _createTabBoxes() {\n    let rowLayoutDatas = [];\n    if (this.layoutData) {\n      rowLayoutDatas = this.layoutData.getRows();\n    }\n    for (let i = 0; i < 3; i++) {\n      let tabBox = scout.create('SimpleTabBox', {\n        parent: this,\n        cssClass: strings.join(' ', 'view-tab-box', BenchColumn.TAB_BOX_CLASSES[i]),\n        controller: scout.create('DesktopTabBoxController')\n      });\n      tabBox.setLayoutData(rowLayoutDatas[i]);\n      tabBox.on('viewAdd', this._viewAddHandler);\n      tabBox.on('viewRemove', this._viewRemoveHandler);\n      tabBox.on('viewActivate', this._viewActivateHandler);\n      tabBox.on('viewDeactivate', this._viewDeactivateHandler);\n      this.tabBoxes.push(tabBox);\n    }\n  }\n\n  _revalidateSplitters(clearPosition) {\n    // remove old splitters\n    if (this.components) {\n      this.components.forEach(comp => {\n        if (comp instanceof Splitter) {\n          comp.destroy();\n        }\n      });\n    }\n    this.components = this.visibleTabBoxes()\n      .reduce((arr, col) => {\n        if (arr.length > 0) {\n          // add sep\n          let splitter = scout.create('Splitter', {\n            parent: this,\n            $anchor: arr[arr.length - 1].$container,\n            $root: this.$container,\n            splitHorizontal: false,\n            maxRatio: 1\n          });\n          splitter.render();\n          splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n          splitter.$container.addClass('line');\n          arr.push(splitter);\n        }\n        arr.push(col);\n        return arr;\n      }, []);\n    // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n    this.components.filter(comp => {\n      return comp instanceof SimpleTabBox;\n    })\n      .reduce((c1, c2, index) => {\n        if (index > 0) {\n          c2.$container.insertAfter(c1.$container);\n        }\n        return c2;\n      }, undefined);\n    this._updateSplitterMovable();\n  }\n\n  _updateSplitterMovable() {\n    if (!this.components) {\n      return;\n    }\n    this.components.forEach((c, i) => {\n      if (c instanceof Splitter) {\n        let componentsBefore = this.components.slice(0, i).reverse();\n        let componentsAfter = this.components.slice(i + 1);\n        // shrink\n        if (\n          componentsBefore.filter(c => {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0 &&\n          componentsAfter.filter(c => {\n            return c.getLayoutData().grow > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        // grow\n        if (\n          componentsBefore.filter(c => {\n            return c.getLayoutData().grow > 0;\n          }).length > 0 &&\n          componentsAfter.filter(c => {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        c.setEnabled(false);\n\n      }\n    });\n  }\n\n  _onSplitterMove(event) {\n    let splitter = event.source;\n    // noinspection UnnecessaryLocalVariableJS\n    let diff = event.position - splitter.htmlComp.location().y - splitter.htmlComp.margins().top - splitter.htmlComp.insets().top;\n    splitter.getLayoutData().diff = diff;\n    this.revalidateLayout();\n    splitter.getLayoutData().diff = null;\n    event.preventDefault();\n  }\n\n  addView(view, bringToFront) {\n    let tabBox = this.getTabBox(view.displayViewId);\n    this._widgetToTabBox[view.id] = tabBox;\n\n    tabBox.addView(view, bringToFront);\n\n    if (this.rendered && tabBox.viewCount() === 1) {\n      if (!tabBox.rendered) {\n        // lazy render if the first view is added.\n        tabBox.render();\n      }\n      this._revalidateSplitters(true);\n      this.updateFirstLastMarker();\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n    }\n  }\n\n  getTabBox(displayViewId) {\n    let tabBox;\n    switch (displayViewId) {\n      case 'NW':\n      case 'N':\n      case 'NE':\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.TOP];\n        break;\n      case 'SW':\n      case 'S':\n      case 'SE':\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.BOTTOM];\n        break;\n      default:\n        tabBox = this.tabBoxes[BenchColumn.TAB_BOX_INDEX.CENTER];\n        break;\n    }\n    return tabBox;\n  }\n\n  removeView(view, showSiblingView) {\n    let tabBox = this._widgetToTabBox[view.id];\n    if (tabBox) {\n      this._removeViewInProgress++;\n      tabBox.removeView(view, showSiblingView);\n      this._removeViewInProgress--;\n      delete this._widgetToTabBox[view.id];\n      if (this.rendered && tabBox.viewCount() === 0 && this._removeViewInProgress === 0) {\n        // remove view area if no view is left.\n        tabBox.remove();\n        this._revalidateSplitters(true);\n        this.updateFirstLastMarker();\n        this.htmlComp.layout.reset();\n        this.htmlComp.invalidateLayoutTree();\n      }\n    }\n  }\n\n  viewCount() {\n    return this.tabBoxes.map(tabBox => {\n      return tabBox.viewCount();\n    }).reduce((c1, c2) => {\n      return c1 + c2;\n    }, 0);\n  }\n\n  hasView(view) {\n    return this.tabBoxes.filter(tabBox => {\n      return tabBox.hasView(view);\n    }).length > 0;\n  }\n\n  hasViews() {\n    return this.viewCount() > 0;\n  }\n\n  getViews(displayViewId) {\n    return this.tabBoxes.reduce((arr, tabBox) => {\n      arrays.pushAll(arr, tabBox.getViews(displayViewId));\n      return arr;\n    }, []);\n  }\n\n  getComponents() {\n    return this.components;\n  }\n\n  visibleTabBoxes() {\n    return this.tabBoxes.filter(tabBox => {\n      return tabBox.hasViews();\n    });\n  }\n\n  updateFirstLastMarker() {\n    widgets.updateFirstLastMarker(this.visibleTabBoxes());\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}