{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, DateFormat, DateRange, dates, defaultValues, graphics, HtmlComponent, KeyStrokeContext, MenuBar, menus as menus_1, objects, PlannerLayout, PlannerMenuItemsOrder, Range, scout, scrollbars, strings, styles, tooltips, TooltipSupport, Widget } from '../index';\nimport $ from 'jquery';\nexport default class Planner extends Widget {\n  constructor() {\n    super();\n    this.activityMap = [];\n    this.activitySelectable = false;\n    this.availableDisplayModes = [];\n    this.displayMode = null;\n    this.displayModeOptions = {};\n    this.headerVisible = true;\n    this.label = null;\n    this.resources = [];\n    this.resourceMap = [];\n    this.selectionMode = Planner.SelectionMode.MULTI_RANGE;\n    this.selectionRange = new DateRange();\n    this.selectedResources = [];\n    this.viewRange = {};\n    this.selectedActivity = null;\n\n    // visual\n    this._resourceTitleWidth = 20;\n    this._rangeSelectionStarted = false;\n    this.startRow = null;\n    this.lastRow = null;\n\n    // main elements\n    this.$container = null;\n    this.$range = null;\n    this.$modes = null;\n    this.$grid = null;\n\n    // scale calculator\n    this.transformLeft = t => t;\n    this.transformWidth = (t0, t1) => t1 - t0;\n    this.yearPanelVisible = false;\n    this._addWidgetProperties(['menus']);\n  }\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n  _init(model) {\n    super._init(model);\n    this._yearPanel = scout.create('YearPanel', {\n      parent: this,\n      alwaysSelectFirstDay: true\n    });\n    this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n    this._header = scout.create('PlannerHeader', {\n      parent: this\n    });\n    this._header.on('todayClick', this._onTodayClick.bind(this));\n    this._header.on('yearClick', this._onYearClick.bind(this));\n    this._header.on('previousClick', this._onPreviousClick.bind(this));\n    this._header.on('nextClick', this._onNextClick.bind(this));\n    this._header.on('displayModeClick', this._onDisplayModeClick.bind(this));\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      position: MenuBar.Position.BOTTOM,\n      menuOrder: new PlannerMenuItemsOrder(this.session, 'Planner'),\n      cssClass: 'bounded'\n    });\n    for (let i = 0; i < this.resources.length; i++) {\n      this._initResource(this.resources[i]);\n    }\n    this._setDisplayMode(this.displayMode);\n    this._setAvailableDisplayModes(this.availableDisplayModes);\n    this._setViewRange(this.viewRange);\n    this._setSelectedResources(this.selectedResources);\n    this._setSelectedActivity(this.selectedActivity);\n    this._setSelectionRange(this.selectionRange);\n    this._setMenus(this.menus);\n    this._setDisplayModeOptions(this.displayModeOptions);\n    this._tooltipSupport = new TooltipSupport({\n      parent: this,\n      arrowPosition: 50\n    });\n  }\n  _initResource(resource) {\n    defaultValues.applyTo(resource, 'Resource');\n    resource.activities.forEach(function (activity) {\n      this._initActivity(activity);\n    }, this);\n    this.resourceMap[resource.id] = resource;\n  }\n  _initActivity(activity) {\n    activity.beginTime = dates.parseJsonDate(activity.beginTime);\n    activity.endTime = dates.parseJsonDate(activity.endTime);\n    defaultValues.applyTo(activity, 'Activity');\n    this.activityMap[activity.id] = activity;\n  }\n  _render() {\n    // basics, layout etc.\n    this.$container = this.$parent.appendDiv('planner');\n    let layout = new PlannerLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n\n    // main elements\n    this._header.render();\n    this._yearPanel.render();\n    this.$grid = this.$container.appendDiv('planner-grid').on('mousedown', '.resource-cells', this._onCellMouseDown.bind(this)).on('mousedown', '.resource-title', this._onResourceTitleMouseDown.bind(this)).on('contextmenu', '.resource-title', this._onResourceTitleContextMenu.bind(this)).on('contextmenu', '.planner-activity', this._onActivityContextMenu.bind(this));\n    this.$scale = this.$container.appendDiv('planner-scale');\n    this.menuBar.render();\n    tooltips.install(this.$grid, {\n      parent: this,\n      selector: '.planner-activity',\n      text: function ($comp) {\n        if (this._activityById($comp.attr('data-id'))) {\n          return this._activityById($comp.attr('data-id')).tooltipText;\n        }\n        return undefined;\n      }.bind(this)\n    });\n    this._installScrollbars();\n    this._gridScrollHandler = this._onGridScroll.bind(this);\n    this.$grid.on('scroll', this._gridScrollHandler);\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderViewRange();\n    this._renderHeaderVisible();\n    this._renderYearPanelVisible(false);\n    this._renderResources();\n    this._renderSelectedActivity();\n    this._renderSelectedResources();\n    // render with setTimeout because the planner needs to be layouted first\n    setTimeout(this._renderSelectionRange.bind(this));\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$grid;\n  }\n\n  /* -- basics, events -------------------------------------------- */\n\n  _onPreviousClick(event) {\n    this._navigateDate(Planner.Direction.BACKWARD);\n  }\n  _onNextClick(event) {\n    this._navigateDate(Planner.Direction.FORWARD);\n  }\n  _navigateDate(direction) {\n    let viewRange = new DateRange(this.viewRange.from, this.viewRange.to),\n      displayMode = Planner.DisplayMode;\n    if (this.displayMode === displayMode.DAY) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 0, direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 0, direction);\n    } else if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK)) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 0, direction * 7);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 0, direction * 7);\n    } else if (this.displayMode === displayMode.MONTH) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, direction, 0);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, direction, 0);\n    } else if (this.displayMode === displayMode.CALENDAR_WEEK) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, direction, 0);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, direction, 0);\n    } else if (this.displayMode === displayMode.YEAR) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 3 * direction, 0);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 3 * direction, 0);\n    }\n    this.setViewRange(viewRange);\n  }\n  _onTodayClick(event) {\n    let today = this._today(),\n      year = today.getFullYear(),\n      month = today.getMonth(),\n      date = today.getDate(),\n      day = (today.getDay() + 6) % 7,\n      displayMode = Planner.DisplayMode;\n    if (this.displayMode === displayMode.DAY) {\n      today = new Date(year, month, date);\n    } else if (this.displayMode === displayMode.YEAR) {\n      today = new Date(year, month, 1);\n    } else {\n      today = new Date(year, month, date - day); // set day to Monday\n    }\n\n    this.setViewRangeFrom(today);\n  }\n  _today() {\n    return new Date();\n  }\n  _onDisplayModeClick(event) {\n    let displayMode = event.displayMode;\n    this.setDisplayMode(displayMode);\n  }\n  _onYearClick(event) {\n    this.setYearPanelVisible(!this.yearPanelVisible);\n  }\n  _onYearPanelDateSelect(event) {\n    this.setViewRangeFrom(event.date);\n  }\n  _onResourceTitleMouseDown(event) {\n    let $resource = $(event.target).parent();\n    if ($resource.isSelected()) {\n      if (event.which === 3 || event.which === 1 && event.ctrlKey) {\n        // Right click on an already selected resource must not clear the selection -> context menu will be opened\n        return;\n      }\n    }\n    this.startRow = $resource.data('resource');\n    this.lastRow = this.startRow;\n    this._select();\n  }\n  _onResourceTitleContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Resource');\n  }\n  _onRangeSelectorContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Range');\n  }\n  _onActivityContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Activity');\n  }\n  _showContextMenu(event, allowedType) {\n    event.preventDefault();\n    event.stopPropagation();\n    let func = function func(event, allowedType) {\n      if (!this.rendered || !this.attached) {\n        // check needed because function is called asynchronously\n        return;\n      }\n      let filteredMenus = this._filterMenus([allowedType], true),\n        $part = $(event.currentTarget);\n      if (filteredMenus.length === 0) {\n        return; // at least one menu item must be visible\n      }\n\n      let popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: filteredMenus,\n        location: {\n          x: event.pageX,\n          y: event.pageY\n        },\n        $anchor: $part\n      });\n      popup.open();\n    }.bind(this);\n    this.session.onRequestsDone(func, event, allowedType);\n  }\n  _onGridScroll() {\n    this._reconcileScrollPos();\n  }\n  _reconcileScrollPos() {\n    // When scrolling horizontally scroll scale as well\n    let scrollLeft = this.$grid.scrollLeft();\n    this.$scale.scrollLeft(scrollLeft);\n  }\n  _renderRange() {\n    if (!this.viewRange.from || !this.viewRange.to) {\n      return;\n    }\n    let text,\n      toDate = new Date(this.viewRange.to.valueOf() - 1),\n      toText = this.session.text('ui.to'),\n      displayMode = Planner.DisplayMode;\n\n    // find range text\n    if (dates.isSameDay(this.viewRange.from, toDate)) {\n      text = this._dateFormat(this.viewRange.from, 'd. MMMM yyyy');\n    } else if (this.viewRange.from.getMonth() === toDate.getMonth() && this.viewRange.from.getFullYear() === toDate.getFullYear()) {\n      text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n    } else if (this.viewRange.from.getFullYear() === toDate.getFullYear()) {\n      if (this.displayMode === displayMode.YEAR) {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'MMMM'), toText, this._dateFormat(toDate, 'MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.  MMMM'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n      }\n    } else {\n      if (this.displayMode === displayMode.YEAR) {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'MMMM yyyy'), toText, this._dateFormat(toDate, 'MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.  MMMM yyyy'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n      }\n    }\n\n    // set text\n    $('.planner-select', this._header.$range).text(text);\n  }\n  _renderScale() {\n    if (!this.viewRange.from || !this.viewRange.to) {\n      return;\n    }\n    let width,\n      that = this,\n      displayMode = Planner.DisplayMode;\n\n    // empty scale\n    this.$scale.empty();\n    this.$grid.children('.planner-small-scale-item-line').remove();\n    this.$grid.children('.planner-large-scale-item-line').remove();\n\n    // append main elements\n    this.$scaleTitle = this.$scale.appendDiv('planner-scale-title');\n    this._renderLabel();\n    this.$timeline = this.$scale.appendDiv('timeline');\n    this.$timelineLarge = this.$timeline.appendDiv('timeline-large');\n    this.$timelineSmall = this.$timeline.appendDiv('timeline-small');\n\n    // fill timeline large depending on mode\n    if (this.displayMode === displayMode.DAY) {\n      this._renderDayScale();\n    } else if (scout.isOneOf(this.displayMode, displayMode.WORK_WEEK, displayMode.WEEK)) {\n      this._renderWeekScale();\n    } else if (this.displayMode === displayMode.MONTH) {\n      this._renderMonthScale();\n    } else if (this.displayMode === displayMode.CALENDAR_WEEK) {\n      this._renderCalendarWeekScale();\n    } else if (this.displayMode === displayMode.YEAR) {\n      this._renderYearScale();\n    }\n\n    // set sizes and append scale lines\n    let $smallScaleItems = this.$timelineSmall.children('.scale-item');\n    let $largeScaleItems = this.$timelineLarge.children('.scale-item');\n    width = 100 / $smallScaleItems.length;\n    $largeScaleItems.each(function () {\n      let $scaleItem = $(this);\n      let $largeGridLine = that.$grid.prependDiv('planner-large-scale-item-line');\n      $scaleItem.css('width', $scaleItem.data('count') * width + '%').data('scale-item-line', $largeGridLine);\n      $scaleItem.prependDiv('planner-large-scale-item-line').css('left', 0);\n    });\n    $smallScaleItems.each(function (index) {\n      let $scaleItem = $(this);\n      $scaleItem.css('width', width + '%');\n      if (!$scaleItem.data('first')) {\n        let $smallGridLine = that.$grid.prependDiv('planner-small-scale-item-line');\n        $scaleItem.data('scale-item-line', $smallGridLine);\n        $scaleItem.prependDiv('planner-small-scale-item-line').css('left', 0);\n      }\n    });\n\n    // find transfer function\n    this.beginScale = this.$timelineSmall.children().first().data('date-from').valueOf();\n    this.endScale = this.$timelineSmall.children().last().data('date-to').valueOf();\n    if (scout.isOneOf(this.displayMode, displayMode.WORK_WEEK, displayMode.WEEK)) {\n      let options = this.displayModeOptions[this.displayMode];\n      let interval = options.interval;\n      let firstHourOfDay = options.firstHourOfDay;\n      let lastHourOfDay = options.lastHourOfDay;\n      this.transformLeft = ((begin, end, firstHour, lastHour, interval) => t => {\n        t = new Date(t);\n        begin = new Date(begin);\n        end = new Date(end);\n        let fullRangeMillis = end - begin;\n        // remove day component from range for scaling\n        let dayDiffTBegin = dates.compareDays(t, begin);\n        let dayDIffEndBegin = dates.compareDays(end, begin);\n        let dayComponentMillis = dayDiffTBegin * 3600000 * 24;\n        let rangeScaling = 24 / (lastHour - firstHour + 1);\n        // re-add day component\n        let dayOffset = dayDiffTBegin / dayDIffEndBegin;\n        if (t.getHours() < firstHour) {\n          // If t is in the morning before the first hour of day, return 00:00 of this day\n          return (rangeScaling / fullRangeMillis + dayOffset) * 100;\n        }\n        if (t.getHours() > lastHour) {\n          // If t is in the evening after the last hour of day, return 00:00 of next day\n          dayOffset = (dayDiffTBegin + 1) / dayDIffEndBegin;\n          return (rangeScaling / fullRangeMillis + dayOffset) * 100;\n        }\n        return ((t.valueOf() - (begin.valueOf() + firstHour * 3600000) - dayComponentMillis) * rangeScaling / fullRangeMillis + dayOffset) * 100;\n      })(this.viewRange.from, this.viewRange.to, firstHourOfDay, lastHourOfDay, interval);\n      this.transformWidth = ((begin, end, firstHour, lastHour, interval) => function (t0, t1) {\n        let fullRangeMillis = end - begin;\n        let selectionRange = new Range(new Date(t0), new Date(t1));\n        let hiddenRanges = this._findHiddenRangesInWeekMode();\n        let selectedRangeMillis = selectionRange.subtractAll(hiddenRanges).reduce((acc, range) => {\n          return acc + range.size();\n        }, 0);\n        let rangeScaling = 24 / (lastHour - firstHour + 1);\n        return selectedRangeMillis * rangeScaling / fullRangeMillis * 100;\n      })(this.viewRange.from, this.viewRange.to, firstHourOfDay, lastHourOfDay, interval);\n    } else {\n      this.transformLeft = ((begin, end) => t => (t - begin) / (end - begin) * 100)(this.beginScale, this.endScale);\n      this.transformWidth = ((begin, end) => (t0, t1) => (t1 - t0) / (end - begin) * 100)(this.beginScale, this.endScale);\n    }\n  }\n\n  /**\n   * Returns every hidden range of the view range created by first and last our of day.\n   */\n  _findHiddenRangesInWeekMode() {\n    if (!scout.isOneOf(this.displayMode, Planner.DisplayMode.WORK_WEEK, Planner.DisplayMode.WEEK)) {\n      return [];\n    }\n    let ranges = [];\n    let options = this.displayModeOptions[this.displayMode];\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n    let currentDate = new Date(this.viewRange.from.valueOf());\n    let hiddenRange;\n    while (currentDate < this.viewRange.to) {\n      // Start of day range\n      hiddenRange = new Range(new Date(currentDate.valueOf()), dates.shiftTime(currentDate, firstHourOfDay));\n      if (hiddenRange.size() > 0) {\n        ranges.push(hiddenRange);\n      }\n      // End of day range\n      hiddenRange = new Range(dates.shiftTime(currentDate, lastHourOfDay + 1), dates.shiftTime(currentDate, 24));\n      if (hiddenRange.size() > 0) {\n        ranges.push(hiddenRange);\n      }\n      currentDate.setHours(0);\n      currentDate.setMinutes(0);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return ranges;\n  }\n  _renderDayScale() {\n    let newLargeGroup,\n      $divLarge,\n      $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let interval = options.interval;\n    let labelPeriod = options.labelPeriod;\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n\n    // cap interval to day range\n    interval = Math.min(interval, 60 * (lastHourOfDay - firstHourOfDay + 1));\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      if (loop.getHours() >= firstHourOfDay && loop.getHours() <= lastHourOfDay) {\n        newLargeGroup = false;\n        if (loop.getMinutes() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'HH')).data('count', 0);\n          newLargeGroup = true;\n        }\n        $divSmall = this.$timelineSmall.appendDiv('scale-item', this._dateFormat(loop, ':mm')).data('date-from', new Date(loop.valueOf()));\n\n        // hide label\n        if (loop.getMinutes() % (interval * labelPeriod) !== 0) {\n          $divSmall.addClass('label-invisible');\n        }\n\n        // increase variables\n        loop = dates.shiftTime(loop, 0, interval, 0);\n        this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n        first = false;\n      } else {\n        loop = dates.shiftTime(loop, 0, interval, 0);\n      }\n    }\n  }\n  _renderWeekScale() {\n    let newLargeGroup,\n      $divLarge,\n      $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let interval = options.interval;\n    let labelPeriod = options.labelPeriod;\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n\n    // cap interval to day range\n    interval = Math.min(interval, 60 * (lastHourOfDay - firstHourOfDay + 1));\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getHours() < firstHourOfDay) {\n        loop.setHours(firstHourOfDay);\n      }\n      if (loop.getHours() === firstHourOfDay && loop.getMinutes() === 0 || first) {\n        if (loop.getMonth() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd. MMMM yyyy')).data('count', 0);\n        } else if (loop.getDate() === 1) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd. MMMM')).data('count', 0);\n        } else {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd.')).data('count', 0);\n        }\n        newLargeGroup = true;\n      }\n      $divSmall = this.$timelineSmall.appendDiv('scale-item', this._dateFormat(loop, 'HH:mm')).data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (((loop.getHours() - firstHourOfDay) * 60 + loop.getMinutes()) % (interval * labelPeriod) !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n\n      // increase variables\n      loop = dates.shiftTime(loop, 0, interval, 0, 0);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n      if (loop.getHours() > lastHourOfDay) {\n        // jump to next day\n        loop.setHours(0);\n        loop.setMinutes(0);\n        loop.setDate(loop.getDate() + 1);\n      }\n    }\n  }\n  _renderMonthScale() {\n    let newLargeGroup,\n      $divLarge,\n      $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getDate() === 1 || first) {\n        if (loop.getMonth() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n        } else {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM')).data('count', 0);\n        }\n        newLargeGroup = true;\n      }\n      $divSmall = this.$timelineSmall.appendDiv('scale-item', this._dateFormat(loop, 'dd')).data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (loop.getDate() % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n      loop = dates.shift(loop, 0, 0, 1);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n    }\n  }\n  _renderCalendarWeekScale() {\n    let newLargeGroup,\n      $divLarge,\n      $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getDate() < 8 || first === true) {\n        if (loop.getMonth() === 0 || first === true) {\n          if (loop.getDate() > 11) {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item').html('&nbsp;').data('count', 0);\n            first = 2;\n          } else {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n            first = false;\n          }\n        } else {\n          if (first === 2) {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n            first = false;\n          } else {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM')).data('count', 0);\n          }\n        }\n        newLargeGroup = true;\n      }\n      $divSmall = this.$timelineSmall.appendDiv('scale-item', dates.weekInYear(loop)).data('date-from', new Date(loop.valueOf())).data('tooltipText', this._scaleTooltipText.bind(this));\n      this._tooltipSupport.install($divSmall);\n\n      // hide label\n      if (dates.weekInYear(loop) % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n      loop.setDate(loop.getDate() + 7);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n    }\n  }\n  _renderYearScale() {\n    let newLargeGroup,\n      $divLarge,\n      $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getMonth() === 0 || first) {\n        $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'yyyy')).data('count', 0);\n        newLargeGroup = true;\n      }\n      $divSmall = this.$timelineSmall.appendDiv('scale-item', this._dateFormat(loop, 'MMMM')).data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (loop.getMonth() % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n      loop = dates.shift(loop, 0, 1, 0);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n    }\n  }\n\n  /**\n   * @param {Date} newDate\n   */\n  _incrementTimelineScaleItems($largeComp, $smallComp, newDate, newLargeGroup) {\n    $largeComp.data('count', $largeComp.data('count') + 1);\n    $smallComp.data('date-to', new Date(newDate.valueOf())).data('first', newLargeGroup);\n  }\n\n  /* -- scale events --------------------------------------------------- */\n\n  _scaleTooltipText($scale) {\n    let toText = ' ' + this.session.text('ui.to') + ' ',\n      from = new Date($scale.data('date-from').valueOf()),\n      to = new Date($scale.data('date-to').valueOf() - 1);\n    if (from.getMonth() === to.getMonth()) {\n      return this._dateFormat(from, 'd.') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n    } else if (from.getFullYear() === to.getFullYear()) {\n      return this._dateFormat(from, 'd. MMMM') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n    }\n    return this._dateFormat(from, 'd. MMMM yyyy') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n  }\n\n  /* --  render resources, activities --------------------------------- */\n\n  _removeAllResources() {\n    this.resources.forEach(resource => {\n      resource.$resource.remove();\n    });\n  }\n  _renderResources(resources) {\n    let i,\n      resource,\n      resourcesHtml = '';\n    resources = resources || this.resources;\n    for (i = 0; i < resources.length; i++) {\n      resource = resources[i];\n      resourcesHtml += this._buildResourceHtml(resource, this.$grid);\n    }\n\n    // Append resources to grid\n    $(resourcesHtml).appendTo(this.$grid);\n\n    // Match resources\n    this.$grid.children('.planner-resource').each((index, element) => {\n      let $element = $(element);\n      resource = this._resourceById($element.attr('data-id'));\n      this._linkResource($element, resource);\n      this._linkActivitiesForResource(resource);\n    });\n  }\n  _linkResource($resource, resource) {\n    $resource.data('resource', resource);\n    resource.$resource = $resource;\n    resource.$cells = $resource.children('.resource-cells');\n  }\n  _linkActivity($activity, activity) {\n    $activity.data('activity', activity);\n    activity.$activity = $activity;\n  }\n  _rerenderActivities(resources) {\n    resources = resources || this.resources;\n    resources.forEach(function (resource) {\n      this._removeActivitiesForResource(resource);\n      this._renderActivititesForResource(resource);\n    }, this);\n  }\n  _buildResourceHtml(resource) {\n    let resourceHtml = '<div class=\"planner-resource\" data-id=\"' + resource.id + '\">';\n    resourceHtml += '<div class=\"resource-title\">' + strings.encode(resource.resourceCell.text || '') + '</div>';\n    resourceHtml += '<div class=\"resource-cells\">' + this._buildActivitiesHtml(resource) + '</div>';\n    resourceHtml += '</div>';\n    return resourceHtml;\n  }\n  _renderActivititesForResource(resource) {\n    resource.$cells.html(this._buildActivitiesHtml(resource));\n    this._linkActivitiesForResource(resource);\n  }\n  _linkActivitiesForResource(resource) {\n    resource.$cells.children('.planner-activity').each((index, element) => {\n      let $element = $(element);\n      let activity = this._activityById($element.attr('data-id'));\n      this._linkActivity($element, activity);\n    });\n  }\n  _buildActivitiesHtml(resource) {\n    let activitiesHtml = '';\n    resource.activities.forEach(function (activity) {\n      if (activity.beginTime.valueOf() >= this.endScale || activity.endTime.valueOf() <= this.beginScale) {\n        // don't add activities which are not in the view range\n        return;\n      }\n      activitiesHtml += this._buildActivityHtml(activity);\n    }, this);\n    return activitiesHtml;\n  }\n  _removeActivitiesForResource(resource) {\n    resource.activities.forEach(activity => {\n      if (activity.$activity) {\n        activity.$activity.remove();\n        activity.$activity = null;\n      }\n    }, this);\n  }\n  _buildActivityHtml(activity) {\n    let level = 100 - Math.min(activity.level * 100, 100),\n      backgroundColor = styles.modelToCssColor(activity.backgroundColor),\n      foregroundColor = styles.modelToCssColor(activity.foregroundColor),\n      levelColor = styles.modelToCssColor(activity.levelColor),\n      begin = activity.beginTime.valueOf(),\n      end = activity.endTime.valueOf();\n\n    // Make sure activity fits into scale\n    begin = Math.max(begin, this.beginScale);\n    end = Math.min(end, this.endScale);\n    let activityCssClass = 'planner-activity' + (activity.cssClass ? ' ' + activity.cssClass : '');\n    let activityStyle = 'left: ' + 'calc(' + this.transformLeft(begin) + '% + 2px);';\n    activityStyle += ' width: ' + 'calc(' + this.transformWidth(begin, end) + '% - 4px);';\n    if (levelColor) {\n      activityStyle += ' background-color: ' + levelColor + ';';\n      activityStyle += ' border-color: ' + levelColor + ';';\n    }\n    if (!levelColor && backgroundColor) {\n      activityStyle += ' background-color: ' + backgroundColor + ';';\n      activityStyle += ' border-color: ' + backgroundColor + ';';\n    }\n    if (foregroundColor) {\n      activityStyle += ' color: ' + foregroundColor + ';';\n    }\n\n    // The background-color represents the fill level and not the image. This makes it easier to change the color using a css class\n    // In order to change the background rather than the fill, use the planner-activity-level css class\n    let activityLevelCssClass = 'planner-activity-level' + (activity.cssClass ? ' ' + activity.cssClass : '');\n    let activityEmptyColor = styles.get(activityLevelCssClass, 'background-color').backgroundColor;\n    activityStyle += ' background-image: ' + 'linear-gradient(to bottom, ' + activityEmptyColor + ' 0%, ' + activityEmptyColor + ' ' + level + '%, transparent ' + level + '%, transparent 100% );';\n    let activityHtml = '<div';\n    activityHtml += ' class=\"' + activityCssClass + '\"';\n    activityHtml += ' style=\"' + activityStyle + '\"';\n    activityHtml += ' data-id=\"' + activity.id + '\"';\n    activityHtml += '>' + strings.encode(activity.text || '') + '</div>';\n    return activityHtml;\n  }\n\n  /* -- selector -------------------------------------------------- */\n\n  _onCellMouseDown(event) {\n    let $activity,\n      $resource,\n      $target = $(event.target),\n      selectionMode = Planner.SelectionMode,\n      opensContextMenu = event.which === 3 || event.which === 1 && event.ctrlKey;\n    if (this.activitySelectable) {\n      if (!opensContextMenu && this.$selector) {\n        // Hide selector otherwise activity may not be resolved (elementFromPoint would return the $selector)\n        // This allows selecting an activity which is inside a selection range\n        this.$selector.hide();\n      }\n      $activity = this.$grid.elementFromPoint(event.pageX, event.pageY);\n      if (!opensContextMenu && this.$selector) {\n        this.$selector.show();\n      }\n      if ($activity.hasClass('planner-activity')) {\n        $resource = $activity.parent().parent();\n        this.selectResources([$resource.data('resource')]);\n        this.selectActivity($activity.data('activity'));\n        this.selectRange(new DateRange());\n      } else {\n        this.selectActivity(null);\n      }\n    } else {\n      this.selectActivity(null);\n    }\n    if (this.selectionMode === selectionMode.NONE) {\n      return;\n    }\n    if ($target.hasClass('selector') && opensContextMenu) {\n      // Right click on the selector must not clear the selection -> context menu will be opened\n      return;\n    }\n    if (!this.selectedActivity) {\n      // If not an activity was selected, start immediately, otherwise start as soon the mouse moves\n      this._startRangeSelection(event.pageX, event.pageY);\n    }\n\n    // add event handlers\n    this._cellMousemoveHandler = this._onCellMousemove.bind(this, event);\n    $target.document().on('mousemove', this._cellMousemoveHandler).one('mouseup', this._onDocumentMouseUp.bind(this));\n  }\n  _startRangeSelection(pageX, pageY) {\n    // init selector\n    this.startRow = this._findRow(pageY);\n    this.lastRow = this.startRow;\n\n    // find range on scale\n    this.startRange = this._findScale(pageX);\n    this.lastRange = this.startRange;\n\n    // draw\n    this._select(true);\n    this._rangeSelectionStarted = true;\n  }\n\n  /**\n   * @returns {boolean} true if the range selection may be started, false if not\n   */\n  _prepareRangeSelectionByMousemove(mousedownEvent, mousemoveEvent) {\n    let moveX = mousedownEvent.pageX - mousemoveEvent.pageX;\n    let moveY = mousedownEvent.pageY - mousemoveEvent.pageY;\n    let moveThreshold = Planner.RANGE_SELECTION_MOVE_THRESHOLD;\n    if (Math.abs(moveX) >= moveThreshold) {\n      // Accept if x movement is big enough\n      return true;\n    }\n    let mousedownRow = this._findRow(mousedownEvent.pageY);\n    let mousemoveRow = this._findRow(mousemoveEvent.pageY);\n    // Accept if y movement is big enough AND the row changed. No need to switch into range selection mode if cursor is still on the same row\n    return Math.abs(moveY) >= moveThreshold && this.selectionMode === Planner.SelectionMode.MULTI_RANGE && mousedownRow !== mousemoveRow;\n  }\n  _onCellMousemove(mousedownEvent, event) {\n    if (this.selectedActivity && !this._rangeSelectionStarted) {\n      // If an activity was selected, switch to range selection if the user moves the mouse\n      if (!this._prepareRangeSelectionByMousemove(mousedownEvent, event)) {\n        return;\n      }\n      this._startRangeSelection(mousedownEvent.pageX, mousedownEvent.pageY);\n    }\n    let lastRow = this._findRow(event.pageY);\n    if (lastRow) {\n      this.lastRow = lastRow;\n    }\n    let lastRange = this._findScale(event.pageX);\n    if (lastRange) {\n      this.lastRange = lastRange;\n    }\n    this._select(true);\n  }\n  _onResizeMouseDown(event) {\n    let swap,\n      $target = $(event.target);\n    this.startRow = this.selectedResources[0];\n    this.lastRow = this.selectedResources[this.selectedResources.length - 1];\n\n    // Get the start and last range based on the clicked resize handle. If the ranges cannot be determined it likely means that the selectionRange is out of the current viewRange or dayRange (set by firstHourOfDay, lastHourOfDay)\n    this.startRange = scout.nvl(this._findScaleByFromDate(this.selectionRange.from), new Range(this.selectionRange.from.getTime(), this.selectionRange.from.getTime()));\n    this.lastRange = scout.nvl(this._findScaleByToDate(this.selectionRange.to), new Range(this.selectionRange.to.getTime(), this.selectionRange.to.getTime()));\n\n    // Swap start and last range if resize-left is clicked\n    if ($target.hasClass('selector-resize-left')) {\n      swap = this.startRange;\n      this.startRange = this.lastRange;\n      this.lastRange = swap;\n    }\n    $target.body().addClass('col-resize');\n    this._resizeMousemoveHandler = this._onResizeMousemove.bind(this);\n    $target.document().on('mousemove', this._resizeMousemoveHandler).one('mouseup', this._onDocumentMouseUp.bind(this));\n    return false;\n  }\n  _onResizeMousemove(event) {\n    if (!this.rendered) {\n      // planner may be removed in the meantime\n      return;\n    }\n    let lastRange = this._findScale(event.pageX);\n    if (lastRange) {\n      this.lastRange = lastRange;\n    }\n    this._select(true);\n  }\n  _onDocumentMouseUp(event) {\n    let $target = $(event.target);\n    $target.body().removeClass('col-resize');\n    if (this._cellMousemoveHandler) {\n      $target.document().off('mousemove', this._documentMousemoveHandler);\n      this._cellMousemoveHandler = null;\n    }\n    if (this._resizeMousemoveHandler) {\n      $target.document().off('mousemove', this._resizeMousemoveHandler);\n      this._resizeMousemoveHandler = null;\n    }\n    if (!this._rangeSelectionStarted) {\n      // Range selection has not been initiated -> don't call select()\n      return;\n    }\n    this._rangeSelectionStarted = false;\n    if (this.rendered) {\n      this._select();\n    }\n  }\n  _select(whileSelecting) {\n    if (!this.startRow || !this.lastRow) {\n      return;\n    }\n    let rangeSelected = !!(this.startRange && this.lastRange);\n    let $startRow = this.startRow.$resource,\n      $lastRow = this.lastRow.$resource;\n\n    // in case of single selection\n    if (this.selectionMode === Planner.SelectionMode.SINGLE_RANGE) {\n      this.lastRow = this.startRow;\n      $lastRow = this.startRow.$resource;\n    }\n\n    // select rows\n    let $upperRow = $startRow[0].offsetTop <= $lastRow[0].offsetTop ? $startRow : $lastRow,\n      $lowerRow = $startRow[0].offsetTop > $lastRow[0].offsetTop ? $startRow : $lastRow,\n      resources = $('.planner-resource', this.$grid).toArray(),\n      top = $upperRow[0].offsetTop,\n      low = $lowerRow[0].offsetTop;\n    for (let r = resources.length - 1; r >= 0; r--) {\n      let row = resources[r];\n      if (row.offsetTop < top && row.offsetTop < low || row.offsetTop > top && row.offsetTop > low) {\n        resources.splice(r, 1);\n      }\n    }\n    this.selectResources(resources.map(i => {\n      return $(i).data('resource');\n    }), !whileSelecting);\n    this.selectActivity(null);\n    if (rangeSelected) {\n      // left and width\n      let from = Math.min(this.lastRange.from, this.startRange.from),\n        to = Math.max(this.lastRange.to, this.startRange.to);\n      let selectionRange = new DateRange(new Date(from), new Date(to));\n      selectionRange = this._adjustSelectionRange(selectionRange);\n      this.selectRange(selectionRange, !whileSelecting);\n    }\n  }\n  _adjustSelectionRange(range) {\n    let from = range.from.getTime();\n    let to = range.to.getTime();\n\n    // Ensure minimum size of selection range (interval is in minutes)\n    let minSelectionDuration = 0;\n    let options = this.displayModeOptions[this.displayMode];\n    if (options.interval > 0 && options.minSelectionIntervalCount > 0) {\n      minSelectionDuration = options.minSelectionIntervalCount * options.interval * 60000;\n    }\n    let lastHourOfDay = options.lastHourOfDay;\n    let endOfDay = dates.shiftTime(dates.trunc(range.from), lastHourOfDay + 1);\n    let viewRange = this._visibleViewRange();\n    if (this.lastRange.from < this.startRange.from) {\n      // Selecting to left\n      if (to - minSelectionDuration >= viewRange.from.getTime()) {\n        // extend to left side\n        from = Math.min(from, to - minSelectionDuration);\n      } else {\n        // extend to right side if from would be smaller than the minimum date (left border)\n        from = viewRange.from.getTime();\n        to = Math.max(to, Math.min(from + minSelectionDuration, viewRange.to.getTime()));\n      }\n    } else {\n      // Selecting to right\n      if (from + minSelectionDuration <= viewRange.to.getTime()) {\n        // extend to right side\n        to = Math.max(to, Math.max(from + minSelectionDuration, viewRange.from.getTime()));\n        if (to >= endOfDay.getTime() && new Range(from, to).size() === minSelectionDuration) {\n          // extend to left side when clicking at the end of a day\n          to = endOfDay.getTime();\n          from = Math.min(from, to - minSelectionDuration);\n        }\n      } else {\n        // extend to left side if to would be greater than the maximum date (right border)\n        to = viewRange.to.getTime();\n        from = Math.min(from, to - minSelectionDuration);\n      }\n    }\n    return new DateRange(new Date(from), new Date(to));\n  }\n  _findRow(y) {\n    let $row,\n      gridBounds = graphics.offsetBounds(this.$grid),\n      x = gridBounds.x + 10;\n    y = Math.min(Math.max(y, 0), gridBounds.y + gridBounds.height - 1);\n    $row = this.$container.elementFromPoint(x, y, '.planner-resource');\n    if ($row.length > 0) {\n      return $row.data('resource');\n    }\n    return null;\n  }\n  _findScale(x) {\n    let $scaleItem,\n      gridBounds = graphics.offsetBounds(this.$grid),\n      y = this.$scale.offset().top + this.$scale.height() * 0.75;\n    x = Math.min(Math.max(x, 0), gridBounds.x + gridBounds.width - 1);\n    $scaleItem = this.$container.elementFromPoint(x, y, '.scale-item');\n    if ($scaleItem.length > 0) {\n      return new DateRange($scaleItem.data('date-from').valueOf(), $scaleItem.data('date-to').valueOf());\n    }\n    return null;\n  }\n  _findScaleByFromDate(from) {\n    return this._findScaleByFunction((i, elem) => {\n      let $scaleItem = $(elem);\n      if ($scaleItem.data('date-from').getTime() === from.getTime()) {\n        return true;\n      }\n    });\n  }\n  _findScaleByToDate(to) {\n    return this._findScaleByFunction((i, elem) => {\n      let $scaleItem = $(elem);\n      if ($scaleItem.data('date-to').getTime() === to.getTime()) {\n        return true;\n      }\n    });\n  }\n  _findScaleByFunction(func) {\n    let $scaleItem = this.$timelineSmall.children('.scale-item').filter(func);\n    if (!$scaleItem.length) {\n      return null;\n    }\n    return new DateRange($scaleItem.data('date-from').valueOf(), $scaleItem.data('date-to').valueOf());\n  }\n\n  /**\n   * @returns {Range} the visible view range (the difference to this.viewRange is that first and last hourOfDay are considered).\n   */\n  _visibleViewRange() {\n    let $items = this.$timelineSmall.children('.scale-item');\n    return new Range($items.first().data('date-from'), $items.last().data('date-to'));\n  }\n\n  /* -- helper ---------------------------------------------------- */\n\n  /**\n   * @param {Date} date\n   */\n  _dateFormat(date, pattern) {\n    let d = new Date(date.valueOf()),\n      dateFormat = new DateFormat(this.session.locale, pattern);\n    return dateFormat.format(d);\n  }\n  _renderViewRange() {\n    this._renderRange();\n    this._renderScale();\n    this.invalidateLayoutTree();\n  }\n  _renderHeaderVisible() {\n    this._header.setVisible(this.headerVisible);\n    this.invalidateLayoutTree();\n  }\n  _renderYearPanelVisible(animated) {\n    let yearPanelWidth;\n    if (this.yearPanelVisible) {\n      this._yearPanel.renderContent();\n    }\n\n    // show or hide year panel\n    $('.calendar-toggle-year', this.$modes).select(this.yearPanelVisible);\n    if (this.yearPanelVisible) {\n      yearPanelWidth = 210;\n    } else {\n      yearPanelWidth = 0;\n    }\n    this._yearPanel.$container.animate({\n      width: yearPanelWidth\n    }, {\n      duration: animated ? 500 : 0,\n      progress: this._onYearPanelWidthChange.bind(this),\n      complete: this._afterYearPanelWidthChange.bind(this)\n    });\n  }\n  _onYearPanelWidthChange() {\n    if (!this._yearPanel.$container) {\n      // If container has been removed in the meantime (e.g. user navigates away while animation is in progress)\n      return;\n    }\n    let yearPanelWidth = this._yearPanel.$container.outerWidth();\n    this.$grid.css('width', 'calc(100% - ' + yearPanelWidth + 'px)');\n    this.$scale.css('width', 'calc(100% - ' + yearPanelWidth + 'px)');\n    this.revalidateLayout();\n  }\n  _afterYearPanelWidthChange() {\n    if (!this.yearPanelVisible) {\n      this._yearPanel.removeContent();\n    }\n  }\n  _setMenus(menus) {\n    this.updateKeyStrokes(menus, this.menus);\n    this._setProperty('menus', menus);\n    this._updateMenuBar();\n  }\n  _updateMenuBar() {\n    let menuItems = this._filterMenus(['Planner.EmptySpace', 'Planner.Resource', 'Planner.Activity', 'Planner.Range'], false, true);\n    this.menuBar.setMenuItems(menuItems);\n  }\n  _removeMenus() {\n    // menubar takes care about removal\n  }\n  _filterMenus(allowedTypes, onlyVisible, enableDisableKeyStroke) {\n    allowedTypes = allowedTypes || [];\n    if (allowedTypes.indexOf('Planner.Resource') > -1 && this.selectedResources.length === 0) {\n      arrays.remove(allowedTypes, 'Planner.Resource');\n    }\n    if (allowedTypes.indexOf('Planner.Activity') > -1 && !this.selectedActivity) {\n      arrays.remove(allowedTypes, 'Planner.Activity');\n    }\n    if (allowedTypes.indexOf('Planner.Range') > -1 && !this.selectionRange.from && !this.selectionRange.to) {\n      arrays.remove(allowedTypes, 'Planner.Range');\n    }\n    return menus_1.filter(this.menus, allowedTypes, onlyVisible, enableDisableKeyStroke);\n  }\n  setDisplayModeOptions(displayModeOptions) {\n    this.setProperty('displayModeOptions', displayModeOptions);\n  }\n  _setDisplayModeOptions(displayModeOptions) {\n    if (displayModeOptions) {\n      this._adjustHours(displayModeOptions);\n    }\n    this.displayModeOptions = displayModeOptions;\n  }\n\n  /**\n   * Make sure configured our is between 0 and 23.\n   */\n  _adjustHours(optionsMap) {\n    objects.values(optionsMap).forEach(options => {\n      if (options.firstHourOfDay) {\n        options.firstHourOfDay = validHour(options.firstHourOfDay);\n      }\n      if (options.lastHourOfDay) {\n        options.lastHourOfDay = validHour(options.lastHourOfDay);\n      }\n    });\n    function validHour(hour) {\n      if (hour < 0) {\n        return 0;\n      }\n      if (hour > 23) {\n        return 23;\n      }\n      return hour;\n    }\n  }\n  _renderDisplayModeOptions() {\n    this._renderRange();\n    this._renderScale();\n    this._rerenderActivities(); // required in case first/lastHourOfDay changes\n    this._select(); // adjust selection if minSelectionIntervalCount has changed\n    this.invalidateLayoutTree();\n  }\n  _renderAvailableDisplayModes() {\n    // done by PlannerHeader.js\n  }\n  _renderDisplayMode() {\n    // done by PlannerHeader.js\n  }\n  _setViewRange(viewRange) {\n    viewRange = DateRange.ensure(viewRange);\n    this._setProperty('viewRange', viewRange);\n    this._yearPanel.setViewRange(this.viewRange);\n    this._yearPanel.selectDate(this.viewRange.from);\n  }\n  _setDisplayMode(displayMode) {\n    this._setProperty('displayMode', displayMode);\n    this._yearPanel.setDisplayMode(this.displayMode);\n    this._header.setDisplayMode(this.displayMode);\n  }\n  _setAvailableDisplayModes(availableDisplayModes) {\n    this._setProperty('availableDisplayModes', availableDisplayModes);\n    this._header.setAvailableDisplayModes(this.availableDisplayModes);\n  }\n  _setSelectionRange(selectionRange) {\n    selectionRange = DateRange.ensure(selectionRange);\n    this._setProperty('selectionRange', selectionRange);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n  _setSelectedResources(selectedResources) {\n    if (typeof selectedResources[0] === 'string') {\n      selectedResources = this._resourcesByIds(selectedResources);\n    }\n    if (this.rendered) {\n      this._removeSelectedResources();\n    }\n    this._setProperty('selectedResources', selectedResources);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n  _removeSelectedResources() {\n    this.selectedResources.forEach(resource => {\n      resource.$resource.select(false);\n    });\n  }\n  _renderSelectedResources() {\n    this.selectedResources.forEach(resource => {\n      resource.$resource.select(true);\n    });\n  }\n  _renderActivitySelectable() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.toggleClass('selected', this.activitySelectable);\n    }\n  }\n  _renderSelectionMode() {\n    if (this.selectionMode === Planner.SelectionMode.NONE) {\n      if (this.$selector) {\n        this.$selector.remove();\n        this.$highlight.remove();\n      }\n    } else {\n      this._renderSelectionRange();\n    }\n  }\n  _renderSelectionRange() {\n    let $startRow,\n      $lastRow,\n      from = this.selectionRange.from,\n      to = this.selectionRange.to,\n      startRow = this.selectedResources[0],\n      lastRow = this.selectedResources[this.selectedResources.length - 1];\n\n    // remove old selector\n    if (this.$selector) {\n      this.$selector.remove();\n      this.$highlight.remove();\n    }\n    if (!startRow || !lastRow || !this.selectionRange.from || !this.selectionRange.to) {\n      return;\n    }\n    $startRow = startRow.$resource;\n    $lastRow = lastRow.$resource;\n\n    // Make sure selection fits into scale\n    from = Math.max(from, this.beginScale);\n    to = Math.min(to, this.endScale);\n\n    // top and height\n    let $parent = $startRow[0].offsetTop <= $lastRow[0].offsetTop ? $startRow : $lastRow;\n    this.$selector = $parent.children('.resource-cells').appendDiv('selector');\n    this.$selector.cssHeight($startRow.outerHeight() + Math.abs($lastRow[0].offsetTop - $startRow[0].offsetTop));\n    let $selectorResizeLeft = this.$selector.appendDiv('selector-resize-left').mousedown(this._onResizeMouseDown.bind(this));\n    let $selectorResizeRight = this.$selector.appendDiv('selector-resize-right').mousedown(this._onResizeMouseDown.bind(this));\n    this.$selector.css('left', 'calc(' + this.transformLeft(from) + '% - ' + $selectorResizeLeft.cssWidth() + 'px)').css('width', 'calc(' + this.transformWidth(from, to) + '% + ' + ($selectorResizeLeft.cssWidth() + $selectorResizeRight.cssWidth()) + 'px)').on('contextmenu', this._onRangeSelectorContextMenu.bind(this));\n\n    // colorize scale\n    this.$highlight = this.$timelineSmall.prependDiv('highlight');\n    let left = this.$selector.cssLeft() + $selectorResizeLeft.cssWidth() + this.$scaleTitle.cssWidth();\n    let width = this.$selector.cssWidth() - ($selectorResizeLeft.cssWidth() + $selectorResizeRight.cssWidth());\n    this.$highlight.cssLeft(left).cssWidth(width);\n  }\n  _setSelectedActivity(selectedActivity) {\n    if (typeof selectedActivity === 'string') {\n      selectedActivity = this._activityById(selectedActivity);\n    }\n    if (this.rendered) {\n      this._removeSelectedActivity();\n    }\n    this._setProperty('selectedActivity', selectedActivity);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n  _removeSelectedActivity() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.removeClass('selected');\n    }\n  }\n  _renderSelectedActivity() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.addClass('selected');\n    }\n  }\n  _renderLabel() {\n    let label = this.label || '';\n    if (this.$scaleTitle) {\n      this.$scaleTitle.text(label);\n    }\n  }\n  _resourcesByIds(ids) {\n    return ids.map(this._resourceById.bind(this));\n  }\n  _activityById(id) {\n    return this.activityMap[id];\n  }\n  _resourceById(id) {\n    return this.resourceMap[id];\n  }\n  setDisplayMode(displayMode) {\n    this.setProperty('displayMode', displayMode);\n    this.startRange = null;\n    this.lastRange = null;\n  }\n  layoutYearPanel() {\n    if (this.yearPanelVisible) {\n      scrollbars.update(this._yearPanel.$yearList);\n      this._yearPanel._scrollYear();\n    }\n  }\n  setYearPanelVisible(visible) {\n    if (this.yearPanelVisible === visible) {\n      return;\n    }\n    this._setProperty('yearPanelVisible', visible);\n    if (this.rendered) {\n      this._renderYearPanelVisible(true);\n    }\n  }\n  setViewRangeFrom(date) {\n    let daysDiff = dates.compareDays(this.viewRange.to, this.viewRange.from);\n    let viewRange = new DateRange(this.viewRange.from, this.viewRange.to);\n    viewRange.from = date;\n    viewRange.to = dates.shift(date, 0, 0, daysDiff);\n    this.setViewRange(viewRange);\n  }\n  setViewRange(viewRange) {\n    if (this.viewRange === viewRange) {\n      return;\n    }\n    this._setViewRange(viewRange);\n    if (this.rendered) {\n      this._renderViewRange();\n      this._rerenderActivities();\n      this._renderSelectedActivity();\n      this.validateLayoutTree(); // Layouting is required for adjusting the scroll position\n      this._reconcileScrollPos();\n    }\n  }\n  selectRange(range) {\n    if (range && range.equals(this.selectionRange)) {\n      return;\n    }\n    this.setProperty('selectionRange', range);\n  }\n  selectActivity(activity) {\n    this.setProperty('selectedActivity', activity);\n  }\n  selectResources(resources) {\n    if (arrays.equals(resources, this.selectedResources)) {\n      return;\n    }\n    resources = arrays.ensure(resources);\n    // Make a copy so that original array stays untouched\n    resources = resources.slice();\n    this.setProperty('selectedResources', resources);\n    this.trigger('resourcesSelected', {\n      resources: resources\n    });\n    if (this.rendered) {\n      // Render selection range as well for the case if selectedRange does not change but selected resources do\n      this._renderSelectionRange();\n    }\n  }\n\n  /**\n   * Returns true if a deselection happened. False if the given resources were not selected at all.\n   */\n  deselectResources(resources) {\n    let deselected = false;\n    resources = arrays.ensure(resources);\n    let selectedResources = this.selectedResources.slice(); // copy\n    if (arrays.removeAll(selectedResources, resources)) {\n      this.selectResources(selectedResources);\n      deselected = true;\n    }\n    return deselected;\n  }\n  insertResources(resources) {\n    // Update model\n    resources.forEach(resource => {\n      this._initResource(resource);\n      // Always insert new rows at the end, if the order is wrong a rowOrderChanged event will follow\n      this.resources.push(resource);\n    });\n\n    // Update HTML\n    if (this.rendered) {\n      this._renderResources(resources);\n      this.invalidateLayoutTree();\n    }\n  }\n  deleteResources(resources) {\n    if (this.deselectResources(resources)) {\n      this.selectRange(new DateRange());\n    }\n    resources.forEach(resource => {\n      // Update model\n      arrays.remove(this.resources, resource);\n      delete this.resourceMap[resource.id];\n      resource.activities.forEach(activity => {\n        delete this.activityMap[activity.id];\n      });\n\n      // Update HTML\n      if (this.rendered) {\n        resource.$resource.remove();\n        delete resource.$resource;\n      }\n    });\n    this.invalidateLayoutTree();\n  }\n  deleteAllResources() {\n    // Update HTML\n    if (this.rendered) {\n      this._removeAllResources();\n      this.invalidateLayoutTree();\n    }\n\n    // Update model\n    this.resources = [];\n    this.resourceMap = {};\n    this.activityMap = {};\n    this.selectResources([]);\n    this.selectRange(new DateRange());\n  }\n  updateResources(resources) {\n    resources.forEach(updatedResource => {\n      let oldResource = this.resourceMap[updatedResource.id];\n      if (!oldResource) {\n        throw new Error('Update event received for non existing resource. ResourceId: ' + updatedResource.id);\n      }\n\n      // Replace old resource\n      this._initResource(updatedResource);\n      arrays.replace(this.resources, oldResource, updatedResource);\n      arrays.replace(this.selectedResources, oldResource, updatedResource);\n\n      // Replace old $resource\n      if (this.rendered && oldResource.$resource) {\n        let $updatedResource = $(this._buildResourceHtml(updatedResource));\n        oldResource.$resource.replaceWith($updatedResource);\n        $updatedResource.css('min-width', oldResource.$resource.css('min-width'));\n        this._linkResource($updatedResource, updatedResource);\n        this._linkActivitiesForResource(updatedResource);\n      }\n    });\n  }\n}\n_defineProperty(Planner, \"Direction\", {\n  BACKWARD: -1,\n  FORWARD: 1\n});\n_defineProperty(Planner, \"DisplayMode\", {\n  DAY: 1,\n  WEEK: 2,\n  MONTH: 3,\n  WORK_WEEK: 4,\n  CALENDAR_WEEK: 5,\n  YEAR: 6\n});\n_defineProperty(Planner, \"SelectionMode\", {\n  NONE: 0,\n  SINGLE_RANGE: 1,\n  MULTI_RANGE: 2\n});\n_defineProperty(Planner, \"RANGE_SELECTION_MOVE_THRESHOLD\", 10);","map":{"version":3,"names":["arrays","DateFormat","DateRange","dates","defaultValues","graphics","HtmlComponent","KeyStrokeContext","MenuBar","menus","menus_1","objects","PlannerLayout","PlannerMenuItemsOrder","Range","scout","scrollbars","strings","styles","tooltips","TooltipSupport","Widget","$","Planner","constructor","activityMap","activitySelectable","availableDisplayModes","displayMode","displayModeOptions","headerVisible","label","resources","resourceMap","selectionMode","SelectionMode","MULTI_RANGE","selectionRange","selectedResources","viewRange","selectedActivity","_resourceTitleWidth","_rangeSelectionStarted","startRow","lastRow","$container","$range","$modes","$grid","transformLeft","t","transformWidth","t0","t1","yearPanelVisible","_addWidgetProperties","_createKeyStrokeContext","_init","model","_yearPanel","create","parent","alwaysSelectFirstDay","on","_onYearPanelDateSelect","bind","_header","_onTodayClick","_onYearClick","_onPreviousClick","_onNextClick","_onDisplayModeClick","menuBar","position","Position","BOTTOM","menuOrder","session","cssClass","i","length","_initResource","_setDisplayMode","_setAvailableDisplayModes","_setViewRange","_setSelectedResources","_setSelectedActivity","_setSelectionRange","_setMenus","_setDisplayModeOptions","_tooltipSupport","arrowPosition","resource","applyTo","activities","forEach","activity","_initActivity","id","beginTime","parseJsonDate","endTime","_render","$parent","appendDiv","layout","htmlComp","install","setLayout","render","_onCellMouseDown","_onResourceTitleMouseDown","_onResourceTitleContextMenu","_onActivityContextMenu","$scale","selector","text","$comp","_activityById","attr","tooltipText","undefined","_installScrollbars","_gridScrollHandler","_onGridScroll","_renderProperties","_renderViewRange","_renderHeaderVisible","_renderYearPanelVisible","_renderResources","_renderSelectedActivity","_renderSelectedResources","setTimeout","_renderSelectionRange","get$Scrollable","event","_navigateDate","Direction","BACKWARD","FORWARD","direction","from","to","DisplayMode","DAY","shift","isOneOf","WEEK","WORK_WEEK","ensureMonday","MONTH","CALENDAR_WEEK","YEAR","setViewRange","today","_today","year","getFullYear","month","getMonth","date","getDate","day","getDay","Date","setViewRangeFrom","setDisplayMode","setYearPanelVisible","$resource","target","isSelected","which","ctrlKey","data","_select","_showContextMenu","_onRangeSelectorContextMenu","allowedType","preventDefault","stopPropagation","func","rendered","attached","filteredMenus","_filterMenus","$part","currentTarget","popup","menuItems","location","x","pageX","y","pageY","$anchor","open","onRequestsDone","_reconcileScrollPos","scrollLeft","_renderRange","toDate","valueOf","toText","isSameDay","_dateFormat","join","_renderScale","width","that","empty","children","remove","$scaleTitle","_renderLabel","$timeline","$timelineLarge","$timelineSmall","_renderDayScale","_renderWeekScale","_renderMonthScale","_renderCalendarWeekScale","_renderYearScale","$smallScaleItems","$largeScaleItems","each","$scaleItem","$largeGridLine","prependDiv","css","index","$smallGridLine","beginScale","first","endScale","last","options","interval","firstHourOfDay","lastHourOfDay","begin","end","firstHour","lastHour","fullRangeMillis","dayDiffTBegin","compareDays","dayDIffEndBegin","dayComponentMillis","rangeScaling","dayOffset","getHours","hiddenRanges","_findHiddenRangesInWeekMode","selectedRangeMillis","subtractAll","reduce","acc","range","size","ranges","currentDate","hiddenRange","shiftTime","push","setHours","setMinutes","setDate","newLargeGroup","$divLarge","$divSmall","loop","labelPeriod","Math","min","getMinutes","addClass","_incrementTimelineScaleItems","html","weekInYear","_scaleTooltipText","$largeComp","$smallComp","newDate","_removeAllResources","resourcesHtml","_buildResourceHtml","appendTo","element","$element","_resourceById","_linkResource","_linkActivitiesForResource","$cells","_linkActivity","$activity","_rerenderActivities","_removeActivitiesForResource","_renderActivititesForResource","resourceHtml","encode","resourceCell","_buildActivitiesHtml","activitiesHtml","_buildActivityHtml","level","backgroundColor","modelToCssColor","foregroundColor","levelColor","max","activityCssClass","activityStyle","activityLevelCssClass","activityEmptyColor","get","activityHtml","$target","opensContextMenu","$selector","hide","elementFromPoint","show","hasClass","selectResources","selectActivity","selectRange","NONE","_startRangeSelection","_cellMousemoveHandler","_onCellMousemove","document","one","_onDocumentMouseUp","_findRow","startRange","_findScale","lastRange","_prepareRangeSelectionByMousemove","mousedownEvent","mousemoveEvent","moveX","moveY","moveThreshold","RANGE_SELECTION_MOVE_THRESHOLD","abs","mousedownRow","mousemoveRow","_onResizeMouseDown","swap","nvl","_findScaleByFromDate","getTime","_findScaleByToDate","body","_resizeMousemoveHandler","_onResizeMousemove","removeClass","off","_documentMousemoveHandler","whileSelecting","rangeSelected","$startRow","$lastRow","SINGLE_RANGE","$upperRow","offsetTop","$lowerRow","toArray","top","low","r","row","splice","map","_adjustSelectionRange","minSelectionDuration","minSelectionIntervalCount","endOfDay","trunc","_visibleViewRange","$row","gridBounds","offsetBounds","height","offset","_findScaleByFunction","elem","filter","$items","pattern","d","dateFormat","locale","format","invalidateLayoutTree","setVisible","animated","yearPanelWidth","renderContent","select","animate","duration","progress","_onYearPanelWidthChange","complete","_afterYearPanelWidthChange","outerWidth","revalidateLayout","removeContent","updateKeyStrokes","_setProperty","_updateMenuBar","setMenuItems","_removeMenus","allowedTypes","onlyVisible","enableDisableKeyStroke","indexOf","setDisplayModeOptions","setProperty","_adjustHours","optionsMap","values","validHour","hour","_renderDisplayModeOptions","_renderAvailableDisplayModes","_renderDisplayMode","ensure","selectDate","setAvailableDisplayModes","_resourcesByIds","_removeSelectedResources","_renderActivitySelectable","toggleClass","_renderSelectionMode","$highlight","cssHeight","outerHeight","$selectorResizeLeft","mousedown","$selectorResizeRight","cssWidth","left","cssLeft","_removeSelectedActivity","ids","layoutYearPanel","update","$yearList","_scrollYear","visible","daysDiff","validateLayoutTree","equals","slice","trigger","deselectResources","deselected","removeAll","insertResources","deleteResources","deleteAllResources","updateResources","updatedResource","oldResource","Error","replace","$updatedResource","replaceWith"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/planner/Planner.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  DateFormat,\n  DateRange,\n  dates,\n  defaultValues,\n  graphics,\n  HtmlComponent,\n  KeyStrokeContext,\n  MenuBar,\n  menus as menus_1,\n  objects,\n  PlannerLayout,\n  PlannerMenuItemsOrder,\n  Range,\n  scout,\n  scrollbars,\n  strings,\n  styles,\n  tooltips,\n  TooltipSupport,\n  Widget\n} from '../index';\nimport $ from 'jquery';\n\nexport default class Planner extends Widget {\n\n  constructor() {\n    super();\n\n    this.activityMap = [];\n    this.activitySelectable = false;\n    this.availableDisplayModes = [];\n    this.displayMode = null;\n    this.displayModeOptions = {};\n    this.headerVisible = true;\n    this.label = null;\n    this.resources = [];\n    this.resourceMap = [];\n    this.selectionMode = Planner.SelectionMode.MULTI_RANGE;\n    this.selectionRange = new DateRange();\n    this.selectedResources = [];\n    this.viewRange = {};\n    this.selectedActivity = null;\n\n    // visual\n    this._resourceTitleWidth = 20;\n    this._rangeSelectionStarted = false;\n    this.startRow = null;\n    this.lastRow = null;\n\n    // main elements\n    this.$container = null;\n    this.$range = null;\n    this.$modes = null;\n    this.$grid = null;\n\n    // scale calculator\n    this.transformLeft = t => t;\n    this.transformWidth = (t0, t1) => (t1 - t0);\n\n    this.yearPanelVisible = false;\n    this._addWidgetProperties(['menus']);\n  }\n\n  static Direction = {\n    BACKWARD: -1,\n    FORWARD: 1\n  };\n\n  /**\n   * Enum providing display-modes for planner (extends calendar).\n   * @see IPlannerDisplayMode.java\n   */\n  static DisplayMode = {\n    DAY: 1,\n    WEEK: 2,\n    MONTH: 3,\n    WORK_WEEK: 4,\n    CALENDAR_WEEK: 5,\n    YEAR: 6\n  };\n\n  static SelectionMode = {\n    NONE: 0,\n    SINGLE_RANGE: 1,\n    MULTI_RANGE: 2\n  };\n\n  static RANGE_SELECTION_MOVE_THRESHOLD = 10;\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  _init(model) {\n    super._init(model);\n    this._yearPanel = scout.create('YearPanel', {\n      parent: this,\n      alwaysSelectFirstDay: true\n    });\n    this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n    this._header = scout.create('PlannerHeader', {\n      parent: this\n    });\n    this._header.on('todayClick', this._onTodayClick.bind(this));\n    this._header.on('yearClick', this._onYearClick.bind(this));\n    this._header.on('previousClick', this._onPreviousClick.bind(this));\n    this._header.on('nextClick', this._onNextClick.bind(this));\n    this._header.on('displayModeClick', this._onDisplayModeClick.bind(this));\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      position: MenuBar.Position.BOTTOM,\n      menuOrder: new PlannerMenuItemsOrder(this.session, 'Planner'),\n      cssClass: 'bounded'\n    });\n    for (let i = 0; i < this.resources.length; i++) {\n      this._initResource(this.resources[i]);\n    }\n    this._setDisplayMode(this.displayMode);\n    this._setAvailableDisplayModes(this.availableDisplayModes);\n    this._setViewRange(this.viewRange);\n    this._setSelectedResources(this.selectedResources);\n    this._setSelectedActivity(this.selectedActivity);\n    this._setSelectionRange(this.selectionRange);\n    this._setMenus(this.menus);\n    this._setDisplayModeOptions(this.displayModeOptions);\n\n    this._tooltipSupport = new TooltipSupport({\n      parent: this,\n      arrowPosition: 50\n    });\n  }\n\n  _initResource(resource) {\n    defaultValues.applyTo(resource, 'Resource');\n    resource.activities.forEach(function(activity) {\n      this._initActivity(activity);\n    }, this);\n    this.resourceMap[resource.id] = resource;\n  }\n\n  _initActivity(activity) {\n    activity.beginTime = dates.parseJsonDate(activity.beginTime);\n    activity.endTime = dates.parseJsonDate(activity.endTime);\n    defaultValues.applyTo(activity, 'Activity');\n    this.activityMap[activity.id] = activity;\n  }\n\n  _render() {\n    // basics, layout etc.\n    this.$container = this.$parent.appendDiv('planner');\n    let layout = new PlannerLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n\n    // main elements\n    this._header.render();\n    this._yearPanel.render();\n    this.$grid = this.$container.appendDiv('planner-grid')\n      .on('mousedown', '.resource-cells', this._onCellMouseDown.bind(this))\n      .on('mousedown', '.resource-title', this._onResourceTitleMouseDown.bind(this))\n      .on('contextmenu', '.resource-title', this._onResourceTitleContextMenu.bind(this))\n      .on('contextmenu', '.planner-activity', this._onActivityContextMenu.bind(this));\n    this.$scale = this.$container.appendDiv('planner-scale');\n    this.menuBar.render();\n\n    tooltips.install(this.$grid, {\n      parent: this,\n      selector: '.planner-activity',\n      text: function($comp) {\n        if (this._activityById($comp.attr('data-id'))) {\n          return this._activityById($comp.attr('data-id')).tooltipText;\n        }\n        return undefined;\n\n      }.bind(this)\n    });\n\n    this._installScrollbars();\n    this._gridScrollHandler = this._onGridScroll.bind(this);\n    this.$grid.on('scroll', this._gridScrollHandler);\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n\n    this._renderViewRange();\n    this._renderHeaderVisible();\n    this._renderYearPanelVisible(false);\n    this._renderResources();\n    this._renderSelectedActivity();\n    this._renderSelectedResources();\n    // render with setTimeout because the planner needs to be layouted first\n    setTimeout(this._renderSelectionRange.bind(this));\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$grid;\n  }\n\n  /* -- basics, events -------------------------------------------- */\n\n  _onPreviousClick(event) {\n    this._navigateDate(Planner.Direction.BACKWARD);\n  }\n\n  _onNextClick(event) {\n    this._navigateDate(Planner.Direction.FORWARD);\n  }\n\n  _navigateDate(direction) {\n    let viewRange = new DateRange(this.viewRange.from, this.viewRange.to),\n      displayMode = Planner.DisplayMode;\n\n    if (this.displayMode === displayMode.DAY) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 0, direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 0, direction);\n    } else if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK)) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 0, direction * 7);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 0, direction * 7);\n    } else if (this.displayMode === displayMode.MONTH) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, direction, 0);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, direction, 0);\n    } else if (this.displayMode === displayMode.CALENDAR_WEEK) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, direction, 0);\n      viewRange.from = dates.ensureMonday(viewRange.from, -1 * direction);\n      viewRange.to = dates.shift(this.viewRange.to, 0, direction, 0);\n    } else if (this.displayMode === displayMode.YEAR) {\n      viewRange.from = dates.shift(this.viewRange.from, 0, 3 * direction, 0);\n      viewRange.to = dates.shift(this.viewRange.to, 0, 3 * direction, 0);\n    }\n\n    this.setViewRange(viewRange);\n  }\n\n  _onTodayClick(event) {\n    let today = this._today(),\n      year = today.getFullYear(),\n      month = today.getMonth(),\n      date = today.getDate(),\n      day = (today.getDay() + 6) % 7,\n      displayMode = Planner.DisplayMode;\n\n    if (this.displayMode === displayMode.DAY) {\n      today = new Date(year, month, date);\n    } else if (this.displayMode === displayMode.YEAR) {\n      today = new Date(year, month, 1);\n    } else {\n      today = new Date(year, month, date - day); // set day to Monday\n    }\n\n    this.setViewRangeFrom(today);\n  }\n\n  _today() {\n    return new Date();\n  }\n\n  _onDisplayModeClick(event) {\n    let displayMode = event.displayMode;\n    this.setDisplayMode(displayMode);\n  }\n\n  _onYearClick(event) {\n    this.setYearPanelVisible(!this.yearPanelVisible);\n  }\n\n  _onYearPanelDateSelect(event) {\n    this.setViewRangeFrom(event.date);\n  }\n\n  _onResourceTitleMouseDown(event) {\n    let $resource = $(event.target).parent();\n    if ($resource.isSelected()) {\n      if (event.which === 3 || event.which === 1 && event.ctrlKey) {\n        // Right click on an already selected resource must not clear the selection -> context menu will be opened\n        return;\n      }\n    }\n    this.startRow = $resource.data('resource');\n    this.lastRow = this.startRow;\n    this._select();\n  }\n\n  _onResourceTitleContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Resource');\n  }\n\n  _onRangeSelectorContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Range');\n  }\n\n  _onActivityContextMenu(event) {\n    this._showContextMenu(event, 'Planner.Activity');\n  }\n\n  _showContextMenu(event, allowedType) {\n    event.preventDefault();\n    event.stopPropagation();\n    let func = function func(event, allowedType) {\n      if (!this.rendered || !this.attached) { // check needed because function is called asynchronously\n        return;\n      }\n      let filteredMenus = this._filterMenus([allowedType], true),\n        $part = $(event.currentTarget);\n      if (filteredMenus.length === 0) {\n        return; // at least one menu item must be visible\n      }\n      let popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: filteredMenus,\n        location: {\n          x: event.pageX,\n          y: event.pageY\n        },\n        $anchor: $part\n      });\n      popup.open();\n    }.bind(this);\n\n    this.session.onRequestsDone(func, event, allowedType);\n  }\n\n  _onGridScroll() {\n    this._reconcileScrollPos();\n  }\n\n  _reconcileScrollPos() {\n    // When scrolling horizontally scroll scale as well\n    let scrollLeft = this.$grid.scrollLeft();\n    this.$scale.scrollLeft(scrollLeft);\n  }\n\n  _renderRange() {\n    if (!this.viewRange.from || !this.viewRange.to) {\n      return;\n    }\n    let text,\n      toDate = new Date(this.viewRange.to.valueOf() - 1),\n      toText = this.session.text('ui.to'),\n      displayMode = Planner.DisplayMode;\n\n    // find range text\n    if (dates.isSameDay(this.viewRange.from, toDate)) {\n      text = this._dateFormat(this.viewRange.from, 'd. MMMM yyyy');\n    } else if (this.viewRange.from.getMonth() === toDate.getMonth() && this.viewRange.from.getFullYear() === toDate.getFullYear()) {\n      text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n    } else if (this.viewRange.from.getFullYear() === toDate.getFullYear()) {\n      if (this.displayMode === displayMode.YEAR) {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'MMMM'), toText, this._dateFormat(toDate, 'MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.  MMMM'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n      }\n    } else {\n      if (this.displayMode === displayMode.YEAR) {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'MMMM yyyy'), toText, this._dateFormat(toDate, 'MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._dateFormat(this.viewRange.from, 'd.  MMMM yyyy'), toText, this._dateFormat(toDate, 'd. MMMM yyyy'));\n      }\n    }\n\n    // set text\n    $('.planner-select', this._header.$range).text(text);\n  }\n\n  _renderScale() {\n    if (!this.viewRange.from || !this.viewRange.to) {\n      return;\n    }\n    let width,\n      that = this,\n      displayMode = Planner.DisplayMode;\n\n    // empty scale\n    this.$scale.empty();\n    this.$grid.children('.planner-small-scale-item-line').remove();\n    this.$grid.children('.planner-large-scale-item-line').remove();\n\n    // append main elements\n    this.$scaleTitle = this.$scale.appendDiv('planner-scale-title');\n    this._renderLabel();\n    this.$timeline = this.$scale.appendDiv('timeline');\n    this.$timelineLarge = this.$timeline.appendDiv('timeline-large');\n    this.$timelineSmall = this.$timeline.appendDiv('timeline-small');\n\n    // fill timeline large depending on mode\n    if (this.displayMode === displayMode.DAY) {\n      this._renderDayScale();\n    } else if (scout.isOneOf(this.displayMode, displayMode.WORK_WEEK, displayMode.WEEK)) {\n      this._renderWeekScale();\n    } else if (this.displayMode === displayMode.MONTH) {\n      this._renderMonthScale();\n    } else if (this.displayMode === displayMode.CALENDAR_WEEK) {\n      this._renderCalendarWeekScale();\n    } else if (this.displayMode === displayMode.YEAR) {\n      this._renderYearScale();\n    }\n\n    // set sizes and append scale lines\n    let $smallScaleItems = this.$timelineSmall.children('.scale-item');\n    let $largeScaleItems = this.$timelineLarge.children('.scale-item');\n    width = 100 / $smallScaleItems.length;\n    $largeScaleItems.each(function() {\n      let $scaleItem = $(this);\n      let $largeGridLine = that.$grid.prependDiv('planner-large-scale-item-line');\n      $scaleItem.css('width', $scaleItem.data('count') * width + '%')\n        .data('scale-item-line', $largeGridLine);\n      $scaleItem.prependDiv('planner-large-scale-item-line')\n        .css('left', 0);\n    });\n    $smallScaleItems.each(function(index) {\n      let $scaleItem = $(this);\n      $scaleItem.css('width', width + '%');\n      if (!$scaleItem.data('first')) {\n        let $smallGridLine = that.$grid.prependDiv('planner-small-scale-item-line');\n        $scaleItem.data('scale-item-line', $smallGridLine);\n        $scaleItem.prependDiv('planner-small-scale-item-line')\n          .css('left', 0);\n      }\n    });\n\n    // find transfer function\n    this.beginScale = this.$timelineSmall.children().first().data('date-from').valueOf();\n    this.endScale = this.$timelineSmall.children().last().data('date-to').valueOf();\n\n    if (scout.isOneOf(this.displayMode, displayMode.WORK_WEEK, displayMode.WEEK)) {\n      let options = this.displayModeOptions[this.displayMode];\n      let interval = options.interval;\n      let firstHourOfDay = options.firstHourOfDay;\n      let lastHourOfDay = options.lastHourOfDay;\n\n      this.transformLeft = ((begin, end, firstHour, lastHour, interval) => t => {\n        t = new Date(t);\n        begin = new Date(begin);\n        end = new Date(end);\n        let fullRangeMillis = end - begin;\n        // remove day component from range for scaling\n        let dayDiffTBegin = dates.compareDays(t, begin);\n        let dayDIffEndBegin = dates.compareDays(end, begin);\n        let dayComponentMillis = dayDiffTBegin * 3600000 * 24;\n        let rangeScaling = (24 / (lastHour - firstHour + 1));\n        // re-add day component\n        let dayOffset = dayDiffTBegin / dayDIffEndBegin;\n\n        if (t.getHours() < firstHour) {\n          // If t is in the morning before the first hour of day, return 00:00 of this day\n          return (rangeScaling / fullRangeMillis + dayOffset) * 100;\n        }\n        if (t.getHours() > lastHour) {\n          // If t is in the evening after the last hour of day, return 00:00 of next day\n          dayOffset = (dayDiffTBegin + 1) / dayDIffEndBegin;\n          return (rangeScaling / fullRangeMillis + dayOffset) * 100;\n        }\n\n        return ((t.valueOf() - (begin.valueOf() + firstHour * 3600000) - dayComponentMillis) * rangeScaling / fullRangeMillis + dayOffset) * 100;\n      })(this.viewRange.from, this.viewRange.to, firstHourOfDay, lastHourOfDay, interval);\n\n      this.transformWidth = ((begin, end, firstHour, lastHour, interval) => function(t0, t1) {\n        let fullRangeMillis = end - begin;\n        let selectionRange = new Range(new Date(t0), new Date(t1));\n        let hiddenRanges = this._findHiddenRangesInWeekMode();\n        let selectedRangeMillis = selectionRange.subtractAll(hiddenRanges).reduce((acc, range) => {\n          return acc + range.size();\n        }, 0);\n        let rangeScaling = (24 / (lastHour - firstHour + 1));\n        return (selectedRangeMillis * rangeScaling) / fullRangeMillis * 100;\n      })(this.viewRange.from, this.viewRange.to, firstHourOfDay, lastHourOfDay, interval);\n    } else {\n      this.transformLeft = ((begin, end) => t => (t - begin) / (end - begin) * 100)(this.beginScale, this.endScale);\n\n      this.transformWidth = ((begin, end) => (t0, t1) => (t1 - t0) / (end - begin) * 100)(this.beginScale, this.endScale);\n    }\n  }\n\n  /**\n   * Returns every hidden range of the view range created by first and last our of day.\n   */\n  _findHiddenRangesInWeekMode() {\n    if (!scout.isOneOf(this.displayMode, Planner.DisplayMode.WORK_WEEK, Planner.DisplayMode.WEEK)) {\n      return [];\n    }\n    let ranges = [];\n    let options = this.displayModeOptions[this.displayMode];\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n    let currentDate = new Date(this.viewRange.from.valueOf());\n    let hiddenRange;\n    while (currentDate < this.viewRange.to) {\n      // Start of day range\n      hiddenRange = new Range(new Date(currentDate.valueOf()), dates.shiftTime(currentDate, firstHourOfDay));\n      if (hiddenRange.size() > 0) {\n        ranges.push(hiddenRange);\n      }\n      // End of day range\n      hiddenRange = new Range(dates.shiftTime(currentDate, lastHourOfDay + 1), dates.shiftTime(currentDate, 24));\n      if (hiddenRange.size() > 0) {\n        ranges.push(hiddenRange);\n      }\n      currentDate.setHours(0);\n      currentDate.setMinutes(0);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return ranges;\n  }\n\n  _renderDayScale() {\n    let newLargeGroup, $divLarge, $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let interval = options.interval;\n    let labelPeriod = options.labelPeriod;\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n\n    // cap interval to day range\n    interval = Math.min(interval, 60 * (lastHourOfDay - firstHourOfDay + 1));\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      if (loop.getHours() >= firstHourOfDay && loop.getHours() <= lastHourOfDay) {\n        newLargeGroup = false;\n        if (loop.getMinutes() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'HH')).data('count', 0);\n          newLargeGroup = true;\n        }\n\n        $divSmall = this.$timelineSmall\n          .appendDiv('scale-item', this._dateFormat(loop, ':mm'))\n          .data('date-from', new Date(loop.valueOf()));\n\n        // hide label\n        if ((loop.getMinutes() % (interval * labelPeriod)) !== 0) {\n          $divSmall.addClass('label-invisible');\n        }\n\n        // increase variables\n        loop = dates.shiftTime(loop, 0, interval, 0);\n        this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n        first = false;\n      } else {\n        loop = dates.shiftTime(loop, 0, interval, 0);\n      }\n    }\n  }\n\n  _renderWeekScale() {\n    let newLargeGroup, $divLarge, $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n\n    let options = this.displayModeOptions[this.displayMode];\n    let interval = options.interval;\n    let labelPeriod = options.labelPeriod;\n    let firstHourOfDay = options.firstHourOfDay;\n    let lastHourOfDay = options.lastHourOfDay;\n\n    // cap interval to day range\n    interval = Math.min(interval, 60 * (lastHourOfDay - firstHourOfDay + 1));\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getHours() < firstHourOfDay) {\n        loop.setHours(firstHourOfDay);\n      }\n\n      if (loop.getHours() === firstHourOfDay && loop.getMinutes() === 0 || first) {\n        if (loop.getMonth() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd. MMMM yyyy')).data('count', 0);\n        } else if (loop.getDate() === 1) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd. MMMM')).data('count', 0);\n        } else {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'd.')).data('count', 0);\n        }\n        newLargeGroup = true;\n      }\n\n      $divSmall = this.$timelineSmall\n        .appendDiv('scale-item', this._dateFormat(loop, 'HH:mm'))\n        .data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (((loop.getHours() - firstHourOfDay) * 60 + loop.getMinutes()) % (interval * labelPeriod) !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n\n      // increase variables\n      loop = dates.shiftTime(loop, 0, interval, 0, 0);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n\n      if (loop.getHours() > lastHourOfDay) {\n        // jump to next day\n        loop.setHours(0);\n        loop.setMinutes(0);\n        loop.setDate(loop.getDate() + 1);\n      }\n    }\n  }\n\n  _renderMonthScale() {\n    let newLargeGroup, $divLarge, $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getDate() === 1 || first) {\n        if (loop.getMonth() === 0 || first) {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n        } else {\n          $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM')).data('count', 0);\n        }\n        newLargeGroup = true;\n      }\n\n      $divSmall = this.$timelineSmall\n        .appendDiv('scale-item', this._dateFormat(loop, 'dd'))\n        .data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (loop.getDate() % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n\n      loop = dates.shift(loop, 0, 0, 1);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n    }\n  }\n\n  _renderCalendarWeekScale() {\n    let newLargeGroup, $divLarge, $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getDate() < 8 || first === true) {\n        if (loop.getMonth() === 0 || first === true) {\n          if (loop.getDate() > 11) {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item').html('&nbsp;').data('count', 0);\n            first = 2;\n          } else {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n            first = false;\n          }\n        } else {\n          if (first === 2) {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM yyyy')).data('count', 0);\n            first = false;\n          } else {\n            $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'MMMM')).data('count', 0);\n          }\n        }\n        newLargeGroup = true;\n      }\n\n      $divSmall = this.$timelineSmall\n        .appendDiv('scale-item', dates.weekInYear(loop))\n        .data('date-from', new Date(loop.valueOf()))\n        .data('tooltipText', this._scaleTooltipText.bind(this));\n      this._tooltipSupport.install($divSmall);\n\n      // hide label\n      if (dates.weekInYear(loop) % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n\n      loop.setDate(loop.getDate() + 7);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n    }\n  }\n\n  _renderYearScale() {\n    let newLargeGroup, $divLarge, $divSmall,\n      first = true;\n    let loop = new Date(this.viewRange.from.valueOf());\n    let options = this.displayModeOptions[this.displayMode];\n    let labelPeriod = options.labelPeriod;\n\n    // from start to end\n    while (loop < this.viewRange.to) {\n      newLargeGroup = false;\n      if (loop.getMonth() === 0 || first) {\n        $divLarge = this.$timelineLarge.appendDiv('scale-item', this._dateFormat(loop, 'yyyy')).data('count', 0);\n        newLargeGroup = true;\n      }\n\n      $divSmall = this.$timelineSmall\n        .appendDiv('scale-item', this._dateFormat(loop, 'MMMM'))\n        .data('date-from', new Date(loop.valueOf()));\n\n      // hide label\n      if (loop.getMonth() % labelPeriod !== 0) {\n        $divSmall.addClass('label-invisible');\n      }\n\n      loop = dates.shift(loop, 0, 1, 0);\n      this._incrementTimelineScaleItems($divLarge, $divSmall, loop, newLargeGroup);\n      first = false;\n    }\n  }\n\n  /**\n   * @param {Date} newDate\n   */\n  _incrementTimelineScaleItems($largeComp, $smallComp, newDate, newLargeGroup) {\n    $largeComp.data('count', $largeComp.data('count') + 1);\n    $smallComp.data('date-to', new Date(newDate.valueOf()))\n      .data('first', newLargeGroup);\n  }\n\n  /* -- scale events --------------------------------------------------- */\n\n  _scaleTooltipText($scale) {\n    let toText = ' ' + this.session.text('ui.to') + ' ',\n      from = new Date($scale.data('date-from').valueOf()),\n      to = new Date($scale.data('date-to').valueOf() - 1);\n\n    if (from.getMonth() === to.getMonth()) {\n      return this._dateFormat(from, 'd.') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n    } else if (from.getFullYear() === to.getFullYear()) {\n      return this._dateFormat(from, 'd. MMMM') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n    }\n    return this._dateFormat(from, 'd. MMMM yyyy') + toText + this._dateFormat(to, 'd. MMMM yyyy');\n  }\n\n  /* --  render resources, activities --------------------------------- */\n\n  _removeAllResources() {\n    this.resources.forEach(resource => {\n      resource.$resource.remove();\n    });\n  }\n\n  _renderResources(resources) {\n    let i, resource,\n      resourcesHtml = '';\n\n    resources = resources || this.resources;\n    for (i = 0; i < resources.length; i++) {\n      resource = resources[i];\n      resourcesHtml += this._buildResourceHtml(resource, this.$grid);\n    }\n\n    // Append resources to grid\n    $(resourcesHtml).appendTo(this.$grid);\n\n    // Match resources\n    this.$grid.children('.planner-resource').each((index, element) => {\n      let $element = $(element);\n      resource = this._resourceById($element.attr('data-id'));\n      this._linkResource($element, resource);\n      this._linkActivitiesForResource(resource);\n    });\n  }\n\n  _linkResource($resource, resource) {\n    $resource.data('resource', resource);\n    resource.$resource = $resource;\n    resource.$cells = $resource.children('.resource-cells');\n  }\n\n  _linkActivity($activity, activity) {\n    $activity.data('activity', activity);\n    activity.$activity = $activity;\n  }\n\n  _rerenderActivities(resources) {\n    resources = resources || this.resources;\n    resources.forEach(function(resource) {\n      this._removeActivitiesForResource(resource);\n      this._renderActivititesForResource(resource);\n    }, this);\n  }\n\n  _buildResourceHtml(resource) {\n    let resourceHtml = '<div class=\"planner-resource\" data-id=\"' + resource.id + '\">';\n    resourceHtml += '<div class=\"resource-title\">' + strings.encode(resource.resourceCell.text || '') + '</div>';\n    resourceHtml += '<div class=\"resource-cells\">' + this._buildActivitiesHtml(resource) + '</div>';\n    resourceHtml += '</div>';\n    return resourceHtml;\n  }\n\n  _renderActivititesForResource(resource) {\n    resource.$cells.html(this._buildActivitiesHtml(resource));\n    this._linkActivitiesForResource(resource);\n  }\n\n  _linkActivitiesForResource(resource) {\n    resource.$cells.children('.planner-activity').each((index, element) => {\n      let $element = $(element);\n      let activity = this._activityById($element.attr('data-id'));\n      this._linkActivity($element, activity);\n    });\n  }\n\n  _buildActivitiesHtml(resource) {\n    let activitiesHtml = '';\n    resource.activities.forEach(function(activity) {\n      if (activity.beginTime.valueOf() >= this.endScale ||\n        activity.endTime.valueOf() <= this.beginScale) {\n        // don't add activities which are not in the view range\n        return;\n      }\n      activitiesHtml += this._buildActivityHtml(activity);\n    }, this);\n    return activitiesHtml;\n  }\n\n  _removeActivitiesForResource(resource) {\n    resource.activities.forEach(activity => {\n      if (activity.$activity) {\n        activity.$activity.remove();\n        activity.$activity = null;\n      }\n    }, this);\n  }\n\n  _buildActivityHtml(activity) {\n    let level = 100 - Math.min(activity.level * 100, 100),\n      backgroundColor = styles.modelToCssColor(activity.backgroundColor),\n      foregroundColor = styles.modelToCssColor(activity.foregroundColor),\n      levelColor = styles.modelToCssColor(activity.levelColor),\n      begin = activity.beginTime.valueOf(),\n      end = activity.endTime.valueOf();\n\n    // Make sure activity fits into scale\n    begin = Math.max(begin, this.beginScale);\n    end = Math.min(end, this.endScale);\n\n    let activityCssClass = 'planner-activity' + (activity.cssClass ? (' ' + activity.cssClass) : '');\n    let activityStyle = 'left: ' + 'calc(' + this.transformLeft(begin) + '% + 2px);';\n    activityStyle += ' width: ' + 'calc(' + this.transformWidth(begin, end) + '% - 4px);';\n\n    if (levelColor) {\n      activityStyle += ' background-color: ' + levelColor + ';';\n      activityStyle += ' border-color: ' + levelColor + ';';\n    }\n    if (!levelColor && backgroundColor) {\n      activityStyle += ' background-color: ' + backgroundColor + ';';\n      activityStyle += ' border-color: ' + backgroundColor + ';';\n    }\n    if (foregroundColor) {\n      activityStyle += ' color: ' + foregroundColor + ';';\n    }\n\n    // The background-color represents the fill level and not the image. This makes it easier to change the color using a css class\n    // In order to change the background rather than the fill, use the planner-activity-level css class\n    let activityLevelCssClass = 'planner-activity-level' + (activity.cssClass ? (' ' + activity.cssClass) : '');\n    let activityEmptyColor = styles.get(activityLevelCssClass, 'background-color').backgroundColor;\n    activityStyle += ' background-image: ' + 'linear-gradient(to bottom, ' + activityEmptyColor + ' 0%, ' + activityEmptyColor + ' ' + level + '%, transparent ' + level + '%, transparent 100% );';\n\n    let activityHtml = '<div';\n    activityHtml += ' class=\"' + activityCssClass + '\"';\n    activityHtml += ' style=\"' + activityStyle + '\"';\n    activityHtml += ' data-id=\"' + activity.id + '\"';\n    activityHtml += '>' + strings.encode(activity.text || '') + '</div>';\n    return activityHtml;\n  }\n\n  /* -- selector -------------------------------------------------- */\n\n  _onCellMouseDown(event) {\n    let $activity,\n      $resource,\n      $target = $(event.target),\n      selectionMode = Planner.SelectionMode,\n      opensContextMenu = (event.which === 3 || event.which === 1 && event.ctrlKey);\n\n    if (this.activitySelectable) {\n      if (!opensContextMenu && this.$selector) {\n        // Hide selector otherwise activity may not be resolved (elementFromPoint would return the $selector)\n        // This allows selecting an activity which is inside a selection range\n        this.$selector.hide();\n      }\n      $activity = this.$grid.elementFromPoint(event.pageX, event.pageY);\n      if (!opensContextMenu && this.$selector) {\n        this.$selector.show();\n      }\n      if ($activity.hasClass('planner-activity')) {\n        $resource = $activity.parent().parent();\n        this.selectResources([$resource.data('resource')]);\n        this.selectActivity($activity.data('activity'));\n        this.selectRange(new DateRange());\n      } else {\n        this.selectActivity(null);\n      }\n    } else {\n      this.selectActivity(null);\n    }\n\n    if (this.selectionMode === selectionMode.NONE) {\n      return;\n    }\n\n    if ($target.hasClass('selector') && opensContextMenu) {\n      // Right click on the selector must not clear the selection -> context menu will be opened\n      return;\n    }\n\n    if (!this.selectedActivity) {\n      // If not an activity was selected, start immediately, otherwise start as soon the mouse moves\n      this._startRangeSelection(event.pageX, event.pageY);\n    }\n\n    // add event handlers\n    this._cellMousemoveHandler = this._onCellMousemove.bind(this, event);\n    $target.document()\n      .on('mousemove', this._cellMousemoveHandler)\n      .one('mouseup', this._onDocumentMouseUp.bind(this));\n  }\n\n  _startRangeSelection(pageX, pageY) {\n    // init selector\n    this.startRow = this._findRow(pageY);\n    this.lastRow = this.startRow;\n\n    // find range on scale\n    this.startRange = this._findScale(pageX);\n    this.lastRange = this.startRange;\n\n    // draw\n    this._select(true);\n    this._rangeSelectionStarted = true;\n  }\n\n  /**\n   * @returns {boolean} true if the range selection may be started, false if not\n   */\n  _prepareRangeSelectionByMousemove(mousedownEvent, mousemoveEvent) {\n    let moveX = mousedownEvent.pageX - mousemoveEvent.pageX;\n    let moveY = mousedownEvent.pageY - mousemoveEvent.pageY;\n    let moveThreshold = Planner.RANGE_SELECTION_MOVE_THRESHOLD;\n    if (Math.abs(moveX) >= moveThreshold) {\n      // Accept if x movement is big enough\n      return true;\n    }\n    let mousedownRow = this._findRow(mousedownEvent.pageY);\n    let mousemoveRow = this._findRow(mousemoveEvent.pageY);\n    // Accept if y movement is big enough AND the row changed. No need to switch into range selection mode if cursor is still on the same row\n    return Math.abs(moveY) >= moveThreshold && this.selectionMode === Planner.SelectionMode.MULTI_RANGE && mousedownRow !== mousemoveRow;\n  }\n\n  _onCellMousemove(mousedownEvent, event) {\n    if (this.selectedActivity && !this._rangeSelectionStarted) {\n      // If an activity was selected, switch to range selection if the user moves the mouse\n      if (!this._prepareRangeSelectionByMousemove(mousedownEvent, event)) {\n        return;\n      }\n      this._startRangeSelection(mousedownEvent.pageX, mousedownEvent.pageY);\n    }\n\n    let lastRow = this._findRow(event.pageY);\n    if (lastRow) {\n      this.lastRow = lastRow;\n    }\n    let lastRange = this._findScale(event.pageX);\n    if (lastRange) {\n      this.lastRange = lastRange;\n    }\n\n    this._select(true);\n  }\n\n  _onResizeMouseDown(event) {\n    let swap,\n      $target = $(event.target);\n\n    this.startRow = this.selectedResources[0];\n    this.lastRow = this.selectedResources[this.selectedResources.length - 1];\n\n    // Get the start and last range based on the clicked resize handle. If the ranges cannot be determined it likely means that the selectionRange is out of the current viewRange or dayRange (set by firstHourOfDay, lastHourOfDay)\n    this.startRange = scout.nvl(this._findScaleByFromDate(this.selectionRange.from), new Range(this.selectionRange.from.getTime(), this.selectionRange.from.getTime()));\n    this.lastRange = scout.nvl(this._findScaleByToDate(this.selectionRange.to), new Range(this.selectionRange.to.getTime(), this.selectionRange.to.getTime()));\n\n    // Swap start and last range if resize-left is clicked\n    if ($target.hasClass('selector-resize-left')) {\n      swap = this.startRange;\n      this.startRange = this.lastRange;\n      this.lastRange = swap;\n    }\n\n    $target.body().addClass('col-resize');\n\n    this._resizeMousemoveHandler = this._onResizeMousemove.bind(this);\n    $target.document()\n      .on('mousemove', this._resizeMousemoveHandler)\n      .one('mouseup', this._onDocumentMouseUp.bind(this));\n\n    return false;\n  }\n\n  _onResizeMousemove(event) {\n    if (!this.rendered) {\n      // planner may be removed in the meantime\n      return;\n    }\n    let lastRange = this._findScale(event.pageX);\n    if (lastRange) {\n      this.lastRange = lastRange;\n    }\n    this._select(true);\n  }\n\n  _onDocumentMouseUp(event) {\n    let $target = $(event.target);\n    $target.body().removeClass('col-resize');\n    if (this._cellMousemoveHandler) {\n      $target.document().off('mousemove', this._documentMousemoveHandler);\n      this._cellMousemoveHandler = null;\n    }\n    if (this._resizeMousemoveHandler) {\n      $target.document().off('mousemove', this._resizeMousemoveHandler);\n      this._resizeMousemoveHandler = null;\n    }\n    if (!this._rangeSelectionStarted) {\n      // Range selection has not been initiated -> don't call select()\n      return;\n    }\n    this._rangeSelectionStarted = false;\n    if (this.rendered) {\n      this._select();\n    }\n  }\n\n  _select(whileSelecting) {\n    if (!this.startRow || !this.lastRow) {\n      return;\n    }\n    let rangeSelected = !!(this.startRange && this.lastRange);\n    let $startRow = this.startRow.$resource,\n      $lastRow = this.lastRow.$resource;\n\n    // in case of single selection\n    if (this.selectionMode === Planner.SelectionMode.SINGLE_RANGE) {\n      this.lastRow = this.startRow;\n      $lastRow = this.startRow.$resource;\n    }\n\n    // select rows\n    let $upperRow = ($startRow[0].offsetTop <= $lastRow[0].offsetTop) ? $startRow : $lastRow,\n      $lowerRow = ($startRow[0].offsetTop > $lastRow[0].offsetTop) ? $startRow : $lastRow,\n      resources = $('.planner-resource', this.$grid).toArray(),\n      top = $upperRow[0].offsetTop,\n      low = $lowerRow[0].offsetTop;\n\n    for (let r = resources.length - 1; r >= 0; r--) {\n      let row = resources[r];\n      if ((row.offsetTop < top && row.offsetTop < low) || (row.offsetTop > top && row.offsetTop > low)) {\n        resources.splice(r, 1);\n      }\n    }\n\n    this.selectResources(resources.map(i => {\n      return $(i).data('resource');\n    }), !whileSelecting);\n    this.selectActivity(null);\n\n    if (rangeSelected) {\n      // left and width\n      let from = Math.min(this.lastRange.from, this.startRange.from),\n        to = Math.max(this.lastRange.to, this.startRange.to);\n\n      let selectionRange = new DateRange(new Date(from), new Date(to));\n      selectionRange = this._adjustSelectionRange(selectionRange);\n      this.selectRange(selectionRange, !whileSelecting);\n    }\n  }\n\n  _adjustSelectionRange(range) {\n    let from = range.from.getTime();\n    let to = range.to.getTime();\n\n    // Ensure minimum size of selection range (interval is in minutes)\n    let minSelectionDuration = 0;\n    let options = this.displayModeOptions[this.displayMode];\n    if (options.interval > 0 && options.minSelectionIntervalCount > 0) {\n      minSelectionDuration = options.minSelectionIntervalCount * options.interval * 60000;\n    }\n    let lastHourOfDay = options.lastHourOfDay;\n    let endOfDay = dates.shiftTime(dates.trunc(range.from), lastHourOfDay + 1);\n    let viewRange = this._visibleViewRange();\n    if (this.lastRange.from < this.startRange.from) {\n      // Selecting to left\n      if (to - minSelectionDuration >= viewRange.from.getTime()) {\n        // extend to left side\n        from = Math.min(from, to - minSelectionDuration);\n      } else {\n        // extend to right side if from would be smaller than the minimum date (left border)\n        from = viewRange.from.getTime();\n        to = Math.max(to, Math.min(from + minSelectionDuration, viewRange.to.getTime()));\n      }\n    } else {\n      // Selecting to right\n      if (from + minSelectionDuration <= viewRange.to.getTime()) {\n        // extend to right side\n        to = Math.max(to, Math.max(from + minSelectionDuration, viewRange.from.getTime()));\n        if (to >= endOfDay.getTime() && new Range(from, to).size() === minSelectionDuration) {\n          // extend to left side when clicking at the end of a day\n          to = endOfDay.getTime();\n          from = Math.min(from, to - minSelectionDuration);\n        }\n      } else {\n        // extend to left side if to would be greater than the maximum date (right border)\n        to = viewRange.to.getTime();\n        from = Math.min(from, to - minSelectionDuration);\n      }\n    }\n    return new DateRange(new Date(from), new Date(to));\n  }\n\n  _findRow(y) {\n    let $row,\n      gridBounds = graphics.offsetBounds(this.$grid),\n      x = gridBounds.x + 10;\n\n    y = Math.min(Math.max(y, 0), gridBounds.y + gridBounds.height - 1);\n    $row = this.$container.elementFromPoint(x, y, '.planner-resource');\n    if ($row.length > 0) {\n      return $row.data('resource');\n    }\n    return null;\n  }\n\n  _findScale(x) {\n    let $scaleItem,\n      gridBounds = graphics.offsetBounds(this.$grid),\n      y = this.$scale.offset().top + this.$scale.height() * 0.75;\n\n    x = Math.min(Math.max(x, 0), gridBounds.x + gridBounds.width - 1);\n    $scaleItem = this.$container.elementFromPoint(x, y, '.scale-item');\n    if ($scaleItem.length > 0) {\n      return new DateRange($scaleItem.data('date-from').valueOf(), $scaleItem.data('date-to').valueOf());\n    }\n    return null;\n  }\n\n  _findScaleByFromDate(from) {\n    return this._findScaleByFunction((i, elem) => {\n      let $scaleItem = $(elem);\n      if ($scaleItem.data('date-from').getTime() === from.getTime()) {\n        return true;\n      }\n    });\n  }\n\n  _findScaleByToDate(to) {\n    return this._findScaleByFunction((i, elem) => {\n      let $scaleItem = $(elem);\n      if ($scaleItem.data('date-to').getTime() === to.getTime()) {\n        return true;\n      }\n    });\n  }\n\n  _findScaleByFunction(func) {\n    let $scaleItem = this.$timelineSmall.children('.scale-item').filter(func);\n    if (!$scaleItem.length) {\n      return null;\n    }\n    return new DateRange($scaleItem.data('date-from').valueOf(), $scaleItem.data('date-to').valueOf());\n  }\n\n  /**\n   * @returns {Range} the visible view range (the difference to this.viewRange is that first and last hourOfDay are considered).\n   */\n  _visibleViewRange() {\n    let $items = this.$timelineSmall.children('.scale-item');\n    return new Range($items.first().data('date-from'), $items.last().data('date-to'));\n  }\n\n  /* -- helper ---------------------------------------------------- */\n\n  /**\n   * @param {Date} date\n   */\n  _dateFormat(date, pattern) {\n    let d = new Date(date.valueOf()),\n      dateFormat = new DateFormat(this.session.locale, pattern);\n\n    return dateFormat.format(d);\n  }\n\n  _renderViewRange() {\n    this._renderRange();\n    this._renderScale();\n    this.invalidateLayoutTree();\n  }\n\n  _renderHeaderVisible() {\n    this._header.setVisible(this.headerVisible);\n    this.invalidateLayoutTree();\n  }\n\n  _renderYearPanelVisible(animated) {\n    let yearPanelWidth;\n    if (this.yearPanelVisible) {\n      this._yearPanel.renderContent();\n    }\n\n    // show or hide year panel\n    $('.calendar-toggle-year', this.$modes).select(this.yearPanelVisible);\n    if (this.yearPanelVisible) {\n      yearPanelWidth = 210;\n    } else {\n      yearPanelWidth = 0;\n    }\n    this._yearPanel.$container.animate({\n      width: yearPanelWidth\n    }, {\n      duration: animated ? 500 : 0,\n      progress: this._onYearPanelWidthChange.bind(this),\n      complete: this._afterYearPanelWidthChange.bind(this)\n    });\n  }\n\n  _onYearPanelWidthChange() {\n    if (!this._yearPanel.$container) {\n      // If container has been removed in the meantime (e.g. user navigates away while animation is in progress)\n      return;\n    }\n    let yearPanelWidth = this._yearPanel.$container.outerWidth();\n    this.$grid.css('width', 'calc(100% - ' + yearPanelWidth + 'px)');\n    this.$scale.css('width', 'calc(100% - ' + yearPanelWidth + 'px)');\n    this.revalidateLayout();\n  }\n\n  _afterYearPanelWidthChange() {\n    if (!this.yearPanelVisible) {\n      this._yearPanel.removeContent();\n    }\n  }\n\n  _setMenus(menus) {\n    this.updateKeyStrokes(menus, this.menus);\n    this._setProperty('menus', menus);\n    this._updateMenuBar();\n  }\n\n  _updateMenuBar() {\n    let menuItems = this._filterMenus(['Planner.EmptySpace', 'Planner.Resource', 'Planner.Activity', 'Planner.Range'], false, true);\n    this.menuBar.setMenuItems(menuItems);\n  }\n\n  _removeMenus() {\n    // menubar takes care about removal\n  }\n\n  _filterMenus(allowedTypes, onlyVisible, enableDisableKeyStroke) {\n    allowedTypes = allowedTypes || [];\n    if (allowedTypes.indexOf('Planner.Resource') > -1 && this.selectedResources.length === 0) {\n      arrays.remove(allowedTypes, 'Planner.Resource');\n    }\n    if (allowedTypes.indexOf('Planner.Activity') > -1 && !this.selectedActivity) {\n      arrays.remove(allowedTypes, 'Planner.Activity');\n    }\n    if (allowedTypes.indexOf('Planner.Range') > -1 && !this.selectionRange.from && !this.selectionRange.to) {\n      arrays.remove(allowedTypes, 'Planner.Range');\n    }\n    return menus_1.filter(this.menus, allowedTypes, onlyVisible, enableDisableKeyStroke);\n  }\n\n  setDisplayModeOptions(displayModeOptions) {\n    this.setProperty('displayModeOptions', displayModeOptions);\n  }\n\n  _setDisplayModeOptions(displayModeOptions) {\n    if (displayModeOptions) {\n      this._adjustHours(displayModeOptions);\n    }\n    this.displayModeOptions = displayModeOptions;\n  }\n\n  /**\n   * Make sure configured our is between 0 and 23.\n   */\n  _adjustHours(optionsMap) {\n    objects.values(optionsMap).forEach(options => {\n      if (options.firstHourOfDay) {\n        options.firstHourOfDay = validHour(options.firstHourOfDay);\n      }\n      if (options.lastHourOfDay) {\n        options.lastHourOfDay = validHour(options.lastHourOfDay);\n      }\n    });\n\n    function validHour(hour) {\n      if (hour < 0) {\n        return 0;\n      }\n      if (hour > 23) {\n        return 23;\n      }\n      return hour;\n    }\n  }\n\n  _renderDisplayModeOptions() {\n    this._renderRange();\n    this._renderScale();\n    this._rerenderActivities(); // required in case first/lastHourOfDay changes\n    this._select(); // adjust selection if minSelectionIntervalCount has changed\n    this.invalidateLayoutTree();\n  }\n\n  _renderAvailableDisplayModes() {\n    // done by PlannerHeader.js\n  }\n\n  _renderDisplayMode() {\n    // done by PlannerHeader.js\n  }\n\n  _setViewRange(viewRange) {\n    viewRange = DateRange.ensure(viewRange);\n    this._setProperty('viewRange', viewRange);\n    this._yearPanel.setViewRange(this.viewRange);\n    this._yearPanel.selectDate(this.viewRange.from);\n  }\n\n  _setDisplayMode(displayMode) {\n    this._setProperty('displayMode', displayMode);\n    this._yearPanel.setDisplayMode(this.displayMode);\n    this._header.setDisplayMode(this.displayMode);\n  }\n\n  _setAvailableDisplayModes(availableDisplayModes) {\n    this._setProperty('availableDisplayModes', availableDisplayModes);\n    this._header.setAvailableDisplayModes(this.availableDisplayModes);\n  }\n\n  _setSelectionRange(selectionRange) {\n    selectionRange = DateRange.ensure(selectionRange);\n    this._setProperty('selectionRange', selectionRange);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n\n  _setSelectedResources(selectedResources) {\n    if (typeof selectedResources[0] === 'string') {\n      selectedResources = this._resourcesByIds(selectedResources);\n    }\n    if (this.rendered) {\n      this._removeSelectedResources();\n    }\n    this._setProperty('selectedResources', selectedResources);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n\n  _removeSelectedResources() {\n    this.selectedResources.forEach(resource => {\n      resource.$resource.select(false);\n    });\n  }\n\n  _renderSelectedResources() {\n    this.selectedResources.forEach(resource => {\n      resource.$resource.select(true);\n    });\n  }\n\n  _renderActivitySelectable() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.toggleClass('selected', this.activitySelectable);\n    }\n  }\n\n  _renderSelectionMode() {\n    if (this.selectionMode === Planner.SelectionMode.NONE) {\n      if (this.$selector) {\n        this.$selector.remove();\n        this.$highlight.remove();\n      }\n    } else {\n      this._renderSelectionRange();\n    }\n  }\n\n  _renderSelectionRange() {\n    let $startRow, $lastRow,\n      from = this.selectionRange.from,\n      to = this.selectionRange.to,\n      startRow = this.selectedResources[0],\n      lastRow = this.selectedResources[this.selectedResources.length - 1];\n\n    // remove old selector\n    if (this.$selector) {\n      this.$selector.remove();\n      this.$highlight.remove();\n    }\n\n    if (!startRow || !lastRow || !this.selectionRange.from || !this.selectionRange.to) {\n      return;\n    }\n    $startRow = startRow.$resource;\n    $lastRow = lastRow.$resource;\n\n    // Make sure selection fits into scale\n    from = Math.max(from, this.beginScale);\n    to = Math.min(to, this.endScale);\n\n    // top and height\n    let $parent = ($startRow[0].offsetTop <= $lastRow[0].offsetTop) ? $startRow : $lastRow;\n    this.$selector = $parent.children('.resource-cells').appendDiv('selector');\n    this.$selector.cssHeight($startRow.outerHeight() + Math.abs($lastRow[0].offsetTop - $startRow[0].offsetTop));\n    let $selectorResizeLeft = this.$selector.appendDiv('selector-resize-left').mousedown(this._onResizeMouseDown.bind(this));\n    let $selectorResizeRight = this.$selector.appendDiv('selector-resize-right').mousedown(this._onResizeMouseDown.bind(this));\n    this.$selector\n      .css('left', 'calc(' + this.transformLeft(from) + '% - ' + $selectorResizeLeft.cssWidth() + 'px)')\n      .css('width', 'calc(' + this.transformWidth(from, to) + '% + ' + ($selectorResizeLeft.cssWidth() + $selectorResizeRight.cssWidth()) + 'px)')\n      .on('contextmenu', this._onRangeSelectorContextMenu.bind(this));\n\n    // colorize scale\n    this.$highlight = this.$timelineSmall.prependDiv('highlight');\n\n    let left = this.$selector.cssLeft() + $selectorResizeLeft.cssWidth() + this.$scaleTitle.cssWidth();\n    let width = this.$selector.cssWidth() - ($selectorResizeLeft.cssWidth() + $selectorResizeRight.cssWidth());\n    this.$highlight\n      .cssLeft(left)\n      .cssWidth(width);\n  }\n\n  _setSelectedActivity(selectedActivity) {\n    if (typeof selectedActivity === 'string') {\n      selectedActivity = this._activityById(selectedActivity);\n    }\n    if (this.rendered) {\n      this._removeSelectedActivity();\n    }\n    this._setProperty('selectedActivity', selectedActivity);\n    this.session.onRequestsDone(this._updateMenuBar.bind(this));\n  }\n\n  _removeSelectedActivity() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.removeClass('selected');\n    }\n  }\n\n  _renderSelectedActivity() {\n    if (this.selectedActivity && this.selectedActivity.$activity) {\n      this.selectedActivity.$activity.addClass('selected');\n    }\n  }\n\n  _renderLabel() {\n    let label = this.label || '';\n    if (this.$scaleTitle) {\n      this.$scaleTitle.text(label);\n    }\n  }\n\n  _resourcesByIds(ids) {\n    return ids.map(this._resourceById.bind(this));\n  }\n\n  _activityById(id) {\n    return this.activityMap[id];\n  }\n\n  _resourceById(id) {\n    return this.resourceMap[id];\n  }\n\n  setDisplayMode(displayMode) {\n    this.setProperty('displayMode', displayMode);\n    this.startRange = null;\n    this.lastRange = null;\n  }\n\n  layoutYearPanel() {\n    if (this.yearPanelVisible) {\n      scrollbars.update(this._yearPanel.$yearList);\n      this._yearPanel._scrollYear();\n    }\n  }\n\n  setYearPanelVisible(visible) {\n    if (this.yearPanelVisible === visible) {\n      return;\n    }\n    this._setProperty('yearPanelVisible', visible);\n    if (this.rendered) {\n      this._renderYearPanelVisible(true);\n    }\n  }\n\n  setViewRangeFrom(date) {\n    let daysDiff = dates.compareDays(this.viewRange.to, this.viewRange.from);\n    let viewRange = new DateRange(this.viewRange.from, this.viewRange.to);\n\n    viewRange.from = date;\n    viewRange.to = dates.shift(date, 0, 0, daysDiff);\n    this.setViewRange(viewRange);\n  }\n\n  setViewRange(viewRange) {\n    if (this.viewRange === viewRange) {\n      return;\n    }\n    this._setViewRange(viewRange);\n\n    if (this.rendered) {\n      this._renderViewRange();\n      this._rerenderActivities();\n      this._renderSelectedActivity();\n      this.validateLayoutTree(); // Layouting is required for adjusting the scroll position\n      this._reconcileScrollPos();\n    }\n  }\n\n  selectRange(range) {\n    if (range && range.equals(this.selectionRange)) {\n      return;\n    }\n    this.setProperty('selectionRange', range);\n  }\n\n  selectActivity(activity) {\n    this.setProperty('selectedActivity', activity);\n  }\n\n  selectResources(resources) {\n    if (arrays.equals(resources, this.selectedResources)) {\n      return;\n    }\n\n    resources = arrays.ensure(resources);\n    // Make a copy so that original array stays untouched\n    resources = resources.slice();\n    this.setProperty('selectedResources', resources);\n    this.trigger('resourcesSelected', {\n      resources: resources\n    });\n\n    if (this.rendered) {\n      // Render selection range as well for the case if selectedRange does not change but selected resources do\n      this._renderSelectionRange();\n    }\n  }\n\n  /**\n   * Returns true if a deselection happened. False if the given resources were not selected at all.\n   */\n  deselectResources(resources) {\n    let deselected = false;\n    resources = arrays.ensure(resources);\n    let selectedResources = this.selectedResources.slice(); // copy\n    if (arrays.removeAll(selectedResources, resources)) {\n      this.selectResources(selectedResources);\n      deselected = true;\n    }\n    return deselected;\n  }\n\n  insertResources(resources) {\n    // Update model\n    resources.forEach(resource => {\n      this._initResource(resource);\n      // Always insert new rows at the end, if the order is wrong a rowOrderChanged event will follow\n      this.resources.push(resource);\n    });\n\n    // Update HTML\n    if (this.rendered) {\n      this._renderResources(resources);\n      this.invalidateLayoutTree();\n    }\n  }\n\n  deleteResources(resources) {\n    if (this.deselectResources(resources)) {\n      this.selectRange(new DateRange());\n    }\n    resources.forEach(resource => {\n      // Update model\n      arrays.remove(this.resources, resource);\n      delete this.resourceMap[resource.id];\n\n      resource.activities.forEach(activity => {\n        delete this.activityMap[activity.id];\n      });\n\n      // Update HTML\n      if (this.rendered) {\n        resource.$resource.remove();\n        delete resource.$resource;\n      }\n    });\n\n    this.invalidateLayoutTree();\n  }\n\n  deleteAllResources() {\n    // Update HTML\n    if (this.rendered) {\n      this._removeAllResources();\n      this.invalidateLayoutTree();\n    }\n\n    // Update model\n    this.resources = [];\n    this.resourceMap = {};\n    this.activityMap = {};\n    this.selectResources([]);\n    this.selectRange(new DateRange());\n  }\n\n  updateResources(resources) {\n    resources.forEach(updatedResource => {\n      let oldResource = this.resourceMap[updatedResource.id];\n      if (!oldResource) {\n        throw new Error('Update event received for non existing resource. ResourceId: ' + updatedResource.id);\n      }\n\n      // Replace old resource\n      this._initResource(updatedResource);\n      arrays.replace(this.resources, oldResource, updatedResource);\n      arrays.replace(this.selectedResources, oldResource, updatedResource);\n\n      // Replace old $resource\n      if (this.rendered && oldResource.$resource) {\n        let $updatedResource = $(this._buildResourceHtml(updatedResource));\n        oldResource.$resource.replaceWith($updatedResource);\n        $updatedResource.css('min-width', oldResource.$resource.css('min-width'));\n        this._linkResource($updatedResource, updatedResource);\n        this._linkActivitiesForResource(updatedResource);\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}