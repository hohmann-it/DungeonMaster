{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, FormField, HtmlComponent, scout, TagBarLayout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\nexport default class TagBar extends Widget {\n  constructor() {\n    super();\n    this.overflowEnabled = true;\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.overflow = null;\n    this.tags = [];\n    /**\n     * Whether or not the tag elements are clickable (even when TagBar is disabled).\n     * When the tag elements are clickable a click handler is registered and\n     * a pointer cursor appears when hovering over the element.\n     */\n    this.clickable = false;\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('tag-bar');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new TagBarLayout(this));\n    this._installTooltipSupport();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTags();\n    this._renderOverflowVisible();\n  }\n  _remove() {\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.closeOverflowPopup();\n    this._uninstallTooltipSupport();\n    super._remove();\n  }\n  setTags(tags) {\n    this.setProperty('tags', tags);\n  }\n  updateTags() {\n    if (this.rendered) {\n      this._renderTags();\n    }\n  }\n  _renderTags() {\n    let tags = arrays.ensure(this.tags);\n    this.renderTags(this.$container, tags, this.enabledComputed);\n    this.invalidateLayoutTree();\n  }\n  setClickable(clickable) {\n    this.setProperty('clickable', clickable);\n  }\n  _renderClickable() {\n    this._renderTagsClickable(this.$container.children('.tag-element'));\n    this.invalidateLayoutTree();\n  }\n  _onTagClick(event) {\n    let tag = TagBar.getTagData($(event.currentTarget));\n    this._triggerTagClick(tag);\n    return false;\n  }\n  _triggerTagClick(tag) {\n    this.trigger('tagClick', {\n      tag: tag\n    });\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this._renderTagsRemovable(this.$container.children('.tag-element'));\n    this.invalidateLayoutTree();\n  }\n  _onTagRemoveClick(event) {\n    if (this.enabledComputed) {\n      this.removeTagByElement($(event.currentTarget));\n    }\n    return false;\n  }\n  removeTagByElement($tag) {\n    let tag = TagBar.getTagData($tag);\n    if (tag) {\n      this._triggerTagRemove(tag, $tag);\n    }\n  }\n  _triggerTagRemove(tag, $tag) {\n    this.trigger('tagRemove', {\n      tag: tag,\n      $tag: $tag\n    });\n  }\n  _onOverflowIconMousedown(event) {\n    this.toggleOverflowPopup();\n    return false;\n  }\n  isOverflowIconFocused() {\n    if (!this.$overflowIcon) {\n      return false;\n    }\n    let ae = this.$container.activeElement();\n    return this.$overflowIcon.is(ae);\n  }\n  openOverflowPopup() {\n    if (this.overflow) {\n      return;\n    }\n    this.$overflowIcon.addClass('selected');\n    this.overflow = this._createOverflowPopup();\n    this.overflow.open();\n    this.overflow.one('destroy', event => {\n      if (this.$overflowIcon) {\n        this.$overflowIcon.removeClass('selected');\n      }\n      this.overflow = null;\n    });\n  }\n  _createOverflowPopup() {\n    return scout.create('TagBarOverflowPopup', {\n      parent: this,\n      closeOnAnchorMouseDown: false,\n      focusableContainer: true,\n      $anchor: this.$overflowIcon,\n      cssClass: this.cssClass\n    });\n  }\n  closeOverflowPopup() {\n    if (this.overflow) {\n      this.overflow.close();\n    }\n  }\n  toggleOverflowPopup() {\n    if (this.overflow) {\n      this.closeOverflowPopup();\n    } else {\n      this.openOverflowPopup();\n    }\n  }\n  _installTooltipSupport() {\n    tooltips.install(this.$container, {\n      parent: this,\n      selector: '.tag-text',\n      text: this._tagTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible()\n    });\n  }\n  _uninstallTooltipSupport() {\n    tooltips.uninstall(this.$container);\n  }\n  _tagTooltipText($tag) {\n    return $tag.isContentTruncated() ? $tag.text() : null;\n  }\n  _removeFocusFromTagElements() {\n    TagBar.findFocusableTagElements(this.$container).removeClass('focused').setTabbable(false);\n  }\n  focus() {\n    this.$container.addClass('focused');\n    this._removeFocusFromTagElements();\n    this.closeOverflowPopup();\n  }\n  blur() {\n    this.$container.removeClass('focused');\n\n    // when overflow popup opens it sets focus to the first tag element, this means:\n    // the input field loses focus. In that case we must prevent that the overflow popup is closed.\n    let popupRequestsFocus = this.overflow && this.overflow.$container.has(event.relatedTarget);\n    if (popupRequestsFocus) {\n      return;\n    }\n    this.closeOverflowPopup();\n  }\n  setOverflowVisible(overflowVisible) {\n    this.setProperty('overflowVisible', overflowVisible);\n  }\n  _renderOverflowVisible() {\n    if (this.overflowVisible) {\n      if (!this.$overflowIcon) {\n        this.$overflowIcon = this.$container.prependDiv('overflow-icon').on('mousedown', this._onOverflowIconMousedown.bind(this));\n      }\n    } else {\n      if (this.$overflowIcon) {\n        this.$overflowIcon.remove();\n        this.$overflowIcon = null;\n      }\n    }\n  }\n  _updateErrorStatusClasses(statusClass, hasStatus) {\n    super._updateErrorStatusClasses(statusClass, hasStatus);\n    this.$container.removeClass(FormField.SEVERITY_CSS_CLASSES);\n    this.$container.addClass(statusClass);\n  }\n\n  /**\n   * Returns the tag-texts of the tag-elements currently visible in the UI (=not hidden).\n   */\n  visibleTags() {\n    if (!this.rendered) {\n      return [];\n    }\n    let tags = [];\n    this.$container.find('.tag-element:not(.hidden)').each(function () {\n      tags.push(TagBar.getTagData($(this)));\n    });\n    return tags;\n  }\n  renderTags($parent, tags) {\n    $parent.find('.tag-element').remove();\n    tags.forEach(tagText => this.renderTag($parent, tagText));\n    let $tags = $parent.children('.tag-element');\n    this._renderTagsClickable($tags);\n    this._renderTagsRemovable($tags);\n  }\n  renderTag($parent, tagText) {\n    let $tag = $parent.appendDiv('tag-element').data('tag', tagText);\n    $tag.appendSpan('tag-text', tagText);\n    return $tag;\n  }\n  _renderTagsClickable($tags) {\n    $tags.each((i, tag) => {\n      let $tag = $(tag);\n      let $tagText = $tag.children('.tag-text');\n      let clickHandler = $tag.data('click-handler');\n      if (this.clickable) {\n        if (!clickHandler) {\n          clickHandler = this._onTagClick.bind(this);\n          $tag.data('click-handler', clickHandler);\n          $tagText.on('mousedown', clickHandler);\n        }\n      } else {\n        $tagText.off('mousedown', clickHandler);\n        $tag.removeData('click-handler');\n      }\n      $tag.toggleClass('clickable', this.clickable);\n    });\n  }\n  _renderTagsRemovable($tags) {\n    $tags.each((i, tag) => {\n      let $tag = $(tag);\n      let $tagRemove = $tag.children('.tag-remove-icon');\n      let removeHandler = $tag.data('remove-handler');\n      if (this.enabledComputed) {\n        if (!removeHandler) {\n          removeHandler = this._onTagRemoveClick.bind(this);\n          $tag.data('remove-handler', removeHandler);\n          $tag.appendSpan('tag-remove-icon').on('click', removeHandler);\n        }\n      } else {\n        $tagRemove.off('click', removeHandler);\n        $tagRemove.remove();\n        $tag.removeData('remove-handler');\n      }\n      $tag.toggleClass('removable', this.enabledComputed);\n    });\n  }\n\n  // --- static helpers ---\n\n  static findFocusedTagElement($container) {\n    return $container.find('.tag-element.focused');\n  }\n  static findFocusableTagElements($container) {\n    return $container.find('.tag-element:not(.hidden),.overflow-icon');\n  }\n  static focusFirstTagElement($container) {\n    this.focusTagElement(this.firstTagElement($container));\n  }\n  static firstTagElement($container) {\n    return $container.find('.tag-element').first();\n  }\n  static focusTagElement($tagElement) {\n    $tagElement.setTabbable(true).addClass('focused').focus();\n  }\n  static unfocusTagElement($tagElement) {\n    $tagElement.setTabbable(false).removeClass('focused');\n  }\n  static getTagData($tag) {\n    let tagData = $tag.data('tag');\n    if (tagData) {\n      return tagData;\n    }\n    return $tag.parent().data('tag');\n  }\n}","map":{"version":3,"names":["arrays","Device","FormField","HtmlComponent","scout","TagBarLayout","tooltips","Widget","$","TagBar","constructor","overflowEnabled","$overflowIcon","overflowVisible","overflow","tags","clickable","_render","$container","$parent","appendDiv","htmlComp","install","session","setLayout","_installTooltipSupport","_renderProperties","_renderTags","_renderOverflowVisible","_remove","closeOverflowPopup","_uninstallTooltipSupport","setTags","setProperty","updateTags","rendered","ensure","renderTags","enabledComputed","invalidateLayoutTree","setClickable","_renderClickable","_renderTagsClickable","children","_onTagClick","event","tag","getTagData","currentTarget","_triggerTagClick","trigger","_renderEnabled","_renderTagsRemovable","_onTagRemoveClick","removeTagByElement","$tag","_triggerTagRemove","_onOverflowIconMousedown","toggleOverflowPopup","isOverflowIconFocused","ae","activeElement","is","openOverflowPopup","addClass","_createOverflowPopup","open","one","removeClass","create","parent","closeOnAnchorMouseDown","focusableContainer","$anchor","cssClass","close","selector","text","_tagTooltipText","bind","arrowPosition","arrowPositionUnit","nativeTooltip","get","isCustomEllipsisTooltipPossible","uninstall","isContentTruncated","_removeFocusFromTagElements","findFocusableTagElements","setTabbable","focus","blur","popupRequestsFocus","has","relatedTarget","setOverflowVisible","prependDiv","on","remove","_updateErrorStatusClasses","statusClass","hasStatus","SEVERITY_CSS_CLASSES","visibleTags","find","each","push","forEach","tagText","renderTag","$tags","data","appendSpan","i","$tagText","clickHandler","off","removeData","toggleClass","$tagRemove","removeHandler","findFocusedTagElement","focusFirstTagElement","focusTagElement","firstTagElement","first","$tagElement","unfocusTagElement","tagData"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tagbar/TagBar.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, FormField, HtmlComponent, scout, TagBarLayout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TagBar extends Widget {\n\n  constructor() {\n    super();\n\n    this.overflowEnabled = true;\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.overflow = null;\n    this.tags = [];\n    /**\n     * Whether or not the tag elements are clickable (even when TagBar is disabled).\n     * When the tag elements are clickable a click handler is registered and\n     * a pointer cursor appears when hovering over the element.\n     */\n    this.clickable = false;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('tag-bar');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new TagBarLayout(this));\n    this._installTooltipSupport();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTags();\n    this._renderOverflowVisible();\n  }\n\n  _remove() {\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.closeOverflowPopup();\n    this._uninstallTooltipSupport();\n    super._remove();\n  }\n\n  setTags(tags) {\n    this.setProperty('tags', tags);\n  }\n\n  updateTags() {\n    if (this.rendered) {\n      this._renderTags();\n    }\n  }\n\n  _renderTags() {\n    let tags = arrays.ensure(this.tags);\n    this.renderTags(this.$container, tags, this.enabledComputed);\n    this.invalidateLayoutTree();\n  }\n\n  setClickable(clickable) {\n    this.setProperty('clickable', clickable);\n  }\n\n  _renderClickable() {\n    this._renderTagsClickable(this.$container.children('.tag-element'));\n    this.invalidateLayoutTree();\n  }\n\n  _onTagClick(event) {\n    let tag = TagBar.getTagData($(event.currentTarget));\n    this._triggerTagClick(tag);\n    return false;\n  }\n\n  _triggerTagClick(tag) {\n    this.trigger('tagClick', {\n      tag: tag\n    });\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._renderTagsRemovable(this.$container.children('.tag-element'));\n    this.invalidateLayoutTree();\n  }\n\n  _onTagRemoveClick(event) {\n    if (this.enabledComputed) {\n      this.removeTagByElement($(event.currentTarget));\n    }\n    return false;\n  }\n\n  removeTagByElement($tag) {\n    let tag = TagBar.getTagData($tag);\n    if (tag) {\n      this._triggerTagRemove(tag, $tag);\n    }\n  }\n\n  _triggerTagRemove(tag, $tag) {\n    this.trigger('tagRemove', {\n      tag: tag,\n      $tag: $tag\n    });\n  }\n\n  _onOverflowIconMousedown(event) {\n    this.toggleOverflowPopup();\n    return false;\n  }\n\n  isOverflowIconFocused() {\n    if (!this.$overflowIcon) {\n      return false;\n    }\n    let ae = this.$container.activeElement();\n    return this.$overflowIcon.is(ae);\n  }\n\n  openOverflowPopup() {\n    if (this.overflow) {\n      return;\n    }\n    this.$overflowIcon.addClass('selected');\n    this.overflow = this._createOverflowPopup();\n    this.overflow.open();\n    this.overflow.one('destroy', event => {\n      if (this.$overflowIcon) {\n        this.$overflowIcon.removeClass('selected');\n      }\n      this.overflow = null;\n    });\n  }\n\n  _createOverflowPopup() {\n    return scout.create('TagBarOverflowPopup', {\n      parent: this,\n      closeOnAnchorMouseDown: false,\n      focusableContainer: true,\n      $anchor: this.$overflowIcon,\n      cssClass: this.cssClass\n    });\n  }\n\n  closeOverflowPopup() {\n    if (this.overflow) {\n      this.overflow.close();\n    }\n  }\n\n  toggleOverflowPopup() {\n    if (this.overflow) {\n      this.closeOverflowPopup();\n    } else {\n      this.openOverflowPopup();\n    }\n  }\n\n  _installTooltipSupport() {\n    tooltips.install(this.$container, {\n      parent: this,\n      selector: '.tag-text',\n      text: this._tagTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible()\n    });\n  }\n\n  _uninstallTooltipSupport() {\n    tooltips.uninstall(this.$container);\n  }\n\n  _tagTooltipText($tag) {\n    return $tag.isContentTruncated() ? $tag.text() : null;\n  }\n\n  _removeFocusFromTagElements() {\n    TagBar.findFocusableTagElements(this.$container)\n      .removeClass('focused')\n      .setTabbable(false);\n  }\n\n  focus() {\n    this.$container.addClass('focused');\n    this._removeFocusFromTagElements();\n    this.closeOverflowPopup();\n  }\n\n  blur() {\n    this.$container.removeClass('focused');\n\n    // when overflow popup opens it sets focus to the first tag element, this means:\n    // the input field loses focus. In that case we must prevent that the overflow popup is closed.\n    let popupRequestsFocus = this.overflow && this.overflow.$container.has(event.relatedTarget);\n    if (popupRequestsFocus) {\n      return;\n    }\n    this.closeOverflowPopup();\n  }\n\n  setOverflowVisible(overflowVisible) {\n    this.setProperty('overflowVisible', overflowVisible);\n  }\n\n  _renderOverflowVisible() {\n    if (this.overflowVisible) {\n      if (!this.$overflowIcon) {\n        this.$overflowIcon = this.$container\n          .prependDiv('overflow-icon')\n          .on('mousedown', this._onOverflowIconMousedown.bind(this));\n      }\n    } else {\n      if (this.$overflowIcon) {\n        this.$overflowIcon.remove();\n        this.$overflowIcon = null;\n      }\n    }\n  }\n\n  _updateErrorStatusClasses(statusClass, hasStatus) {\n    super._updateErrorStatusClasses(statusClass, hasStatus);\n    this.$container.removeClass(FormField.SEVERITY_CSS_CLASSES);\n    this.$container.addClass(statusClass);\n  }\n\n  /**\n   * Returns the tag-texts of the tag-elements currently visible in the UI (=not hidden).\n   */\n  visibleTags() {\n    if (!this.rendered) {\n      return [];\n    }\n    let tags = [];\n    this.$container\n      .find('.tag-element:not(.hidden)')\n      .each(function() {\n        tags.push(TagBar.getTagData($(this)));\n      });\n    return tags;\n  }\n\n  renderTags($parent, tags) {\n    $parent.find('.tag-element').remove();\n    tags.forEach(tagText => this.renderTag($parent, tagText));\n    let $tags = $parent.children('.tag-element');\n    this._renderTagsClickable($tags);\n    this._renderTagsRemovable($tags);\n  }\n\n  renderTag($parent, tagText) {\n    let $tag = $parent\n      .appendDiv('tag-element')\n      .data('tag', tagText);\n    $tag.appendSpan('tag-text', tagText);\n    return $tag;\n  }\n\n  _renderTagsClickable($tags) {\n    $tags.each((i, tag) => {\n      let $tag = $(tag);\n      let $tagText = $tag.children('.tag-text');\n      let clickHandler = $tag.data('click-handler');\n      if (this.clickable) {\n        if (!clickHandler) {\n          clickHandler = this._onTagClick.bind(this);\n          $tag.data('click-handler', clickHandler);\n          $tagText.on('mousedown', clickHandler);\n        }\n      } else {\n        $tagText.off('mousedown', clickHandler);\n        $tag.removeData('click-handler');\n      }\n      $tag.toggleClass('clickable', this.clickable);\n    });\n  }\n\n  _renderTagsRemovable($tags) {\n    $tags.each((i, tag) => {\n      let $tag = $(tag);\n      let $tagRemove = $tag.children('.tag-remove-icon');\n      let removeHandler = $tag.data('remove-handler');\n      if (this.enabledComputed) {\n        if (!removeHandler) {\n          removeHandler = this._onTagRemoveClick.bind(this);\n          $tag.data('remove-handler', removeHandler);\n          $tag\n            .appendSpan('tag-remove-icon')\n            .on('click', removeHandler);\n        }\n      } else {\n        $tagRemove.off('click', removeHandler);\n        $tagRemove.remove();\n        $tag.removeData('remove-handler');\n      }\n      $tag.toggleClass('removable', this.enabledComputed);\n    });\n  }\n\n  // --- static helpers ---\n\n  static findFocusedTagElement($container) {\n    return $container.find('.tag-element.focused');\n  }\n\n  static findFocusableTagElements($container) {\n    return $container.find('.tag-element:not(.hidden),.overflow-icon');\n  }\n\n  static focusFirstTagElement($container) {\n    this.focusTagElement(this.firstTagElement($container));\n  }\n\n  static firstTagElement($container) {\n    return $container.find('.tag-element').first();\n  }\n\n  static focusTagElement($tagElement) {\n    $tagElement\n      .setTabbable(true)\n      .addClass('focused')\n      .focus();\n  }\n\n  static unfocusTagElement($tagElement) {\n    $tagElement\n      .setTabbable(false)\n      .removeClass('focused');\n  }\n\n  static getTagData($tag) {\n    let tagData = $tag.data('tag');\n    if (tagData) {\n      return tagData;\n    }\n    return $tag.parent().data('tag');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}