{"ast":null,"code":"import { graphics, PopupLayout } from '../index';\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class TagBarOverflowPopupLayout extends PopupLayout {\n  preferredLayoutSize($container, options) {\n    let prefSize = super.preferredLayoutSize($container, options);\n    // Use the width of the body element that uses display: inline.\n    // Only inline elements are as width as its content if the content wraps.\n    // This is the only purpose of the body.\n    prefSize.width = graphics.size(this.popup.$body, {\n      exact: true\n    }).width;\n    prefSize.width += this.popup.htmlComp.insets().horizontal();\n    return prefSize;\n  }\n}","map":{"version":3,"names":["graphics","PopupLayout","TagBarOverflowPopupLayout","preferredLayoutSize","$container","options","prefSize","width","size","popup","$body","exact","htmlComp","insets","horizontal"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tagbar/TagBarOverflowPopupLayout.js"],"sourcesContent":["import {graphics, PopupLayout} from '../index';\n/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class TagBarOverflowPopupLayout extends PopupLayout {\n\n  preferredLayoutSize($container, options) {\n    let prefSize = super.preferredLayoutSize($container, options);\n    // Use the width of the body element that uses display: inline.\n    // Only inline elements are as width as its content if the content wraps.\n    // This is the only purpose of the body.\n    prefSize.width = graphics.size(this.popup.$body, {exact: true}).width;\n    prefSize.width += this.popup.htmlComp.insets().horizontal();\n    return prefSize;\n  }\n}\n"],"mappings":"AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAO,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,yBAAyB,SAASD,WAAW,CAAC;EAEjEE,mBAAmB,CAACC,UAAU,EAAEC,OAAO,EAAE;IACvC,IAAIC,QAAQ,GAAG,KAAK,CAACH,mBAAmB,CAACC,UAAU,EAAEC,OAAO,CAAC;IAC7D;IACA;IACA;IACAC,QAAQ,CAACC,KAAK,GAAGP,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EAAE;MAACC,KAAK,EAAE;IAAI,CAAC,CAAC,CAACJ,KAAK;IACrED,QAAQ,CAACC,KAAK,IAAI,IAAI,CAACE,KAAK,CAACG,QAAQ,CAACC,MAAM,EAAE,CAACC,UAAU,EAAE;IAC3D,OAAOR,QAAQ;EACjB;AACF"},"metadata":{},"sourceType":"module"}