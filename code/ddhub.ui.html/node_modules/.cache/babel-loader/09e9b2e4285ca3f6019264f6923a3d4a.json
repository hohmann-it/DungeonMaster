{"ast":null,"code":"/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { colorSchemes, objects, strings } from '../index';\nconst ColorSchemeId = {\n  DEFAULT: 'default',\n  ALTERNATIVE: 'alternative',\n  RAINBOW: 'rainbow'\n};\n\n/**\n * Converts the given colorScheme that may be a string into an object.\n */\nexport function ensureColorScheme(colorScheme, tile) {\n  let colorSchemeObj = {};\n  if (colorScheme && typeof colorScheme === 'object') {\n    colorSchemeObj = colorScheme;\n  } else if (typeof colorScheme === 'string') {\n    // Split up colorScheme in two individual parts (\"scheme\" and \"inverted\").\n    // This information is then used when rendering the color scheme.\n    if (strings.startsWith(colorScheme, ColorSchemeId.DEFAULT)) {\n      colorSchemeObj.scheme = ColorSchemeId.DEFAULT;\n    } else if (strings.startsWith(colorScheme, ColorSchemeId.ALTERNATIVE)) {\n      colorSchemeObj.scheme = ColorSchemeId.ALTERNATIVE;\n    } else if (strings.startsWith(colorScheme, ColorSchemeId.RAINBOW)) {\n      colorSchemeObj.scheme = ColorSchemeId.RAINBOW;\n    } else {\n      colorSchemeObj.scheme = strings.removeSuffix(colorScheme, '-inverted');\n    }\n    colorSchemeObj.inverted = strings.endsWith(colorScheme, '-inverted');\n  }\n  if (!objects.isNullOrUndefined(tile)) {\n    colorSchemeObj.tile = tile;\n  }\n  return colorSchemeObj;\n}\n\n/**\n * Toggles the css classes of the given colorScheme on the given $container. Custom colorSchemes are not handled.\n *\n * @param {$} $container\n */\nexport function toggleColorSchemeClasses($container, colorScheme) {\n  if (!$container || !colorScheme) {\n    return;\n  }\n  colorScheme = ensureColorScheme(colorScheme);\n  $container.toggleClass('color-alternative', colorScheme.scheme === colorSchemes.ColorSchemeId.ALTERNATIVE);\n  $container.toggleClass('color-rainbow', colorScheme.scheme === colorSchemes.ColorSchemeId.RAINBOW);\n  $container.toggleClass('inverted', !!colorScheme.inverted);\n  $container.toggleClass('tile', !!colorScheme.tile);\n}\n\n/**\n * Get the css classes of the given colorScheme.\n */\nexport function getCssClasses(colorScheme) {\n  let cssClasses = [];\n  if (!colorScheme) {\n    return cssClasses;\n  }\n  colorScheme = ensureColorScheme(colorScheme);\n  if (colorScheme.scheme === colorSchemes.ColorSchemeId.ALTERNATIVE) {\n    cssClasses.push('color-alternative');\n  } else if (colorScheme.scheme === colorSchemes.ColorSchemeId.RAINBOW) {\n    cssClasses.push('color-rainbow');\n  } else if (colorScheme.scheme) {\n    cssClasses.push(colorScheme.scheme);\n  }\n  if (colorScheme.inverted) {\n    cssClasses.push('inverted');\n  }\n  if (colorScheme.tile) {\n    cssClasses.push('tile');\n  }\n  return cssClasses;\n}\nexport default {\n  ColorSchemeId,\n  ensureColorScheme,\n  toggleColorSchemeClasses,\n  getCssClasses\n};","map":{"version":3,"names":["colorSchemes","objects","strings","ColorSchemeId","DEFAULT","ALTERNATIVE","RAINBOW","ensureColorScheme","colorScheme","tile","colorSchemeObj","startsWith","scheme","removeSuffix","inverted","endsWith","isNullOrUndefined","toggleColorSchemeClasses","$container","toggleClass","getCssClasses","cssClasses","push"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/colorSchemes.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {colorSchemes, objects, strings} from '../index';\n\nconst ColorSchemeId = {\n  DEFAULT: 'default',\n  ALTERNATIVE: 'alternative',\n  RAINBOW: 'rainbow'\n};\n\n/**\n * Converts the given colorScheme that may be a string into an object.\n */\nexport function ensureColorScheme(colorScheme, tile) {\n  let colorSchemeObj = {};\n  if (colorScheme && typeof colorScheme === 'object') {\n    colorSchemeObj = colorScheme;\n  } else if (typeof colorScheme === 'string') {\n    // Split up colorScheme in two individual parts (\"scheme\" and \"inverted\").\n    // This information is then used when rendering the color scheme.\n    if (strings.startsWith(colorScheme, ColorSchemeId.DEFAULT)) {\n      colorSchemeObj.scheme = ColorSchemeId.DEFAULT;\n    } else if (strings.startsWith(colorScheme, ColorSchemeId.ALTERNATIVE)) {\n      colorSchemeObj.scheme = ColorSchemeId.ALTERNATIVE;\n    } else if (strings.startsWith(colorScheme, ColorSchemeId.RAINBOW)) {\n      colorSchemeObj.scheme = ColorSchemeId.RAINBOW;\n    } else {\n      colorSchemeObj.scheme = strings.removeSuffix(colorScheme, '-inverted');\n    }\n    colorSchemeObj.inverted = strings.endsWith(colorScheme, '-inverted');\n  }\n  if (!objects.isNullOrUndefined(tile)) {\n    colorSchemeObj.tile = tile;\n  }\n  return colorSchemeObj;\n}\n\n/**\n * Toggles the css classes of the given colorScheme on the given $container. Custom colorSchemes are not handled.\n *\n * @param {$} $container\n */\nexport function toggleColorSchemeClasses($container, colorScheme) {\n  if (!$container || !colorScheme) {\n    return;\n  }\n  colorScheme = ensureColorScheme(colorScheme);\n  $container.toggleClass('color-alternative', (colorScheme.scheme === colorSchemes.ColorSchemeId.ALTERNATIVE));\n  $container.toggleClass('color-rainbow', (colorScheme.scheme === colorSchemes.ColorSchemeId.RAINBOW));\n  $container.toggleClass('inverted', !!colorScheme.inverted);\n  $container.toggleClass('tile', !!colorScheme.tile);\n}\n\n/**\n * Get the css classes of the given colorScheme.\n */\nexport function getCssClasses(colorScheme) {\n  let cssClasses = [];\n  if (!colorScheme) {\n    return cssClasses;\n  }\n  colorScheme = ensureColorScheme(colorScheme);\n  if (colorScheme.scheme === colorSchemes.ColorSchemeId.ALTERNATIVE) {\n    cssClasses.push('color-alternative');\n  } else if (colorScheme.scheme === colorSchemes.ColorSchemeId.RAINBOW) {\n    cssClasses.push('color-rainbow');\n  } else if (colorScheme.scheme) {\n    cssClasses.push(colorScheme.scheme);\n  }\n  if (colorScheme.inverted) {\n    cssClasses.push('inverted');\n  }\n  if (colorScheme.tile) {\n    cssClasses.push('tile');\n  }\n  return cssClasses;\n}\n\nexport default {\n  ColorSchemeId,\n  ensureColorScheme,\n  toggleColorSchemeClasses,\n  getCssClasses\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}