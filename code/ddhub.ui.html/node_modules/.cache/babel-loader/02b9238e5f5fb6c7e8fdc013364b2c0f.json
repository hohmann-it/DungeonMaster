{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Column, lookupField, objects, ProposalChooser, scout } from '../../../index';\nexport default class TableProposalChooser extends ProposalChooser {\n  constructor() {\n    super();\n  }\n  _createModel() {\n    let headerVisible = false,\n      columns = [],\n      descriptors = this.smartField.columnDescriptors;\n    if (descriptors) {\n      descriptors.forEach(function (descriptor, index) {\n        headerVisible = headerVisible || !!descriptor.text;\n        columns.push(this._createColumnForDescriptor(descriptor));\n      }, this);\n    } else {\n      columns.push(this._createColumn());\n    }\n    let table = this._createTable(columns, headerVisible);\n    table.on('rowClick', this._onRowClick.bind(this));\n    return table;\n  }\n  _createColumn() {\n    return scout.create('Column', {\n      session: this.session,\n      width: Column.NARROW_MIN_WIDTH,\n      horizontalAlignment: this.smartField.gridData.horizontalAlignment\n    });\n  }\n  _createColumnForDescriptor(descriptor) {\n    let width = Column.NARROW_MIN_WIDTH;\n    if (descriptor.width && descriptor.width > 0) {\n      // 0 = default\n      width = descriptor.width;\n    }\n    return scout.create('Column', {\n      session: this.session,\n      text: descriptor.text,\n      cssClass: scout.nvl(descriptor.cssClass, null),\n      width: width,\n      // needs to be passed here to make sure initialWidth is also set, if set using setWidth() autoResizeColumn won't work because initialWidth would still be NARROW_MIN_WIDTH\n      autoOptimizeWidth: scout.nvl(descriptor.autoOptimizeWidth, false),\n      fixedWidth: scout.nvl(descriptor.fixedWidth, false),\n      fixedPosition: scout.nvl(descriptor.fixedPosition, false),\n      horizontalAlignment: scout.nvl(descriptor.horizontalAlignment, this.smartField.gridData.horizontalAlignment),\n      visible: scout.nvl(descriptor.visible, true),\n      htmlEnabled: scout.nvl(descriptor.htmlEnabled, false)\n    });\n  }\n  _createTable(columns, headerVisible) {\n    return scout.create('Table', {\n      parent: this,\n      headerVisible: headerVisible,\n      autoResizeColumns: true,\n      multiSelect: false,\n      multilineText: true,\n      scrollToSelection: true,\n      columns: columns,\n      headerMenusEnabled: false,\n      textFilterEnabled: false\n    });\n  }\n  _onRowClick(event) {\n    let row = event.row;\n    if (!row || !row.enabled) {\n      return;\n    }\n    this.setBusy(true);\n    this.triggerLookupRowSelected(row);\n  }\n  selectedRow() {\n    return this.model.selectedRow();\n  }\n  setLookupResult(result) {\n    let tableRows = [],\n      lookupRows = result.lookupRows,\n      multipleColumns = !!this.smartField.columnDescriptors;\n    this.model.deleteAllRows();\n    lookupRows.forEach(function (lookupRow) {\n      tableRows.push(this._createTableRow(lookupRow, multipleColumns));\n    }, this);\n    this.model.insertRows(tableRows);\n    this._selectProposal(result, tableRows);\n  }\n  trySelectCurrentValue() {\n    let currentValue = this.smartField.getValueForSelection();\n    if (objects.isNullOrUndefined(currentValue)) {\n      return;\n    }\n    let tableRow = arrays.find(this.model.rows, row => {\n      return row.lookupRow.key === currentValue;\n    });\n    if (tableRow) {\n      this.model.selectRow(tableRow);\n    }\n  }\n  selectFirstLookupRow() {\n    if (this.model.rows.length) {\n      this.model.selectRow(this.model.rows[0]);\n    }\n  }\n  clearSelection() {\n    this.model.deselectAll();\n  }\n  clearLookupRows() {\n    this.model.removeAllRows();\n  }\n\n  /**\n   * Creates a table-row for the given lookup-row.\n   *\n   * @returns {object} table-row model\n   */\n  _createTableRow(lookupRow, multipleColumns) {\n    let row = lookupField.createTableRow(lookupRow, multipleColumns);\n    if (multipleColumns) {\n      arrays.pushAll(row.cells, this._transformTableRowData(lookupRow, lookupRow.additionalTableRowData));\n    }\n    return row;\n  }\n  _renderModel() {\n    this.model.setVirtual(this.smartField.virtual());\n    super._renderModel();\n    this.model.$data.addClass('top-border-on-first-row');\n  }\n  getSelectedLookupRow() {\n    let selectedRow = this.model.selectedRow();\n    if (!selectedRow) {\n      return null;\n    }\n    return selectedRow.lookupRow;\n  }\n\n  /**\n   * Takes the TableRowData bean and the infos provided by the column descriptors to create an\n   * array of additional values in the correct order, as defined by the descriptors.\n   */\n  _transformTableRowData(lookupRow, tableRowData) {\n    let descriptors = this.smartField.columnDescriptors;\n    let cells = [];\n    descriptors.forEach(desc => {\n      cells.push(lookupField.createTableCell(lookupRow, desc, tableRowData));\n    });\n    return cells;\n  }\n}","map":{"version":3,"names":["arrays","Column","lookupField","objects","ProposalChooser","scout","TableProposalChooser","constructor","_createModel","headerVisible","columns","descriptors","smartField","columnDescriptors","forEach","descriptor","index","text","push","_createColumnForDescriptor","_createColumn","table","_createTable","on","_onRowClick","bind","create","session","width","NARROW_MIN_WIDTH","horizontalAlignment","gridData","cssClass","nvl","autoOptimizeWidth","fixedWidth","fixedPosition","visible","htmlEnabled","parent","autoResizeColumns","multiSelect","multilineText","scrollToSelection","headerMenusEnabled","textFilterEnabled","event","row","enabled","setBusy","triggerLookupRowSelected","selectedRow","model","setLookupResult","result","tableRows","lookupRows","multipleColumns","deleteAllRows","lookupRow","_createTableRow","insertRows","_selectProposal","trySelectCurrentValue","currentValue","getValueForSelection","isNullOrUndefined","tableRow","find","rows","key","selectRow","selectFirstLookupRow","length","clearSelection","deselectAll","clearLookupRows","removeAllRows","createTableRow","pushAll","cells","_transformTableRowData","additionalTableRowData","_renderModel","setVirtual","virtual","$data","addClass","getSelectedLookupRow","tableRowData","desc","createTableCell"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/smartfield/TableProposalChooser.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Column, lookupField, objects, ProposalChooser, scout} from '../../../index';\n\nexport default class TableProposalChooser extends ProposalChooser {\n\n  constructor() {\n    super();\n  }\n\n  _createModel() {\n    let headerVisible = false,\n      columns = [],\n      descriptors = this.smartField.columnDescriptors;\n\n    if (descriptors) {\n      descriptors.forEach(function(descriptor, index) {\n        headerVisible = headerVisible || !!descriptor.text;\n        columns.push(this._createColumnForDescriptor(descriptor));\n      }, this);\n    } else {\n      columns.push(this._createColumn());\n    }\n\n    let table = this._createTable(columns, headerVisible);\n    table.on('rowClick', this._onRowClick.bind(this));\n\n    return table;\n  }\n\n  _createColumn() {\n    return scout.create('Column', {\n      session: this.session,\n      width: Column.NARROW_MIN_WIDTH,\n      horizontalAlignment: this.smartField.gridData.horizontalAlignment\n    });\n  }\n\n  _createColumnForDescriptor(descriptor) {\n    let width = Column.NARROW_MIN_WIDTH;\n    if (descriptor.width && descriptor.width > 0) { // 0 = default\n      width = descriptor.width;\n    }\n    return scout.create('Column', {\n      session: this.session,\n      text: descriptor.text,\n      cssClass: scout.nvl(descriptor.cssClass, null),\n      width: width, // needs to be passed here to make sure initialWidth is also set, if set using setWidth() autoResizeColumn won't work because initialWidth would still be NARROW_MIN_WIDTH\n      autoOptimizeWidth: scout.nvl(descriptor.autoOptimizeWidth, false),\n      fixedWidth: scout.nvl(descriptor.fixedWidth, false),\n      fixedPosition: scout.nvl(descriptor.fixedPosition, false),\n      horizontalAlignment: scout.nvl(descriptor.horizontalAlignment, this.smartField.gridData.horizontalAlignment),\n      visible: scout.nvl(descriptor.visible, true),\n      htmlEnabled: scout.nvl(descriptor.htmlEnabled, false)\n    });\n  }\n\n  _createTable(columns, headerVisible) {\n    return scout.create('Table', {\n      parent: this,\n      headerVisible: headerVisible,\n      autoResizeColumns: true,\n      multiSelect: false,\n      multilineText: true,\n      scrollToSelection: true,\n      columns: columns,\n      headerMenusEnabled: false,\n      textFilterEnabled: false\n    });\n  }\n\n  _onRowClick(event) {\n    let row = event.row;\n    if (!row || !row.enabled) {\n      return;\n    }\n    this.setBusy(true);\n    this.triggerLookupRowSelected(row);\n  }\n\n  selectedRow() {\n    return this.model.selectedRow();\n  }\n\n  setLookupResult(result) {\n    let\n      tableRows = [],\n      lookupRows = result.lookupRows,\n      multipleColumns = !!this.smartField.columnDescriptors;\n\n    this.model.deleteAllRows();\n    lookupRows.forEach(function(lookupRow) {\n      tableRows.push(this._createTableRow(lookupRow, multipleColumns));\n    }, this);\n    this.model.insertRows(tableRows);\n\n    this._selectProposal(result, tableRows);\n  }\n\n  trySelectCurrentValue() {\n    let currentValue = this.smartField.getValueForSelection();\n    if (objects.isNullOrUndefined(currentValue)) {\n      return;\n    }\n    let tableRow = arrays.find(this.model.rows, row => {\n      return row.lookupRow.key === currentValue;\n    });\n    if (tableRow) {\n      this.model.selectRow(tableRow);\n    }\n  }\n\n  selectFirstLookupRow() {\n    if (this.model.rows.length) {\n      this.model.selectRow(this.model.rows[0]);\n    }\n  }\n\n  clearSelection() {\n    this.model.deselectAll();\n  }\n\n  clearLookupRows() {\n    this.model.removeAllRows();\n  }\n\n  /**\n   * Creates a table-row for the given lookup-row.\n   *\n   * @returns {object} table-row model\n   */\n  _createTableRow(lookupRow, multipleColumns) {\n    let row = lookupField.createTableRow(lookupRow, multipleColumns);\n    if (multipleColumns) {\n      arrays.pushAll(row.cells, this._transformTableRowData(lookupRow, lookupRow.additionalTableRowData));\n    }\n    return row;\n  }\n\n  _renderModel() {\n    this.model.setVirtual(this.smartField.virtual());\n    super._renderModel();\n    this.model.$data.addClass('top-border-on-first-row');\n  }\n\n  getSelectedLookupRow() {\n    let selectedRow = this.model.selectedRow();\n    if (!selectedRow) {\n      return null;\n    }\n    return selectedRow.lookupRow;\n  }\n\n  /**\n   * Takes the TableRowData bean and the infos provided by the column descriptors to create an\n   * array of additional values in the correct order, as defined by the descriptors.\n   */\n  _transformTableRowData(lookupRow, tableRowData) {\n    let descriptors = this.smartField.columnDescriptors;\n    let cells = [];\n    descriptors.forEach(desc => {\n      cells.push(lookupField.createTableCell(lookupRow, desc, tableRowData));\n    });\n    return cells;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}