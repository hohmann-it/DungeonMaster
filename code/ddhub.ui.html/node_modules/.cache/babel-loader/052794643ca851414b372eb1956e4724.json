{"ast":null,"code":"/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * JavaScript port from java.awt.Dimension.\n * @param {number|Dimension} vararg width (number) or otherDimension (Dimension)\n * @param {number} [height] number or undefined (when vararg is Dimension)\n */\nexport default class Dimension {\n  constructor(vararg, height) {\n    if (vararg instanceof Dimension) {\n      this.width = vararg.width;\n      this.height = vararg.height;\n    } else {\n      this.width = vararg || 0;\n      this.height = height || 0;\n    }\n  }\n  toString() {\n    return 'Dimension[width=' + this.width + ' height=' + this.height + ']';\n  }\n  equals(o) {\n    if (!o) {\n      return false;\n    }\n    return this.width === o.width && this.height === o.height;\n  }\n  clone() {\n    return new Dimension(this.width, this.height);\n  }\n  subtract(insets) {\n    return new Dimension(this.width - insets.horizontal(), this.height - insets.vertical());\n  }\n  add(insets) {\n    return new Dimension(this.width + insets.horizontal(), this.height + insets.vertical());\n  }\n  floor() {\n    return new Dimension(Math.floor(this.width), Math.floor(this.height));\n  }\n  ceil() {\n    return new Dimension(Math.ceil(this.width), Math.ceil(this.height));\n  }\n}","map":{"version":3,"names":["Dimension","constructor","vararg","height","width","toString","equals","o","clone","subtract","insets","horizontal","vertical","add","floor","Math","ceil"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/Dimension.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * JavaScript port from java.awt.Dimension.\n * @param {number|Dimension} vararg width (number) or otherDimension (Dimension)\n * @param {number} [height] number or undefined (when vararg is Dimension)\n */\nexport default class Dimension {\n\n  constructor(vararg, height) {\n    if (vararg instanceof Dimension) {\n      this.width = vararg.width;\n      this.height = vararg.height;\n    } else {\n      this.width = vararg || 0;\n      this.height = height || 0;\n    }\n  }\n\n  toString() {\n    return 'Dimension[width=' + this.width + ' height=' + this.height + ']';\n  }\n\n  equals(o) {\n    if (!o) {\n      return false;\n    }\n    return (this.width === o.width && this.height === o.height);\n  }\n\n  clone() {\n    return new Dimension(this.width, this.height);\n  }\n\n  subtract(insets) {\n    return new Dimension(\n      this.width - insets.horizontal(),\n      this.height - insets.vertical());\n  }\n\n  add(insets) {\n    return new Dimension(\n      this.width + insets.horizontal(),\n      this.height + insets.vertical());\n  }\n\n  floor() {\n    return new Dimension(Math.floor(this.width), Math.floor(this.height));\n  }\n\n  ceil() {\n    return new Dimension(Math.ceil(this.width), Math.ceil(this.height));\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,SAAS,CAAC;EAE7BC,WAAW,CAACC,MAAM,EAAEC,MAAM,EAAE;IAC1B,IAAID,MAAM,YAAYF,SAAS,EAAE;MAC/B,IAAI,CAACI,KAAK,GAAGF,MAAM,CAACE,KAAK;MACzB,IAAI,CAACD,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC7B,CAAC,MAAM;MACL,IAAI,CAACC,KAAK,GAAGF,MAAM,IAAI,CAAC;MACxB,IAAI,CAACC,MAAM,GAAGA,MAAM,IAAI,CAAC;IAC3B;EACF;EAEAE,QAAQ,GAAG;IACT,OAAO,kBAAkB,GAAG,IAAI,CAACD,KAAK,GAAG,UAAU,GAAG,IAAI,CAACD,MAAM,GAAG,GAAG;EACzE;EAEAG,MAAM,CAACC,CAAC,EAAE;IACR,IAAI,CAACA,CAAC,EAAE;MACN,OAAO,KAAK;IACd;IACA,OAAQ,IAAI,CAACH,KAAK,KAAKG,CAAC,CAACH,KAAK,IAAI,IAAI,CAACD,MAAM,KAAKI,CAAC,CAACJ,MAAM;EAC5D;EAEAK,KAAK,GAAG;IACN,OAAO,IAAIR,SAAS,CAAC,IAAI,CAACI,KAAK,EAAE,IAAI,CAACD,MAAM,CAAC;EAC/C;EAEAM,QAAQ,CAACC,MAAM,EAAE;IACf,OAAO,IAAIV,SAAS,CAClB,IAAI,CAACI,KAAK,GAAGM,MAAM,CAACC,UAAU,EAAE,EAChC,IAAI,CAACR,MAAM,GAAGO,MAAM,CAACE,QAAQ,EAAE,CAAC;EACpC;EAEAC,GAAG,CAACH,MAAM,EAAE;IACV,OAAO,IAAIV,SAAS,CAClB,IAAI,CAACI,KAAK,GAAGM,MAAM,CAACC,UAAU,EAAE,EAChC,IAAI,CAACR,MAAM,GAAGO,MAAM,CAACE,QAAQ,EAAE,CAAC;EACpC;EAEAE,KAAK,GAAG;IACN,OAAO,IAAId,SAAS,CAACe,IAAI,CAACD,KAAK,CAAC,IAAI,CAACV,KAAK,CAAC,EAAEW,IAAI,CAACD,KAAK,CAAC,IAAI,CAACX,MAAM,CAAC,CAAC;EACvE;EAEAa,IAAI,GAAG;IACL,OAAO,IAAIhB,SAAS,CAACe,IAAI,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAAC,EAAEW,IAAI,CAACC,IAAI,CAAC,IAAI,CAACb,MAAM,CAAC,CAAC;EACrE;AACF"},"metadata":{},"sourceType":"module"}