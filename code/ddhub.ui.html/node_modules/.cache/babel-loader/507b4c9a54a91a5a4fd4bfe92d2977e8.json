{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Column, ColumnUserFilter, Device, graphics, GroupBoxMenuItemsOrder, inspector, MenuBar, MenuDestinations, objects, scout, scrollbars, strings, styles, Table, tooltips, Widget } from '../index';\nimport $ from 'jquery';\nexport default class TableHeader extends Widget {\n  constructor() {\n    super();\n    this.dragging = false;\n    this.headerMenusEnabled = true;\n    this.table = null;\n    this._tableDataScrollHandler = this._onTableDataScroll.bind(this);\n    this._tableAddFilterRemovedHandler = this._onTableAddFilterRemoved.bind(this);\n    this._tableColumnResizedHandler = this._onTableColumnResized.bind(this);\n    this._tableColumnMovedHandler = this._onTableColumnMoved.bind(this);\n    this._renderedColumns = [];\n  }\n  _init(options) {\n    super._init(options);\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      tabbable: false,\n      position: MenuBar.Position.BOTTOM,\n      menuOrder: new GroupBoxMenuItemsOrder()\n    });\n    this.menuBar.on('propertyChange', this._onMenuBarPropertyChange.bind(this));\n    this.updateMenuBar();\n  }\n  _render() {\n    this.$container = this.table.$data.beforeDiv('table-header').cssBorderLeftWidth(this.table.rowBorders.left || '');\n\n    // Filler is necessary to make sure the header is always as large as the table data, otherwise horizontal scrolling does not work correctly\n    this.$filler = this.$container.appendDiv('table-header-item filler').css('visibility', 'hidden');\n\n    // Required to make \"height: 100%\" rule work. menuBarContainer and menuBar itself must have the same visibility.\n    // Otherwise they could cover the sorting/filter icons on the table-header of the column.\n    this.$menuBarContainer = this.$container.appendDiv('menubar-container').setVisible(this.menuBar.visible);\n    this.menuBar.render(this.$menuBarContainer);\n    this._$window = this.$container.window();\n    this._$body = this.$container.body();\n    this._renderColumns();\n    this.table.$data.on('scroll', this._tableDataScrollHandler);\n    this.table.on('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.on('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.on('columnResized', this._tableColumnResizedHandler);\n    this.table.on('columnMoved', this._tableColumnMovedHandler);\n  }\n  _remove() {\n    this.table.$data.off('scroll', this._tableDataScrollHandler);\n    this.table.off('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.off('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.off('columnResized', this._tableColumnResizedHandler);\n    this.table.off('columnMoved', this._tableColumnMovedHandler);\n    this._removeColumns();\n    super._remove();\n  }\n  rerenderColumns() {\n    this._removeColumns();\n    this._renderColumns();\n  }\n  _renderColumns() {\n    let visibleColumns = this._visibleColumns();\n    visibleColumns.forEach(this._renderColumn, this);\n    if (visibleColumns.length === 0) {\n      // If there are no columns, make the filler visible and make sure the header is as large as normally using nbsp\n      this.$filler.css('visibility', 'visible').html('&nbsp;').addClass('empty');\n    }\n    this._reconcileScrollPos();\n  }\n  _renderColumn(column, index) {\n    let columnWidth = column._realWidthIfAvailable(),\n      visibleColumns = this._visibleColumns(),\n      isFirstColumn = index === 0,\n      isLastColumn = index === visibleColumns.length - 1;\n    let $header = this.$filler.beforeDiv('table-header-item').setEnabled(this.enabled) // enabledComputed not used on purpose\n    .data('column', column);\n    let margins = graphics.margins($header);\n    columnWidth -= margins.horizontal();\n    $header.cssMinWidth(columnWidth).cssMaxWidth(columnWidth);\n    $header.appendSpan('table-header-item-text');\n    if (this.enabled) {\n      // enabledComputed not used on purpose\n      $header.on('click', this._onHeaderItemClick.bind(this)).on('mousedown', this._onHeaderItemMouseDown.bind(this));\n    }\n    if (this.session.inspector) {\n      inspector.applyInfo(column, $header);\n    }\n    if (isFirstColumn) {\n      $header.addClass('first');\n    }\n    if (isLastColumn) {\n      $header.addClass('last');\n    }\n    column.$header = $header;\n    this._installHeaderItemTooltip(column);\n    this._decorateHeader(column);\n    let showSeparator = column.showSeparator;\n    if (isLastColumn && !this.enabled) {\n      // enabledComputed not used on purpose\n      showSeparator = false;\n    }\n    if (showSeparator) {\n      let $separator = this.$filler.beforeDiv('table-header-resize');\n      if (column.fixedWidth || !this.enabled) {\n        // enabledComputed not used on purpose\n        $separator.setEnabled(false);\n      } else {\n        $separator.on('mousedown', '', this._onSeparatorMouseDown.bind(this)).on('dblclick', this._onSeparatorDblclick.bind(this));\n      }\n      column.$separator = $separator;\n    }\n    this._renderedColumns.push(column);\n  }\n  _removeColumns() {\n    this._renderedColumns.slice().forEach(this._removeColumn, this);\n  }\n  _removeColumn(column) {\n    if (column.$header) {\n      column.$header.remove();\n      column.$header = null;\n    }\n    if (column.$separator) {\n      column.$separator.remove();\n      column.$separator = null;\n    }\n    arrays.remove(this._renderedColumns, column);\n  }\n  resizeHeaderItem(column) {\n    if (!column) {\n      // May be undefined if there are no columns\n      return;\n    }\n    if (!column.$header) {\n      // May be undefined if called when header item is not rendered yet (may caused by _adjustColumnMinWidth)\n      return;\n    }\n    let remainingHeaderSpace,\n      adjustment,\n      $header = column.$header,\n      columnWidth = column._realWidthIfAvailable(),\n      margins = graphics.margins($header),\n      menuBarWidth = this.menuBar.visible ? this.$menuBarContainer.outerWidth(true) : 0,\n      visibleColumns = this._visibleColumns(),\n      visibleColumnIndex = visibleColumns.indexOf(column),\n      isLastColumn = visibleColumnIndex === visibleColumns.length - 1;\n    columnWidth -= margins.horizontal();\n    if (isLastColumn && menuBarWidth > 0) {\n      remainingHeaderSpace = this.$container.width() - this.table.rowWidth + graphics.insets(this.$container).right;\n      if (remainingHeaderSpace < menuBarWidth) {\n        adjustment = menuBarWidth;\n        if (column.$separator) {\n          adjustment += column.$separator.width();\n        }\n        if (remainingHeaderSpace > 0) {\n          adjustment -= remainingHeaderSpace;\n        }\n        let origColumnWidth = columnWidth;\n        columnWidth = Math.max(columnWidth - adjustment, column.minWidth);\n        this.$filler.cssWidth(origColumnWidth - columnWidth);\n      }\n    }\n    $header.cssMinWidth(columnWidth).cssMaxWidth(columnWidth);\n  }\n\n  /**\n   * Resizes all header items to theirs desired widths.\n   */\n  resizeHeaderItems() {\n    this._visibleColumns().forEach(this.resizeHeaderItem.bind(this));\n  }\n  _reconcileScrollPos() {\n    // When scrolling horizontally scroll header as well\n    let scrollLeft = this.table.get$Scrollable().scrollLeft(),\n      lastColumn = this._lastVisibleColumn();\n    this.resizeHeaderItem(lastColumn);\n    this.$container.scrollLeft(scrollLeft);\n    this.$menuBarContainer.cssRight(-1 * scrollLeft);\n  }\n  _arrangeHeaderItems($headers) {\n    let that = this;\n    $headers.each(function () {\n      // move to old position and then animate\n      $(this).css('left', $(this).data('old-pos') - $(this).offset().left).animate({\n        left: 0\n      }, {\n        progress: function (animation, progress, remainingMs) {\n          let $headerItem = $(this);\n          if (!$headerItem.isSelected()) {\n            return;\n          }\n          // make sure selected header item is visible\n          scrollbars.scrollHorizontalTo(that.table.$data, $headerItem);\n\n          // move menu\n          if (that.tableHeaderMenu && that.tableHeaderMenu.rendered) {\n            that.tableHeaderMenu.position();\n          }\n        }\n      });\n    });\n  }\n  _installHeaderItemTooltip(column) {\n    tooltips.install(column.$header, {\n      parent: this,\n      text: this._headerItemTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible(),\n      htmlEnabled: this._headerItemTooltipHtmlEnabled.bind(this)\n    });\n  }\n  _installHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._installHeaderItemTooltip, this);\n  }\n  _uninstallHeaderItemTooltip(column) {\n    tooltips.uninstall(column.$header);\n  }\n  _uninstallHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._uninstallHeaderItemTooltip, this);\n  }\n  _headerItemTooltipText($col) {\n    let column = $col.data('column');\n    if (column && strings.hasText(column.headerTooltipText)) {\n      return column.headerTooltipText;\n    }\n    let $text = $col.children('.table-header-item-text');\n    if ($text.isContentTruncated() || $col.width() + $col.position().left > $col.parent().width()) {\n      let text = strings.plainText($text.html(), {\n        trim: true\n      });\n      if (strings.hasText(text)) {\n        return text;\n      }\n    }\n    return null;\n  }\n  _headerItemTooltipHtmlEnabled($col) {\n    let column = $col.data('column');\n    return column.headerTooltipHtmlEnabled;\n  }\n  setHeaderMenusEnabled(headerMenusEnabled) {\n    this.setProperty('headerMenusEnabled', headerMenusEnabled);\n  }\n  _renderHeaderMenusEnabled() {\n    this._visibleColumns().forEach(function (column) {\n      this._decorateHeader(column);\n    }, this);\n  }\n  openHeaderMenu(column) {\n    if (this.tableHeaderMenu) {\n      // Make sure existing header menu is closed first\n      this.closeHeaderMenu();\n    }\n    this.tableHeaderMenu = column.createTableHeaderMenu(this);\n    this.tableHeaderMenu.open();\n\n    // Trigger events on column to make it possible to react to the opening of the menu\n    column.trigger('headerMenuOpen', {\n      menu: this.tableHeaderMenu\n    });\n    this.tableHeaderMenu.one('destroy', () => {\n      column.trigger('headerMenuClose', {\n        menu: this.tableHeaderMenu\n      });\n    });\n  }\n  closeHeaderMenu() {\n    this.tableHeaderMenu.destroy();\n    this.tableHeaderMenu = null;\n  }\n  onColumnActionsChanged(event) {\n    if (this.tableHeaderMenu) {\n      this.tableHeaderMenu.onColumnActionsChanged(event);\n    }\n  }\n  findHeaderItems() {\n    return this.$container.find('.table-header-item:not(.filler)');\n  }\n\n  /**\n   * Updates the column headers visualization of the text, sorting and styling state\n   * @param [oldColumnState] only necessary when the css class was updated\n   */\n  updateHeader(column, oldColumnState) {\n    if (!column.isVisible()) {\n      return;\n    }\n    this._decorateHeader(column, oldColumnState);\n  }\n  _decorateHeader(column, oldColumnState) {\n    this._renderColumnCssClass(column, oldColumnState);\n    this._renderColumnText(column);\n    this._renderColumnIconId(column);\n    this._renderColumnState(column);\n    this._renderColumnLegacyStyle(column);\n    this._renderColumnHeaderMenuEnabled(column);\n    this._renderColumnHorizontalAlignment(column);\n  }\n  _renderColumnCssClass(column, oldColumnState) {\n    let $header = column.$header;\n    if (oldColumnState) {\n      $header.removeClass(oldColumnState.headerCssClass);\n    }\n    $header.addClass(column.headerCssClass);\n  }\n  _renderColumnText(column) {\n    let text = column.text,\n      $header = column.$header,\n      $headerText = $header.children('.table-header-item-text');\n    if (!column.headerHtmlEnabled) {\n      text = strings.nl2br(text);\n    }\n    // Make sure empty header is as height as the others to make it properly clickable\n    $headerText.htmlOrNbsp(text, 'empty');\n    this._updateColumnIconAndTextStyle(column);\n  }\n  _renderColumnIconId(column) {\n    column.$header.icon(column.headerIconId);\n    this._updateColumnIconAndTextStyle(column);\n  }\n  _renderColumnHorizontalAlignment(column) {\n    column.$header.removeClass('halign-left halign-center halign-right');\n    column.$header.addClass('halign-' + Table.parseHorizontalAlignment(column.horizontalAlignment));\n  }\n  _updateColumnIconAndTextStyle(column) {\n    let $icon = column.$header.data('$icon'),\n      $text = column.$header.children('.table-header-item-text');\n    if ($icon) {\n      $icon.toggleClass('with-text', !!column.text);\n    }\n    // Make text invisible if there is an icon but no text\n    $text.setVisible(!($icon && $text.html() === '&nbsp;'));\n    // Mark icon-only columns to prevent ellipsis (like IconColumn.js does for table cells)\n    column.$header.toggleClass('table-header-item-icon-only', !!(column.headerIconId && !column.text));\n  }\n  _renderColumnLegacyStyle(column) {\n    styles.legacyStyle(column, column.$header, 'header');\n  }\n  _renderColumnHeaderMenuEnabled(column) {\n    column.$header.toggleClass('disabled', !this._isHeaderMenuEnabled(column) || !this.enabled); // enabledComputed not used on purpose\n  }\n\n  _renderColumnState(column) {\n    let sortDirection,\n      $state,\n      $header = column.$header,\n      filtered = this.table.getFilter(column.id);\n    $header.children('.table-header-item-state').remove();\n    $state = $header.appendSpan('table-header-item-state');\n    $state.empty();\n    $header.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n    $state.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n    if (column.sortActive) {\n      sortDirection = column.sortAscending ? 'asc' : 'desc';\n      if (column.grouped) {\n        $header.addClass('group-' + sortDirection);\n      }\n      $header.addClass('sorted sort-' + sortDirection);\n      $state.addClass('sorted sort-' + sortDirection);\n    }\n    if (column.grouped || filtered) {\n      // contains group and filter symbols\n      let $left = $state.appendDiv('left');\n      if (column.grouped) {\n        $header.addClass('grouped');\n        $state.addClass('grouped');\n        $left.appendDiv().text('G');\n      }\n      if (filtered) {\n        $header.addClass('filtered');\n        $state.addClass('filtered');\n        $left.appendDiv().text('F');\n      }\n    }\n    // Contains sort arrow\n    $state.appendDiv('right');\n    this._adjustColumnMinWidth(column);\n  }\n\n  /**\n   * Makes sure state is fully visible by adjusting width (happens if column.minWidth is < DEFAULT_MIN_WIDTH)\n   */\n  _adjustColumnMinWidth(column) {\n    let filtered = this.table.getFilter(column.id);\n    if (column.sortActive || column.grouped || filtered) {\n      if (column.minWidth < Column.DEFAULT_MIN_WIDTH) {\n        column.__minWidthWithoutState = column.minWidth;\n        column.__widthWithoutState = column.width;\n        column.minWidth = Column.DEFAULT_MIN_WIDTH;\n      }\n      if (column.width < column.minWidth) {\n        this.table.resizeColumn(column, column.minWidth);\n      }\n    } else {\n      // Reset to previous min width if no state is visible\n      if (!objects.isNullOrUndefined(column.__minWidthWithoutState)) {\n        column.minWidth = column.__minWidthWithoutState;\n        // Resize to previous min width, assuming user has not manually changed the size because column is still as width as default_min_width\n        if (column.width === Column.DEFAULT_MIN_WIDTH) {\n          this.table.resizeColumn(column, column.__widthWithoutState);\n        }\n        column.__minWidthWithoutState = null;\n        column.__widthWithoutState = null;\n      }\n    }\n  }\n  updateMenuBar() {\n    let menuItems = this.table._filterMenus(this.table.menus, MenuDestinations.HEADER);\n    this.menuBar.setHiddenByUi(!this.enabled); // enabledComputed not used on purpose\n    this.menuBar.setMenuItems(menuItems);\n  }\n  _onTableColumnResized(event) {\n    let column = event.column,\n      lastColumn = this._lastVisibleColumn();\n    this.resizeHeaderItem(column);\n    if (lastColumn !== column) {\n      this.resizeHeaderItem(lastColumn);\n    }\n  }\n  onSortingChanged() {\n    this._visibleColumns().forEach(this._renderColumnState, this);\n  }\n  _onTableColumnMoved(event) {\n    let column = event.column,\n      oldPos = event.oldPos,\n      newPos = event.newPos,\n      $header = column.$header,\n      $headers = this.findHeaderItems(),\n      $moveHeader = $headers.eq(oldPos),\n      $moveResize = $moveHeader.next('.table-header-resize'),\n      visibleColumns = this._visibleColumns(),\n      lastColumnPos = visibleColumns.length - 1;\n\n    // store old position of header\n    $headers.each(function () {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    if (newPos < oldPos) {\n      $headers.eq(newPos).before($moveHeader);\n    } else {\n      $headers.eq(newPos).after($moveHeader);\n      $moveHeader.before($moveHeader.next('.table-header-resize'));\n    }\n    // The resizer belongs to a column which is especially relevant for fixed width columns where resizer is disabled -> ensure it is always positioned after the header\n    $moveHeader.after($moveResize);\n\n    // Update first/last markers\n    if ($headers.length > 0) {\n      $headers.eq(0).removeClass('first');\n      $headers.eq($headers.length - 1).removeClass('last');\n    }\n    if (visibleColumns.length > 0) {\n      visibleColumns[0].$header.addClass('first');\n      visibleColumns[lastColumnPos].$header.addClass('last');\n    }\n\n    // Update header size due to header menu items if moved from or to last position\n    if (oldPos === lastColumnPos || newPos === lastColumnPos) {\n      visibleColumns.forEach(column => {\n        this.resizeHeaderItem(column);\n      });\n    }\n\n    // move to old position and then animate\n    if (event.dragged) {\n      $header.css('left', parseInt($header.css('left'), 0) + $header.data('old-pos') - $header.offset().left).addClass('releasing').animateAVCSD('left', 0, () => $header.removeClass('releasing'));\n    } else {\n      this._arrangeHeaderItems($headers);\n    }\n  }\n  _visibleColumns() {\n    return this.table.visibleColumns();\n  }\n  _lastVisibleColumn() {\n    return arrays.last(this._visibleColumns());\n  }\n  onOrderChanged(oldColumnOrder) {\n    let $header, $headerResize;\n    let $headers = this.findHeaderItems();\n\n    // store old position of headers\n    $headers.each(function () {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    this._visibleColumns().forEach(function (column) {\n      $header = column.$header;\n      $headerResize = $header.next('.table-header-resize');\n      this.$container.append($header);\n      this.$container.append($headerResize);\n    }, this);\n\n    // ensure filler is at the end\n    this.$container.append(this.$filler);\n    this._arrangeHeaderItems($headers);\n  }\n\n  /**\n   * Header menus are enabled when property is enabled on the header itself and on the column too.\n   */\n  _isHeaderMenuEnabled(column) {\n    return !!(column.headerMenuEnabled && this.headerMenusEnabled);\n  }\n  _onHeaderItemClick(event) {\n    let $headerItem = $(event.currentTarget),\n      column = $headerItem.data('column');\n    if (this.dragging || this.columnMoved) {\n      this.dragging = false;\n      this.columnMoved = false;\n    } else if (this.table.sortEnabled && (event.shiftKey || event.ctrlKey || !this._isHeaderMenuEnabled(column))) {\n      this.table.removeColumnGrouping();\n      this.table.sort(column, $headerItem.hasClass('sort-asc') ? 'desc' : 'asc', event.shiftKey);\n    } else if (this.tableHeaderMenu && this.tableHeaderMenu.isOpenFor($headerItem)) {\n      this.closeHeaderMenu();\n    } else if (this._isHeaderMenuEnabled(column)) {\n      this.openHeaderMenu(column);\n    }\n    return false;\n  }\n  _onHeaderItemMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    let diff = 0,\n      that = this,\n      startX = Math.floor(event.pageX),\n      $header = $(event.currentTarget),\n      column = $header.data('column'),\n      oldPos = this._visibleColumns().indexOf(column),\n      newPos = oldPos,\n      move = $header.outerWidth(),\n      $otherHeaders = $header.siblings('.table-header-item:not(.filler)');\n    if (column.fixedPosition) {\n      // Don't allow moving a column with fixed position\n      return;\n    }\n    this.dragging = false;\n    // firefox fires a click action after a column has been droped at the new location, chrome doesn't -> we need a hint to avoid menu gets opened after drop\n    this.columnMoved = false;\n\n    // start drag & drop events\n    this._$window.on('mousemove.tableheader', '', dragMove).one('mouseup', '', dragEnd);\n    function dragMove(event) {\n      diff = Math.floor(event.pageX) - startX;\n      if (-2 < diff && diff < 2) {\n        // Don't move if it was no movement or just a very small one\n        return;\n      }\n      that.dragging = true;\n\n      // change css of dragged header\n      $header.addClass('moving');\n      that.$container && that.$container.addClass('moving');\n\n      // move dragged header\n      $header.css('left', diff);\n\n      // find other affected headers\n      let middle = realMiddle($header);\n      $otherHeaders.each(function (i) {\n        let $otherHeader = $(this);\n        let m = realMiddle($otherHeader);\n        if (middle < m && i < oldPos) {\n          $otherHeader.css('left', move);\n        } else if (middle > m && i >= oldPos) {\n          $otherHeader.css('left', -move);\n        } else {\n          $otherHeader.css('left', 0);\n        }\n      });\n      if (that.tableHeaderMenu) {\n        that.tableHeaderMenu.destroy();\n        that.tableHeaderMenu = null;\n      }\n\n      // Don't show tooltips while dragging\n      that.rendered && that._uninstallHeaderItemTooltips();\n    }\n    function realWidth($div) {\n      let html = $div.html(),\n        width = $div.html('<span>' + html + '</span>').find('span:first').width();\n      $div.html(html);\n      return width;\n    }\n\n    /**\n     * @return {number} the middle of the text (not the middle of the whole header item)\n     */\n    function realMiddle($div) {\n      if ($div.hasClass('halign-right')) {\n        return $div.offset().left + $div.outerWidth() - realWidth($div) / 2;\n      }\n      return $div.offset().left + realWidth($div) / 2;\n    }\n    function dragEnd(event) {\n      that._$window && that._$window.off('mousemove.tableheader');\n\n      // in case of no movement: return\n      if (!that.dragging) {\n        return true;\n      }\n\n      // find new position of dragged header\n      let h = diff < 0 ? $otherHeaders : $($otherHeaders.get().reverse());\n      h.each(function (i) {\n        if ($(this).css('left') !== '0px') {\n          newPos = that._visibleColumns().indexOf($(this).data('column'));\n          return false;\n        }\n      });\n\n      // move column\n      if (newPos > -1 && oldPos !== newPos) {\n        that.table.moveColumn($header.data('column'), oldPos, newPos, true);\n        that.dragging = false;\n        that.columnMoved = true;\n      } else {\n        $header.addClass('releasing');\n        $header.animateAVCSD('left', '', () => {\n          that.dragging = false;\n          $header.removeClass('releasing');\n        });\n      }\n\n      // reset css of dragged header\n      $otherHeaders.each(function () {\n        $(this).css('left', '');\n      });\n      $header.removeClass('moving');\n      that.$container && that.$container.removeClass('moving');\n\n      // Reinstall tooltips\n      that.rendered && that._installHeaderItemTooltips();\n    }\n  }\n  _onSeparatorDblclick(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    if (event.shiftKey) {\n      // Optimize all columns\n      this._visibleColumns().forEach(function (column) {\n        this.table.resizeToFit(column);\n      }, this);\n    } else {\n      // Optimize the column left of the separator\n      let $header = $(event.target).prev(),\n        column = $header.data('column');\n      this.table.resizeToFit(column);\n    }\n  }\n  _onSeparatorMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    let startX = Math.floor(event.pageX),\n      $header = $(event.target).prev(),\n      column = $header.data('column'),\n      that = this,\n      headerWidth = column.width;\n\n    // Install resize helpers. Those helpers make sure the header and the data element keep their\n    // current width until the resizing has finished. Otherwise, make a column smaller while the\n    // table has been horizontally scrolled to the right would behave very strange.\n    let $headerColumnResizedHelper = this.$container.appendDiv('table-column-resize-helper').css('width', this.table.rowWidth + this.table.rowBorders.horizontal());\n    let $dataColumnResizedHelper = this.table.$data.appendDiv('table-column-resize-helper').css('width', this.table.rowWidth);\n    this._$window.on('mousemove.tableheader', resizeMove).one('mouseup', resizeEnd);\n    this._$body.addClass('col-resize');\n\n    // Prevent text selection in a form, don't stop propagation to allow others (e.g. cell editor) to react\n    event.preventDefault();\n    function resizeMove(event) {\n      let diff = Math.floor(event.pageX) - startX,\n        wHeader = headerWidth + diff;\n      wHeader = Math.max(wHeader, column.minWidth);\n      if (that.rendered && wHeader !== column.width) {\n        that.table.resizeColumn(column, wHeader);\n      }\n    }\n    function resizeEnd(event) {\n      // Remove resize helpers\n      $headerColumnResizedHelper.remove();\n      $dataColumnResizedHelper.remove();\n      that._$window && that._$window.off('mousemove.tableheader');\n      that._$body && that._$body.removeClass('col-resize');\n      if (that.table.rendered && column.width !== headerWidth) {\n        that.table.resizeColumn(column, column.width);\n      }\n    }\n  }\n  _onTableDataScroll() {\n    scrollbars.fix(this.$menuBarContainer);\n    this._reconcileScrollPos();\n    this._fixTimeout = scrollbars.unfix(this.$menuBarContainer, this._fixTimeout);\n  }\n  _onMenuBarPropertyChange(event) {\n    if (this.rendered && event.propertyName === 'visible') {\n      this.$menuBarContainer.setVisible(event.newValue);\n    }\n  }\n  _onTableAddFilterRemoved(event) {\n    let column = event.filter.column;\n    // Check for column.$header because column may have been removed in the mean time due to a structure changed event -> don't try to render state\n    if (event.filter.filterType === ColumnUserFilter.TYPE && column.$header) {\n      this._renderColumnState(column);\n    }\n  }\n}","map":{"version":3,"names":["arrays","Column","ColumnUserFilter","Device","graphics","GroupBoxMenuItemsOrder","inspector","MenuBar","MenuDestinations","objects","scout","scrollbars","strings","styles","Table","tooltips","Widget","$","TableHeader","constructor","dragging","headerMenusEnabled","table","_tableDataScrollHandler","_onTableDataScroll","bind","_tableAddFilterRemovedHandler","_onTableAddFilterRemoved","_tableColumnResizedHandler","_onTableColumnResized","_tableColumnMovedHandler","_onTableColumnMoved","_renderedColumns","_init","options","menuBar","create","parent","tabbable","position","Position","BOTTOM","menuOrder","on","_onMenuBarPropertyChange","updateMenuBar","_render","$container","$data","beforeDiv","cssBorderLeftWidth","rowBorders","left","$filler","appendDiv","css","$menuBarContainer","setVisible","visible","render","_$window","window","_$body","body","_renderColumns","_remove","off","_removeColumns","rerenderColumns","visibleColumns","_visibleColumns","forEach","_renderColumn","length","html","addClass","_reconcileScrollPos","column","index","columnWidth","_realWidthIfAvailable","isFirstColumn","isLastColumn","$header","setEnabled","enabled","data","margins","horizontal","cssMinWidth","cssMaxWidth","appendSpan","_onHeaderItemClick","_onHeaderItemMouseDown","session","applyInfo","_installHeaderItemTooltip","_decorateHeader","showSeparator","$separator","fixedWidth","_onSeparatorMouseDown","_onSeparatorDblclick","push","slice","_removeColumn","remove","resizeHeaderItem","remainingHeaderSpace","adjustment","menuBarWidth","outerWidth","visibleColumnIndex","indexOf","width","rowWidth","insets","right","origColumnWidth","Math","max","minWidth","cssWidth","resizeHeaderItems","scrollLeft","get$Scrollable","lastColumn","_lastVisibleColumn","cssRight","_arrangeHeaderItems","$headers","that","each","offset","animate","progress","animation","remainingMs","$headerItem","isSelected","scrollHorizontalTo","tableHeaderMenu","rendered","install","text","_headerItemTooltipText","arrowPosition","arrowPositionUnit","nativeTooltip","get","isCustomEllipsisTooltipPossible","htmlEnabled","_headerItemTooltipHtmlEnabled","_installHeaderItemTooltips","_uninstallHeaderItemTooltip","uninstall","_uninstallHeaderItemTooltips","$col","hasText","headerTooltipText","$text","children","isContentTruncated","plainText","trim","headerTooltipHtmlEnabled","setHeaderMenusEnabled","setProperty","_renderHeaderMenusEnabled","openHeaderMenu","closeHeaderMenu","createTableHeaderMenu","open","trigger","menu","one","destroy","onColumnActionsChanged","event","findHeaderItems","find","updateHeader","oldColumnState","isVisible","_renderColumnCssClass","_renderColumnText","_renderColumnIconId","_renderColumnState","_renderColumnLegacyStyle","_renderColumnHeaderMenuEnabled","_renderColumnHorizontalAlignment","removeClass","headerCssClass","$headerText","headerHtmlEnabled","nl2br","htmlOrNbsp","_updateColumnIconAndTextStyle","icon","headerIconId","parseHorizontalAlignment","horizontalAlignment","$icon","toggleClass","legacyStyle","_isHeaderMenuEnabled","sortDirection","$state","filtered","getFilter","id","empty","sortActive","sortAscending","grouped","$left","_adjustColumnMinWidth","DEFAULT_MIN_WIDTH","__minWidthWithoutState","__widthWithoutState","resizeColumn","isNullOrUndefined","menuItems","_filterMenus","menus","HEADER","setHiddenByUi","setMenuItems","onSortingChanged","oldPos","newPos","$moveHeader","eq","$moveResize","next","lastColumnPos","before","after","dragged","parseInt","animateAVCSD","last","onOrderChanged","oldColumnOrder","$headerResize","append","headerMenuEnabled","currentTarget","columnMoved","sortEnabled","shiftKey","ctrlKey","removeColumnGrouping","sort","hasClass","isOpenFor","button","diff","startX","floor","pageX","move","$otherHeaders","siblings","fixedPosition","dragMove","dragEnd","middle","realMiddle","i","$otherHeader","m","realWidth","$div","h","reverse","moveColumn","resizeToFit","target","prev","headerWidth","$headerColumnResizedHelper","$dataColumnResizedHelper","resizeMove","resizeEnd","preventDefault","wHeader","fix","_fixTimeout","unfix","propertyName","newValue","filter","filterType","TYPE"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TableHeader.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Column, ColumnUserFilter, Device, graphics, GroupBoxMenuItemsOrder, inspector, MenuBar, MenuDestinations, objects, scout, scrollbars, strings, styles, Table, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TableHeader extends Widget {\n\n  constructor() {\n    super();\n\n    this.dragging = false;\n    this.headerMenusEnabled = true;\n    this.table = null;\n    this._tableDataScrollHandler = this._onTableDataScroll.bind(this);\n    this._tableAddFilterRemovedHandler = this._onTableAddFilterRemoved.bind(this);\n    this._tableColumnResizedHandler = this._onTableColumnResized.bind(this);\n    this._tableColumnMovedHandler = this._onTableColumnMoved.bind(this);\n    this._renderedColumns = [];\n  }\n\n  _init(options) {\n    super._init(options);\n\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      tabbable: false,\n      position: MenuBar.Position.BOTTOM,\n      menuOrder: new GroupBoxMenuItemsOrder()\n    });\n    this.menuBar.on('propertyChange', this._onMenuBarPropertyChange.bind(this));\n    this.updateMenuBar();\n  }\n\n  _render() {\n    this.$container = this.table.$data.beforeDiv('table-header')\n      .cssBorderLeftWidth(this.table.rowBorders.left || '');\n\n    // Filler is necessary to make sure the header is always as large as the table data, otherwise horizontal scrolling does not work correctly\n    this.$filler = this.$container.appendDiv('table-header-item filler').css('visibility', 'hidden');\n\n    // Required to make \"height: 100%\" rule work. menuBarContainer and menuBar itself must have the same visibility.\n    // Otherwise they could cover the sorting/filter icons on the table-header of the column.\n    this.$menuBarContainer = this.$container\n      .appendDiv('menubar-container')\n      .setVisible(this.menuBar.visible);\n    this.menuBar.render(this.$menuBarContainer);\n    this._$window = this.$container.window();\n    this._$body = this.$container.body();\n\n    this._renderColumns();\n\n    this.table.$data.on('scroll', this._tableDataScrollHandler);\n    this.table.on('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.on('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.on('columnResized', this._tableColumnResizedHandler);\n    this.table.on('columnMoved', this._tableColumnMovedHandler);\n  }\n\n  _remove() {\n    this.table.$data.off('scroll', this._tableDataScrollHandler);\n    this.table.off('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.off('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.off('columnResized', this._tableColumnResizedHandler);\n    this.table.off('columnMoved', this._tableColumnMovedHandler);\n\n    this._removeColumns();\n\n    super._remove();\n  }\n\n  rerenderColumns() {\n    this._removeColumns();\n    this._renderColumns();\n  }\n\n  _renderColumns() {\n    let visibleColumns = this._visibleColumns();\n    visibleColumns.forEach(this._renderColumn, this);\n    if (visibleColumns.length === 0) {\n      // If there are no columns, make the filler visible and make sure the header is as large as normally using nbsp\n      this.$filler.css('visibility', 'visible').html('&nbsp;').addClass('empty');\n    }\n    this._reconcileScrollPos();\n  }\n\n  _renderColumn(column, index) {\n    let columnWidth = column._realWidthIfAvailable(),\n      visibleColumns = this._visibleColumns(),\n      isFirstColumn = (index === 0),\n      isLastColumn = (index === visibleColumns.length - 1);\n\n    let $header = this.$filler.beforeDiv('table-header-item')\n      .setEnabled(this.enabled) // enabledComputed not used on purpose\n      .data('column', column);\n\n    let margins = graphics.margins($header);\n    columnWidth -= margins.horizontal();\n    $header.cssMinWidth(columnWidth).cssMaxWidth(columnWidth);\n\n    $header.appendSpan('table-header-item-text');\n    if (this.enabled) { // enabledComputed not used on purpose\n      $header\n        .on('click', this._onHeaderItemClick.bind(this))\n        .on('mousedown', this._onHeaderItemMouseDown.bind(this));\n    }\n\n    if (this.session.inspector) {\n      inspector.applyInfo(column, $header);\n    }\n\n    if (isFirstColumn) {\n      $header.addClass('first');\n    }\n    if (isLastColumn) {\n      $header.addClass('last');\n    }\n\n    column.$header = $header;\n\n    this._installHeaderItemTooltip(column);\n    this._decorateHeader(column);\n\n    let showSeparator = column.showSeparator;\n    if (isLastColumn && !this.enabled) { // enabledComputed not used on purpose\n      showSeparator = false;\n    }\n    if (showSeparator) {\n      let $separator = this.$filler.beforeDiv('table-header-resize');\n      if (column.fixedWidth || !this.enabled) { // enabledComputed not used on purpose\n        $separator.setEnabled(false);\n      } else {\n        $separator\n          .on('mousedown', '', this._onSeparatorMouseDown.bind(this))\n          .on('dblclick', this._onSeparatorDblclick.bind(this));\n      }\n      column.$separator = $separator;\n    }\n    this._renderedColumns.push(column);\n  }\n\n  _removeColumns() {\n    this._renderedColumns.slice().forEach(this._removeColumn, this);\n  }\n\n  _removeColumn(column) {\n    if (column.$header) {\n      column.$header.remove();\n      column.$header = null;\n    }\n    if (column.$separator) {\n      column.$separator.remove();\n      column.$separator = null;\n    }\n    arrays.remove(this._renderedColumns, column);\n  }\n\n  resizeHeaderItem(column) {\n    if (!column) {\n      // May be undefined if there are no columns\n      return;\n    }\n    if (!column.$header) {\n      // May be undefined if called when header item is not rendered yet (may caused by _adjustColumnMinWidth)\n      return;\n    }\n\n    let remainingHeaderSpace, adjustment,\n      $header = column.$header,\n      columnWidth = column._realWidthIfAvailable(),\n      margins = graphics.margins($header),\n      menuBarWidth = (this.menuBar.visible ? this.$menuBarContainer.outerWidth(true) : 0),\n      visibleColumns = this._visibleColumns(),\n      visibleColumnIndex = visibleColumns.indexOf(column),\n      isLastColumn = visibleColumnIndex === visibleColumns.length - 1;\n\n    columnWidth -= margins.horizontal();\n\n    if (isLastColumn && menuBarWidth > 0) {\n      remainingHeaderSpace = this.$container.width() - this.table.rowWidth + graphics.insets(this.$container).right;\n\n      if (remainingHeaderSpace < menuBarWidth) {\n        adjustment = menuBarWidth;\n        if (column.$separator) {\n          adjustment += column.$separator.width();\n        }\n        if (remainingHeaderSpace > 0) {\n          adjustment -= remainingHeaderSpace;\n        }\n\n        let origColumnWidth = columnWidth;\n        columnWidth = Math.max(columnWidth - adjustment, column.minWidth);\n        this.$filler.cssWidth(origColumnWidth - columnWidth);\n      }\n    }\n\n    $header\n      .cssMinWidth(columnWidth)\n      .cssMaxWidth(columnWidth);\n  }\n\n  /**\n   * Resizes all header items to theirs desired widths.\n   */\n  resizeHeaderItems() {\n    this._visibleColumns().forEach(this.resizeHeaderItem.bind(this));\n  }\n\n  _reconcileScrollPos() {\n    // When scrolling horizontally scroll header as well\n    let\n      scrollLeft = this.table.get$Scrollable().scrollLeft(),\n      lastColumn = this._lastVisibleColumn();\n\n    this.resizeHeaderItem(lastColumn);\n    this.$container.scrollLeft(scrollLeft);\n    this.$menuBarContainer.cssRight(-1 * scrollLeft);\n  }\n\n  _arrangeHeaderItems($headers) {\n    let that = this;\n    $headers.each(function() {\n      // move to old position and then animate\n      $(this).css('left', $(this).data('old-pos') - $(this).offset().left)\n        .animate({\n          left: 0\n        }, {\n          progress: function(animation, progress, remainingMs) {\n            let $headerItem = $(this);\n            if (!$headerItem.isSelected()) {\n              return;\n            }\n            // make sure selected header item is visible\n            scrollbars.scrollHorizontalTo(that.table.$data, $headerItem);\n\n            // move menu\n            if (that.tableHeaderMenu && that.tableHeaderMenu.rendered) {\n              that.tableHeaderMenu.position();\n            }\n          }\n        });\n    });\n  }\n\n  _installHeaderItemTooltip(column) {\n    tooltips.install(column.$header, {\n      parent: this,\n      text: this._headerItemTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible(),\n      htmlEnabled: this._headerItemTooltipHtmlEnabled.bind(this)\n    });\n  }\n\n  _installHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._installHeaderItemTooltip, this);\n  }\n\n  _uninstallHeaderItemTooltip(column) {\n    tooltips.uninstall(column.$header);\n  }\n\n  _uninstallHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._uninstallHeaderItemTooltip, this);\n  }\n\n  _headerItemTooltipText($col) {\n    let column = $col.data('column');\n    if (column && strings.hasText(column.headerTooltipText)) {\n      return column.headerTooltipText;\n    }\n    let $text = $col.children('.table-header-item-text');\n    if ($text.isContentTruncated() || ($col.width() + $col.position().left) > $col.parent().width()) {\n      let text = strings.plainText($text.html(), {\n        trim: true\n      });\n      if (strings.hasText(text)) {\n        return text;\n      }\n    }\n    return null;\n  }\n\n  _headerItemTooltipHtmlEnabled($col) {\n    let column = $col.data('column');\n    return column.headerTooltipHtmlEnabled;\n  }\n\n  setHeaderMenusEnabled(headerMenusEnabled) {\n    this.setProperty('headerMenusEnabled', headerMenusEnabled);\n  }\n\n  _renderHeaderMenusEnabled() {\n    this._visibleColumns().forEach(function(column) {\n      this._decorateHeader(column);\n    }, this);\n  }\n\n  openHeaderMenu(column) {\n    if (this.tableHeaderMenu) {\n      // Make sure existing header menu is closed first\n      this.closeHeaderMenu();\n    }\n\n    this.tableHeaderMenu = column.createTableHeaderMenu(this);\n    this.tableHeaderMenu.open();\n\n    // Trigger events on column to make it possible to react to the opening of the menu\n    column.trigger('headerMenuOpen', {\n      menu: this.tableHeaderMenu\n    });\n    this.tableHeaderMenu.one('destroy', () => {\n      column.trigger('headerMenuClose', {\n        menu: this.tableHeaderMenu\n      });\n    });\n  }\n\n  closeHeaderMenu() {\n    this.tableHeaderMenu.destroy();\n    this.tableHeaderMenu = null;\n  }\n\n  onColumnActionsChanged(event) {\n    if (this.tableHeaderMenu) {\n      this.tableHeaderMenu.onColumnActionsChanged(event);\n    }\n  }\n\n  findHeaderItems() {\n    return this.$container.find('.table-header-item:not(.filler)');\n  }\n\n  /**\n   * Updates the column headers visualization of the text, sorting and styling state\n   * @param [oldColumnState] only necessary when the css class was updated\n   */\n  updateHeader(column, oldColumnState) {\n    if (!column.isVisible()) {\n      return;\n    }\n    this._decorateHeader(column, oldColumnState);\n  }\n\n  _decorateHeader(column, oldColumnState) {\n    this._renderColumnCssClass(column, oldColumnState);\n    this._renderColumnText(column);\n    this._renderColumnIconId(column);\n    this._renderColumnState(column);\n    this._renderColumnLegacyStyle(column);\n    this._renderColumnHeaderMenuEnabled(column);\n    this._renderColumnHorizontalAlignment(column);\n  }\n\n  _renderColumnCssClass(column, oldColumnState) {\n    let $header = column.$header;\n    if (oldColumnState) {\n      $header.removeClass(oldColumnState.headerCssClass);\n    }\n    $header.addClass(column.headerCssClass);\n  }\n\n  _renderColumnText(column) {\n    let text = column.text,\n      $header = column.$header,\n      $headerText = $header.children('.table-header-item-text');\n\n    if (!column.headerHtmlEnabled) {\n      text = strings.nl2br(text);\n    }\n    // Make sure empty header is as height as the others to make it properly clickable\n    $headerText.htmlOrNbsp(text, 'empty');\n    this._updateColumnIconAndTextStyle(column);\n  }\n\n  _renderColumnIconId(column) {\n    column.$header.icon(column.headerIconId);\n    this._updateColumnIconAndTextStyle(column);\n  }\n\n  _renderColumnHorizontalAlignment(column) {\n    column.$header.removeClass('halign-left halign-center halign-right');\n    column.$header.addClass('halign-' + Table.parseHorizontalAlignment(column.horizontalAlignment));\n  }\n\n  _updateColumnIconAndTextStyle(column) {\n    let $icon = column.$header.data('$icon'),\n      $text = column.$header.children('.table-header-item-text');\n\n    if ($icon) {\n      $icon.toggleClass('with-text', !!column.text);\n    }\n    // Make text invisible if there is an icon but no text\n    $text.setVisible(!($icon && $text.html() === '&nbsp;'));\n    // Mark icon-only columns to prevent ellipsis (like IconColumn.js does for table cells)\n    column.$header.toggleClass('table-header-item-icon-only', !!(column.headerIconId && !column.text));\n  }\n\n  _renderColumnLegacyStyle(column) {\n    styles.legacyStyle(column, column.$header, 'header');\n  }\n\n  _renderColumnHeaderMenuEnabled(column) {\n    column.$header.toggleClass('disabled', !this._isHeaderMenuEnabled(column) || !this.enabled); // enabledComputed not used on purpose\n  }\n\n  _renderColumnState(column) {\n    let sortDirection, $state,\n      $header = column.$header,\n      filtered = this.table.getFilter(column.id);\n\n    $header.children('.table-header-item-state').remove();\n    $state = $header.appendSpan('table-header-item-state');\n    $state.empty();\n    $header.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n    $state.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n\n    if (column.sortActive) {\n      sortDirection = column.sortAscending ? 'asc' : 'desc';\n      if (column.grouped) {\n        $header.addClass('group-' + sortDirection);\n      }\n      $header.addClass('sorted sort-' + sortDirection);\n      $state.addClass('sorted sort-' + sortDirection);\n    }\n\n    if (column.grouped || filtered) {\n      // contains group and filter symbols\n      let $left = $state.appendDiv('left');\n      if (column.grouped) {\n        $header.addClass('grouped');\n        $state.addClass('grouped');\n        $left.appendDiv().text('G');\n      }\n      if (filtered) {\n        $header.addClass('filtered');\n        $state.addClass('filtered');\n        $left.appendDiv().text('F');\n      }\n    }\n    // Contains sort arrow\n    $state.appendDiv('right');\n\n    this._adjustColumnMinWidth(column);\n  }\n\n  /**\n   * Makes sure state is fully visible by adjusting width (happens if column.minWidth is < DEFAULT_MIN_WIDTH)\n   */\n  _adjustColumnMinWidth(column) {\n    let filtered = this.table.getFilter(column.id);\n    if (column.sortActive || column.grouped || filtered) {\n      if (column.minWidth < Column.DEFAULT_MIN_WIDTH) {\n        column.__minWidthWithoutState = column.minWidth;\n        column.__widthWithoutState = column.width;\n        column.minWidth = Column.DEFAULT_MIN_WIDTH;\n      }\n      if (column.width < column.minWidth) {\n        this.table.resizeColumn(column, column.minWidth);\n      }\n    } else {\n      // Reset to previous min width if no state is visible\n      if (!objects.isNullOrUndefined(column.__minWidthWithoutState)) {\n        column.minWidth = column.__minWidthWithoutState;\n        // Resize to previous min width, assuming user has not manually changed the size because column is still as width as default_min_width\n        if (column.width === Column.DEFAULT_MIN_WIDTH) {\n          this.table.resizeColumn(column, column.__widthWithoutState);\n        }\n        column.__minWidthWithoutState = null;\n        column.__widthWithoutState = null;\n      }\n    }\n  }\n\n  updateMenuBar() {\n    let menuItems = this.table._filterMenus(this.table.menus, MenuDestinations.HEADER);\n    this.menuBar.setHiddenByUi(!this.enabled); // enabledComputed not used on purpose\n    this.menuBar.setMenuItems(menuItems);\n  }\n\n  _onTableColumnResized(event) {\n    let column = event.column,\n      lastColumn = this._lastVisibleColumn();\n    this.resizeHeaderItem(column);\n    if (lastColumn !== column) {\n      this.resizeHeaderItem(lastColumn);\n    }\n  }\n\n  onSortingChanged() {\n    this._visibleColumns().forEach(this._renderColumnState, this);\n  }\n\n  _onTableColumnMoved(event) {\n    let\n      column = event.column,\n      oldPos = event.oldPos,\n      newPos = event.newPos,\n      $header = column.$header,\n      $headers = this.findHeaderItems(),\n      $moveHeader = $headers.eq(oldPos),\n      $moveResize = $moveHeader.next('.table-header-resize'),\n      visibleColumns = this._visibleColumns(),\n      lastColumnPos = visibleColumns.length - 1;\n\n    // store old position of header\n    $headers.each(function() {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    if (newPos < oldPos) {\n      $headers.eq(newPos).before($moveHeader);\n    } else {\n      $headers.eq(newPos).after($moveHeader);\n      $moveHeader.before($moveHeader.next('.table-header-resize'));\n    }\n    // The resizer belongs to a column which is especially relevant for fixed width columns where resizer is disabled -> ensure it is always positioned after the header\n    $moveHeader.after($moveResize);\n\n    // Update first/last markers\n    if ($headers.length > 0) {\n      $headers.eq(0).removeClass('first');\n      $headers.eq($headers.length - 1).removeClass('last');\n    }\n\n    if (visibleColumns.length > 0) {\n      visibleColumns[0].$header.addClass('first');\n      visibleColumns[lastColumnPos].$header.addClass('last');\n    }\n\n    // Update header size due to header menu items if moved from or to last position\n    if (oldPos === lastColumnPos || newPos === lastColumnPos) {\n      visibleColumns.forEach(column => {\n        this.resizeHeaderItem(column);\n      });\n    }\n\n    // move to old position and then animate\n    if (event.dragged) {\n      $header.css('left', parseInt($header.css('left'), 0) + $header.data('old-pos') - $header.offset().left)\n        .addClass('releasing')\n        .animateAVCSD('left', 0, () => $header.removeClass('releasing'));\n    } else {\n      this._arrangeHeaderItems($headers);\n    }\n  }\n\n  _visibleColumns() {\n    return this.table.visibleColumns();\n  }\n\n  _lastVisibleColumn() {\n    return arrays.last(this._visibleColumns());\n  }\n\n  onOrderChanged(oldColumnOrder) {\n    let $header, $headerResize;\n    let $headers = this.findHeaderItems();\n\n    // store old position of headers\n    $headers.each(function() {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    this._visibleColumns().forEach(function(column) {\n      $header = column.$header;\n      $headerResize = $header.next('.table-header-resize');\n\n      this.$container.append($header);\n      this.$container.append($headerResize);\n    }, this);\n\n    // ensure filler is at the end\n    this.$container.append(this.$filler);\n\n    this._arrangeHeaderItems($headers);\n  }\n\n  /**\n   * Header menus are enabled when property is enabled on the header itself and on the column too.\n   */\n  _isHeaderMenuEnabled(column) {\n    return !!(column.headerMenuEnabled && this.headerMenusEnabled);\n  }\n\n  _onHeaderItemClick(event) {\n    let $headerItem = $(event.currentTarget),\n      column = $headerItem.data('column');\n\n    if (this.dragging || this.columnMoved) {\n      this.dragging = false;\n      this.columnMoved = false;\n    } else if (this.table.sortEnabled && (event.shiftKey || event.ctrlKey || !this._isHeaderMenuEnabled(column))) {\n      this.table.removeColumnGrouping();\n      this.table.sort(column, $headerItem.hasClass('sort-asc') ? 'desc' : 'asc', event.shiftKey);\n    } else if (this.tableHeaderMenu && this.tableHeaderMenu.isOpenFor($headerItem)) {\n      this.closeHeaderMenu();\n    } else if (this._isHeaderMenuEnabled(column)) {\n      this.openHeaderMenu(column);\n    }\n\n    return false;\n  }\n\n  _onHeaderItemMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    let diff = 0,\n      that = this,\n      startX = Math.floor(event.pageX),\n      $header = $(event.currentTarget),\n      column = $header.data('column'),\n      oldPos = this._visibleColumns().indexOf(column),\n      newPos = oldPos,\n      move = $header.outerWidth(),\n      $otherHeaders = $header.siblings('.table-header-item:not(.filler)');\n\n    if (column.fixedPosition) {\n      // Don't allow moving a column with fixed position\n      return;\n    }\n\n    this.dragging = false;\n    // firefox fires a click action after a column has been droped at the new location, chrome doesn't -> we need a hint to avoid menu gets opened after drop\n    this.columnMoved = false;\n\n    // start drag & drop events\n    this._$window\n      .on('mousemove.tableheader', '', dragMove)\n      .one('mouseup', '', dragEnd);\n\n    function dragMove(event) {\n      diff = Math.floor(event.pageX) - startX;\n      if (-2 < diff && diff < 2) {\n        // Don't move if it was no movement or just a very small one\n        return;\n      }\n\n      that.dragging = true;\n\n      // change css of dragged header\n      $header.addClass('moving');\n      that.$container && that.$container.addClass('moving');\n\n      // move dragged header\n      $header.css('left', diff);\n\n      // find other affected headers\n      let middle = realMiddle($header);\n\n      $otherHeaders.each(function(i) {\n        let $otherHeader = $(this);\n        let m = realMiddle($otherHeader);\n        if (middle < m && i < oldPos) {\n          $otherHeader.css('left', move);\n        } else if (middle > m && i >= oldPos) {\n          $otherHeader.css('left', -move);\n        } else {\n          $otherHeader.css('left', 0);\n        }\n      });\n\n      if (that.tableHeaderMenu) {\n        that.tableHeaderMenu.destroy();\n        that.tableHeaderMenu = null;\n      }\n\n      // Don't show tooltips while dragging\n      that.rendered && that._uninstallHeaderItemTooltips();\n    }\n\n    function realWidth($div) {\n      let html = $div.html(),\n        width = $div.html('<span>' + html + '</span>').find('span:first').width();\n\n      $div.html(html);\n      return width;\n    }\n\n    /**\n     * @return {number} the middle of the text (not the middle of the whole header item)\n     */\n    function realMiddle($div) {\n      if ($div.hasClass('halign-right')) {\n        return $div.offset().left + $div.outerWidth() - realWidth($div) / 2;\n      }\n      return $div.offset().left + realWidth($div) / 2;\n    }\n\n    function dragEnd(event) {\n      that._$window && that._$window.off('mousemove.tableheader');\n\n      // in case of no movement: return\n      if (!that.dragging) {\n        return true;\n      }\n\n      // find new position of dragged header\n      let h = (diff < 0) ? $otherHeaders : $($otherHeaders.get().reverse());\n      h.each(function(i) {\n        if ($(this).css('left') !== '0px') {\n          newPos = that._visibleColumns().indexOf(($(this).data('column')));\n          return false;\n        }\n      });\n\n      // move column\n      if (newPos > -1 && oldPos !== newPos) {\n        that.table.moveColumn($header.data('column'), oldPos, newPos, true);\n        that.dragging = false;\n        that.columnMoved = true;\n      } else {\n        $header.addClass('releasing');\n        $header.animateAVCSD('left', '', () => {\n          that.dragging = false;\n          $header.removeClass('releasing');\n        });\n      }\n\n      // reset css of dragged header\n      $otherHeaders.each(function() {\n        $(this).css('left', '');\n      });\n\n      $header.removeClass('moving');\n      that.$container && that.$container.removeClass('moving');\n\n      // Reinstall tooltips\n      that.rendered && that._installHeaderItemTooltips();\n    }\n  }\n\n  _onSeparatorDblclick(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    if (event.shiftKey) {\n      // Optimize all columns\n      this._visibleColumns().forEach(function(column) {\n        this.table.resizeToFit(column);\n      }, this);\n    } else {\n      // Optimize the column left of the separator\n      let $header = $(event.target).prev(),\n        column = $header.data('column');\n      this.table.resizeToFit(column);\n    }\n  }\n\n  _onSeparatorMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    let startX = Math.floor(event.pageX),\n      $header = $(event.target).prev(),\n      column = $header.data('column'),\n      that = this,\n      headerWidth = column.width;\n\n    // Install resize helpers. Those helpers make sure the header and the data element keep their\n    // current width until the resizing has finished. Otherwise, make a column smaller while the\n    // table has been horizontally scrolled to the right would behave very strange.\n    let $headerColumnResizedHelper = this.$container\n      .appendDiv('table-column-resize-helper')\n      .css('width', this.table.rowWidth + this.table.rowBorders.horizontal());\n    let $dataColumnResizedHelper = this.table.$data\n      .appendDiv('table-column-resize-helper')\n      .css('width', this.table.rowWidth);\n\n    this._$window\n      .on('mousemove.tableheader', resizeMove)\n      .one('mouseup', resizeEnd);\n    this._$body.addClass('col-resize');\n\n    // Prevent text selection in a form, don't stop propagation to allow others (e.g. cell editor) to react\n    event.preventDefault();\n\n    function resizeMove(event) {\n      let diff = Math.floor(event.pageX) - startX,\n        wHeader = headerWidth + diff;\n\n      wHeader = Math.max(wHeader, column.minWidth);\n      if (that.rendered && wHeader !== column.width) {\n        that.table.resizeColumn(column, wHeader);\n      }\n    }\n\n    function resizeEnd(event) {\n      // Remove resize helpers\n      $headerColumnResizedHelper.remove();\n      $dataColumnResizedHelper.remove();\n\n      that._$window && that._$window.off('mousemove.tableheader');\n      that._$body && that._$body.removeClass('col-resize');\n\n      if (that.table.rendered && column.width !== headerWidth) {\n        that.table.resizeColumn(column, column.width);\n      }\n    }\n  }\n\n  _onTableDataScroll() {\n    scrollbars.fix(this.$menuBarContainer);\n    this._reconcileScrollPos();\n    this._fixTimeout = scrollbars.unfix(this.$menuBarContainer, this._fixTimeout);\n  }\n\n  _onMenuBarPropertyChange(event) {\n    if (this.rendered && event.propertyName === 'visible') {\n      this.$menuBarContainer.setVisible(event.newValue);\n    }\n  }\n\n  _onTableAddFilterRemoved(event) {\n    let column = event.filter.column;\n    // Check for column.$header because column may have been removed in the mean time due to a structure changed event -> don't try to render state\n    if (event.filter.filterType === ColumnUserFilter.TYPE && column.$header) {\n      this._renderColumnState(column);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}