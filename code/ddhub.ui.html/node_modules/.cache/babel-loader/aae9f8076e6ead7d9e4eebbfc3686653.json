{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, KeyStroke, TagBar } from '../../../index';\nimport $ from 'jquery';\n\n/**\n * @param fieldAdapter acts as an interface so we can use the same key-stroke for TagField and TagFieldPopup.\n *\n */\nexport default class TagFieldNavigationKeyStroke extends KeyStroke {\n  constructor(fieldAdapter) {\n    super();\n    this.fieldAdapter = fieldAdapter;\n    this.which = [keys.LEFT, keys.RIGHT];\n    this.preventDefault = false;\n    this.preventInvokeAcceptInputOnActiveValueField = true;\n  }\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    return this.fieldAdapter.enabled();\n  }\n  handle(event) {\n    if (event.which === keys.LEFT) {\n      this._focusTagElement(-1);\n    } else if (event.which === keys.RIGHT) {\n      this._focusTagElement(1);\n    }\n  }\n  _focusTagElement(direction) {\n    let UNDEFINED = -1;\n    let INPUT = -2;\n\n    // find overflow-icon and all tag-elements\n    let $focusTargets = TagBar.findFocusableTagElements(this.fieldAdapter.$container());\n    let numTargets = $focusTargets.length;\n    if (numTargets === 0) {\n      return;\n    }\n\n    // check which element has the focus\n    let focusIndex = UNDEFINED;\n    $focusTargets.each(function (index) {\n      let $element = $(this);\n      if ($element.hasClass('focused')) {\n        focusIndex = index;\n      }\n    });\n    if (focusIndex === UNDEFINED) {\n      // no tag-elements focused currently\n      if (direction === -1) {\n        focusIndex = numTargets - 1;\n      }\n    } else {\n      let nextFocusIndex = focusIndex + direction;\n      if (nextFocusIndex >= numTargets) {\n        focusIndex = INPUT;\n      } else if (nextFocusIndex < 0) {\n        focusIndex = UNDEFINED;\n      } else {\n        TagBar.unfocusTagElement($focusTargets.eq(focusIndex));\n        focusIndex = nextFocusIndex;\n      }\n    }\n    if (focusIndex === UNDEFINED) {\n      // leave focus untouched\n    } else if (focusIndex === INPUT) {\n      this.fieldAdapter.focus();\n    } else {\n      TagBar.focusTagElement($focusTargets.eq(focusIndex));\n    }\n  }\n}","map":{"version":3,"names":["keys","KeyStroke","TagBar","$","TagFieldNavigationKeyStroke","constructor","fieldAdapter","which","LEFT","RIGHT","preventDefault","preventInvokeAcceptInputOnActiveValueField","_accept","event","accepted","enabled","handle","_focusTagElement","direction","UNDEFINED","INPUT","$focusTargets","findFocusableTagElements","$container","numTargets","length","focusIndex","each","index","$element","hasClass","nextFocusIndex","unfocusTagElement","eq","focus","focusTagElement"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/tagfield/TagFieldNavigationKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, KeyStroke, TagBar} from '../../../index';\nimport $ from 'jquery';\n\n/**\n * @param fieldAdapter acts as an interface so we can use the same key-stroke for TagField and TagFieldPopup.\n *\n */\nexport default class TagFieldNavigationKeyStroke extends KeyStroke {\n\n  constructor(fieldAdapter) {\n    super();\n    this.fieldAdapter = fieldAdapter;\n    this.which = [keys.LEFT, keys.RIGHT];\n    this.preventDefault = false;\n    this.preventInvokeAcceptInputOnActiveValueField = true;\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    return this.fieldAdapter.enabled();\n  }\n\n  handle(event) {\n    if (event.which === keys.LEFT) {\n      this._focusTagElement(-1);\n    } else if (event.which === keys.RIGHT) {\n      this._focusTagElement(1);\n    }\n  }\n\n  _focusTagElement(direction) {\n    let UNDEFINED = -1;\n    let INPUT = -2;\n\n    // find overflow-icon and all tag-elements\n    let $focusTargets = TagBar.findFocusableTagElements(this.fieldAdapter.$container());\n    let numTargets = $focusTargets.length;\n    if (numTargets === 0) {\n      return;\n    }\n\n    // check which element has the focus\n    let focusIndex = UNDEFINED;\n    $focusTargets.each(function(index) {\n      let $element = $(this);\n      if ($element.hasClass('focused')) {\n        focusIndex = index;\n      }\n    });\n\n    if (focusIndex === UNDEFINED) {\n      // no tag-elements focused currently\n      if (direction === -1) {\n        focusIndex = numTargets - 1;\n      }\n    } else {\n      let nextFocusIndex = focusIndex + direction;\n      if (nextFocusIndex >= numTargets) {\n        focusIndex = INPUT;\n      } else if (nextFocusIndex < 0) {\n        focusIndex = UNDEFINED;\n      } else {\n        TagBar.unfocusTagElement($focusTargets.eq(focusIndex));\n        focusIndex = nextFocusIndex;\n      }\n    }\n\n    if (focusIndex === UNDEFINED) {\n      // leave focus untouched\n    } else if (focusIndex === INPUT) {\n      this.fieldAdapter.focus();\n    } else {\n      TagBar.focusTagElement($focusTargets.eq(focusIndex));\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAO,gBAAgB;AACtD,OAAOC,CAAC,MAAM,QAAQ;;AAEtB;AACA;AACA;AACA;AACA,eAAe,MAAMC,2BAA2B,SAASH,SAAS,CAAC;EAEjEI,WAAW,CAACC,YAAY,EAAE;IACxB,KAAK,EAAE;IACP,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,KAAK,GAAG,CAACP,IAAI,CAACQ,IAAI,EAAER,IAAI,CAACS,KAAK,CAAC;IACpC,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,0CAA0C,GAAG,IAAI;EACxD;EAEAC,OAAO,CAACC,KAAK,EAAE;IACb,IAAIC,QAAQ,GAAG,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IACnC,IAAI,CAACC,QAAQ,EAAE;MACb,OAAO,KAAK;IACd;IACA,OAAO,IAAI,CAACR,YAAY,CAACS,OAAO,EAAE;EACpC;EAEAC,MAAM,CAACH,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACN,KAAK,KAAKP,IAAI,CAACQ,IAAI,EAAE;MAC7B,IAAI,CAACS,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAIJ,KAAK,CAACN,KAAK,KAAKP,IAAI,CAACS,KAAK,EAAE;MACrC,IAAI,CAACQ,gBAAgB,CAAC,CAAC,CAAC;IAC1B;EACF;EAEAA,gBAAgB,CAACC,SAAS,EAAE;IAC1B,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,IAAIC,KAAK,GAAG,CAAC,CAAC;;IAEd;IACA,IAAIC,aAAa,GAAGnB,MAAM,CAACoB,wBAAwB,CAAC,IAAI,CAAChB,YAAY,CAACiB,UAAU,EAAE,CAAC;IACnF,IAAIC,UAAU,GAAGH,aAAa,CAACI,MAAM;IACrC,IAAID,UAAU,KAAK,CAAC,EAAE;MACpB;IACF;;IAEA;IACA,IAAIE,UAAU,GAAGP,SAAS;IAC1BE,aAAa,CAACM,IAAI,CAAC,UAASC,KAAK,EAAE;MACjC,IAAIC,QAAQ,GAAG1B,CAAC,CAAC,IAAI,CAAC;MACtB,IAAI0B,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;QAChCJ,UAAU,GAAGE,KAAK;MACpB;IACF,CAAC,CAAC;IAEF,IAAIF,UAAU,KAAKP,SAAS,EAAE;MAC5B;MACA,IAAID,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBQ,UAAU,GAAGF,UAAU,GAAG,CAAC;MAC7B;IACF,CAAC,MAAM;MACL,IAAIO,cAAc,GAAGL,UAAU,GAAGR,SAAS;MAC3C,IAAIa,cAAc,IAAIP,UAAU,EAAE;QAChCE,UAAU,GAAGN,KAAK;MACpB,CAAC,MAAM,IAAIW,cAAc,GAAG,CAAC,EAAE;QAC7BL,UAAU,GAAGP,SAAS;MACxB,CAAC,MAAM;QACLjB,MAAM,CAAC8B,iBAAiB,CAACX,aAAa,CAACY,EAAE,CAACP,UAAU,CAAC,CAAC;QACtDA,UAAU,GAAGK,cAAc;MAC7B;IACF;IAEA,IAAIL,UAAU,KAAKP,SAAS,EAAE;MAC5B;IAAA,CACD,MAAM,IAAIO,UAAU,KAAKN,KAAK,EAAE;MAC/B,IAAI,CAACd,YAAY,CAAC4B,KAAK,EAAE;IAC3B,CAAC,MAAM;MACLhC,MAAM,CAACiC,eAAe,CAACd,aAAa,CAACY,EAAE,CAACP,UAAU,CAAC,CAAC;IACtD;EACF;AACF"},"metadata":{},"sourceType":"module"}