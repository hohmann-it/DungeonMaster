{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Desktop, HtmlComponent, icons, KeyStrokeContext, scout, ViewMenuOpenKeyStroke, Widget } from '../../index';\n\n/**\n * Shows a list of view buttons with displayStyle=MENU\n * and shows the title of the active view button, if the view button is one\n * of the view buttons contained in the menu.\n */\nexport default class ViewMenuTab extends Widget {\n  constructor() {\n    super();\n    this.viewButtons = [];\n    this.selected = false;\n    this.selectedButton = null;\n    this.selectedButtonVisible = true;\n    this.defaultIconId = icons.FOLDER;\n    this._desktopInBackgroundHandler = this._onDesktopInBackgroundChange.bind(this);\n    this._addWidgetProperties(['selectedButton']);\n    this._addPreserveOnPropertyChangeProperties(['selectedButton']);\n  }\n  _init(model) {\n    super._init(model);\n    this.dropdown = scout.create('Action', {\n      parent: this,\n      iconId: icons.ANGLE_DOWN,\n      tabbable: false,\n      cssClass: 'view-menu',\n      toggleAction: true\n    });\n    this.dropdown.on('action', this.togglePopup.bind(this));\n    this._setViewButtons(this.viewButtons);\n    this.session.desktop.on('propertyChange:inBackground', this._desktopInBackgroundHandler);\n  }\n  _destroy() {\n    this.session.desktop.off('propertyChange:inBackground', this._desktopInBackgroundHandler);\n    super._destroy();\n  }\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke([new ViewMenuOpenKeyStroke(this)]);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('view-tab view-menu-tab');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.dropdown.render(this.$container);\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    this.$container.appendDiv('edge right');\n  }\n  _remove() {\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n    if (this.selectedButton) {\n      this.selectedButton.remove();\n    }\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderSelectedButtonVisible();\n    this._renderSelected();\n    this._renderInBackground();\n  }\n  setViewButtons(viewButtons) {\n    this.setProperty('viewButtons', viewButtons);\n  }\n  _setViewButtons(viewButtons) {\n    this._setProperty('viewButtons', viewButtons);\n    this.setVisible(this.viewButtons.length > 0);\n    let selectedButton = this._findSelectedViewButton();\n    if (selectedButton) {\n      this.setSelectedButton(selectedButton);\n    } else {\n      this.setSelectedButton(arrays.find(this.viewButtons, v => v.selectedAsMenu) || this.viewButtons[0]);\n    }\n    this.setSelected(!!selectedButton);\n  }\n  setSelectedButton(viewButton) {\n    if (this.selectedButton && this.selectedButton.cloneOf === viewButton) {\n      return;\n    }\n    if (viewButton) {\n      this.setProperty('selectedButton', viewButton);\n    }\n  }\n  _setSelectedButton(viewButton) {\n    this.viewButtons.forEach(vb => vb.setSelectedAsMenu(vb === viewButton));\n\n    // The selectedViewButton is a fake ViewButton but reflects the state of the actually selected one.\n    // The fake button is created only once and must not be destroyed when the selected view button changes.\n    // This is important to not break the CSS transition (e.g. when desktop is in background and another view selected using ViewMenuPopup).\n    let clone = this.selectedButton;\n    if (!clone) {\n      clone = scout.create('OutlineViewButton', {\n        parent: this,\n        displayStyle: 'TAB'\n      });\n    }\n    if (clone.cloneOf) {\n      clone.cloneOf.unmirror(clone);\n    }\n\n    // Link our fake button with the original and apply all the relevant properties (which are stored in cloneProperties, e.g. outline, cssClass, enabled, etc.)\n    clone.cloneOf = viewButton;\n    viewButton._cloneProperties.forEach(property => clone.callSetter(property, viewButton[property]));\n\n    // Use default icon if outline does not define one.\n    clone.setIconId(viewButton.iconId || this.defaultIconId);\n\n    // Mirror the events and property changes\n    viewButton.mirror({\n      delegateEventsToOriginal: ['acceptInput', 'action'],\n      delegateAllPropertiesToClone: true,\n      delegateAllPropertiesToOriginal: true,\n      excludePropertiesToOriginal: ['selected']\n    }, clone);\n    this._setProperty('selectedButton', clone);\n  }\n  _renderSelectedButton() {\n    this._renderSelectedButtonVisible();\n  }\n  setSelectedButtonVisible(selectedButtonVisible) {\n    this.setProperty('selectedButtonVisible', selectedButtonVisible);\n  }\n  _renderSelectedButtonVisible() {\n    this.$container.toggleClass('selected-button-invisible', !this.selectedButtonVisible);\n    if (!this.selectedButton) {\n      return;\n    }\n    if (this.selectedButtonVisible) {\n      if (!this.selectedButton.rendered) {\n        this.selectedButton.render();\n        this.selectedButton.$container.prependTo(this.$container);\n        this.invalidateLayoutTree();\n      }\n    } else {\n      if (this.selectedButton.rendered) {\n        this.selectedButton.remove();\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n  _renderSelected() {\n    this.$container.select(this.selected);\n  }\n  _findSelectedViewButton() {\n    return arrays.find(this.viewButtons, v => v.selected);\n  }\n\n  /**\n   * Toggles the 'view menu popup', or brings the outline content to the front if in background.\n   */\n  togglePopup() {\n    if (this.popup) {\n      this._closePopup();\n    } else {\n      this._openPopup();\n    }\n  }\n  _openPopup() {\n    if (this.popup) {\n      // already open\n      return;\n    }\n    this.popup = scout.create('ViewMenuPopup', {\n      parent: this,\n      viewMenus: this.viewButtons,\n      defaultIconId: this.defaultIconId,\n      $anchor: this.$parent // use view button box as parent for better alignment\n    });\n\n    this.popup.open();\n    this.popup.one('destroy', event => {\n      this.dropdown.setSelected(false);\n      this.popup = null;\n    });\n  }\n  _closePopup() {\n    if (this.popup) {\n      this.popup.close();\n    }\n  }\n  _renderInBackground() {\n    if (this.session.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      return;\n    }\n    if (!this.rendering) {\n      if (this.session.desktop.inBackground) {\n        this.$container.addClassForAnimation('animate-bring-to-back');\n      } else {\n        this.$container.addClassForAnimation('animate-bring-to-front');\n      }\n    }\n    this.$container.toggleClass('in-background', this.session.desktop.inBackground);\n  }\n  onViewButtonSelected() {\n    let viewButton = this._findSelectedViewButton();\n    if (viewButton) {\n      this.setSelectedButton(viewButton);\n    }\n    this.setSelected(!!viewButton);\n    this._closePopup();\n  }\n  _onDesktopInBackgroundChange() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n}","map":{"version":3,"names":["arrays","Desktop","HtmlComponent","icons","KeyStrokeContext","scout","ViewMenuOpenKeyStroke","Widget","ViewMenuTab","constructor","viewButtons","selected","selectedButton","selectedButtonVisible","defaultIconId","FOLDER","_desktopInBackgroundHandler","_onDesktopInBackgroundChange","bind","_addWidgetProperties","_addPreserveOnPropertyChangeProperties","_init","model","dropdown","create","parent","iconId","ANGLE_DOWN","tabbable","cssClass","toggleAction","on","togglePopup","_setViewButtons","session","desktop","_destroy","off","_initKeyStrokeContext","desktopKeyStrokeContext","invokeAcceptInputOnActiveValueField","$bindTarget","$container","$scopeTarget","registerKeyStroke","_render","$parent","appendDiv","htmlComp","install","render","keyStrokeManager","installKeyStrokeContext","_remove","uninstallKeyStrokeContext","remove","_renderProperties","_renderSelectedButtonVisible","_renderSelected","_renderInBackground","setViewButtons","setProperty","_setProperty","setVisible","length","_findSelectedViewButton","setSelectedButton","find","v","selectedAsMenu","setSelected","viewButton","cloneOf","_setSelectedButton","forEach","vb","setSelectedAsMenu","clone","displayStyle","unmirror","_cloneProperties","property","callSetter","setIconId","mirror","delegateEventsToOriginal","delegateAllPropertiesToClone","delegateAllPropertiesToOriginal","excludePropertiesToOriginal","_renderSelectedButton","setSelectedButtonVisible","toggleClass","rendered","prependTo","invalidateLayoutTree","select","popup","_closePopup","_openPopup","viewMenus","$anchor","open","one","event","close","DisplayStyle","COMPACT","rendering","inBackground","addClassForAnimation","onViewButtonSelected"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/viewbutton/ViewMenuTab.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Desktop, HtmlComponent, icons, KeyStrokeContext, scout, ViewMenuOpenKeyStroke, Widget} from '../../index';\n\n/**\n * Shows a list of view buttons with displayStyle=MENU\n * and shows the title of the active view button, if the view button is one\n * of the view buttons contained in the menu.\n */\nexport default class ViewMenuTab extends Widget {\n\n  constructor() {\n    super();\n\n    this.viewButtons = [];\n    this.selected = false;\n    this.selectedButton = null;\n    this.selectedButtonVisible = true;\n    this.defaultIconId = icons.FOLDER;\n    this._desktopInBackgroundHandler = this._onDesktopInBackgroundChange.bind(this);\n    this._addWidgetProperties(['selectedButton']);\n    this._addPreserveOnPropertyChangeProperties(['selectedButton']);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.dropdown = scout.create('Action', {\n      parent: this,\n      iconId: icons.ANGLE_DOWN,\n      tabbable: false,\n      cssClass: 'view-menu',\n      toggleAction: true\n    });\n    this.dropdown.on('action', this.togglePopup.bind(this));\n    this._setViewButtons(this.viewButtons);\n    this.session.desktop.on('propertyChange:inBackground', this._desktopInBackgroundHandler);\n  }\n\n  _destroy() {\n    this.session.desktop.off('propertyChange:inBackground', this._desktopInBackgroundHandler);\n    super._destroy();\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke([\n      new ViewMenuOpenKeyStroke(this)\n    ]);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('view-tab view-menu-tab');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.dropdown.render(this.$container);\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    this.$container.appendDiv('edge right');\n  }\n\n  _remove() {\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n    if (this.selectedButton) {\n      this.selectedButton.remove();\n    }\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderSelectedButtonVisible();\n    this._renderSelected();\n    this._renderInBackground();\n  }\n\n  setViewButtons(viewButtons) {\n    this.setProperty('viewButtons', viewButtons);\n  }\n\n  _setViewButtons(viewButtons) {\n    this._setProperty('viewButtons', viewButtons);\n    this.setVisible(this.viewButtons.length > 0);\n    let selectedButton = this._findSelectedViewButton();\n    if (selectedButton) {\n      this.setSelectedButton(selectedButton);\n    } else {\n      this.setSelectedButton(arrays.find(this.viewButtons, v => v.selectedAsMenu) || this.viewButtons[0]);\n    }\n    this.setSelected(!!selectedButton);\n  }\n\n  setSelectedButton(viewButton) {\n    if (this.selectedButton && this.selectedButton.cloneOf === viewButton) {\n      return;\n    }\n    if (viewButton) {\n      this.setProperty('selectedButton', viewButton);\n    }\n  }\n\n  _setSelectedButton(viewButton) {\n    this.viewButtons.forEach(vb => vb.setSelectedAsMenu(vb === viewButton));\n\n    // The selectedViewButton is a fake ViewButton but reflects the state of the actually selected one.\n    // The fake button is created only once and must not be destroyed when the selected view button changes.\n    // This is important to not break the CSS transition (e.g. when desktop is in background and another view selected using ViewMenuPopup).\n    let clone = this.selectedButton;\n    if (!clone) {\n      clone = scout.create('OutlineViewButton', {\n        parent: this,\n        displayStyle: 'TAB'\n      });\n    }\n    if (clone.cloneOf) {\n      clone.cloneOf.unmirror(clone);\n    }\n\n    // Link our fake button with the original and apply all the relevant properties (which are stored in cloneProperties, e.g. outline, cssClass, enabled, etc.)\n    clone.cloneOf = viewButton;\n    viewButton._cloneProperties.forEach(property => clone.callSetter(property, viewButton[property]));\n\n    // Use default icon if outline does not define one.\n    clone.setIconId(viewButton.iconId || this.defaultIconId);\n\n    // Mirror the events and property changes\n    viewButton.mirror({\n      delegateEventsToOriginal: ['acceptInput', 'action'],\n      delegateAllPropertiesToClone: true,\n      delegateAllPropertiesToOriginal: true,\n      excludePropertiesToOriginal: ['selected']\n    }, clone);\n\n    this._setProperty('selectedButton', clone);\n  }\n\n  _renderSelectedButton() {\n    this._renderSelectedButtonVisible();\n  }\n\n  setSelectedButtonVisible(selectedButtonVisible) {\n    this.setProperty('selectedButtonVisible', selectedButtonVisible);\n  }\n\n  _renderSelectedButtonVisible() {\n    this.$container.toggleClass('selected-button-invisible', !this.selectedButtonVisible);\n    if (!this.selectedButton) {\n      return;\n    }\n    if (this.selectedButtonVisible) {\n      if (!this.selectedButton.rendered) {\n        this.selectedButton.render();\n        this.selectedButton.$container.prependTo(this.$container);\n        this.invalidateLayoutTree();\n      }\n    } else {\n      if (this.selectedButton.rendered) {\n        this.selectedButton.remove();\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    this.$container.select(this.selected);\n  }\n\n  _findSelectedViewButton() {\n    return arrays.find(this.viewButtons, v => v.selected);\n  }\n\n  /**\n   * Toggles the 'view menu popup', or brings the outline content to the front if in background.\n   */\n  togglePopup() {\n    if (this.popup) {\n      this._closePopup();\n    } else {\n      this._openPopup();\n    }\n  }\n\n  _openPopup() {\n    if (this.popup) {\n      // already open\n      return;\n    }\n    this.popup = scout.create('ViewMenuPopup', {\n      parent: this,\n      viewMenus: this.viewButtons,\n      defaultIconId: this.defaultIconId,\n      $anchor: this.$parent // use view button box as parent for better alignment\n    });\n    this.popup.open();\n    this.popup.one('destroy', event => {\n      this.dropdown.setSelected(false);\n      this.popup = null;\n    });\n  }\n\n  _closePopup() {\n    if (this.popup) {\n      this.popup.close();\n    }\n  }\n\n  _renderInBackground() {\n    if (this.session.desktop.displayStyle === Desktop.DisplayStyle.COMPACT) {\n      return;\n    }\n    if (!this.rendering) {\n      if (this.session.desktop.inBackground) {\n        this.$container.addClassForAnimation('animate-bring-to-back');\n      } else {\n        this.$container.addClassForAnimation('animate-bring-to-front');\n      }\n    }\n    this.$container.toggleClass('in-background', this.session.desktop.inBackground);\n  }\n\n  onViewButtonSelected() {\n    let viewButton = this._findSelectedViewButton();\n    if (viewButton) {\n      this.setSelectedButton(viewButton);\n    }\n    this.setSelected(!!viewButton);\n    this._closePopup();\n  }\n\n  _onDesktopInBackgroundChange() {\n    if (this.rendered) {\n      this._renderInBackground();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}