{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { codes, scout, texts, TreeVisitResult } from '../index';\nexport default class Code {\n  constructor() {\n    this.active;\n    this.id;\n    this.parent;\n    this.children = [];\n    this.sortCode;\n  }\n  init(model) {\n    scout.assertParameter('id', model.id);\n    this.active = model.active;\n    this.id = model.id;\n    this.sortCode = model.sortCode;\n    this._text = model.text;\n    this.modelClass = model.modelClass;\n\n    // If model contains a text map, generate a text key and add the texts to the text maps of the session\n    if (model.texts) {\n      if (this._text) {\n        throw new Error('Either set texts or text property, not both.');\n      }\n      let key = codes.registerTexts(this, model.texts);\n      // Convert to ${textKey:key} so that text() may resolve it\n      this._text = texts.buildKey(key);\n    }\n  }\n\n  /**\n   * @param vararg the language tag or the locale (object with a property languageTag) to load the text for.\n   */\n  text(vararg) {\n    let languageTag = vararg;\n    if (typeof vararg === 'object') {\n      languageTag = vararg.languageTag;\n    }\n    return texts.resolveText(this._text, languageTag);\n  }\n  visitChildren(visitor) {\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i];\n      let visitResult = visitor(child);\n      if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n      if (visitResult !== TreeVisitResult.SKIP_SUBTREE) {\n        visitResult = child.visitChildren(visitor);\n        if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["codes","scout","texts","TreeVisitResult","Code","constructor","active","id","parent","children","sortCode","init","model","assertParameter","_text","text","modelClass","Error","key","registerTexts","buildKey","vararg","languageTag","resolveText","visitChildren","visitor","i","length","child","visitResult","TERMINATE","SKIP_SUBTREE"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/code/Code.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {codes, scout, texts, TreeVisitResult} from '../index';\n\nexport default class Code {\n\n  constructor() {\n    this.active;\n    this.id;\n    this.parent;\n    this.children = [];\n    this.sortCode;\n  }\n\n  init(model) {\n    scout.assertParameter('id', model.id);\n\n    this.active = model.active;\n    this.id = model.id;\n    this.sortCode = model.sortCode;\n    this._text = model.text;\n    this.modelClass = model.modelClass;\n\n    // If model contains a text map, generate a text key and add the texts to the text maps of the session\n    if (model.texts) {\n      if (this._text) {\n        throw new Error('Either set texts or text property, not both.');\n      }\n      let key = codes.registerTexts(this, model.texts);\n      // Convert to ${textKey:key} so that text() may resolve it\n      this._text = texts.buildKey(key);\n    }\n  }\n\n  /**\n   * @param vararg the language tag or the locale (object with a property languageTag) to load the text for.\n   */\n  text(vararg) {\n    let languageTag = vararg;\n    if (typeof vararg === 'object') {\n      languageTag = vararg.languageTag;\n    }\n    return texts.resolveText(this._text, languageTag);\n  }\n\n  visitChildren(visitor) {\n    for (let i = 0; i < this.children.length; i++) {\n      let child = this.children[i];\n      let visitResult = visitor(child);\n      if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n      if (visitResult !== TreeVisitResult.SKIP_SUBTREE) {\n        visitResult = child.visitChildren(visitor);\n        if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n      }\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,eAAe,QAAO,UAAU;AAE7D,eAAe,MAAMC,IAAI,CAAC;EAExBC,WAAW,GAAG;IACZ,IAAI,CAACC,MAAM;IACX,IAAI,CAACC,EAAE;IACP,IAAI,CAACC,MAAM;IACX,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,QAAQ;EACf;EAEAC,IAAI,CAACC,KAAK,EAAE;IACVX,KAAK,CAACY,eAAe,CAAC,IAAI,EAAED,KAAK,CAACL,EAAE,CAAC;IAErC,IAAI,CAACD,MAAM,GAAGM,KAAK,CAACN,MAAM;IAC1B,IAAI,CAACC,EAAE,GAAGK,KAAK,CAACL,EAAE;IAClB,IAAI,CAACG,QAAQ,GAAGE,KAAK,CAACF,QAAQ;IAC9B,IAAI,CAACI,KAAK,GAAGF,KAAK,CAACG,IAAI;IACvB,IAAI,CAACC,UAAU,GAAGJ,KAAK,CAACI,UAAU;;IAElC;IACA,IAAIJ,KAAK,CAACV,KAAK,EAAE;MACf,IAAI,IAAI,CAACY,KAAK,EAAE;QACd,MAAM,IAAIG,KAAK,CAAC,8CAA8C,CAAC;MACjE;MACA,IAAIC,GAAG,GAAGlB,KAAK,CAACmB,aAAa,CAAC,IAAI,EAAEP,KAAK,CAACV,KAAK,CAAC;MAChD;MACA,IAAI,CAACY,KAAK,GAAGZ,KAAK,CAACkB,QAAQ,CAACF,GAAG,CAAC;IAClC;EACF;;EAEA;AACF;AACA;EACEH,IAAI,CAACM,MAAM,EAAE;IACX,IAAIC,WAAW,GAAGD,MAAM;IACxB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9BC,WAAW,GAAGD,MAAM,CAACC,WAAW;IAClC;IACA,OAAOpB,KAAK,CAACqB,WAAW,CAAC,IAAI,CAACT,KAAK,EAAEQ,WAAW,CAAC;EACnD;EAEAE,aAAa,CAACC,OAAO,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACjB,QAAQ,CAACkB,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,IAAIE,KAAK,GAAG,IAAI,CAACnB,QAAQ,CAACiB,CAAC,CAAC;MAC5B,IAAIG,WAAW,GAAGJ,OAAO,CAACG,KAAK,CAAC;MAChC,IAAIC,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK1B,eAAe,CAAC2B,SAAS,EAAE;QACrE,OAAO3B,eAAe,CAAC2B,SAAS;MAClC;MACA,IAAID,WAAW,KAAK1B,eAAe,CAAC4B,YAAY,EAAE;QAChDF,WAAW,GAAGD,KAAK,CAACJ,aAAa,CAACC,OAAO,CAAC;QAC1C,IAAII,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK1B,eAAe,CAAC2B,SAAS,EAAE;UACrE,OAAO3B,eAAe,CAAC2B,SAAS;QAClC;MACF;IACF;EACF;AACF"},"metadata":{},"sourceType":"module"}