{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ParsingFailedStatus, scout, TouchPopup } from '../index';\nexport default class TimePickerTouchPopup extends TouchPopup {\n  constructor() {\n    super();\n  }\n  _init(options) {\n    super._init(options);\n    this._field.on('acceptInput', this._onFieldAcceptInput.bind(this));\n    this.addCssClass('time-picker-touch-popup');\n  }\n\n  /**\n   * @override TouchPopup.js\n   */\n  _initWidget(options) {\n    this._widget = scout.create('TimePicker', {\n      parent: this,\n      timeResolution: options.timeResolution\n    });\n  }\n  _render() {\n    super._render();\n    this._field.$container.addClass('time');\n  }\n  getTimePicker() {\n    return this._widget;\n  }\n  _onFieldAcceptInput(event) {\n    // Delegate to original field\n    this._touchField.setDisplayText(event.displayText);\n    this._touchField.setErrorStatus(event.errorStatus);\n    let hasParsingFailedError = event.errorStatus ? event.errorStatus.containsStatus(ParsingFailedStatus) : false;\n    if (!hasParsingFailedError) {\n      this._touchField.setValue(event.value);\n    }\n    this._touchField._triggerAcceptInput();\n  }\n\n  /**\n   * @override\n   */\n  _acceptInput() {\n    this._field.acceptTime();\n    this.close();\n  }\n}","map":{"version":3,"names":["ParsingFailedStatus","scout","TouchPopup","TimePickerTouchPopup","constructor","_init","options","_field","on","_onFieldAcceptInput","bind","addCssClass","_initWidget","_widget","create","parent","timeResolution","_render","$container","addClass","getTimePicker","event","_touchField","setDisplayText","displayText","setErrorStatus","errorStatus","hasParsingFailedError","containsStatus","setValue","value","_triggerAcceptInput","_acceptInput","acceptTime","close"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/timepicker/TimePickerTouchPopup.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ParsingFailedStatus, scout, TouchPopup} from '../index';\n\nexport default class TimePickerTouchPopup extends TouchPopup {\n\n  constructor() {\n    super();\n  }\n\n  _init(options) {\n    super._init(options);\n    this._field.on('acceptInput', this._onFieldAcceptInput.bind(this));\n    this.addCssClass('time-picker-touch-popup');\n  }\n\n  /**\n   * @override TouchPopup.js\n   */\n  _initWidget(options) {\n    this._widget = scout.create('TimePicker', {\n      parent: this,\n      timeResolution: options.timeResolution\n    });\n  }\n\n  _render() {\n    super._render();\n    this._field.$container.addClass('time');\n  }\n\n  getTimePicker() {\n    return this._widget;\n  }\n\n  _onFieldAcceptInput(event) {\n    // Delegate to original field\n    this._touchField.setDisplayText(event.displayText);\n    this._touchField.setErrorStatus(event.errorStatus);\n    let hasParsingFailedError = event.errorStatus ? event.errorStatus.containsStatus(ParsingFailedStatus) : false;\n    if (!hasParsingFailedError) {\n      this._touchField.setValue(event.value);\n    }\n    this._touchField._triggerAcceptInput();\n  }\n\n  /**\n   * @override\n   */\n  _acceptInput() {\n    this._field.acceptTime();\n    this.close();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mBAAmB,EAAEC,KAAK,EAAEC,UAAU,QAAO,UAAU;AAE/D,eAAe,MAAMC,oBAAoB,SAASD,UAAU,CAAC;EAE3DE,WAAW,GAAG;IACZ,KAAK,EAAE;EACT;EAEAC,KAAK,CAACC,OAAO,EAAE;IACb,KAAK,CAACD,KAAK,CAACC,OAAO,CAAC;IACpB,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,aAAa,EAAE,IAAI,CAACC,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClE,IAAI,CAACC,WAAW,CAAC,yBAAyB,CAAC;EAC7C;;EAEA;AACF;AACA;EACEC,WAAW,CAACN,OAAO,EAAE;IACnB,IAAI,CAACO,OAAO,GAAGZ,KAAK,CAACa,MAAM,CAAC,YAAY,EAAE;MACxCC,MAAM,EAAE,IAAI;MACZC,cAAc,EAAEV,OAAO,CAACU;IAC1B,CAAC,CAAC;EACJ;EAEAC,OAAO,GAAG;IACR,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACV,MAAM,CAACW,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;EACzC;EAEAC,aAAa,GAAG;IACd,OAAO,IAAI,CAACP,OAAO;EACrB;EAEAJ,mBAAmB,CAACY,KAAK,EAAE;IACzB;IACA,IAAI,CAACC,WAAW,CAACC,cAAc,CAACF,KAAK,CAACG,WAAW,CAAC;IAClD,IAAI,CAACF,WAAW,CAACG,cAAc,CAACJ,KAAK,CAACK,WAAW,CAAC;IAClD,IAAIC,qBAAqB,GAAGN,KAAK,CAACK,WAAW,GAAGL,KAAK,CAACK,WAAW,CAACE,cAAc,CAAC5B,mBAAmB,CAAC,GAAG,KAAK;IAC7G,IAAI,CAAC2B,qBAAqB,EAAE;MAC1B,IAAI,CAACL,WAAW,CAACO,QAAQ,CAACR,KAAK,CAACS,KAAK,CAAC;IACxC;IACA,IAAI,CAACR,WAAW,CAACS,mBAAmB,EAAE;EACxC;;EAEA;AACF;AACA;EACEC,YAAY,GAAG;IACb,IAAI,CAACzB,MAAM,CAAC0B,UAAU,EAAE;IACxB,IAAI,CAACC,KAAK,EAAE;EACd;AACF"},"metadata":{},"sourceType":"module"}