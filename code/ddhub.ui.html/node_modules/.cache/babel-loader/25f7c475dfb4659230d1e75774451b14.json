{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { HtmlComponent, IconDesc, Image, scout, Widget } from '../index';\n\n/**\n * Widget representing an icon. It may be a font icon or an image icon. Depending on the type, either a span or an img tag will be rendered.\n * <p>\n * See also jquery-scout.icon/appendIcon. Main difference to these implementations is that the image loading will invalidate the layout by using {@link Image}.\n */\nexport default class Icon extends Widget {\n  constructor() {\n    super();\n    this.autoFit = false;\n    /** @type {IconDesc} */\n    this.iconDesc = null;\n\n    /**\n     * Is set if the icon is rendered and an image, it is not set if it is a font icon\n     * @type Image\n     */\n    this.image = null;\n    this.prepend = false;\n  }\n  _init(model) {\n    super._init(model);\n    this._setIconDesc(this.iconDesc);\n  }\n  _render() {\n    this._renderIconDesc(); // Must not be in _renderProperties because it creates $container -> properties like visible etc. need to be rendered afterwards\n  }\n\n  /**\n   * Accepts either an iconId as string or an {@link IconDesc}.\n   * @param {(string|IconDesc)} icon\n   */\n  setIconDesc(iconDesc) {\n    this.setProperty('iconDesc', iconDesc);\n  }\n  _setIconDesc(iconDesc) {\n    iconDesc = IconDesc.ensure(iconDesc);\n    this._setProperty('iconDesc', iconDesc);\n  }\n  _renderIconDesc() {\n    this._removeFontIcon();\n    this._removeImageIcon();\n    if (!this.iconDesc || this.iconDesc.isFontIcon()) {\n      this._renderFontIcon();\n    } else {\n      this._renderImageIcon();\n    }\n    if (!this.rendering) {\n      this._renderProperties();\n    }\n    this.invalidateLayoutTree();\n  }\n  _renderFontIcon() {\n    this.$container = this.$parent.appendIcon(this.iconDesc);\n    if (this.prepend) {\n      this.$container.prependTo(this.$parent);\n    }\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n  }\n  _removeFontIcon() {\n    if (this.$container) {\n      this.$container.remove();\n      this.$container = null;\n    }\n  }\n  _renderImageIcon() {\n    if (this.image) {\n      return;\n    }\n    this.image = scout.create('Image', {\n      parent: this,\n      imageUrl: this.iconDesc.iconUrl,\n      cssClass: 'icon image-icon',\n      autoFit: this.autoFit,\n      prepend: this.prepend\n    });\n    this.image.render(this.$parent);\n    this.image.one('destroy', () => {\n      this.image = null;\n    });\n    this.image.on('load error', event => {\n      // propagate event\n      this.trigger(event.type, event);\n    });\n    this.$container = this.image.$container;\n    this.htmlComp = this.image.htmlComp;\n  }\n  _removeImageIcon() {\n    if (this.image) {\n      this.image.destroy();\n      this.image = null;\n    }\n  }\n\n  /**\n   * Delegates to this.image.setAutoFit, but only if Icon is an image. Beside updating the autoFit property, this method has no effect if the icon is a font-icon.\n   */\n  setAutoFit(autoFit) {\n    this.setProperty('autoFit', autoFit);\n    if (this.image) {\n      this.image.setAutoFit(autoFit);\n    }\n  }\n}","map":{"version":3,"names":["HtmlComponent","IconDesc","Image","scout","Widget","Icon","constructor","autoFit","iconDesc","image","prepend","_init","model","_setIconDesc","_render","_renderIconDesc","setIconDesc","setProperty","ensure","_setProperty","_removeFontIcon","_removeImageIcon","isFontIcon","_renderFontIcon","_renderImageIcon","rendering","_renderProperties","invalidateLayoutTree","$container","$parent","appendIcon","prependTo","htmlComp","install","session","remove","create","parent","imageUrl","iconUrl","cssClass","render","one","on","event","trigger","type","destroy","setAutoFit"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/image/Icon.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {HtmlComponent, IconDesc, Image, scout, Widget} from '../index';\n\n/**\n * Widget representing an icon. It may be a font icon or an image icon. Depending on the type, either a span or an img tag will be rendered.\n * <p>\n * See also jquery-scout.icon/appendIcon. Main difference to these implementations is that the image loading will invalidate the layout by using {@link Image}.\n */\nexport default class Icon extends Widget {\n\n  constructor() {\n    super();\n\n    this.autoFit = false;\n    /** @type {IconDesc} */\n    this.iconDesc = null;\n\n    /**\n     * Is set if the icon is rendered and an image, it is not set if it is a font icon\n     * @type Image\n     */\n    this.image = null;\n    this.prepend = false;\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setIconDesc(this.iconDesc);\n  }\n\n  _render() {\n    this._renderIconDesc(); // Must not be in _renderProperties because it creates $container -> properties like visible etc. need to be rendered afterwards\n  }\n\n  /**\n   * Accepts either an iconId as string or an {@link IconDesc}.\n   * @param {(string|IconDesc)} icon\n   */\n  setIconDesc(iconDesc) {\n    this.setProperty('iconDesc', iconDesc);\n  }\n\n  _setIconDesc(iconDesc) {\n    iconDesc = IconDesc.ensure(iconDesc);\n    this._setProperty('iconDesc', iconDesc);\n  }\n\n  _renderIconDesc() {\n    this._removeFontIcon();\n    this._removeImageIcon();\n\n    if (!this.iconDesc || this.iconDesc.isFontIcon()) {\n      this._renderFontIcon();\n    } else {\n      this._renderImageIcon();\n    }\n    if (!this.rendering) {\n      this._renderProperties();\n    }\n    this.invalidateLayoutTree();\n  }\n\n  _renderFontIcon() {\n    this.$container = this.$parent.appendIcon(this.iconDesc);\n    if (this.prepend) {\n      this.$container.prependTo(this.$parent);\n    }\n\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n  }\n\n  _removeFontIcon() {\n    if (this.$container) {\n      this.$container.remove();\n      this.$container = null;\n    }\n  }\n\n  _renderImageIcon() {\n    if (this.image) {\n      return;\n    }\n    this.image = scout.create('Image', {\n      parent: this,\n      imageUrl: this.iconDesc.iconUrl,\n      cssClass: 'icon image-icon',\n      autoFit: this.autoFit,\n      prepend: this.prepend\n    });\n    this.image.render(this.$parent);\n    this.image.one('destroy', () => {\n      this.image = null;\n    });\n    this.image.on('load error', event => {\n      // propagate event\n      this.trigger(event.type, event);\n    });\n    this.$container = this.image.$container;\n    this.htmlComp = this.image.htmlComp;\n  }\n\n  _removeImageIcon() {\n    if (this.image) {\n      this.image.destroy();\n      this.image = null;\n    }\n  }\n\n  /**\n   * Delegates to this.image.setAutoFit, but only if Icon is an image. Beside updating the autoFit property, this method has no effect if the icon is a font-icon.\n   */\n  setAutoFit(autoFit) {\n    this.setProperty('autoFit', autoFit);\n    if (this.image) {\n      this.image.setAutoFit(autoFit);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}