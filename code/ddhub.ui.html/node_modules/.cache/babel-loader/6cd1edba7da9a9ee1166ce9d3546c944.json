{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, TreeLayout } from '../../index';\nexport default class OutlineLayout extends TreeLayout {\n  constructor(outline) {\n    super(outline);\n    this.outline = outline;\n  }\n  _layout($container) {\n    let containerSize,\n      htmlContainer = this.outline.htmlComp;\n    super._layout($container);\n    containerSize = htmlContainer.availableSize({\n      exact: true\n    }).subtract(htmlContainer.insets());\n    if (this.outline.embedDetailContent) {\n      let selectedNode = this.outline.selectedNodes[0];\n      if (selectedNode && selectedNode.rendered) {\n        let pageHtmlComp = selectedNode.htmlComp;\n        // pageHtmlComp is null if there is no detail form and no detail menubar\n        if (pageHtmlComp) {\n          let prefSize = pageHtmlComp.prefSize({\n            widthHint: containerSize.width\n          });\n          pageHtmlComp.setSize(new Dimension(containerSize.width, prefSize.height));\n          selectedNode.height = prefSize.height + pageHtmlComp.margins().vertical();\n        }\n      }\n    }\n\n    // layout menu bars\n    this.outline.titleMenuBar.validateLayout();\n    this.outline.nodeMenuBar.validateLayout();\n    this.outline.detailMenuBar.validateLayout();\n  }\n  _setDataHeight(heightOffset) {\n    /** @type {Dimension} */\n    let titleSize = null;\n    if (this.outline.titleVisible) {\n      titleSize = graphics.size(this.outline.$title, true);\n    }\n    super._setDataHeight(heightOffset + (titleSize === null ? 0 : titleSize.height));\n  }\n}","map":{"version":3,"names":["Dimension","graphics","TreeLayout","OutlineLayout","constructor","outline","_layout","$container","containerSize","htmlContainer","htmlComp","availableSize","exact","subtract","insets","embedDetailContent","selectedNode","selectedNodes","rendered","pageHtmlComp","prefSize","widthHint","width","setSize","height","margins","vertical","titleMenuBar","validateLayout","nodeMenuBar","detailMenuBar","_setDataHeight","heightOffset","titleSize","titleVisible","size","$title"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/outline/OutlineLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, TreeLayout} from '../../index';\n\nexport default class OutlineLayout extends TreeLayout {\n\n  constructor(outline) {\n    super(outline);\n    this.outline = outline;\n  }\n\n  _layout($container) {\n    let containerSize,\n      htmlContainer = this.outline.htmlComp;\n\n    super._layout($container);\n\n    containerSize = htmlContainer.availableSize({exact: true})\n      .subtract(htmlContainer.insets());\n\n    if (this.outline.embedDetailContent) {\n      let selectedNode = this.outline.selectedNodes[0];\n      if (selectedNode && selectedNode.rendered) {\n        let pageHtmlComp = selectedNode.htmlComp;\n        // pageHtmlComp is null if there is no detail form and no detail menubar\n        if (pageHtmlComp) {\n          let prefSize = pageHtmlComp.prefSize({widthHint: containerSize.width});\n          pageHtmlComp.setSize(new Dimension(containerSize.width, prefSize.height));\n          selectedNode.height = prefSize.height + pageHtmlComp.margins().vertical();\n        }\n      }\n    }\n\n    // layout menu bars\n    this.outline.titleMenuBar.validateLayout();\n    this.outline.nodeMenuBar.validateLayout();\n    this.outline.detailMenuBar.validateLayout();\n  }\n\n  _setDataHeight(heightOffset) {\n    /** @type {Dimension} */\n    let titleSize = null;\n    if (this.outline.titleVisible) {\n      titleSize = graphics.size(this.outline.$title, true);\n    }\n    super._setDataHeight(heightOffset + (titleSize === null ? 0 : titleSize.height));\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAO,aAAa;AAE3D,eAAe,MAAMC,aAAa,SAASD,UAAU,CAAC;EAEpDE,WAAW,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAC,OAAO,CAACC,UAAU,EAAE;IAClB,IAAIC,aAAa;MACfC,aAAa,GAAG,IAAI,CAACJ,OAAO,CAACK,QAAQ;IAEvC,KAAK,CAACJ,OAAO,CAACC,UAAU,CAAC;IAEzBC,aAAa,GAAGC,aAAa,CAACE,aAAa,CAAC;MAACC,KAAK,EAAE;IAAI,CAAC,CAAC,CACvDC,QAAQ,CAACJ,aAAa,CAACK,MAAM,EAAE,CAAC;IAEnC,IAAI,IAAI,CAACT,OAAO,CAACU,kBAAkB,EAAE;MACnC,IAAIC,YAAY,GAAG,IAAI,CAACX,OAAO,CAACY,aAAa,CAAC,CAAC,CAAC;MAChD,IAAID,YAAY,IAAIA,YAAY,CAACE,QAAQ,EAAE;QACzC,IAAIC,YAAY,GAAGH,YAAY,CAACN,QAAQ;QACxC;QACA,IAAIS,YAAY,EAAE;UAChB,IAAIC,QAAQ,GAAGD,YAAY,CAACC,QAAQ,CAAC;YAACC,SAAS,EAAEb,aAAa,CAACc;UAAK,CAAC,CAAC;UACtEH,YAAY,CAACI,OAAO,CAAC,IAAIvB,SAAS,CAACQ,aAAa,CAACc,KAAK,EAAEF,QAAQ,CAACI,MAAM,CAAC,CAAC;UACzER,YAAY,CAACQ,MAAM,GAAGJ,QAAQ,CAACI,MAAM,GAAGL,YAAY,CAACM,OAAO,EAAE,CAACC,QAAQ,EAAE;QAC3E;MACF;IACF;;IAEA;IACA,IAAI,CAACrB,OAAO,CAACsB,YAAY,CAACC,cAAc,EAAE;IAC1C,IAAI,CAACvB,OAAO,CAACwB,WAAW,CAACD,cAAc,EAAE;IACzC,IAAI,CAACvB,OAAO,CAACyB,aAAa,CAACF,cAAc,EAAE;EAC7C;EAEAG,cAAc,CAACC,YAAY,EAAE;IAC3B;IACA,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAI,IAAI,CAAC5B,OAAO,CAAC6B,YAAY,EAAE;MAC7BD,SAAS,GAAGhC,QAAQ,CAACkC,IAAI,CAAC,IAAI,CAAC9B,OAAO,CAAC+B,MAAM,EAAE,IAAI,CAAC;IACtD;IACA,KAAK,CAACL,cAAc,CAACC,YAAY,IAAIC,SAAS,KAAK,IAAI,GAAG,CAAC,GAAGA,SAAS,CAACT,MAAM,CAAC,CAAC;EAClF;AACF"},"metadata":{},"sourceType":"module"}