{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons, Insets, Popup, Resizable, scout, WidgetPopupLayout } from '../index';\nimport $ from 'jquery';\nimport graphics from '../layout/graphics';\nexport default class WidgetPopup extends Popup {\n  constructor() {\n    super();\n    this.animateOpening = true;\n    this.animateResize = true;\n    this.animateRemoval = true;\n    this.closable = false;\n    this.closeAction = null;\n    this.movable = false;\n    this.resizable = false;\n    this.resizeModes = null;\n    this.minSize = null;\n    this.widget = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.windowResizeType = 'layoutAndPosition';\n    this.$dragHandle = null;\n    // Action bar on the top right corner, is used to display the close action but may also be used by popups to add custom actions.\n    // The bar will only be added automatically if the popup is closable.\n    this.$actions = null;\n    this._moveHandler = this._onMove.bind(this);\n    this._resizeHandler = this._onResize.bind(this);\n    this._autoPositionOrig = null;\n    this._addWidgetProperties(['widget']);\n  }\n  _createLayout() {\n    return new WidgetPopupLayout(this);\n  }\n  _init(model) {\n    super._init(model);\n    this._setClosable(this.closable);\n  }\n  _render() {\n    super._render();\n    this.$container.addClass('widget-popup');\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderWidget();\n    this._renderClosable();\n    this._renderMovable();\n    this._renderResizable();\n  }\n  _remove() {\n    this.$dragHandle = null;\n    this.$actions = null;\n    super._remove();\n  }\n  setWidget(widget) {\n    this.setProperty('widget', widget);\n  }\n  _renderWidget() {\n    if (!this.widget) {\n      return;\n    }\n    this.widget.render();\n    this.widget.$container.addClass('popup-widget');\n    this.invalidateLayoutTree();\n  }\n  setClosable(closable) {\n    this.setProperty('closable', closable);\n  }\n  _setClosable(closable) {\n    this._setProperty('closable', closable);\n    if (this.closable) {\n      if (this.closeAction) {\n        return;\n      }\n      this.closeAction = this._createCloseAction();\n      this.closeAction.on('action', this._onCloseAction.bind(this));\n    } else {\n      if (!this.closeAction) {\n        return;\n      }\n      this.closeAction.destroy();\n      this.closeAction = null;\n    }\n  }\n  _createCloseAction() {\n    return scout.create('Action', {\n      parent: this,\n      cssClass: 'close-action menu-item',\n      iconId: icons.REMOVE\n    });\n  }\n  _renderClosable() {\n    if (this.closeAction) {\n      if (!this.$actions) {\n        this.$actions = this.$container.appendDiv('actions');\n      }\n      this.closeAction.render(this.$actions);\n    } else {\n      if (this.$actions && this.$actions.children().length === 0) {\n        this.$actions.remove();\n        this.$actions = null;\n      }\n    }\n  }\n  _onCloseAction() {\n    this.close();\n  }\n  setResizable(resizable) {\n    this.setProperty('resizable', resizable);\n  }\n  _renderResizable() {\n    if (this.resizable) {\n      this.$container.resizable({\n        modes: this._determineResizeModes(),\n        $parent: this.$container,\n        boundaries: this._calculateResizeBoundaries()\n      }).on('resize', this._resizeHandler);\n    } else {\n      this.$container.unresizable().off('resize', this._resizeHandler);\n      this.invalidateLayoutTree(); // Resize popup to preferred size\n    }\n  }\n\n  _calculateResizeBoundaries() {\n    let resizeBoundaries = new Insets();\n    if (!this.$arrow) {\n      return resizeBoundaries;\n    }\n    let anchorMiddle = this._getAnchorMiddlePoint();\n    if (!anchorMiddle) {\n      return resizeBoundaries;\n    }\n    let arrowSize = graphics.size(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      resizeBoundaries.top = anchorMiddle.y - arrowSize.height;\n      resizeBoundaries.bottom = anchorMiddle.y + arrowSize.height;\n    } else {\n      resizeBoundaries.left = anchorMiddle.x - arrowSize.width;\n      resizeBoundaries.right = anchorMiddle.x + arrowSize.width;\n    }\n    return resizeBoundaries;\n  }\n  _determineResizeModes() {\n    if (!this.$arrow || this.resizeModes) {\n      return this.resizeModes;\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.TOP) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.NORTH];\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.BOTTOM) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.SOUTH];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.LEFT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.WEST];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.RIGHT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.EAST];\n    }\n    return this.resizeModes;\n  }\n  _onResize(event) {\n    let autoSizeOrig = this.htmlComp.layout.autoSize;\n    this.htmlComp.layout.autoSize = false;\n    this.htmlComp.revalidateLayout();\n    this.htmlComp.layout.autoSize = autoSizeOrig;\n    this._updateArrowPosition();\n    return false;\n  }\n\n  /**\n   * @Override\n   */\n  position(switchIfNecessary) {\n    if (!this.rendered) {\n      return;\n    }\n    super.position(switchIfNecessary);\n    if (this.resizable) {\n      let resizable = this.$container.data('resizable');\n      resizable.setBoundaries(this._calculateResizeBoundaries());\n      resizable.setModes(this._determineResizeModes());\n      this._updateArrowPosition();\n    }\n  }\n\n  /**\n   * @Override\n   */\n  _updateArrowClass(verticalAlignment, horizontalAlignment) {\n    super._updateArrowClass(verticalAlignment, horizontalAlignment);\n    if (this.$arrow) {\n      // make sure to remove css positioning which could have been applied in _updateArrowPosition()\n      // otherwise the original positioning functions of popup.js may not work correctly anymore\n      this.$arrow.cssLeft(null);\n      this.$arrow.cssTop(null);\n    }\n  }\n  _updateArrowPosition() {\n    if (!this.$arrow) {\n      return;\n    }\n    let anchorMiddlePoint = this._getAnchorMiddlePoint();\n    if (!anchorMiddlePoint) {\n      return;\n    }\n    this.$arrow.removeClass('leftedge rightedge topedge bottomedge');\n    let arrowSize = graphics.size(this.$arrow);\n    let arrowMargins = graphics.margins(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      let verticalMarginShift = arrowMargins.top + arrowMargins.bottom;\n      this.$arrow.cssTop(anchorMiddlePoint.y - (verticalMarginShift + this.$container.position().top + arrowSize.height / 2));\n    } else {\n      let horizontalMarginShift = arrowMargins.left + arrowMargins.right;\n      this.$arrow.cssLeft(anchorMiddlePoint.x - (horizontalMarginShift + this.$container.position().left + arrowSize.width / 2));\n    }\n  }\n  _getAnchorMiddlePoint() {\n    let anchorBounds = this.getAnchorBounds();\n    return anchorBounds ? anchorBounds.center() : null;\n  }\n  _isVerticallyAligned() {\n    return scout.isOneOf(this.calculatedHorizontalAlignment, Popup.Alignment.LEFT, Popup.Alignment.RIGHT);\n  }\n  setMovable(movable) {\n    this.setProperty('movable', movable);\n  }\n  _renderMovable() {\n    if (this.movable) {\n      if (this.$dragHandle) {\n        return;\n      }\n      this.$dragHandle = this.$container.prependDiv('drag-handle');\n      this.$container.draggable(this.$dragHandle, $.throttle(this._moveHandler, 1000 / 60)); // 60fps\n    } else {\n      if (!this.$dragHandle) {\n        return;\n      }\n      this.$container.undraggable(this.$dragHandle);\n      this.$dragHandle.remove();\n      this.$dragHandle = null;\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n      this.invalidateLayoutTree(); // move popup to preferred position\n    }\n  }\n\n  _onMove(newOffset) {\n    // Disable automatic positioning as soon as the user drags the popup\n    if (this._autoPositionOrig === null) {\n      this._autoPositionOrig = this.htmlComp.layout.autoPosition;\n      this.htmlComp.layout.autoPosition = false;\n    }\n    this.trigger('move', newOffset);\n  }\n  set$Anchor($anchor) {\n    if (this._autoPositionOrig && $anchor && this.$anchor !== $anchor) {\n      // If a new anchor is set, the popup is positioned automatically -> reset flag to make animation work\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n    }\n    super.set$Anchor($anchor);\n  }\n}","map":{"version":3,"names":["icons","Insets","Popup","Resizable","scout","WidgetPopupLayout","$","graphics","WidgetPopup","constructor","animateOpening","animateResize","animateRemoval","closable","closeAction","movable","resizable","resizeModes","minSize","widget","windowPaddingX","windowPaddingY","windowResizeType","$dragHandle","$actions","_moveHandler","_onMove","bind","_resizeHandler","_onResize","_autoPositionOrig","_addWidgetProperties","_createLayout","_init","model","_setClosable","_render","$container","addClass","_renderProperties","_renderWidget","_renderClosable","_renderMovable","_renderResizable","_remove","setWidget","setProperty","render","invalidateLayoutTree","setClosable","_setProperty","_createCloseAction","on","_onCloseAction","destroy","create","parent","cssClass","iconId","REMOVE","appendDiv","children","length","remove","close","setResizable","modes","_determineResizeModes","$parent","boundaries","_calculateResizeBoundaries","unresizable","off","resizeBoundaries","$arrow","anchorMiddle","_getAnchorMiddlePoint","arrowSize","size","_isVerticallyAligned","top","y","height","bottom","left","x","width","right","calculatedVerticalAlignment","Alignment","TOP","MODES","WEST","EAST","NORTH","BOTTOM","SOUTH","calculatedHorizontalAlignment","LEFT","RIGHT","event","autoSizeOrig","htmlComp","layout","autoSize","revalidateLayout","_updateArrowPosition","position","switchIfNecessary","rendered","data","setBoundaries","setModes","_updateArrowClass","verticalAlignment","horizontalAlignment","cssLeft","cssTop","anchorMiddlePoint","removeClass","arrowMargins","margins","verticalMarginShift","horizontalMarginShift","anchorBounds","getAnchorBounds","center","isOneOf","setMovable","prependDiv","draggable","throttle","undraggable","autoPosition","newOffset","trigger","set$Anchor","$anchor"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/popup/WidgetPopup.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons, Insets, Popup, Resizable, scout, WidgetPopupLayout} from '../index';\nimport $ from 'jquery';\nimport graphics from '../layout/graphics';\n\nexport default class WidgetPopup extends Popup {\n\n  constructor() {\n    super();\n    this.animateOpening = true;\n    this.animateResize = true;\n    this.animateRemoval = true;\n    this.closable = false;\n    this.closeAction = null;\n    this.movable = false;\n    this.resizable = false;\n    this.resizeModes = null;\n    this.minSize = null;\n    this.widget = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.windowResizeType = 'layoutAndPosition';\n    this.$dragHandle = null;\n    // Action bar on the top right corner, is used to display the close action but may also be used by popups to add custom actions.\n    // The bar will only be added automatically if the popup is closable.\n    this.$actions = null;\n    this._moveHandler = this._onMove.bind(this);\n    this._resizeHandler = this._onResize.bind(this);\n    this._autoPositionOrig = null;\n    this._addWidgetProperties(['widget']);\n  }\n\n  _createLayout() {\n    return new WidgetPopupLayout(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setClosable(this.closable);\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('widget-popup');\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderWidget();\n    this._renderClosable();\n    this._renderMovable();\n    this._renderResizable();\n  }\n\n  _remove() {\n    this.$dragHandle = null;\n    this.$actions = null;\n    super._remove();\n  }\n\n  setWidget(widget) {\n    this.setProperty('widget', widget);\n  }\n\n  _renderWidget() {\n    if (!this.widget) {\n      return;\n    }\n    this.widget.render();\n    this.widget.$container.addClass('popup-widget');\n    this.invalidateLayoutTree();\n  }\n\n  setClosable(closable) {\n    this.setProperty('closable', closable);\n  }\n\n  _setClosable(closable) {\n    this._setProperty('closable', closable);\n    if (this.closable) {\n      if (this.closeAction) {\n        return;\n      }\n      this.closeAction = this._createCloseAction();\n      this.closeAction.on('action', this._onCloseAction.bind(this));\n    } else {\n      if (!this.closeAction) {\n        return;\n      }\n      this.closeAction.destroy();\n      this.closeAction = null;\n    }\n  }\n\n  _createCloseAction() {\n    return scout.create('Action', {\n      parent: this,\n      cssClass: 'close-action menu-item',\n      iconId: icons.REMOVE\n    });\n  }\n\n  _renderClosable() {\n    if (this.closeAction) {\n      if (!this.$actions) {\n        this.$actions = this.$container.appendDiv('actions');\n      }\n      this.closeAction.render(this.$actions);\n    } else {\n      if (this.$actions && this.$actions.children().length === 0) {\n        this.$actions.remove();\n        this.$actions = null;\n      }\n    }\n  }\n\n  _onCloseAction() {\n    this.close();\n  }\n\n  setResizable(resizable) {\n    this.setProperty('resizable', resizable);\n  }\n\n  _renderResizable() {\n    if (this.resizable) {\n      this.$container\n        .resizable({modes: this._determineResizeModes(), $parent: this.$container, boundaries: this._calculateResizeBoundaries()})\n        .on('resize', this._resizeHandler);\n    } else {\n      this.$container\n        .unresizable()\n        .off('resize', this._resizeHandler);\n      this.invalidateLayoutTree(); // Resize popup to preferred size\n    }\n  }\n\n  _calculateResizeBoundaries() {\n    let resizeBoundaries = new Insets();\n    if (!this.$arrow) {\n      return resizeBoundaries;\n    }\n    let anchorMiddle = this._getAnchorMiddlePoint();\n    if (!anchorMiddle) {\n      return resizeBoundaries;\n    }\n    let arrowSize = graphics.size(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      resizeBoundaries.top = anchorMiddle.y - arrowSize.height;\n      resizeBoundaries.bottom = anchorMiddle.y + arrowSize.height;\n    } else {\n      resizeBoundaries.left = anchorMiddle.x - arrowSize.width;\n      resizeBoundaries.right = anchorMiddle.x + arrowSize.width;\n    }\n    return resizeBoundaries;\n  }\n\n  _determineResizeModes() {\n    if (!this.$arrow || this.resizeModes) {\n      return this.resizeModes;\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.TOP) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.NORTH];\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.BOTTOM) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.SOUTH];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.LEFT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.WEST];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.RIGHT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.EAST];\n    }\n    return this.resizeModes;\n  }\n\n  _onResize(event) {\n    let autoSizeOrig = this.htmlComp.layout.autoSize;\n    this.htmlComp.layout.autoSize = false;\n    this.htmlComp.revalidateLayout();\n    this.htmlComp.layout.autoSize = autoSizeOrig;\n    this._updateArrowPosition();\n    return false;\n  }\n\n  /**\n   * @Override\n   */\n  position(switchIfNecessary) {\n    if (!this.rendered) {\n      return;\n    }\n    super.position(switchIfNecessary);\n    if (this.resizable) {\n      let resizable = this.$container.data('resizable');\n      resizable.setBoundaries(this._calculateResizeBoundaries());\n      resizable.setModes(this._determineResizeModes());\n      this._updateArrowPosition();\n    }\n  }\n\n  /**\n   * @Override\n   */\n  _updateArrowClass(verticalAlignment, horizontalAlignment) {\n    super._updateArrowClass(verticalAlignment, horizontalAlignment);\n    if (this.$arrow) {\n      // make sure to remove css positioning which could have been applied in _updateArrowPosition()\n      // otherwise the original positioning functions of popup.js may not work correctly anymore\n      this.$arrow.cssLeft(null);\n      this.$arrow.cssTop(null);\n    }\n  }\n\n  _updateArrowPosition() {\n    if (!this.$arrow) {\n      return;\n    }\n    let anchorMiddlePoint = this._getAnchorMiddlePoint();\n    if (!anchorMiddlePoint) {\n      return;\n    }\n    this.$arrow.removeClass('leftedge rightedge topedge bottomedge');\n    let arrowSize = graphics.size(this.$arrow);\n    let arrowMargins = graphics.margins(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      let verticalMarginShift = arrowMargins.top + arrowMargins.bottom;\n      this.$arrow.cssTop(anchorMiddlePoint.y - (verticalMarginShift + this.$container.position().top + (arrowSize.height / 2)));\n    } else {\n      let horizontalMarginShift = arrowMargins.left + arrowMargins.right;\n      this.$arrow.cssLeft(anchorMiddlePoint.x - (horizontalMarginShift + this.$container.position().left + (arrowSize.width / 2)));\n    }\n  }\n\n  _getAnchorMiddlePoint() {\n    let anchorBounds = this.getAnchorBounds();\n    return anchorBounds ? anchorBounds.center() : null;\n  }\n\n  _isVerticallyAligned() {\n    return scout.isOneOf(this.calculatedHorizontalAlignment, Popup.Alignment.LEFT, Popup.Alignment.RIGHT);\n  }\n\n  setMovable(movable) {\n    this.setProperty('movable', movable);\n  }\n\n  _renderMovable() {\n    if (this.movable) {\n      if (this.$dragHandle) {\n        return;\n      }\n      this.$dragHandle = this.$container.prependDiv('drag-handle');\n      this.$container.draggable(this.$dragHandle, $.throttle(this._moveHandler, 1000 / 60)); // 60fps\n    } else {\n      if (!this.$dragHandle) {\n        return;\n      }\n      this.$container.undraggable(this.$dragHandle);\n      this.$dragHandle.remove();\n      this.$dragHandle = null;\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n      this.invalidateLayoutTree(); // move popup to preferred position\n    }\n  }\n\n  _onMove(newOffset) {\n    // Disable automatic positioning as soon as the user drags the popup\n    if (this._autoPositionOrig === null) {\n      this._autoPositionOrig = this.htmlComp.layout.autoPosition;\n      this.htmlComp.layout.autoPosition = false;\n    }\n    this.trigger('move', newOffset);\n  }\n\n  set$Anchor($anchor) {\n    if (this._autoPositionOrig && $anchor && this.$anchor !== $anchor) {\n      // If a new anchor is set, the popup is positioned automatically -> reset flag to make animation work\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n    }\n    super.set$Anchor($anchor);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}