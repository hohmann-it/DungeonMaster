{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, EventSupport, HtmlComponent, Rectangle, scout, SingleLayout } from '../index';\nimport $ from 'jquery';\nexport default class PopupWindow {\n  constructor(myWindow, form) {\n    // use 'myWindow' in place of 'window' to prevent confusion with global window variable\n    this.myWindow = myWindow;\n    this.form = form;\n    this.session = form.session;\n    this.events = new EventSupport();\n    this.initialized = false;\n    this.$container = null;\n    this.htmlComp = null;\n\n    // link Form instance with this popupWindow instance\n    // this is required when form (and popup-window) is closed by the model\n    form.popupWindow = this;\n\n    // link Window instance with this popupWindow instance\n    // this is required when we want to check if a certain DOM element belongs\n    // to a popup window\n    myWindow.popupWindow = this;\n    myWindow.name = 'Scout popup-window ' + form.modelClass;\n  }\n  _onUnload() {\n    $.log.isDebugEnabled() && $.log.debug('stored form ID ' + this.form.id + ' to session storage');\n    if (this.form.destroyed) {\n      $.log.isDebugEnabled() && $.log.debug('form ID ' + this.form.id + ' is already destroyed - don\\'t trigger unload event');\n    } else {\n      this.events.trigger('popupWindowUnload', this);\n    }\n  }\n  _onReady() {\n    // set container (used as document-root from callers)\n    let myDocument = this.myWindow.document,\n      $myWindow = $(this.myWindow),\n      $myDocument = $(myDocument);\n\n    // Establish the link again, as Chrome removes this property after a page load.\n    // (page load is made by design in PopupBlockerHandler.openWindow)\n    this.myWindow.popupWindow = this;\n    scout.prepareDOM(myDocument);\n    this.$container = $('.scout', myDocument);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new SingleLayout());\n    this.$container.height($myWindow.height());\n    this.form.render(this.$container);\n\n    // resize browser-window before layout?\n    if (this.resizeToPrefSize) {\n      let prefSize = this.htmlComp.prefSize(),\n        // we cannot simply set the pref. size of the component as window size,\n        // since the window \"chrome\" (window-border, -title and location bar)\n        // occupies some space. That's why we measure the difference between\n        // the current document size and the window size first.\n        myWindowSize = new Dimension(this.myWindow.outerWidth, this.myWindow.outerHeight),\n        myDocumentSize = new Dimension($myDocument.width(), $myDocument.height()),\n        windowChromeHoriz = myWindowSize.width - myDocumentSize.width,\n        windowChromeVert = myWindowSize.height - myDocumentSize.height;\n      this.myWindow.resizeTo(prefSize.width + windowChromeHoriz, prefSize.height + windowChromeVert);\n      this.resizeToPrefSize = false;\n    }\n    this.form.htmlComp.validateLayout();\n\n    // Must register some top-level keystroke- and mouse-handlers on popup-window\n    // We do the same thing here, as with the $entryPoint of the main window\n    this.session.keyStrokeManager.installTopLevelKeyStrokeHandlers(this.$container);\n    this.session.focusManager.installTopLevelMouseHandlers(this.$container);\n    scout.installGlobalMouseDownInterceptor(myDocument);\n\n    // Attach event handlers on window\n    $(this.myWindow).on('unload', this._onUnload.bind(this)).on('resize', this._onResize.bind(this));\n\n    // Delegate uncaught JavaScript errors in the popup-window to the main-window\n    if (this.myWindow.opener) {\n      this.myWindow.onerror = this.myWindow.opener.onerror;\n    }\n\n    // Finally set initialized flag to true, at this point the PopupWindow is fully initialized\n    this.initialized = true;\n    this.events.trigger('init');\n  }\n\n  // Note: currently _onResize is only called when the window is resized, but not when the position of the window changes.\n  // if we need to do that in a later release we should take a look on the SO-post below:\n  // http://stackoverflow.com/questions/4319487/detecting-if-the-browser-window-is-moved-with-javascript\n  _onResize() {\n    let $myWindow = $(this.myWindow),\n      width = $myWindow.width(),\n      height = $myWindow.height(),\n      left = this.myWindow.screenX,\n      top = this.myWindow.screenY;\n    $.log.isDebugEnabled() && $.log.debug('popup-window resize: width=' + width + ' height=' + height + ' top=' + top + ' left=' + left);\n    this.form.storeCacheBounds(new Rectangle(left, top, width, height));\n    let windowSize = new Dimension($myWindow.width(), $myWindow.height());\n    this.htmlComp.setSize(windowSize);\n  }\n  isClosed() {\n    return this.myWindow.closed;\n  }\n  one(type, func) {\n    this.events.one(type, func);\n  }\n  close() {\n    this.myWindow.close();\n  }\n  title(title) {\n    this.myWindow.document.title = title;\n  }\n}","map":{"version":3,"names":["Dimension","EventSupport","HtmlComponent","Rectangle","scout","SingleLayout","$","PopupWindow","constructor","myWindow","form","session","events","initialized","$container","htmlComp","popupWindow","name","modelClass","_onUnload","log","isDebugEnabled","debug","id","destroyed","trigger","_onReady","myDocument","document","$myWindow","$myDocument","prepareDOM","install","setLayout","height","render","resizeToPrefSize","prefSize","myWindowSize","outerWidth","outerHeight","myDocumentSize","width","windowChromeHoriz","windowChromeVert","resizeTo","validateLayout","keyStrokeManager","installTopLevelKeyStrokeHandlers","focusManager","installTopLevelMouseHandlers","installGlobalMouseDownInterceptor","on","bind","_onResize","opener","onerror","left","screenX","top","screenY","storeCacheBounds","windowSize","setSize","isClosed","closed","one","type","func","close","title"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/PopupWindow.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, EventSupport, HtmlComponent, Rectangle, scout, SingleLayout} from '../index';\nimport $ from 'jquery';\n\nexport default class PopupWindow {\n\n  constructor(myWindow, form) { // use 'myWindow' in place of 'window' to prevent confusion with global window variable\n    this.myWindow = myWindow;\n    this.form = form;\n    this.session = form.session;\n    this.events = new EventSupport();\n    this.initialized = false;\n    this.$container = null;\n    this.htmlComp = null;\n\n    // link Form instance with this popupWindow instance\n    // this is required when form (and popup-window) is closed by the model\n    form.popupWindow = this;\n\n    // link Window instance with this popupWindow instance\n    // this is required when we want to check if a certain DOM element belongs\n    // to a popup window\n    myWindow.popupWindow = this;\n    myWindow.name = 'Scout popup-window ' + form.modelClass;\n  }\n\n  _onUnload() {\n    $.log.isDebugEnabled() && $.log.debug('stored form ID ' + this.form.id + ' to session storage');\n    if (this.form.destroyed) {\n      $.log.isDebugEnabled() && $.log.debug('form ID ' + this.form.id + ' is already destroyed - don\\'t trigger unload event');\n    } else {\n      this.events.trigger('popupWindowUnload', this);\n    }\n  }\n\n  _onReady() {\n    // set container (used as document-root from callers)\n    let myDocument = this.myWindow.document,\n      $myWindow = $(this.myWindow),\n      $myDocument = $(myDocument);\n\n    // Establish the link again, as Chrome removes this property after a page load.\n    // (page load is made by design in PopupBlockerHandler.openWindow)\n    this.myWindow.popupWindow = this;\n\n    scout.prepareDOM(myDocument);\n\n    this.$container = $('.scout', myDocument);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new SingleLayout());\n    this.$container.height($myWindow.height());\n    this.form.render(this.$container);\n\n    // resize browser-window before layout?\n    if (this.resizeToPrefSize) {\n      let prefSize = this.htmlComp.prefSize(),\n        // we cannot simply set the pref. size of the component as window size,\n        // since the window \"chrome\" (window-border, -title and location bar)\n        // occupies some space. That's why we measure the difference between\n        // the current document size and the window size first.\n        myWindowSize = new Dimension(this.myWindow.outerWidth, this.myWindow.outerHeight),\n        myDocumentSize = new Dimension($myDocument.width(), $myDocument.height()),\n        windowChromeHoriz = myWindowSize.width - myDocumentSize.width,\n        windowChromeVert = myWindowSize.height - myDocumentSize.height;\n\n      this.myWindow.resizeTo(prefSize.width + windowChromeHoriz, prefSize.height + windowChromeVert);\n      this.resizeToPrefSize = false;\n    }\n    this.form.htmlComp.validateLayout();\n\n    // Must register some top-level keystroke- and mouse-handlers on popup-window\n    // We do the same thing here, as with the $entryPoint of the main window\n    this.session.keyStrokeManager.installTopLevelKeyStrokeHandlers(this.$container);\n    this.session.focusManager.installTopLevelMouseHandlers(this.$container);\n    scout.installGlobalMouseDownInterceptor(myDocument);\n\n    // Attach event handlers on window\n    $(this.myWindow)\n      .on('unload', this._onUnload.bind(this))\n      .on('resize', this._onResize.bind(this));\n\n    // Delegate uncaught JavaScript errors in the popup-window to the main-window\n    if (this.myWindow.opener) {\n      this.myWindow.onerror = this.myWindow.opener.onerror;\n    }\n\n    // Finally set initialized flag to true, at this point the PopupWindow is fully initialized\n    this.initialized = true;\n    this.events.trigger('init');\n  }\n\n  // Note: currently _onResize is only called when the window is resized, but not when the position of the window changes.\n  // if we need to do that in a later release we should take a look on the SO-post below:\n  // http://stackoverflow.com/questions/4319487/detecting-if-the-browser-window-is-moved-with-javascript\n  _onResize() {\n    let $myWindow = $(this.myWindow),\n      width = $myWindow.width(),\n      height = $myWindow.height(),\n      left = this.myWindow.screenX,\n      top = this.myWindow.screenY;\n    $.log.isDebugEnabled() && $.log.debug('popup-window resize: width=' + width + ' height=' + height + ' top=' + top + ' left=' + left);\n\n    this.form.storeCacheBounds(new Rectangle(left, top, width, height));\n    let windowSize = new Dimension($myWindow.width(), $myWindow.height());\n    this.htmlComp.setSize(windowSize);\n  }\n\n  isClosed() {\n    return this.myWindow.closed;\n  }\n\n  one(type, func) {\n    this.events.one(type, func);\n  }\n\n  close() {\n    this.myWindow.close();\n  }\n\n  title(title) {\n    this.myWindow.document.title = title;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}