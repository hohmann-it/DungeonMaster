{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { KeyStrokeContext, PageTileGridSelectKeyStroke, scout, TileGrid, TileGridLayoutConfig } from '../../../index';\nexport default class PageTileGrid extends TileGrid {\n  constructor() {\n    super();\n    this.compact = false;\n    this.compactLayoutConfig = new TileGridLayoutConfig({\n      columnWidth: 120,\n      rowHeight: 100,\n      hgap: 15,\n      vgap: 15\n    });\n    this.outline = null;\n    this.page = null;\n    this.nodes = null;\n    this.scrollable = false;\n    this.renderAnimationEnabled = true;\n    this.startupAnimationEnabled = true;\n    this._outlineNodeChangedHandler = this._onOutlineNodeChanged.bind(this);\n    this._outlineStructureChangedHandler = this._onOutlineStructureChanged.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this.nodes = this.nodes || this.page && this.page.childNodes || this.outline && this.outline.nodes;\n    this._setCompact(this.compact);\n    this.setOutline(this.outline);\n    this.setPage(this.page);\n    this.setNodes(this.nodes);\n    this._setCompactLayoutConfig(this.compactLayoutConfig);\n  }\n  _destroy() {\n    this.setOutline(null);\n    this.setPage(null);\n    this.setNodes(null);\n    super._destroy();\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.$bindTarget = this.session.$entryPoint;\n    this.keyStrokeContext.registerKeyStroke([new PageTileGridSelectKeyStroke(this)]);\n  }\n  setOutline(outline) {\n    if (this.outline) {\n      this.outline.off('nodeChanged pageChanged', this._outlineNodeChangedHandler);\n      this.outline.off('nodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.off('nodesInserted', this._outlineStructureChangedHandler);\n      this.outline.off('allChildNodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.off('childNodeOrderChanged', this._outlineStructureChangedHandler);\n    }\n    this._setProperty('outline', outline);\n    if (this.outline) {\n      this.outline.on('nodeChanged pageChanged', this._outlineNodeChangedHandler);\n      this.outline.on('nodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.on('nodesInserted', this._outlineStructureChangedHandler);\n      this.outline.on('allChildNodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.on('childNodeOrderChanged', this._outlineStructureChangedHandler);\n    }\n  }\n  setCompact(compact) {\n    this.setProperty('compact', compact);\n  }\n  _setCompact(compact) {\n    this._setProperty('compact', compact);\n    if (this.compact) {\n      this.setLayoutConfig(this.compactLayoutConfig);\n    } else if (this.initialized) {\n      // Initially, don't set layout config so that it can be passed by model. If compact is changed later, reset compact layout config to a default one\n      this.setLayoutConfig(new TileGridLayoutConfig());\n    }\n    this.setGridColumnCount(this.compact ? 3 : 4);\n    this.startupAnimationEnabled = !this.compact;\n    if (this.initialized) {\n      this._rebuild();\n    }\n  }\n  _setCompactLayoutConfig(layoutConfig) {\n    if (!layoutConfig) {\n      layoutConfig = new TileGridLayoutConfig();\n    }\n    this._setProperty('compactLayoutConfig', TileGridLayoutConfig.ensure(layoutConfig));\n  }\n  setPage(page) {\n    this._setProperty('page', page);\n  }\n  setNodes(nodes) {\n    this._setProperty('nodes', nodes);\n    this._rebuild();\n  }\n  _createPageTiles(pages) {\n    return (pages || []).map(function (page) {\n      return this._createPageTile(page);\n    }, this);\n  }\n  _createPageTile(page) {\n    let button = scout.create('PageTileButton', {\n      parent: this,\n      outline: this.outline,\n      page: page\n    });\n    let tile = scout.create('ButtonTile', {\n      parent: this,\n      cssClass: this.compact ? 'compact' : null,\n      tileWidget: button\n    });\n    page.tile = tile;\n    return tile;\n  }\n  _rebuild() {\n    this.setTiles(this._createPageTiles(this.nodes));\n  }\n  _onOutlineNodeChanged(event) {\n    let page = event.node || event.page;\n    let tile = page.tile;\n    if (!tile) {\n      return;\n    }\n    tile.tileWidget.notifyPageChanged();\n  }\n  _onOutlineStructureChanged(event) {\n    if (this.page) {\n      if (this.page === event.parentNode) {\n        this.setNodes(this.page.childNodes);\n      }\n    } else {\n      let eventContainsTopLevelNode = event.nodes && event.nodes.some(node => {\n        return !node.parentNode;\n      }) || event.type === 'allChildNodesDeleted';\n      // only rebuild if top level nodes change\n      if (eventContainsTopLevelNode) {\n        this.setNodes(this.outline.nodes);\n      }\n    }\n  }\n}","map":{"version":3,"names":["KeyStrokeContext","PageTileGridSelectKeyStroke","scout","TileGrid","TileGridLayoutConfig","PageTileGrid","constructor","compact","compactLayoutConfig","columnWidth","rowHeight","hgap","vgap","outline","page","nodes","scrollable","renderAnimationEnabled","startupAnimationEnabled","_outlineNodeChangedHandler","_onOutlineNodeChanged","bind","_outlineStructureChangedHandler","_onOutlineStructureChanged","_init","model","childNodes","_setCompact","setOutline","setPage","setNodes","_setCompactLayoutConfig","_destroy","_createKeyStrokeContext","_initKeyStrokeContext","keyStrokeContext","$bindTarget","session","$entryPoint","registerKeyStroke","off","_setProperty","on","setCompact","setProperty","setLayoutConfig","initialized","setGridColumnCount","_rebuild","layoutConfig","ensure","_createPageTiles","pages","map","_createPageTile","button","create","parent","tile","cssClass","tileWidget","setTiles","event","node","notifyPageChanged","parentNode","eventContainsTopLevelNode","some","type"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/outline/pages/PageTileGrid.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {KeyStrokeContext, PageTileGridSelectKeyStroke, scout, TileGrid, TileGridLayoutConfig} from '../../../index';\n\nexport default class PageTileGrid extends TileGrid {\n\n  constructor() {\n    super();\n    this.compact = false;\n    this.compactLayoutConfig = new TileGridLayoutConfig({\n      columnWidth: 120,\n      rowHeight: 100,\n      hgap: 15,\n      vgap: 15\n    });\n    this.outline = null;\n    this.page = null;\n    this.nodes = null;\n    this.scrollable = false;\n    this.renderAnimationEnabled = true;\n    this.startupAnimationEnabled = true;\n    this._outlineNodeChangedHandler = this._onOutlineNodeChanged.bind(this);\n    this._outlineStructureChangedHandler = this._onOutlineStructureChanged.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.nodes = this.nodes || (this.page && this.page.childNodes) || (this.outline && this.outline.nodes);\n    this._setCompact(this.compact);\n    this.setOutline(this.outline);\n    this.setPage(this.page);\n    this.setNodes(this.nodes);\n    this._setCompactLayoutConfig(this.compactLayoutConfig);\n  }\n\n  _destroy() {\n    this.setOutline(null);\n    this.setPage(null);\n    this.setNodes(null);\n    super._destroy();\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.$bindTarget = this.session.$entryPoint;\n    this.keyStrokeContext.registerKeyStroke([\n      new PageTileGridSelectKeyStroke(this)\n    ]);\n  }\n\n  setOutline(outline) {\n    if (this.outline) {\n      this.outline.off('nodeChanged pageChanged', this._outlineNodeChangedHandler);\n      this.outline.off('nodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.off('nodesInserted', this._outlineStructureChangedHandler);\n      this.outline.off('allChildNodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.off('childNodeOrderChanged', this._outlineStructureChangedHandler);\n    }\n    this._setProperty('outline', outline);\n    if (this.outline) {\n      this.outline.on('nodeChanged pageChanged', this._outlineNodeChangedHandler);\n      this.outline.on('nodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.on('nodesInserted', this._outlineStructureChangedHandler);\n      this.outline.on('allChildNodesDeleted', this._outlineStructureChangedHandler);\n      this.outline.on('childNodeOrderChanged', this._outlineStructureChangedHandler);\n    }\n  }\n\n  setCompact(compact) {\n    this.setProperty('compact', compact);\n  }\n\n  _setCompact(compact) {\n    this._setProperty('compact', compact);\n    if (this.compact) {\n      this.setLayoutConfig(this.compactLayoutConfig);\n    } else if (this.initialized) {\n      // Initially, don't set layout config so that it can be passed by model. If compact is changed later, reset compact layout config to a default one\n      this.setLayoutConfig(new TileGridLayoutConfig());\n    }\n    this.setGridColumnCount(this.compact ? 3 : 4);\n    this.startupAnimationEnabled = !this.compact;\n    if (this.initialized) {\n      this._rebuild();\n    }\n  }\n\n  _setCompactLayoutConfig(layoutConfig) {\n    if (!layoutConfig) {\n      layoutConfig = new TileGridLayoutConfig();\n    }\n    this._setProperty('compactLayoutConfig', TileGridLayoutConfig.ensure(layoutConfig));\n  }\n\n  setPage(page) {\n    this._setProperty('page', page);\n  }\n\n  setNodes(nodes) {\n    this._setProperty('nodes', nodes);\n    this._rebuild();\n  }\n\n  _createPageTiles(pages) {\n    return (pages || []).map(function(page) {\n      return this._createPageTile(page);\n    }, this);\n  }\n\n  _createPageTile(page) {\n    let button = scout.create('PageTileButton', {\n      parent: this,\n      outline: this.outline,\n      page: page\n    });\n    let tile = scout.create('ButtonTile', {\n      parent: this,\n      cssClass: this.compact ? 'compact' : null,\n      tileWidget: button\n    });\n    page.tile = tile;\n    return tile;\n  }\n\n  _rebuild() {\n    this.setTiles(this._createPageTiles(this.nodes));\n  }\n\n  _onOutlineNodeChanged(event) {\n    let page = event.node || event.page;\n    let tile = page.tile;\n    if (!tile) {\n      return;\n    }\n    tile.tileWidget.notifyPageChanged();\n  }\n\n  _onOutlineStructureChanged(event) {\n    if (this.page) {\n      if (this.page === event.parentNode) {\n        this.setNodes(this.page.childNodes);\n      }\n    } else {\n      let eventContainsTopLevelNode = event.nodes && event.nodes.some(node => {\n        return !node.parentNode;\n      }) || event.type === 'allChildNodesDeleted';\n      // only rebuild if top level nodes change\n      if (eventContainsTopLevelNode) {\n        this.setNodes(this.outline.nodes);\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}