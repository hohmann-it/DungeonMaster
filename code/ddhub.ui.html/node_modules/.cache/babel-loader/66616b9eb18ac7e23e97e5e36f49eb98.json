{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ActionKeyStroke, Device, DoubleClickSupport, HtmlComponent, Icon, KeyStrokeContext, NullLayout, scout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\nexport default class Action extends Widget {\n  // noinspection DuplicatedCode\n  constructor() {\n    super();\n    this.actionStyle = Action.ActionStyle.DEFAULT;\n    this.compact = false;\n    this.iconId = null;\n    this.horizontalAlignment = -1;\n    this.keyStroke = null;\n    this.keyStrokeFirePolicy = Action.KeyStrokeFirePolicy.ACCESSIBLE_ONLY;\n    this.selected = false;\n    this.preventDoubleClick = false;\n    /**\n     * This property decides whether or not the tabindex attribute is set in the DOM.\n     */\n    this.tabbable = false;\n    this.text = null;\n    this.textPosition = Action.TextPosition.DEFAULT;\n    this.htmlEnabled = false;\n    this.textVisible = true;\n    this.toggleAction = false;\n    this.tooltipText = null;\n    this.showTooltipWhenSelected = true;\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['actionStyle', 'horizontalAlignment', 'iconId', 'selected', 'preventDoubleClick', 'tabbable', 'text', 'textPosition', 'htmlEnabled', 'tooltipText', 'toggleAction']);\n  }\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n  _init(model) {\n    super._init(model);\n    this.actionKeyStroke = this._createActionKeyStroke();\n    this.resolveConsts([{\n      property: 'actionStyle',\n      constType: Action.ActionStyle\n    }, {\n      property: 'textPosition',\n      constType: Action.TextPosition\n    }, {\n      property: 'keyStrokeFirePolicy',\n      constType: Action.KeyStrokeFirePolicy\n    }]);\n    this.resolveTextKeys(['text', 'tooltipText']);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('action').on('mousedown', event => this._doubleClickSupport.mousedown(event)).on('click', this._onClick.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n  }\n  _createLayout() {\n    return new NullLayout();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderText();\n    this._renderTextPosition();\n    this._renderIconId();\n    this._renderTooltipText();\n    this._renderKeyStroke();\n    this._renderSelected();\n    this._renderTabbable();\n    this._renderCompact();\n  }\n  _remove() {\n    this._removeText();\n    this._removeIconId();\n    super._remove();\n  }\n  setText(text) {\n    this.setProperty('text', text);\n  }\n  _renderText() {\n    let text = this.text || '';\n    if (text && this.textVisible) {\n      if (!this.$text) {\n        // Create a separate text element to so that setting the text does not remove the icon\n        this.$text = this.$container.appendSpan('content text');\n        HtmlComponent.install(this.$text, this.session);\n      }\n      if (this.htmlEnabled) {\n        this.$text.html(text);\n      } else {\n        this.$text.text(text);\n      }\n    } else {\n      this._removeText();\n    }\n  }\n  _removeText() {\n    if (this.$text) {\n      this.$text.remove();\n      this.$text = null;\n    }\n  }\n  setTextPosition(textPosition) {\n    this.setProperty('textPosition', textPosition);\n  }\n  _renderTextPosition() {\n    this.$container.toggleClass('bottom-text', this.textPosition === Action.TextPosition.BOTTOM);\n    this.invalidateLayoutTree();\n  }\n  setHtmlEnabled(htmlEnabled) {\n    this.setProperty('htmlEnabled', htmlEnabled);\n  }\n  _renderHtmlEnabled() {\n    // Render the text again when html enabled changes dynamically\n    this._renderText();\n  }\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n  _renderIconId() {\n    let iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', () => {\n      this.icon = null;\n    });\n    this.icon.render();\n  }\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.rendered) {\n      // No need to do this during initial rendering\n      this._updateTooltip();\n      this._renderTabbable();\n    }\n  }\n  setTooltipText(tooltipText) {\n    this.setProperty('tooltipText', tooltipText);\n  }\n  _renderTooltipText() {\n    this._updateTooltip();\n  }\n\n  /**\n   * Installs or uninstalls tooltip based on tooltipText, selected and enabledComputed.\n   */\n  _updateTooltip() {\n    if (this._shouldInstallTooltip()) {\n      tooltips.install(this.$container, this._configureTooltip());\n    } else {\n      tooltips.uninstall(this.$container);\n    }\n  }\n  _shouldInstallTooltip() {\n    let show = this.tooltipText && this.enabledComputed;\n    if (!this.showTooltipWhenSelected && this.selected) {\n      show = false;\n    }\n    return show;\n  }\n  _renderTabbable() {\n    this.$container.setTabbable(this.tabbable && this.enabledComputed && !Device.get().supportsOnlyTouch());\n  }\n  _renderCompact() {\n    this.$container.toggleClass('compact', this.compact);\n    this.invalidateLayoutTree();\n  }\n  setTooltipPosition(position) {\n    this.setProperty('tooltipPosition', position);\n  }\n  _configureTooltip() {\n    return {\n      parent: this,\n      text: this.tooltipText,\n      $anchor: this.$container,\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      tooltipPosition: this.tooltipPosition\n    };\n  }\n\n  /**\n   * @return {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabledComputed).\n   */\n  doAction() {\n    if (!this.prepareDoAction()) {\n      return false;\n    }\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n    this._doAction();\n    return true;\n  }\n  toggle() {\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n  }\n  setToggleAction(toggleAction) {\n    this.setProperty('toggleAction', toggleAction);\n  }\n  isToggleAction() {\n    return this.toggleAction;\n  }\n\n  /**\n   * @returns {Boolean} <code>true</code> if the action may be executed, <code>false</code> if it should be ignored.\n   */\n  prepareDoAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n    return true;\n  }\n  _doAction() {\n    this.trigger('action');\n  }\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n  _renderSelected() {\n    this.$container.toggleClass('selected', this.selected);\n    if (this.rendered) {\n      // prevent unnecessary tooltip updates during initial rendering\n      this._updateTooltip();\n    }\n  }\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n  _setKeyStroke(keyStroke) {\n    this.actionKeyStroke.parseAndSetKeyStroke(keyStroke);\n    this._setProperty('keyStroke', keyStroke);\n  }\n  _renderKeyStroke() {\n    let keyStroke = this.keyStroke;\n    if (keyStroke === undefined) {\n      this.$container.removeAttr('data-shortcut');\n    } else {\n      this.$container.attr('data-shortcut', keyStroke);\n    }\n  }\n  setTabbable(tabbable) {\n    this.setProperty('tabbable', tabbable);\n  }\n  setTextVisible(textVisible) {\n    if (this.textVisible === textVisible) {\n      return;\n    }\n    this._setProperty('textVisible', textVisible);\n    if (this.rendered) {\n      this._renderText();\n    }\n  }\n  setCompact(compact) {\n    if (this.compact === compact) {\n      return;\n    }\n    this.compact = compact;\n    if (this.rendered) {\n      this._renderCompact();\n    }\n  }\n  setHorizontalAlignment(horizontalAlignment) {\n    this.setProperty('horizontalAlignment', horizontalAlignment);\n  }\n\n  /**\n   * @return {ActionKeyStroke}\n   */\n  _createActionKeyStroke() {\n    return new ActionKeyStroke(this);\n  }\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n  _allowMouseEvent(event) {\n    if (event.which !== 1) {\n      return false; // Other button than left mouse button --> nop\n    }\n\n    if (event.type === 'click' && this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return false; // More than one consecutive click --> nop\n    }\n\n    return true;\n  }\n  _onClick(event) {\n    if (!this._allowMouseEvent(event)) {\n      return;\n    }\n\n    // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n    // If it is already displayed it will stay\n    tooltips.cancel(this.$container);\n    this.doAction();\n  }\n  setActionStyle(actionStyle) {\n    this.setProperty('actionStyle', actionStyle);\n  }\n}\n_defineProperty(Action, \"ActionStyle\", {\n  /**\n   * regular menu-look, also used in overflow menus\n   */\n  DEFAULT: 0,\n  /**\n   * menu looks like a button\n   */\n  BUTTON: 1\n});\n_defineProperty(Action, \"TextPosition\", {\n  DEFAULT: 'default',\n  /**\n   * The text will be positioned below the icon. It has no effect if no icon is set.\n   */\n  BOTTOM: 'bottom'\n});\n_defineProperty(Action, \"KeyStrokeFirePolicy\", {\n  ACCESSIBLE_ONLY: 0,\n  ALWAYS: 1\n});","map":{"version":3,"names":["ActionKeyStroke","Device","DoubleClickSupport","HtmlComponent","Icon","KeyStrokeContext","NullLayout","scout","tooltips","Widget","$","Action","constructor","actionStyle","ActionStyle","DEFAULT","compact","iconId","horizontalAlignment","keyStroke","keyStrokeFirePolicy","KeyStrokeFirePolicy","ACCESSIBLE_ONLY","selected","preventDoubleClick","tabbable","text","textPosition","TextPosition","htmlEnabled","textVisible","toggleAction","tooltipText","showTooltipWhenSelected","_doubleClickSupport","_addCloneProperties","_createKeyStrokeContext","_init","model","actionKeyStroke","_createActionKeyStroke","resolveConsts","property","constType","resolveTextKeys","resolveIconIds","_setKeyStroke","_render","$container","$parent","appendDiv","on","event","mousedown","_onClick","bind","htmlComp","install","session","setLayout","_createLayout","_renderProperties","_renderText","_renderTextPosition","_renderIconId","_renderTooltipText","_renderKeyStroke","_renderSelected","_renderTabbable","_renderCompact","_remove","_removeText","_removeIconId","setText","setProperty","$text","appendSpan","html","remove","setTextPosition","toggleClass","BOTTOM","invalidateLayoutTree","setHtmlEnabled","_renderHtmlEnabled","setIconId","icon","setIconDesc","create","parent","iconDesc","prepend","one","render","get$Icon","destroy","_renderEnabled","rendered","_updateTooltip","setTooltipText","_shouldInstallTooltip","_configureTooltip","uninstall","show","enabledComputed","setTabbable","get","supportsOnlyTouch","setTooltipPosition","position","$anchor","arrowPosition","arrowPositionUnit","tooltipPosition","doAction","prepareDoAction","isToggleAction","setSelected","_doAction","toggle","setToggleAction","visible","trigger","setKeyStroke","parseAndSetKeyStroke","_setProperty","undefined","removeAttr","attr","setTextVisible","setCompact","setHorizontalAlignment","setPreventDoubleClick","_allowMouseEvent","which","type","doubleClicked","cancel","setActionStyle","BUTTON","ALWAYS"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/action/Action.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ActionKeyStroke, Device, DoubleClickSupport, HtmlComponent, Icon, KeyStrokeContext, NullLayout, scout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Action extends Widget {\n\n  // noinspection DuplicatedCode\n  constructor() {\n    super();\n\n    this.actionStyle = Action.ActionStyle.DEFAULT;\n    this.compact = false;\n    this.iconId = null;\n    this.horizontalAlignment = -1;\n    this.keyStroke = null;\n    this.keyStrokeFirePolicy = Action.KeyStrokeFirePolicy.ACCESSIBLE_ONLY;\n    this.selected = false;\n    this.preventDoubleClick = false;\n    /**\n     * This property decides whether or not the tabindex attribute is set in the DOM.\n     */\n    this.tabbable = false;\n    this.text = null;\n    this.textPosition = Action.TextPosition.DEFAULT;\n    this.htmlEnabled = false;\n    this.textVisible = true;\n    this.toggleAction = false;\n    this.tooltipText = null;\n    this.showTooltipWhenSelected = true;\n\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['actionStyle', 'horizontalAlignment', 'iconId', 'selected', 'preventDoubleClick', 'tabbable', 'text', 'textPosition', 'htmlEnabled', 'tooltipText', 'toggleAction']);\n  }\n\n  static ActionStyle = {\n    /**\n     * regular menu-look, also used in overflow menus\n     */\n    DEFAULT: 0,\n    /**\n     * menu looks like a button\n     */\n    BUTTON: 1\n  };\n\n  static TextPosition = {\n    DEFAULT: 'default',\n    /**\n     * The text will be positioned below the icon. It has no effect if no icon is set.\n     */\n    BOTTOM: 'bottom'\n  };\n\n  static KeyStrokeFirePolicy = {\n    ACCESSIBLE_ONLY: 0,\n    ALWAYS: 1\n  };\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  _init(model) {\n    super._init(model);\n    this.actionKeyStroke = this._createActionKeyStroke();\n    this.resolveConsts([{\n      property: 'actionStyle',\n      constType: Action.ActionStyle\n    }, {\n      property: 'textPosition',\n      constType: Action.TextPosition\n    }, {\n      property: 'keyStrokeFirePolicy',\n      constType: Action.KeyStrokeFirePolicy\n    }]);\n    this.resolveTextKeys(['text', 'tooltipText']);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('action')\n      .on('mousedown', event => this._doubleClickSupport.mousedown(event))\n      .on('click', this._onClick.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n  }\n\n  _createLayout() {\n    return new NullLayout();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n\n    this._renderText();\n    this._renderTextPosition();\n    this._renderIconId();\n    this._renderTooltipText();\n    this._renderKeyStroke();\n    this._renderSelected();\n    this._renderTabbable();\n    this._renderCompact();\n  }\n\n  _remove() {\n    this._removeText();\n    this._removeIconId();\n    super._remove();\n  }\n\n  setText(text) {\n    this.setProperty('text', text);\n  }\n\n  _renderText() {\n    let text = this.text || '';\n    if (text && this.textVisible) {\n      if (!this.$text) {\n        // Create a separate text element to so that setting the text does not remove the icon\n        this.$text = this.$container.appendSpan('content text');\n        HtmlComponent.install(this.$text, this.session);\n      }\n      if (this.htmlEnabled) {\n        this.$text.html(text);\n      } else {\n        this.$text.text(text);\n      }\n    } else {\n      this._removeText();\n    }\n  }\n\n  _removeText() {\n    if (this.$text) {\n      this.$text.remove();\n      this.$text = null;\n    }\n  }\n\n  setTextPosition(textPosition) {\n    this.setProperty('textPosition', textPosition);\n  }\n\n  _renderTextPosition() {\n    this.$container.toggleClass('bottom-text', this.textPosition === Action.TextPosition.BOTTOM);\n    this.invalidateLayoutTree();\n  }\n\n  setHtmlEnabled(htmlEnabled) {\n    this.setProperty('htmlEnabled', htmlEnabled);\n  }\n\n  _renderHtmlEnabled() {\n    // Render the text again when html enabled changes dynamically\n    this._renderText();\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  _renderIconId() {\n    let iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', () => {\n      this.icon = null;\n    });\n    this.icon.render();\n  }\n\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.rendered) { // No need to do this during initial rendering\n      this._updateTooltip();\n      this._renderTabbable();\n    }\n  }\n\n  setTooltipText(tooltipText) {\n    this.setProperty('tooltipText', tooltipText);\n  }\n\n  _renderTooltipText() {\n    this._updateTooltip();\n  }\n\n  /**\n   * Installs or uninstalls tooltip based on tooltipText, selected and enabledComputed.\n   */\n  _updateTooltip() {\n    if (this._shouldInstallTooltip()) {\n      tooltips.install(this.$container, this._configureTooltip());\n    } else {\n      tooltips.uninstall(this.$container);\n    }\n  }\n\n  _shouldInstallTooltip() {\n    let show = this.tooltipText && this.enabledComputed;\n    if (!this.showTooltipWhenSelected && this.selected) {\n      show = false;\n    }\n    return show;\n  }\n\n  _renderTabbable() {\n    this.$container.setTabbable(this.tabbable && this.enabledComputed && !Device.get().supportsOnlyTouch());\n  }\n\n  _renderCompact() {\n    this.$container.toggleClass('compact', this.compact);\n    this.invalidateLayoutTree();\n  }\n\n  setTooltipPosition(position) {\n    this.setProperty('tooltipPosition', position);\n  }\n\n  _configureTooltip() {\n    return {\n      parent: this,\n      text: this.tooltipText,\n      $anchor: this.$container,\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      tooltipPosition: this.tooltipPosition\n    };\n  }\n\n  /**\n   * @return {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabledComputed).\n   */\n  doAction() {\n    if (!this.prepareDoAction()) {\n      return false;\n    }\n\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n    this._doAction();\n    return true;\n  }\n\n  toggle() {\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n  }\n\n  setToggleAction(toggleAction) {\n    this.setProperty('toggleAction', toggleAction);\n  }\n\n  isToggleAction() {\n    return this.toggleAction;\n  }\n\n  /**\n   * @returns {Boolean} <code>true</code> if the action may be executed, <code>false</code> if it should be ignored.\n   */\n  prepareDoAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n\n    return true;\n  }\n\n  _doAction() {\n    this.trigger('action');\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    this.$container.toggleClass('selected', this.selected);\n    if (this.rendered) { // prevent unnecessary tooltip updates during initial rendering\n      this._updateTooltip();\n    }\n  }\n\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n\n  _setKeyStroke(keyStroke) {\n    this.actionKeyStroke.parseAndSetKeyStroke(keyStroke);\n    this._setProperty('keyStroke', keyStroke);\n  }\n\n  _renderKeyStroke() {\n    let keyStroke = this.keyStroke;\n    if (keyStroke === undefined) {\n      this.$container.removeAttr('data-shortcut');\n    } else {\n      this.$container.attr('data-shortcut', keyStroke);\n    }\n  }\n\n  setTabbable(tabbable) {\n    this.setProperty('tabbable', tabbable);\n  }\n\n  setTextVisible(textVisible) {\n    if (this.textVisible === textVisible) {\n      return;\n    }\n    this._setProperty('textVisible', textVisible);\n    if (this.rendered) {\n      this._renderText();\n    }\n  }\n\n  setCompact(compact) {\n    if (this.compact === compact) {\n      return;\n    }\n    this.compact = compact;\n    if (this.rendered) {\n      this._renderCompact();\n    }\n  }\n\n  setHorizontalAlignment(horizontalAlignment) {\n    this.setProperty('horizontalAlignment', horizontalAlignment);\n  }\n\n  /**\n   * @return {ActionKeyStroke}\n   */\n  _createActionKeyStroke() {\n    return new ActionKeyStroke(this);\n  }\n\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n\n  _allowMouseEvent(event) {\n    if (event.which !== 1) {\n      return false; // Other button than left mouse button --> nop\n    }\n    if (event.type === 'click' && this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return false; // More than one consecutive click --> nop\n    }\n    return true;\n  }\n\n  _onClick(event) {\n    if (!this._allowMouseEvent(event)) {\n      return;\n    }\n\n    // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n    // If it is already displayed it will stay\n    tooltips.cancel(this.$container);\n\n    this.doAction();\n  }\n\n  setActionStyle(actionStyle) {\n    this.setProperty('actionStyle', actionStyle);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}