{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormField, HtmlComponent, Point, Popup, scout, SingleLayout, TouchPopupLayout, ValueField } from '../index';\nimport RowLayout from '../layout/RowLayout';\nexport default class TouchPopup extends Popup {\n  constructor() {\n    super();\n\n    // the original touch field from the form\n    this._touchField = null;\n    this._touchFieldTooltip = null;\n    // the cloned field from the popup\n    this._field = null;\n    // the widget placed below the field\n    this._widget = null;\n    this._$widgetContainer = null;\n    this._widgetContainerHtmlComp = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.withGlassPane = true;\n    this._touchFieldPropertyChangeListener = this._onTouchFieldPropertyChange.bind(this);\n  }\n  _init(options) {\n    super._init(options);\n    this._touchField = options.field;\n    if (this._touchField._tooltip() && this._touchField._tooltip().rendered) {\n      // Hide existing tooltip to not show it twice (it will be shown on the popup too). It may even throw an exception if the tooltip contains a (not cloned) menu\n      this._touchFieldTooltip = this._touchField._tooltip();\n      this._touchFieldTooltip.remove();\n    }\n\n    // clone original touch field\n    // original and clone both point to the same popup instance\n    this._field = this._touchField.clone(this._fieldOverrides());\n    this._touchField.on('propertyChange', this._touchFieldPropertyChangeListener);\n    this._initWidget(options);\n    this.doneAction = scout.create('Menu', {\n      parent: this,\n      text: this.session.text('ui.Done')\n    });\n    this.doneAction.on('action', this._onCloseIconClick.bind(this));\n  }\n  _destroy() {\n    this._touchField.off('propertyChange', this._touchFieldPropertyChangeListener);\n    if (this._touchFieldTooltip && !this._touchFieldTooltip.destroyed) {\n      // Make tooltip visible again if not destroyed in the meantime\n      this._touchFieldTooltip.render(this._touchField._$tooltipParent());\n    }\n    super._destroy();\n  }\n  _fieldOverrides() {\n    return {\n      parent: this,\n      labelVisible: false,\n      fieldStyle: FormField.FieldStyle.CLASSIC,\n      popup: this,\n      statusVisible: false,\n      menusVisible: false,\n      // menus don't work (action on clone is not propagated to original, currentMenuTypes is not updated correctly) -> don't show it on popup\n      embedded: true,\n      touchMode: false,\n      clearable: ValueField.Clearable.ALWAYS\n    };\n  }\n  _initWidget(options) {\n    // NOP\n  }\n  _createLayout() {\n    return new TouchPopupLayout(this);\n  }\n\n  /**\n   * @override Popup.js\n   */\n  prefLocation(verticalAlignment, horizontalAlignment) {\n    let popupSize = this.htmlComp.prefSize(),\n      windowWidth = this.$container.window().width(),\n      x = Math.max(this.windowPaddingX, (windowWidth - popupSize.width) / 2);\n    return new Point(x, 0);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('popup touch-popup');\n    this.$body = this.$container.appendDiv('body');\n    this.htmlBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlBody.setLayout(new RowLayout());\n    this._$header = this.$body.appendDiv('touch-popup-header');\n    HtmlComponent.install(this._$header, this.session);\n    this._$header.appendDiv('touch-popup-title').textOrNbsp(this._touchField.label, 'empty');\n    this.doneAction.render(this._$header);\n    this._$widgetContainer = this.$body.appendDiv('touch-popup-widget-container');\n    this._widgetContainerHtmlComp = HtmlComponent.install(this._$widgetContainer, this.session);\n    this._widgetContainerHtmlComp.setLayout(new SingleLayout());\n\n    // field may render something into the widget container -> render after widget container and move to correct place\n    this._field.render();\n\n    // Move to top\n    this._field.$container.insertBefore(this._$widgetContainer);\n    this._field.$container.addClass('touch-popup-field');\n    if (this._widget) {\n      this._widget.render(this._$widgetContainer);\n    }\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.validateRoot = true;\n    this.htmlComp.setLayout(this._createLayout());\n  }\n  _handleGlassPanes() {\n    super._handleGlassPanes();\n    if (this._glassPaneRenderer) {\n      this._glassPaneRenderer.eachGlassPane($pane => $pane.addClass('dark'));\n    }\n  }\n  _onTouchFieldPropertyChange(event) {\n    if (event.propertyName === 'errorStatus') {\n      this._field.setErrorStatus(event.newValue);\n    } else if (event.propertyName === 'lookupRow') {\n      this._field.setLookupRow(event.newValue);\n    }\n  }\n\n  /**\n   * Calls accept input on the embedded field.\n   */\n  _acceptInput() {\n    let promise = this._field.acceptInput();\n    if (promise) {\n      promise.always(this.close.bind(this));\n    } else {\n      this.close();\n    }\n  }\n  _onCloseIconClick(event) {\n    this._acceptInput();\n  }\n}","map":{"version":3,"names":["FormField","HtmlComponent","Point","Popup","scout","SingleLayout","TouchPopupLayout","ValueField","RowLayout","TouchPopup","constructor","_touchField","_touchFieldTooltip","_field","_widget","_$widgetContainer","_widgetContainerHtmlComp","windowPaddingX","windowPaddingY","withGlassPane","_touchFieldPropertyChangeListener","_onTouchFieldPropertyChange","bind","_init","options","field","_tooltip","rendered","remove","clone","_fieldOverrides","on","_initWidget","doneAction","create","parent","text","session","_onCloseIconClick","_destroy","off","destroyed","render","_$tooltipParent","labelVisible","fieldStyle","FieldStyle","CLASSIC","popup","statusVisible","menusVisible","embedded","touchMode","clearable","Clearable","ALWAYS","_createLayout","prefLocation","verticalAlignment","horizontalAlignment","popupSize","htmlComp","prefSize","windowWidth","$container","window","width","x","Math","max","_render","$parent","appendDiv","$body","htmlBody","install","setLayout","_$header","textOrNbsp","label","insertBefore","addClass","validateRoot","_handleGlassPanes","_glassPaneRenderer","eachGlassPane","$pane","event","propertyName","setErrorStatus","newValue","setLookupRow","_acceptInput","promise","acceptInput","always","close"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/popup/TouchPopup.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormField, HtmlComponent, Point, Popup, scout, SingleLayout, TouchPopupLayout, ValueField} from '../index';\nimport RowLayout from '../layout/RowLayout';\n\nexport default class TouchPopup extends Popup {\n\n  constructor() {\n    super();\n\n    // the original touch field from the form\n    this._touchField = null;\n    this._touchFieldTooltip = null;\n    // the cloned field from the popup\n    this._field = null;\n    // the widget placed below the field\n    this._widget = null;\n    this._$widgetContainer = null;\n    this._widgetContainerHtmlComp = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.withGlassPane = true;\n    this._touchFieldPropertyChangeListener = this._onTouchFieldPropertyChange.bind(this);\n  }\n\n  _init(options) {\n    super._init(options);\n    this._touchField = options.field;\n    if (this._touchField._tooltip() && this._touchField._tooltip().rendered) {\n      // Hide existing tooltip to not show it twice (it will be shown on the popup too). It may even throw an exception if the tooltip contains a (not cloned) menu\n      this._touchFieldTooltip = this._touchField._tooltip();\n      this._touchFieldTooltip.remove();\n    }\n\n    // clone original touch field\n    // original and clone both point to the same popup instance\n    this._field = this._touchField.clone(this._fieldOverrides());\n    this._touchField.on('propertyChange', this._touchFieldPropertyChangeListener);\n    this._initWidget(options);\n    this.doneAction = scout.create('Menu', {\n      parent: this,\n      text: this.session.text('ui.Done')\n    });\n    this.doneAction.on('action', this._onCloseIconClick.bind(this));\n  }\n\n  _destroy() {\n    this._touchField.off('propertyChange', this._touchFieldPropertyChangeListener);\n    if (this._touchFieldTooltip && !this._touchFieldTooltip.destroyed) {\n      // Make tooltip visible again if not destroyed in the meantime\n      this._touchFieldTooltip.render(this._touchField._$tooltipParent());\n    }\n    super._destroy();\n  }\n\n  _fieldOverrides() {\n    return {\n      parent: this,\n      labelVisible: false,\n      fieldStyle: FormField.FieldStyle.CLASSIC,\n      popup: this,\n      statusVisible: false,\n      menusVisible: false, // menus don't work (action on clone is not propagated to original, currentMenuTypes is not updated correctly) -> don't show it on popup\n      embedded: true,\n      touchMode: false,\n      clearable: ValueField.Clearable.ALWAYS\n    };\n  }\n\n  _initWidget(options) {\n    // NOP\n  }\n\n  _createLayout() {\n    return new TouchPopupLayout(this);\n  }\n\n  /**\n   * @override Popup.js\n   */\n  prefLocation(verticalAlignment, horizontalAlignment) {\n    let popupSize = this.htmlComp.prefSize(),\n      windowWidth = this.$container.window().width(),\n      x = Math.max(this.windowPaddingX, (windowWidth - popupSize.width) / 2);\n    return new Point(x, 0);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('popup touch-popup');\n    this.$body = this.$container.appendDiv('body');\n    this.htmlBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlBody.setLayout(new RowLayout());\n\n    this._$header = this.$body.appendDiv('touch-popup-header');\n    HtmlComponent.install(this._$header, this.session);\n    this._$header.appendDiv('touch-popup-title').textOrNbsp(this._touchField.label, 'empty');\n    this.doneAction.render(this._$header);\n\n    this._$widgetContainer = this.$body.appendDiv('touch-popup-widget-container');\n    this._widgetContainerHtmlComp = HtmlComponent.install(this._$widgetContainer, this.session);\n    this._widgetContainerHtmlComp.setLayout(new SingleLayout());\n\n    // field may render something into the widget container -> render after widget container and move to correct place\n    this._field.render();\n\n    // Move to top\n    this._field.$container.insertBefore(this._$widgetContainer);\n    this._field.$container.addClass('touch-popup-field');\n\n    if (this._widget) {\n      this._widget.render(this._$widgetContainer);\n    }\n\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.validateRoot = true;\n    this.htmlComp.setLayout(this._createLayout());\n  }\n\n  _handleGlassPanes() {\n    super._handleGlassPanes();\n    if (this._glassPaneRenderer) {\n      this._glassPaneRenderer.eachGlassPane($pane => $pane.addClass('dark'));\n    }\n  }\n\n  _onTouchFieldPropertyChange(event) {\n    if (event.propertyName === 'errorStatus') {\n      this._field.setErrorStatus(event.newValue);\n    } else if (event.propertyName === 'lookupRow') {\n      this._field.setLookupRow(event.newValue);\n    }\n  }\n\n  /**\n   * Calls accept input on the embedded field.\n   */\n  _acceptInput() {\n    let promise = this._field.acceptInput();\n    if (promise) {\n      promise.always(this.close.bind(this));\n    } else {\n      this.close();\n    }\n  }\n\n  _onCloseIconClick(event) {\n    this._acceptInput();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}