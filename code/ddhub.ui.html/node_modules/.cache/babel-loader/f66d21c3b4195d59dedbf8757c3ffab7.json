{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Form, Lifecycle, scout, strings, ValueField } from '../../index';\nexport default class FormLifecycle extends Lifecycle {\n  constructor() {\n    super();\n    this.validationFailedTextKey = 'FormValidationFailedTitle';\n    this.emptyMandatoryElementsTextKey = 'FormEmptyMandatoryFieldsMessage';\n    this.invalidElementsTextKey = 'FormInvalidFieldsMessage';\n    this.saveChangesQuestionTextKey = 'FormSaveChangesQuestion';\n  }\n  init(model) {\n    scout.assertParameter('widget', model.widget, Form);\n    super.init(model);\n  }\n  _reset() {\n    this.widget.visitFields(field => {\n      if (field instanceof ValueField) {\n        field.resetValue();\n      }\n    });\n  }\n  _invalidElements() {\n    let missingFields = [];\n    let invalidFields = [];\n    this.widget.visitFields(field => {\n      let result = field.getValidationResult();\n      if (result.valid) {\n        return;\n      }\n      // error status has priority over mandatory\n      if (!result.validByErrorStatus) {\n        invalidFields.push(result);\n        return;\n      }\n      if (!result.validByMandatory) {\n        missingFields.push(result);\n      }\n    });\n    return {\n      missingElements: missingFields,\n      invalidElements: invalidFields\n    };\n  }\n  _invalidElementText(element) {\n    return strings.plainText(element.label);\n  }\n  _missingElementText(element) {\n    return strings.plainText(element.label);\n  }\n  _validateWidget() {\n    return this.widget._validate();\n  }\n  _revealInvalidElement(invalidElement) {\n    this.widget.revealInvalidField(invalidElement);\n  }\n  markAsSaved() {\n    this.widget.visitFields(field => {\n      field.markAsSaved();\n    });\n  }\n\n  /**\n   * Visits all form fields and calls the updateRequiresSave() function. If any\n   * field has the requiresSave flag set to true, this function returns true,\n   * false otherwise.\n   *\n   * @see (Java) AbstractFormField #checkSaveNeeded, #isSaveNeeded\n   */\n  requiresSave() {\n    let requiresSave = false;\n    this.widget.visitFields(field => {\n      field.updateRequiresSave();\n      if (field.requiresSave) {\n        requiresSave = true;\n      }\n    });\n    return requiresSave;\n  }\n}","map":{"version":3,"names":["Form","Lifecycle","scout","strings","ValueField","FormLifecycle","constructor","validationFailedTextKey","emptyMandatoryElementsTextKey","invalidElementsTextKey","saveChangesQuestionTextKey","init","model","assertParameter","widget","_reset","visitFields","field","resetValue","_invalidElements","missingFields","invalidFields","result","getValidationResult","valid","validByErrorStatus","push","validByMandatory","missingElements","invalidElements","_invalidElementText","element","plainText","label","_missingElementText","_validateWidget","_validate","_revealInvalidElement","invalidElement","revealInvalidField","markAsSaved","requiresSave","updateRequiresSave"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/lifecycle/FormLifecycle.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Form, Lifecycle, scout, strings, ValueField} from '../../index';\n\nexport default class FormLifecycle extends Lifecycle {\n\n  constructor() {\n    super();\n\n    this.validationFailedTextKey = 'FormValidationFailedTitle';\n    this.emptyMandatoryElementsTextKey = 'FormEmptyMandatoryFieldsMessage';\n    this.invalidElementsTextKey = 'FormInvalidFieldsMessage';\n    this.saveChangesQuestionTextKey = 'FormSaveChangesQuestion';\n  }\n\n  init(model) {\n    scout.assertParameter('widget', model.widget, Form);\n    super.init(model);\n  }\n\n  _reset() {\n    this.widget.visitFields(field => {\n      if (field instanceof ValueField) {\n        field.resetValue();\n      }\n    });\n  }\n\n  _invalidElements() {\n    let missingFields = [];\n    let invalidFields = [];\n\n    this.widget.visitFields(field => {\n      let result = field.getValidationResult();\n      if (result.valid) {\n        return;\n      }\n      // error status has priority over mandatory\n      if (!result.validByErrorStatus) {\n        invalidFields.push(result);\n        return;\n      }\n      if (!result.validByMandatory) {\n        missingFields.push(result);\n      }\n    });\n\n    return {\n      missingElements: missingFields,\n      invalidElements: invalidFields\n    };\n  }\n\n  _invalidElementText(element) {\n    return strings.plainText(element.label);\n  }\n\n  _missingElementText(element) {\n    return strings.plainText(element.label);\n  }\n\n  _validateWidget() {\n    return this.widget._validate();\n  }\n\n  _revealInvalidElement(invalidElement) {\n    this.widget.revealInvalidField(invalidElement);\n  }\n\n  markAsSaved() {\n    this.widget.visitFields(field => {\n      field.markAsSaved();\n    });\n  }\n\n  /**\n   * Visits all form fields and calls the updateRequiresSave() function. If any\n   * field has the requiresSave flag set to true, this function returns true,\n   * false otherwise.\n   *\n   * @see (Java) AbstractFormField #checkSaveNeeded, #isSaveNeeded\n   */\n  requiresSave() {\n    let requiresSave = false;\n    this.widget.visitFields(field => {\n      field.updateRequiresSave();\n      if (field.requiresSave) {\n        requiresSave = true;\n      }\n    });\n    return requiresSave;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAO,aAAa;AAEvE,eAAe,MAAMC,aAAa,SAASJ,SAAS,CAAC;EAEnDK,WAAW,GAAG;IACZ,KAAK,EAAE;IAEP,IAAI,CAACC,uBAAuB,GAAG,2BAA2B;IAC1D,IAAI,CAACC,6BAA6B,GAAG,iCAAiC;IACtE,IAAI,CAACC,sBAAsB,GAAG,0BAA0B;IACxD,IAAI,CAACC,0BAA0B,GAAG,yBAAyB;EAC7D;EAEAC,IAAI,CAACC,KAAK,EAAE;IACVV,KAAK,CAACW,eAAe,CAAC,QAAQ,EAAED,KAAK,CAACE,MAAM,EAAEd,IAAI,CAAC;IACnD,KAAK,CAACW,IAAI,CAACC,KAAK,CAAC;EACnB;EAEAG,MAAM,GAAG;IACP,IAAI,CAACD,MAAM,CAACE,WAAW,CAACC,KAAK,IAAI;MAC/B,IAAIA,KAAK,YAAYb,UAAU,EAAE;QAC/Ba,KAAK,CAACC,UAAU,EAAE;MACpB;IACF,CAAC,CAAC;EACJ;EAEAC,gBAAgB,GAAG;IACjB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,aAAa,GAAG,EAAE;IAEtB,IAAI,CAACP,MAAM,CAACE,WAAW,CAACC,KAAK,IAAI;MAC/B,IAAIK,MAAM,GAAGL,KAAK,CAACM,mBAAmB,EAAE;MACxC,IAAID,MAAM,CAACE,KAAK,EAAE;QAChB;MACF;MACA;MACA,IAAI,CAACF,MAAM,CAACG,kBAAkB,EAAE;QAC9BJ,aAAa,CAACK,IAAI,CAACJ,MAAM,CAAC;QAC1B;MACF;MACA,IAAI,CAACA,MAAM,CAACK,gBAAgB,EAAE;QAC5BP,aAAa,CAACM,IAAI,CAACJ,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,OAAO;MACLM,eAAe,EAAER,aAAa;MAC9BS,eAAe,EAAER;IACnB,CAAC;EACH;EAEAS,mBAAmB,CAACC,OAAO,EAAE;IAC3B,OAAO5B,OAAO,CAAC6B,SAAS,CAACD,OAAO,CAACE,KAAK,CAAC;EACzC;EAEAC,mBAAmB,CAACH,OAAO,EAAE;IAC3B,OAAO5B,OAAO,CAAC6B,SAAS,CAACD,OAAO,CAACE,KAAK,CAAC;EACzC;EAEAE,eAAe,GAAG;IAChB,OAAO,IAAI,CAACrB,MAAM,CAACsB,SAAS,EAAE;EAChC;EAEAC,qBAAqB,CAACC,cAAc,EAAE;IACpC,IAAI,CAACxB,MAAM,CAACyB,kBAAkB,CAACD,cAAc,CAAC;EAChD;EAEAE,WAAW,GAAG;IACZ,IAAI,CAAC1B,MAAM,CAACE,WAAW,CAACC,KAAK,IAAI;MAC/BA,KAAK,CAACuB,WAAW,EAAE;IACrB,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,YAAY,GAAG;IACb,IAAIA,YAAY,GAAG,KAAK;IACxB,IAAI,CAAC3B,MAAM,CAACE,WAAW,CAACC,KAAK,IAAI;MAC/BA,KAAK,CAACyB,kBAAkB,EAAE;MAC1B,IAAIzB,KAAK,CAACwB,YAAY,EAAE;QACtBA,YAAY,GAAG,IAAI;MACrB;IACF,CAAC,CAAC;IACF,OAAOA,YAAY;EACrB;AACF"},"metadata":{},"sourceType":"module"}