{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { App, objects, scout } from '../index';\nimport $ from 'jquery';\nlet instance;\n\n/**\n * Provides information about the device and its supported features.<p>\n * The information is detected lazily.\n *\n * @singleton\n */\nexport default class Device {\n  constructor(model) {\n    // user agent string from browser\n    this.userAgent = model.userAgent;\n    this.features = {};\n    this.system = Device.System.UNKNOWN;\n    this.type = Device.Type.DESKTOP;\n    this.browser = Device.Browser.UNKNOWN;\n    this.browserVersion = 0;\n    this.scrollbarWidth = 0;\n    if (this.userAgent) {\n      this._parseSystem();\n      this._parseSystemVersion();\n      this._parseBrowser();\n      this._parseBrowserVersion();\n    }\n  }\n  /**\n   * Called during bootstrap by index.html before the session startup.<p>\n   * Precalculates the value of some attributes to store them\n   * in a static way (and prevent many repeating function calls within loops).<p>\n   * Also loads device specific scripts (e.g. fast click for ios devices)\n   */\n  bootstrap() {\n    let promises = [];\n\n    // Pre-calculate value and store in a simple property, to prevent many function calls inside loops\n    this.scrollbarWidth = this._detectScrollbarWidth();\n    this.type = this._detectType(this.userAgent);\n    if (this.isIos()) {\n      this._installActiveHandler();\n    }\n    if (this._needsIPhoneRotationHack()) {\n      this._fixIPhoneRotationBug();\n    }\n    return promises;\n  }\n  _loadScriptDeferred(scriptUrl, doneFunc) {\n    return $.injectScript(scriptUrl).done(doneFunc);\n  }\n\n  /**\n   * IOs does only trigger :active when touching an element if a touchstart listener is attached\n   * Unfortunately, the :active is also triggered when scrolling, there is no delay.\n   * To fix this we would have to work with a custom active class which will be toggled on touchstart/end\n   */\n  _installActiveHandler() {\n    document.addEventListener('touchstart', () => {}, false);\n  }\n  _needsIPhoneRotationHack() {\n    $.log.isDebugEnabled() && $.log.debug('Activating iPhone rotation workaround.');\n    // iPad does not automatically switch to minimal-ui mode on rotation.\n    // Also the hack is not necessary if the body is scrollable (which can be achieved with a custom desktop).\n    return this.isIphone() && !this.isStandalone() && $(document.body).css('overflow') === 'hidden';\n  }\n\n  /**\n   * The iphone wants to activate the minimal-ui mode when it is rotated to landscape. This would actually be a good thing but unfortunately it is buggy.\n   * When the device is rotated there will be a white bar visible at the bottom of the screen.\n   * When it is rotated back it may look ok at first but touching an element does not work anymore because the touchpoint is about 30px at the wrong location.\n   * <p>\n   * This happens because the height used for layouting the desktop is smaller than it should be. This layouting is triggered by the window resize event, so obviously\n   * the resize event comes too early and no resize event will be triggered when the minimal-ui mode is activated.\n   * <p>\n   * Unfortunately it is also not possible to schedule the relayouting after a rotation because the height does not seem to be reliable.\n   * Even if the window or body size will explicitly be set to the viewport size, there will be a white bar at the bottom, even though the scout desktop is layouted with the correct size.\n   * <p>\n   * Luckily, it is possible to show the address bar programmatically but we need to wait for the rotation animation to complete.\n   * Since there is no event for that we need to try it several times, sometimes it will work after 150ms, sometimes we have to wait 250ms.\n   * This is quite a hack and will likely break with a future ios release...\n   */\n  _fixIPhoneRotationBug() {\n    $.log.isDebugEnabled() && $.log.debug('Enabling iPhone rotation workaround.');\n    let orientation = this.orientation();\n    let count = 0;\n    let docElem = document.documentElement;\n    window.addEventListener('resize', event => {\n      let newOrientation = Device.get().orientation();\n      if (orientation !== newOrientation) {\n        orientation = newOrientation;\n        count = 0;\n        tryShowAddressBar();\n      }\n    });\n    function tryShowAddressBar() {\n      setTimeout(() => {\n        docElem.scrollTop = 0;\n        if (++count < 8) {\n          tryShowAddressBar();\n        }\n      }, 50);\n    }\n  }\n  orientation() {\n    if (window.innerHeight > window.innerWidth) {\n      return 'portrait';\n    }\n    return 'landscape';\n  }\n  hasOnScreenKeyboard() {\n    return this.supportsFeature('_onScreenKeyboard', () => {\n      return this.isIos() || this.isAndroid() || this.isWindowsTabletMode();\n    });\n  }\n\n  /**\n   * Returns if the current browser includes the padding-right-space in the scrollWidth calculations.<br>\n   * Such a browser increases the scrollWidth only if the text-content exceeds the space <i>including</i> the right-padding.\n   * This means the scrollWidth is equal to the clientWidth until the right-padding-space is consumed as well.\n   */\n  isScrollWidthIncludingPadding() {\n    return this.isInternetExplorer() || this.isFirefox() || this.isEdge();\n  }\n\n  /**\n   * Safari shows a tooltip if ellipsis are displayed due to text truncation. This is fine but, unfortunately, it cannot be prevented.\n   * Because showing two tooltips at the same time (native and custom) is bad, the custom tooltip cannot be displayed.\n   * @returns {Boolean}\n   */\n  isCustomEllipsisTooltipPossible() {\n    return this.browser !== Device.Browser.SAFARI;\n  }\n\n  /**\n   * @returns {boolean} true if the current device is an iPhone. This is more specific than the <code>isIos</code> function\n   * which also includes iPads and iPods.\n   */\n  isIos() {\n    return Device.System.IOS === this.system;\n  }\n  isEdge() {\n    return Device.Browser.EDGE === this.browser;\n  }\n\n  /**\n   * @returns {string} 'ms-edge' if the current browser is Microsoft Edge\n   */\n  cssClassForEdge() {\n    return this.isEdge() ? 'ms-edge' : '';\n  }\n\n  /**\n   * @returns {string} 'iphone' if the current device is an iPhone\n   */\n  cssClassForIphone() {\n    return this.isIphone() ? 'iphone' : '';\n  }\n  isIphone() {\n    return this.userAgent.indexOf('iPhone') > -1;\n  }\n  isInternetExplorer() {\n    return Device.Browser.INTERNET_EXPLORER === this.browser;\n  }\n  isFirefox() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n  isChrome() {\n    return Device.Browser.CHROME === this.browser;\n  }\n\n  /**\n   * Compared to isIos() this function uses navigator.platform instead of navigator.userAgent to check whether the app runs on iOS.\n   * Most of the time isIos() is the way to go.\n   * This function was mainly introduced to detect whether it is a real iOS or an emulated one (e.g. using chrome emulator).\n   * @returns {boolean} true if the platform is iOS, false if not (e.g. if chrome emulator is running)\n   */\n  isIosPlatform() {\n    return /iPad|iPhone|iPod/.test(navigator.platform);\n  }\n  isAndroid() {\n    return Device.System.ANDROID === this.system;\n  }\n\n  /**\n   * The best way we have to detect a Microsoft Surface Tablet in table mode is to check if\n   * the scrollbar width is 0 pixel. In desktop mode the scrollbar width is > 0 pixel.\n   */\n  isWindowsTabletMode() {\n    return Device.System.WINDOWS === this.system && this.systemVersion >= 10 && this.scrollbarWidth === 0;\n  }\n\n  /**\n   * @returns {boolean} true if navigator.standalone is true which is the case for iOS home screen mode\n   */\n  isStandalone() {\n    return !!window.navigator.standalone;\n  }\n\n  /**\n   * This method returns false for all browsers that are known to be unsupported, all others (e.g. unknown engines) are allowed by default.\n   * The supported browser versions are mainly determined by the features needed by Scout (e.g. class syntax, Array.flatMap, IntersectionObserver, Custom CSS Properties, CSS flex-box, queueMicrotask).\n   */\n  isSupportedBrowser(browser, version) {\n    browser = scout.nvl(browser, this.browser);\n    version = scout.nvl(version, this.browserVersion);\n    let browsers = Device.Browser;\n    return browser === browsers.CHROME && version >= 71 || browser === browsers.FIREFOX && version >= 69 || browser === browsers.SAFARI && version >= 12.1;\n  }\n\n  /**\n   * Can not detect type until DOM is ready because we must create a DIV to measure the scrollbars.\n   */\n  _detectType(userAgent) {\n    if (Device.System.ANDROID === this.system) {\n      if (userAgent.indexOf('Mobile') > -1) {\n        return Device.Type.MOBILE;\n      }\n      return Device.Type.TABLET;\n    } else if (Device.System.IOS === this.system) {\n      if (userAgent.indexOf('iPad') > -1) {\n        return Device.Type.TABLET;\n      }\n      return Device.Type.MOBILE;\n    } else if (this.isWindowsTabletMode()) {\n      return Device.Type.TABLET;\n    }\n    return Device.Type.DESKTOP;\n  }\n  _parseSystem() {\n    let userAgent = this.userAgent;\n    if (userAgent.indexOf('iPhone') > -1 || userAgent.indexOf('iPad') > -1) {\n      this.system = Device.System.IOS;\n    } else if (userAgent.indexOf('Android') > -1) {\n      this.system = Device.System.ANDROID;\n    } else if (userAgent.indexOf('Windows') > -1) {\n      this.system = Device.System.WINDOWS;\n    }\n  }\n\n  /**\n   * Currently only supports IOS\n   */\n  _parseSystemVersion() {\n    let versionRegex,\n      System = Device.System,\n      userAgent = this.userAgent;\n    if (this.system === System.IOS) {\n      versionRegex = / OS ([0-9]+\\.?[0-9]*)/;\n      // replace all _ with .\n      userAgent = userAgent.replace(/_/g, '.');\n    } else if (this.system === System.WINDOWS) {\n      versionRegex = /Windows NT ([0-9]+\\.?[0-9]*)/;\n    }\n    if (versionRegex) {\n      this.systemVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n  _parseBrowser() {\n    let userAgent = this.userAgent;\n    if (userAgent.indexOf('Firefox') > -1) {\n      this.browser = Device.Browser.FIREFOX;\n    } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\n      this.browser = Device.Browser.INTERNET_EXPLORER;\n    } else if (userAgent.indexOf('Edge') > -1) {\n      // must check for Edge before we do other checks, because the Edge user-agent string\n      // also contains matches for Chrome and Webkit.\n      this.browser = Device.Browser.EDGE;\n    } else if (userAgent.indexOf('Chrome') > -1) {\n      this.browser = Device.Browser.CHROME;\n    } else if (userAgent.indexOf('Safari') > -1) {\n      this.browser = Device.Browser.SAFARI;\n    }\n  }\n\n  /**\n   * Version regex only matches the first number pair\n   * but not the revision-version. Example:\n   * - 21     match: 21\n   * - 21.1   match: 21.1\n   * - 21.1.3 match: 21.1\n   */\n  _parseBrowserVersion() {\n    let versionRegex,\n      browsers = Device.Browser,\n      userAgent = this.userAgent;\n    if (this.browser === browsers.INTERNET_EXPLORER) {\n      // with internet explorer 11 user agent string does not contain the 'MSIE' string anymore\n      // additionally in new version the version-number after Trident/ is not the browser-version\n      // but the engine-version.\n      if (userAgent.indexOf('MSIE') > -1) {\n        versionRegex = /MSIE ([0-9]+\\.?[0-9]*)/;\n      } else {\n        versionRegex = /rv:([0-9]+\\.?[0-9]*)/;\n      }\n    } else if (this.browser === browsers.EDGE) {\n      versionRegex = /Edge\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.SAFARI) {\n      if (this.isIos() && userAgent.indexOf('Version/') < 0) {\n        this.browserVersion = this.systemVersion;\n        return;\n      }\n      versionRegex = /Version\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.FIREFOX) {\n      versionRegex = /Firefox\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.CHROME) {\n      versionRegex = /Chrome\\/([0-9]+\\.?[0-9]*)/;\n    }\n    if (versionRegex) {\n      this.browserVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n  _parseVersion(userAgent, versionRegex) {\n    let matches = versionRegex.exec(userAgent);\n    if (Array.isArray(matches) && matches.length === 2) {\n      return parseFloat(matches[1]);\n    }\n  }\n  supportsFeature(property, checkFunc) {\n    if (this.features[property] === undefined) {\n      this.features[property] = checkFunc(property);\n    }\n    return this.features[property];\n  }\n\n  /**\n   * Currently this method should be used when you want to check if the device is \"touch only\" -\n   * which means the user has no keyboard or mouse. Some hybrids like Surface tablets in desktop mode are\n   * still touch devices, but support keyboard and mouse at the same time. In such cases this method will\n   * return false, since the device is not touch only.\n   *\n   * Currently this method returns the same as hasOnScreenKeyboard(). Maybe the implementation here will be\n   * different in the future.\n   */\n  supportsOnlyTouch() {\n    return this.supportsFeature('_onlyTouch', this.hasOnScreenKeyboard.bind(this));\n  }\n\n  /**\n   * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n   * @see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685\n   */\n  supportsTouch() {\n    return this.supportsFeature('_touch', property => {\n      return 'ontouchstart' in window || window.TouchEvent || window.DocumentTouch && document instanceof window.DocumentTouch;\n    });\n  }\n  supportsFile() {\n    return !!window.File;\n  }\n\n  /**\n   * Some browsers support the file API but don't support the File constructor (new File()).\n   */\n  supportsFileConstructor() {\n    return typeof File === 'function';\n  }\n  supportsCssAnimation() {\n    return this.supportsCssProperty('animation');\n  }\n\n  /**\n   * Used to determine if browser supports full history API.\n   * Note that IE9 only partially supports the API, pushState and replaceState functions are missing.\n   * @see: https://developer.mozilla.org/de/docs/Web/API/Window/history\n   */\n  supportsHistoryApi() {\n    return !!(window.history && window.history.pushState);\n  }\n  supportsCssGradient() {\n    let testValue = 'linear-gradient(to left, #000 0%, #000 50%, transparent 50%, transparent 100% )';\n    return this.supportsFeature('gradient', this.checkCssValue.bind(this, 'backgroundImage', testValue, actualValue => {\n      return (actualValue + '').indexOf('gradient') > 0;\n    }));\n  }\n  supportsInternationalization() {\n    return window.Intl && typeof window.Intl === 'object';\n  }\n\n  /**\n   * Returns true if the device supports the download of resources in the same window as the single page app is running.\n   * With \"download\" we mean: change <code>window.location.href</code> to the URL of the resource to download. Some browsers don't\n   * support this behavior and require the resource to be opened in a new window with <code>window.open</code>.\n   */\n  supportsDownloadInSameWindow() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n  supportsWebcam() {\n    return this.supportsFeature('_webcam', property => {\n      let getUserMedia = objects.optProperty(navigator, 'mediaDevices', 'getUserMedia');\n      return objects.isFunction(getUserMedia);\n    });\n  }\n  supportsMicrotask() {\n    return typeof queueMicrotask === 'function';\n  }\n  supportsIntersectionObserver() {\n    return typeof IntersectionObserver === 'function';\n  }\n  hasPrettyScrollbars() {\n    return this.supportsFeature('_prettyScrollbars', property => {\n      return this.scrollbarWidth === 0;\n    });\n  }\n  canHideScrollbars() {\n    return this.supportsFeature('_canHideScrollbars', property => {\n      // Check if scrollbar is vanished if class hybrid-scrollable is applied which hides the scrollbar, see also scrollbars.js and Scrollbar.less\n      return this._detectScrollbarWidth('hybrid-scrollable') === 0;\n    });\n  }\n  supportsCopyFromDisabledInputFields() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n\n  /**\n   * If the mouse down on an element with a pseudo element removes the pseudo element (e.g. check box toggling),\n   * the firefox cannot focus the element anymore and instead focuses the body. In that case manual focus handling is necessary.\n   */\n  loosesFocusIfPseudoElementIsRemoved() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n  supportsCssProperty(property) {\n    return this.supportsFeature(property, property => {\n      if (document.body.style[property] !== undefined) {\n        return true;\n      }\n      property = property.charAt(0).toUpperCase() + property.slice(1);\n      for (let i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n        if (document.body.style[Device.VENDOR_PREFIXES[i] + property] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  supportsGeolocation() {\n    return !!navigator.geolocation;\n  }\n\n  /**\n   * When we call .preventDefault() on a mousedown event Firefox doesn't apply the :active state.\n   * Since W3C does not specify an expected behavior, we need this workaround for consistent behavior in\n   * our UI. The issue has been reported to Mozilla but it doesn't look like there will be a bugfix soon:\n   *\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=771241#c7\n   */\n  requiresSyntheticActiveState() {\n    return this.isFirefox();\n  }\n  supportsPassiveEventListener() {\n    return this.supportsFeature('_passiveEventListener', property => {\n      // Code from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n      let passiveSupported = false;\n      try {\n        let options = Object.defineProperty({}, 'passive', {\n          get: () => {\n            passiveSupported = true;\n            return false;\n          }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n      } catch (err) {\n        passiveSupported = false;\n      }\n      return passiveSupported;\n    });\n  }\n  checkCssValue(property, value, checkFunc) {\n    // Check if property is supported at all, otherwise div.style[property] would just add it and checkFunc would always return true\n    if (document.body.style[property] === undefined) {\n      return false;\n    }\n    let div = document.createElement('div');\n    div.style[property] = value;\n    if (checkFunc(div.style[property])) {\n      return true;\n    }\n    property = property.charAt(0).toUpperCase() + property.slice(1);\n    for (let i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n      let vendorProperty = Device.VENDOR_PREFIXES[i] + property;\n      if (document.body.style[vendorProperty] !== undefined) {\n        div.style[vendorProperty] = value;\n        if (checkFunc(div.style[vendorProperty])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   *  https://bugs.chromium.org/p/chromium/issues/detail?id=740502\n   */\n  hasTableCellZoomBug() {\n    return this.browser === Device.Browser.CHROME;\n  }\n  _detectScrollbarWidth(cssClass) {\n    let $measure = $('body').appendDiv(cssClass).attr('id', 'MeasureScrollbar').css('width', 50).css('height', 50).css('overflow-y', 'scroll'),\n      measureElement = $measure[0];\n    let scrollbarWidth = measureElement.offsetWidth - measureElement.clientWidth;\n    $measure.remove();\n    return scrollbarWidth;\n  }\n  toString() {\n    return 'scout.Device[' + 'system=' + this.system + ' browser=' + this.browser + ' browserVersion=' + this.browserVersion + ' type=' + this.type + ' scrollbarWidth=' + this.scrollbarWidth + ' features=' + JSON.stringify(this.features) + ']';\n  }\n  static get() {\n    return instance;\n  }\n}\n_defineProperty(Device, \"VENDOR_PREFIXES\", ['Webkit', 'Moz', 'O', 'ms', 'Khtml']);\n_defineProperty(Device, \"Browser\", {\n  UNKNOWN: 'Unknown',\n  FIREFOX: 'Firefox',\n  /**\n   * Chromium based: Google Chrome, Microsoft Edge, Brave, Opera\n   */\n  CHROME: 'Chrome',\n  INTERNET_EXPLORER: 'InternetExplorer',\n  /**\n   * Only Legacy Edge. Chromium based Edge is reported as CHROME\n   */\n  EDGE: 'Edge',\n  SAFARI: 'Safari'\n});\n_defineProperty(Device, \"System\", {\n  UNKNOWN: 'Unknown',\n  IOS: 'IOS',\n  ANDROID: 'ANDROID',\n  WINDOWS: 'WINDOWS'\n});\n_defineProperty(Device, \"Type\", {\n  DESKTOP: 'DESKTOP',\n  TABLET: 'TABLET',\n  MOBILE: 'MOBILE'\n});\nApp.addListener('prepare', () => {\n  if (instance) {\n    // if the device was created before the app itself, use it instead of creating a new one\n    return;\n  }\n  instance = scout.create('Device', {\n    userAgent: navigator.userAgent\n  });\n});","map":{"version":3,"names":["App","objects","scout","$","instance","Device","constructor","model","userAgent","features","system","System","UNKNOWN","type","Type","DESKTOP","browser","Browser","browserVersion","scrollbarWidth","_parseSystem","_parseSystemVersion","_parseBrowser","_parseBrowserVersion","bootstrap","promises","_detectScrollbarWidth","_detectType","isIos","_installActiveHandler","_needsIPhoneRotationHack","_fixIPhoneRotationBug","_loadScriptDeferred","scriptUrl","doneFunc","injectScript","done","document","addEventListener","log","isDebugEnabled","debug","isIphone","isStandalone","body","css","orientation","count","docElem","documentElement","window","event","newOrientation","get","tryShowAddressBar","setTimeout","scrollTop","innerHeight","innerWidth","hasOnScreenKeyboard","supportsFeature","isAndroid","isWindowsTabletMode","isScrollWidthIncludingPadding","isInternetExplorer","isFirefox","isEdge","isCustomEllipsisTooltipPossible","SAFARI","IOS","EDGE","cssClassForEdge","cssClassForIphone","indexOf","INTERNET_EXPLORER","FIREFOX","isChrome","CHROME","isIosPlatform","test","navigator","platform","ANDROID","WINDOWS","systemVersion","standalone","isSupportedBrowser","version","nvl","browsers","MOBILE","TABLET","versionRegex","replace","_parseVersion","matches","exec","Array","isArray","length","parseFloat","property","checkFunc","undefined","supportsOnlyTouch","bind","supportsTouch","TouchEvent","DocumentTouch","supportsFile","File","supportsFileConstructor","supportsCssAnimation","supportsCssProperty","supportsHistoryApi","history","pushState","supportsCssGradient","testValue","checkCssValue","actualValue","supportsInternationalization","Intl","supportsDownloadInSameWindow","supportsWebcam","getUserMedia","optProperty","isFunction","supportsMicrotask","queueMicrotask","supportsIntersectionObserver","IntersectionObserver","hasPrettyScrollbars","canHideScrollbars","supportsCopyFromDisabledInputFields","loosesFocusIfPseudoElementIsRemoved","style","charAt","toUpperCase","slice","i","VENDOR_PREFIXES","supportsGeolocation","geolocation","requiresSyntheticActiveState","supportsPassiveEventListener","passiveSupported","options","Object","defineProperty","removeEventListener","err","value","div","createElement","vendorProperty","hasTableCellZoomBug","cssClass","$measure","appendDiv","attr","measureElement","offsetWidth","clientWidth","remove","toString","JSON","stringify","addListener","create"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/util/Device.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {App, objects, scout} from '../index';\nimport $ from 'jquery';\n\nlet instance;\n\n/**\n * Provides information about the device and its supported features.<p>\n * The information is detected lazily.\n *\n * @singleton\n */\nexport default class Device {\n\n  constructor(model) {\n    // user agent string from browser\n    this.userAgent = model.userAgent;\n    this.features = {};\n    this.system = Device.System.UNKNOWN;\n    this.type = Device.Type.DESKTOP;\n    this.browser = Device.Browser.UNKNOWN;\n    this.browserVersion = 0;\n    this.scrollbarWidth = 0;\n\n    if (this.userAgent) {\n      this._parseSystem();\n      this._parseSystemVersion();\n      this._parseBrowser();\n      this._parseBrowserVersion();\n    }\n  }\n\n  static VENDOR_PREFIXES = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'];\n\n  static Browser = {\n    UNKNOWN: 'Unknown',\n    FIREFOX: 'Firefox',\n    /**\n     * Chromium based: Google Chrome, Microsoft Edge, Brave, Opera\n     */\n    CHROME: 'Chrome',\n    INTERNET_EXPLORER: 'InternetExplorer',\n    /**\n     * Only Legacy Edge. Chromium based Edge is reported as CHROME\n     */\n    EDGE: 'Edge',\n    SAFARI: 'Safari'\n  };\n\n  static System = {\n    UNKNOWN: 'Unknown',\n    IOS: 'IOS',\n    ANDROID: 'ANDROID',\n    WINDOWS: 'WINDOWS'\n  };\n\n  static Type = {\n    DESKTOP: 'DESKTOP',\n    TABLET: 'TABLET',\n    MOBILE: 'MOBILE'\n  };\n\n  /**\n   * Called during bootstrap by index.html before the session startup.<p>\n   * Precalculates the value of some attributes to store them\n   * in a static way (and prevent many repeating function calls within loops).<p>\n   * Also loads device specific scripts (e.g. fast click for ios devices)\n   */\n  bootstrap() {\n    let promises = [];\n\n    // Pre-calculate value and store in a simple property, to prevent many function calls inside loops\n    this.scrollbarWidth = this._detectScrollbarWidth();\n    this.type = this._detectType(this.userAgent);\n\n    if (this.isIos()) {\n      this._installActiveHandler();\n    }\n\n    if (this._needsIPhoneRotationHack()) {\n      this._fixIPhoneRotationBug();\n    }\n\n    return promises;\n  }\n\n  _loadScriptDeferred(scriptUrl, doneFunc) {\n    return $\n      .injectScript(scriptUrl)\n      .done(doneFunc);\n  }\n\n  /**\n   * IOs does only trigger :active when touching an element if a touchstart listener is attached\n   * Unfortunately, the :active is also triggered when scrolling, there is no delay.\n   * To fix this we would have to work with a custom active class which will be toggled on touchstart/end\n   */\n  _installActiveHandler() {\n    document.addEventListener('touchstart', () => {\n    }, false);\n  }\n\n  _needsIPhoneRotationHack() {\n    $.log.isDebugEnabled() && $.log.debug('Activating iPhone rotation workaround.');\n    // iPad does not automatically switch to minimal-ui mode on rotation.\n    // Also the hack is not necessary if the body is scrollable (which can be achieved with a custom desktop).\n    return this.isIphone() && !this.isStandalone() && $(document.body).css('overflow') === 'hidden';\n  }\n\n  /**\n   * The iphone wants to activate the minimal-ui mode when it is rotated to landscape. This would actually be a good thing but unfortunately it is buggy.\n   * When the device is rotated there will be a white bar visible at the bottom of the screen.\n   * When it is rotated back it may look ok at first but touching an element does not work anymore because the touchpoint is about 30px at the wrong location.\n   * <p>\n   * This happens because the height used for layouting the desktop is smaller than it should be. This layouting is triggered by the window resize event, so obviously\n   * the resize event comes too early and no resize event will be triggered when the minimal-ui mode is activated.\n   * <p>\n   * Unfortunately it is also not possible to schedule the relayouting after a rotation because the height does not seem to be reliable.\n   * Even if the window or body size will explicitly be set to the viewport size, there will be a white bar at the bottom, even though the scout desktop is layouted with the correct size.\n   * <p>\n   * Luckily, it is possible to show the address bar programmatically but we need to wait for the rotation animation to complete.\n   * Since there is no event for that we need to try it several times, sometimes it will work after 150ms, sometimes we have to wait 250ms.\n   * This is quite a hack and will likely break with a future ios release...\n   */\n  _fixIPhoneRotationBug() {\n    $.log.isDebugEnabled() && $.log.debug('Enabling iPhone rotation workaround.');\n    let orientation = this.orientation();\n    let count = 0;\n    let docElem = document.documentElement;\n    window.addEventListener('resize', event => {\n      let newOrientation = Device.get().orientation();\n      if (orientation !== newOrientation) {\n        orientation = newOrientation;\n        count = 0;\n        tryShowAddressBar();\n      }\n    });\n\n    function tryShowAddressBar() {\n      setTimeout(() => {\n        docElem.scrollTop = 0;\n        if (++count < 8) {\n          tryShowAddressBar();\n        }\n      }, 50);\n    }\n  }\n\n  orientation() {\n    if (window.innerHeight > window.innerWidth) {\n      return 'portrait';\n    }\n    return 'landscape';\n  }\n\n  hasOnScreenKeyboard() {\n    return this.supportsFeature('_onScreenKeyboard', () => {\n      return this.isIos() || this.isAndroid() || this.isWindowsTabletMode();\n    });\n  }\n\n  /**\n   * Returns if the current browser includes the padding-right-space in the scrollWidth calculations.<br>\n   * Such a browser increases the scrollWidth only if the text-content exceeds the space <i>including</i> the right-padding.\n   * This means the scrollWidth is equal to the clientWidth until the right-padding-space is consumed as well.\n   */\n  isScrollWidthIncludingPadding() {\n    return this.isInternetExplorer() || this.isFirefox() || this.isEdge();\n  }\n\n  /**\n   * Safari shows a tooltip if ellipsis are displayed due to text truncation. This is fine but, unfortunately, it cannot be prevented.\n   * Because showing two tooltips at the same time (native and custom) is bad, the custom tooltip cannot be displayed.\n   * @returns {Boolean}\n   */\n  isCustomEllipsisTooltipPossible() {\n    return this.browser !== Device.Browser.SAFARI;\n  }\n\n  /**\n   * @returns {boolean} true if the current device is an iPhone. This is more specific than the <code>isIos</code> function\n   * which also includes iPads and iPods.\n   */\n  isIos() {\n    return Device.System.IOS === this.system;\n  }\n\n  isEdge() {\n    return Device.Browser.EDGE === this.browser;\n  }\n\n  /**\n   * @returns {string} 'ms-edge' if the current browser is Microsoft Edge\n   */\n  cssClassForEdge() {\n    return this.isEdge() ? 'ms-edge' : '';\n  }\n\n  /**\n   * @returns {string} 'iphone' if the current device is an iPhone\n   */\n  cssClassForIphone() {\n    return this.isIphone() ? 'iphone' : '';\n  }\n\n  isIphone() {\n    return this.userAgent.indexOf('iPhone') > -1;\n  }\n\n  isInternetExplorer() {\n    return Device.Browser.INTERNET_EXPLORER === this.browser;\n  }\n\n  isFirefox() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n\n  isChrome() {\n    return Device.Browser.CHROME === this.browser;\n  }\n\n  /**\n   * Compared to isIos() this function uses navigator.platform instead of navigator.userAgent to check whether the app runs on iOS.\n   * Most of the time isIos() is the way to go.\n   * This function was mainly introduced to detect whether it is a real iOS or an emulated one (e.g. using chrome emulator).\n   * @returns {boolean} true if the platform is iOS, false if not (e.g. if chrome emulator is running)\n   */\n  isIosPlatform() {\n    return /iPad|iPhone|iPod/.test(navigator.platform);\n  }\n\n  isAndroid() {\n    return Device.System.ANDROID === this.system;\n  }\n\n  /**\n   * The best way we have to detect a Microsoft Surface Tablet in table mode is to check if\n   * the scrollbar width is 0 pixel. In desktop mode the scrollbar width is > 0 pixel.\n   */\n  isWindowsTabletMode() {\n    return Device.System.WINDOWS === this.system && this.systemVersion >= 10 && this.scrollbarWidth === 0;\n  }\n\n  /**\n   * @returns {boolean} true if navigator.standalone is true which is the case for iOS home screen mode\n   */\n  isStandalone() {\n    return !!window.navigator.standalone;\n  }\n\n  /**\n   * This method returns false for all browsers that are known to be unsupported, all others (e.g. unknown engines) are allowed by default.\n   * The supported browser versions are mainly determined by the features needed by Scout (e.g. class syntax, Array.flatMap, IntersectionObserver, Custom CSS Properties, CSS flex-box, queueMicrotask).\n   */\n  isSupportedBrowser(browser, version) {\n    browser = scout.nvl(browser, this.browser);\n    version = scout.nvl(version, this.browserVersion);\n    let browsers = Device.Browser;\n    return (browser === browsers.CHROME && version >= 71)\n      || (browser === browsers.FIREFOX && version >= 69)\n      || (browser === browsers.SAFARI && version >= 12.1);\n  }\n\n  /**\n   * Can not detect type until DOM is ready because we must create a DIV to measure the scrollbars.\n   */\n  _detectType(userAgent) {\n    if (Device.System.ANDROID === this.system) {\n      if (userAgent.indexOf('Mobile') > -1) {\n        return Device.Type.MOBILE;\n      }\n      return Device.Type.TABLET;\n    } else if (Device.System.IOS === this.system) {\n      if (userAgent.indexOf('iPad') > -1) {\n        return Device.Type.TABLET;\n      }\n      return Device.Type.MOBILE;\n    } else if (this.isWindowsTabletMode()) {\n      return Device.Type.TABLET;\n    }\n    return Device.Type.DESKTOP;\n  }\n\n  _parseSystem() {\n    let userAgent = this.userAgent;\n    if (userAgent.indexOf('iPhone') > -1 || userAgent.indexOf('iPad') > -1) {\n      this.system = Device.System.IOS;\n    } else if (userAgent.indexOf('Android') > -1) {\n      this.system = Device.System.ANDROID;\n    } else if (userAgent.indexOf('Windows') > -1) {\n      this.system = Device.System.WINDOWS;\n    }\n  }\n\n  /**\n   * Currently only supports IOS\n   */\n  _parseSystemVersion() {\n    let versionRegex,\n      System = Device.System,\n      userAgent = this.userAgent;\n\n    if (this.system === System.IOS) {\n      versionRegex = / OS ([0-9]+\\.?[0-9]*)/;\n      // replace all _ with .\n      userAgent = userAgent.replace(/_/g, '.');\n    } else if (this.system === System.WINDOWS) {\n      versionRegex = /Windows NT ([0-9]+\\.?[0-9]*)/;\n    }\n\n    if (versionRegex) {\n      this.systemVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n\n  _parseBrowser() {\n    let userAgent = this.userAgent;\n\n    if (userAgent.indexOf('Firefox') > -1) {\n      this.browser = Device.Browser.FIREFOX;\n    } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\n      this.browser = Device.Browser.INTERNET_EXPLORER;\n    } else if (userAgent.indexOf('Edge') > -1) {\n      // must check for Edge before we do other checks, because the Edge user-agent string\n      // also contains matches for Chrome and Webkit.\n      this.browser = Device.Browser.EDGE;\n    } else if (userAgent.indexOf('Chrome') > -1) {\n      this.browser = Device.Browser.CHROME;\n    } else if (userAgent.indexOf('Safari') > -1) {\n      this.browser = Device.Browser.SAFARI;\n    }\n  }\n\n  /**\n   * Version regex only matches the first number pair\n   * but not the revision-version. Example:\n   * - 21     match: 21\n   * - 21.1   match: 21.1\n   * - 21.1.3 match: 21.1\n   */\n  _parseBrowserVersion() {\n    let versionRegex,\n      browsers = Device.Browser,\n      userAgent = this.userAgent;\n\n    if (this.browser === browsers.INTERNET_EXPLORER) {\n      // with internet explorer 11 user agent string does not contain the 'MSIE' string anymore\n      // additionally in new version the version-number after Trident/ is not the browser-version\n      // but the engine-version.\n      if (userAgent.indexOf('MSIE') > -1) {\n        versionRegex = /MSIE ([0-9]+\\.?[0-9]*)/;\n      } else {\n        versionRegex = /rv:([0-9]+\\.?[0-9]*)/;\n      }\n    } else if (this.browser === browsers.EDGE) {\n      versionRegex = /Edge\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.SAFARI) {\n      if (this.isIos() && userAgent.indexOf('Version/') < 0) {\n        this.browserVersion = this.systemVersion;\n        return;\n      }\n      versionRegex = /Version\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.FIREFOX) {\n      versionRegex = /Firefox\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.CHROME) {\n      versionRegex = /Chrome\\/([0-9]+\\.?[0-9]*)/;\n    }\n    if (versionRegex) {\n      this.browserVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n\n  _parseVersion(userAgent, versionRegex) {\n    let matches = versionRegex.exec(userAgent);\n    if (Array.isArray(matches) && matches.length === 2) {\n      return parseFloat(matches[1]);\n    }\n  }\n\n  supportsFeature(property, checkFunc) {\n    if (this.features[property] === undefined) {\n      this.features[property] = checkFunc(property);\n    }\n    return this.features[property];\n  }\n\n  /**\n   * Currently this method should be used when you want to check if the device is \"touch only\" -\n   * which means the user has no keyboard or mouse. Some hybrids like Surface tablets in desktop mode are\n   * still touch devices, but support keyboard and mouse at the same time. In such cases this method will\n   * return false, since the device is not touch only.\n   *\n   * Currently this method returns the same as hasOnScreenKeyboard(). Maybe the implementation here will be\n   * different in the future.\n   */\n  supportsOnlyTouch() {\n    return this.supportsFeature('_onlyTouch', this.hasOnScreenKeyboard.bind(this));\n  }\n\n  /**\n   * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n   * @see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685\n   */\n  supportsTouch() {\n    return this.supportsFeature('_touch', property => {\n      return (('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof window.DocumentTouch);\n    });\n  }\n\n  supportsFile() {\n    return !!window.File;\n  }\n\n  /**\n   * Some browsers support the file API but don't support the File constructor (new File()).\n   */\n  supportsFileConstructor() {\n    return typeof File === 'function';\n  }\n\n  supportsCssAnimation() {\n    return this.supportsCssProperty('animation');\n  }\n\n  /**\n   * Used to determine if browser supports full history API.\n   * Note that IE9 only partially supports the API, pushState and replaceState functions are missing.\n   * @see: https://developer.mozilla.org/de/docs/Web/API/Window/history\n   */\n  supportsHistoryApi() {\n    return !!(window.history && window.history.pushState);\n  }\n\n  supportsCssGradient() {\n    let testValue = 'linear-gradient(to left, #000 0%, #000 50%, transparent 50%, transparent 100% )';\n    return this.supportsFeature('gradient', this.checkCssValue.bind(this, 'backgroundImage', testValue, actualValue => {\n      return (actualValue + '').indexOf('gradient') > 0;\n    }));\n  }\n\n  supportsInternationalization() {\n    return window.Intl && typeof window.Intl === 'object';\n  }\n\n  /**\n   * Returns true if the device supports the download of resources in the same window as the single page app is running.\n   * With \"download\" we mean: change <code>window.location.href</code> to the URL of the resource to download. Some browsers don't\n   * support this behavior and require the resource to be opened in a new window with <code>window.open</code>.\n   */\n  supportsDownloadInSameWindow() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n\n  supportsWebcam() {\n    return this.supportsFeature('_webcam', property => {\n      let getUserMedia = objects.optProperty(navigator, 'mediaDevices', 'getUserMedia');\n      return objects.isFunction(getUserMedia);\n    });\n  }\n\n  supportsMicrotask() {\n    return typeof queueMicrotask === 'function';\n  }\n\n  supportsIntersectionObserver() {\n    return typeof IntersectionObserver === 'function';\n  }\n\n  hasPrettyScrollbars() {\n    return this.supportsFeature('_prettyScrollbars', property => {\n      return this.scrollbarWidth === 0;\n    });\n  }\n\n  canHideScrollbars() {\n    return this.supportsFeature('_canHideScrollbars', property => {\n      // Check if scrollbar is vanished if class hybrid-scrollable is applied which hides the scrollbar, see also scrollbars.js and Scrollbar.less\n      return this._detectScrollbarWidth('hybrid-scrollable') === 0;\n    });\n  }\n\n  supportsCopyFromDisabledInputFields() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n\n  /**\n   * If the mouse down on an element with a pseudo element removes the pseudo element (e.g. check box toggling),\n   * the firefox cannot focus the element anymore and instead focuses the body. In that case manual focus handling is necessary.\n   */\n  loosesFocusIfPseudoElementIsRemoved() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n\n  supportsCssProperty(property) {\n    return this.supportsFeature(property, property => {\n      if (document.body.style[property] !== undefined) {\n        return true;\n      }\n\n      property = property.charAt(0).toUpperCase() + property.slice(1);\n      for (let i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n        if (document.body.style[Device.VENDOR_PREFIXES[i] + property] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  supportsGeolocation() {\n    return !!navigator.geolocation;\n  }\n\n  /**\n   * When we call .preventDefault() on a mousedown event Firefox doesn't apply the :active state.\n   * Since W3C does not specify an expected behavior, we need this workaround for consistent behavior in\n   * our UI. The issue has been reported to Mozilla but it doesn't look like there will be a bugfix soon:\n   *\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=771241#c7\n   */\n  requiresSyntheticActiveState() {\n    return this.isFirefox();\n  }\n\n  supportsPassiveEventListener() {\n    return this.supportsFeature('_passiveEventListener', property => {\n      // Code from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n      let passiveSupported = false;\n      try {\n        let options = Object.defineProperty({}, 'passive', {\n          get: () => {\n            passiveSupported = true;\n            return false;\n          }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n      } catch (err) {\n        passiveSupported = false;\n      }\n      return passiveSupported;\n    });\n  }\n\n  checkCssValue(property, value, checkFunc) {\n    // Check if property is supported at all, otherwise div.style[property] would just add it and checkFunc would always return true\n    if (document.body.style[property] === undefined) {\n      return false;\n    }\n    let div = document.createElement('div');\n    div.style[property] = value;\n    if (checkFunc(div.style[property])) {\n      return true;\n    }\n\n    property = property.charAt(0).toUpperCase() + property.slice(1);\n    for (let i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n      let vendorProperty = Device.VENDOR_PREFIXES[i] + property;\n      if (document.body.style[vendorProperty] !== undefined) {\n        div.style[vendorProperty] = value;\n        if (checkFunc(div.style[vendorProperty])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   *  https://bugs.chromium.org/p/chromium/issues/detail?id=740502\n   */\n  hasTableCellZoomBug() {\n    return this.browser === Device.Browser.CHROME;\n  }\n\n  _detectScrollbarWidth(cssClass) {\n    let $measure = $('body')\n        .appendDiv(cssClass)\n        .attr('id', 'MeasureScrollbar')\n        .css('width', 50)\n        .css('height', 50)\n        .css('overflow-y', 'scroll'),\n      measureElement = $measure[0];\n    let scrollbarWidth = measureElement.offsetWidth - measureElement.clientWidth;\n    $measure.remove();\n    return scrollbarWidth;\n  }\n\n  toString() {\n    return 'scout.Device[' +\n      'system=' + this.system +\n      ' browser=' + this.browser +\n      ' browserVersion=' + this.browserVersion +\n      ' type=' + this.type +\n      ' scrollbarWidth=' + this.scrollbarWidth +\n      ' features=' + JSON.stringify(this.features) + ']';\n  }\n\n  static get() {\n    return instance;\n  }\n}\n\nApp.addListener('prepare', () => {\n  if (instance) {\n    // if the device was created before the app itself, use it instead of creating a new one\n    return;\n  }\n  instance = scout.create('Device', {\n    userAgent: navigator.userAgent\n  });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}