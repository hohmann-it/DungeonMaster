{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, TileGridSelectKeyStroke } from '../../index';\nexport default class TileGridSelectLastKeyStroke extends TileGridSelectKeyStroke {\n  constructor(tileGrid) {\n    super(tileGrid);\n    this.stopPropagation = true;\n    this.which = [keys.END];\n  }\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    if (!this.getSelectionHandler().isHorizontalGridActive()) {\n      return false;\n    }\n    return true;\n  }\n  _computeNewSelection(extend) {\n    return this.getSelectionHandler().computeSelectionToLast(extend);\n  }\n}","map":{"version":3,"names":["keys","TileGridSelectKeyStroke","TileGridSelectLastKeyStroke","constructor","tileGrid","stopPropagation","which","END","_accept","event","accepted","getSelectionHandler","isHorizontalGridActive","_computeNewSelection","extend","computeSelectionToLast"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tile/keystrokes/TileGridSelectLastKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, TileGridSelectKeyStroke} from '../../index';\n\nexport default class TileGridSelectLastKeyStroke extends TileGridSelectKeyStroke {\n\n  constructor(tileGrid) {\n    super(tileGrid);\n    this.stopPropagation = true;\n    this.which = [keys.END];\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    if (!(this.getSelectionHandler().isHorizontalGridActive())) {\n      return false;\n    }\n    return true;\n  }\n\n  _computeNewSelection(extend) {\n    return this.getSelectionHandler().computeSelectionToLast(extend);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,uBAAuB,QAAO,aAAa;AAEzD,eAAe,MAAMC,2BAA2B,SAASD,uBAAuB,CAAC;EAE/EE,WAAW,CAACC,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,KAAK,GAAG,CAACN,IAAI,CAACO,GAAG,CAAC;EACzB;EAEAC,OAAO,CAACC,KAAK,EAAE;IACb,IAAIC,QAAQ,GAAG,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IACnC,IAAI,CAACC,QAAQ,EAAE;MACb,OAAO,KAAK;IACd;IACA,IAAI,CAAE,IAAI,CAACC,mBAAmB,EAAE,CAACC,sBAAsB,EAAG,EAAE;MAC1D,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EAEAC,oBAAoB,CAACC,MAAM,EAAE;IAC3B,OAAO,IAAI,CAACH,mBAAmB,EAAE,CAACI,sBAAsB,CAACD,MAAM,CAAC;EAClE;AACF"},"metadata":{},"sourceType":"module"}