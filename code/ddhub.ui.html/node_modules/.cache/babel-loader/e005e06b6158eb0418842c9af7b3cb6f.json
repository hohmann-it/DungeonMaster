{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, arrays, keys } from '../../index';\nexport default class TableNavigationPageUpKeyStroke extends AbstractTableNavigationKeyStroke {\n  constructor(table) {\n    super(table);\n    this.which = [keys.PAGE_UP];\n    this.renderingHints.text = 'PgUp';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let viewport = this._viewportInfo();\n      if (viewport.firstRow) {\n        return viewport.firstRow.$row;\n      }\n    };\n  }\n  handle(event) {\n    let table = this.field,\n      viewport = this._viewportInfo(),\n      rows = table.visibleRows,\n      selectedRows = table.selectedRows,\n      firstSelectedRow = arrays.first(selectedRows),\n      lastActionRow = table.selectionHandler.lastActionRow,\n      lastActionRowIndex = -1,\n      newSelectedRows;\n\n    // First row may be undefined if there is only one row visible in the viewport and this row is bigger than the viewport. In that case just scroll up.\n    // If it already is at the top nothing will happen\n    if (!viewport.firstRow) {\n      table.scrollPageUp();\n      viewport = this._viewportInfo();\n      if (!viewport.firstRow) {\n        return;\n      }\n    }\n    if (lastActionRow) {\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n    // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n    if (lastActionRowIndex < 0) {\n      lastActionRow = firstSelectedRow;\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n\n    // If first row in viewport already is selected -> scroll a page up\n    // Don't do it if multiple rows are selected and user only presses page up without shift\n    if (selectedRows.length > 0 && lastActionRow === viewport.firstRow && !(selectedRows.length > 1 && !event.shiftKey)) {\n      table.scrollPageUp();\n      viewport = this._viewportInfo();\n      if (!viewport.firstRow) {\n        // May happen due to same reason as above -> Row will fill the whole viewport after scrolling\n        return;\n      }\n    }\n    if (event.shiftKey && selectedRows.length > 0) {\n      newSelectedRows = rows.slice(rows.indexOf(viewport.firstRow), lastActionRowIndex);\n      newSelectedRows = arrays.union(selectedRows, newSelectedRows);\n    } else {\n      newSelectedRows = [viewport.firstRow];\n    }\n    table.selectionHandler.lastActionRow = viewport.firstRow;\n    table.selectRows(newSelectedRows, true);\n    if (!table.isFocused()) {\n      table.focus();\n    }\n  }\n}","map":{"version":3,"names":["AbstractTableNavigationKeyStroke","arrays","keys","TableNavigationPageUpKeyStroke","constructor","table","which","PAGE_UP","renderingHints","text","$drawingArea","event","viewport","_viewportInfo","firstRow","$row","handle","field","rows","visibleRows","selectedRows","firstSelectedRow","first","lastActionRow","selectionHandler","lastActionRowIndex","newSelectedRows","scrollPageUp","indexOf","length","shiftKey","slice","union","selectRows","isFocused","focus"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationPageUpKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, arrays, keys} from '../../index';\n\nexport default class TableNavigationPageUpKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.which = [keys.PAGE_UP];\n    this.renderingHints.text = 'PgUp';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let viewport = this._viewportInfo();\n      if (viewport.firstRow) {\n        return viewport.firstRow.$row;\n      }\n    };\n  }\n\n  handle(event) {\n    let table = this.field,\n      viewport = this._viewportInfo(),\n      rows = table.visibleRows,\n      selectedRows = table.selectedRows,\n      firstSelectedRow = arrays.first(selectedRows),\n      lastActionRow = table.selectionHandler.lastActionRow,\n      lastActionRowIndex = -1,\n      newSelectedRows;\n\n    // First row may be undefined if there is only one row visible in the viewport and this row is bigger than the viewport. In that case just scroll up.\n    // If it already is at the top nothing will happen\n    if (!viewport.firstRow) {\n      table.scrollPageUp();\n      viewport = this._viewportInfo();\n      if (!viewport.firstRow) {\n        return;\n      }\n    }\n\n    if (lastActionRow) {\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n    // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n    if (lastActionRowIndex < 0) {\n      lastActionRow = firstSelectedRow;\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n\n    // If first row in viewport already is selected -> scroll a page up\n    // Don't do it if multiple rows are selected and user only presses page up without shift\n    if (selectedRows.length > 0 && lastActionRow === viewport.firstRow && !(selectedRows.length > 1 && !event.shiftKey)) {\n      table.scrollPageUp();\n      viewport = this._viewportInfo();\n      if (!viewport.firstRow) {\n        // May happen due to same reason as above -> Row will fill the whole viewport after scrolling\n        return;\n      }\n    }\n\n    if (event.shiftKey && selectedRows.length > 0) {\n      newSelectedRows = rows.slice(rows.indexOf(viewport.firstRow), lastActionRowIndex);\n      newSelectedRows = arrays.union(selectedRows, newSelectedRows);\n    } else {\n      newSelectedRows = [viewport.firstRow];\n    }\n\n    table.selectionHandler.lastActionRow = viewport.firstRow;\n    table.selectRows(newSelectedRows, true);\n    if (!table.isFocused()) {\n      table.focus();\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gCAAgC,EAAEC,MAAM,EAAEC,IAAI,QAAO,aAAa;AAE1E,eAAe,MAAMC,8BAA8B,SAASH,gCAAgC,CAAC;EAE3FI,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAACJ,IAAI,CAACK,OAAO,CAAC;IAC3B,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,MAAM;IACjC,IAAI,CAACD,cAAc,CAACE,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,QAAQ,GAAG,IAAI,CAACC,aAAa,EAAE;MACnC,IAAID,QAAQ,CAACE,QAAQ,EAAE;QACrB,OAAOF,QAAQ,CAACE,QAAQ,CAACC,IAAI;MAC/B;IACF,CAAC;EACH;EAEAC,MAAM,CAACL,KAAK,EAAE;IACZ,IAAIN,KAAK,GAAG,IAAI,CAACY,KAAK;MACpBL,QAAQ,GAAG,IAAI,CAACC,aAAa,EAAE;MAC/BK,IAAI,GAAGb,KAAK,CAACc,WAAW;MACxBC,YAAY,GAAGf,KAAK,CAACe,YAAY;MACjCC,gBAAgB,GAAGpB,MAAM,CAACqB,KAAK,CAACF,YAAY,CAAC;MAC7CG,aAAa,GAAGlB,KAAK,CAACmB,gBAAgB,CAACD,aAAa;MACpDE,kBAAkB,GAAG,CAAC,CAAC;MACvBC,eAAe;;IAEjB;IACA;IACA,IAAI,CAACd,QAAQ,CAACE,QAAQ,EAAE;MACtBT,KAAK,CAACsB,YAAY,EAAE;MACpBf,QAAQ,GAAG,IAAI,CAACC,aAAa,EAAE;MAC/B,IAAI,CAACD,QAAQ,CAACE,QAAQ,EAAE;QACtB;MACF;IACF;IAEA,IAAIS,aAAa,EAAE;MACjBE,kBAAkB,GAAGP,IAAI,CAACU,OAAO,CAACL,aAAa,CAAC;IAClD;IACA;IACA,IAAIE,kBAAkB,GAAG,CAAC,EAAE;MAC1BF,aAAa,GAAGF,gBAAgB;MAChCI,kBAAkB,GAAGP,IAAI,CAACU,OAAO,CAACL,aAAa,CAAC;IAClD;;IAEA;IACA;IACA,IAAIH,YAAY,CAACS,MAAM,GAAG,CAAC,IAAIN,aAAa,KAAKX,QAAQ,CAACE,QAAQ,IAAI,EAAEM,YAAY,CAACS,MAAM,GAAG,CAAC,IAAI,CAAClB,KAAK,CAACmB,QAAQ,CAAC,EAAE;MACnHzB,KAAK,CAACsB,YAAY,EAAE;MACpBf,QAAQ,GAAG,IAAI,CAACC,aAAa,EAAE;MAC/B,IAAI,CAACD,QAAQ,CAACE,QAAQ,EAAE;QACtB;QACA;MACF;IACF;IAEA,IAAIH,KAAK,CAACmB,QAAQ,IAAIV,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;MAC7CH,eAAe,GAAGR,IAAI,CAACa,KAAK,CAACb,IAAI,CAACU,OAAO,CAAChB,QAAQ,CAACE,QAAQ,CAAC,EAAEW,kBAAkB,CAAC;MACjFC,eAAe,GAAGzB,MAAM,CAAC+B,KAAK,CAACZ,YAAY,EAAEM,eAAe,CAAC;IAC/D,CAAC,MAAM;MACLA,eAAe,GAAG,CAACd,QAAQ,CAACE,QAAQ,CAAC;IACvC;IAEAT,KAAK,CAACmB,gBAAgB,CAACD,aAAa,GAAGX,QAAQ,CAACE,QAAQ;IACxDT,KAAK,CAAC4B,UAAU,CAACP,eAAe,EAAE,IAAI,CAAC;IACvC,IAAI,CAACrB,KAAK,CAAC6B,SAAS,EAAE,EAAE;MACtB7B,KAAK,CAAC8B,KAAK,EAAE;IACf;EACF;AACF"},"metadata":{},"sourceType":"module"}