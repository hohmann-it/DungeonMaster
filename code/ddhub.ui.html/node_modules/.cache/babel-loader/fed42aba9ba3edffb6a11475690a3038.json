{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, scout, SimpleTabArea, styles, widgets } from '../index';\nimport $ from 'jquery';\nexport default class SimpleTabAreaLayout extends AbstractLayout {\n  constructor(tabArea) {\n    super();\n    this.tabArea = tabArea;\n    this._$overflowTab = null;\n    this._overflowTabsIndizes = [];\n    this.tabWidth = null;\n    this.tabMinWidth = null;\n    this.overflowTabItemWidth = null;\n  }\n\n  /**\n   * @override AbstractLayout.js\n   */\n  layout($container) {\n    let htmlContainer = this.tabArea.htmlComp,\n      containerSize = htmlContainer.size({\n        exact: true\n      }),\n      $tabs = htmlContainer.$comp.children('.simple-tab'),\n      numTabs = this.tabArea.getTabs().length,\n      smallPrefSize = this.smallPrefSize();\n    containerSize = containerSize.subtract(htmlContainer.insets());\n    this._initSizes();\n\n    // Reset tabs\n    if (this._$overflowTab) {\n      this._$overflowTab.remove();\n    }\n    $tabs.setVisible(true);\n    this._overflowTabsIndizes = [];\n    widgets.updateFirstLastMarker(this.tabArea.getTabs());\n\n    // All tabs fit in container -> no overflow menu necessary\n    if (smallPrefSize.width <= containerSize.width) {\n      $container.removeClass('overflown');\n      return;\n    }\n\n    // Not all tabs fit in container -> put tabs into overflow menu\n    $container.addClass('overflown');\n    containerSize.width -= this.overflowTabItemWidth;\n\n    // check how many tabs fit into remaining containerSize.width\n    let numVisibleTabs = Math.floor(containerSize.width / this.tabMinWidth);\n    let numOverflowTabs = numTabs - numVisibleTabs;\n    let selectedIndex = 0;\n    $tabs.each((i, tab) => {\n      if ($(tab).hasClass('selected')) {\n        selectedIndex = i;\n      }\n    });\n\n    // determine visible range\n    let rightEnd;\n    let leftEnd = selectedIndex - Math.floor(numVisibleTabs / 2);\n    if (leftEnd < 0) {\n      leftEnd = 0;\n      rightEnd = numVisibleTabs - 1;\n    } else {\n      rightEnd = leftEnd + numVisibleTabs - 1;\n      if (rightEnd > numTabs - 1) {\n        rightEnd = numTabs - 1;\n        leftEnd = rightEnd - numVisibleTabs + 1;\n      }\n    }\n    this._$overflowTab = htmlContainer.$comp.appendDiv('simple-overflow-tab-item').on('mousedown', this._onOverflowTabItemMouseDown.bind(this));\n    this._$overflowTab.appendDiv('num-tabs').text(numOverflowTabs);\n    $tabs.each((i, tab) => {\n      if (i < leftEnd || i > rightEnd) {\n        $(tab).setVisible(false);\n        this._overflowTabsIndizes.push(i);\n      }\n    });\n    widgets.updateFirstLastMarker(this.tabArea.getVisibleTabs());\n  }\n  smallPrefSize() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._initSizes();\n    options = $.extend({\n      minTabWidth: this.tabMinWidth\n    }, options);\n    return this.preferredLayoutSize(this.tabArea.$container, options);\n  }\n  preferredLayoutSize($container) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this._initSizes();\n    let minTabWidth = scout.nvl(options.minTabWidth, 0) || scout.nvl(this.tabWidth, 0);\n    let numTabs = this.tabArea.getTabs().length;\n    let minWidth = numTabs * minTabWidth;\n    options = $.extend({\n      useCssSize: true\n    }, options);\n    let prefSize = graphics.prefSize(this.tabArea.$container, options);\n    if (options.widthHint && this.tabArea.displayStyle === SimpleTabArea.DisplayStyle.SPREAD_EVEN) {\n      minWidth = Math.max(options.widthHint, minWidth);\n    }\n    return new Dimension(minWidth, prefSize.height);\n  }\n\n  /**\n   * Reads the default sizes from CSS -> the tabs need to specify a width and a min-width.\n   * The layout expects all tabs to have the same width.\n   */\n  _initSizes() {\n    if (this.tabWidth != null && this.tabMinWidth != null && this.overflowTabItemWidth != null) {\n      return;\n    }\n    let $tab = this.tabArea.$container.children('.simple-tab').eq(0);\n    if ($tab.length === 0) {\n      return;\n    }\n    $tab = $tab.clone().addClass('selected'); // Non selected items have a margin, selected ones don't -> we need to get the width incl. margin\n    let tabAreaClasses = this.tabArea.$container.attr('class');\n    let tabItemClasses = $tab.attr('class');\n    if (this.tabWidth === null) {\n      this.tabWidth = styles.getSize([tabAreaClasses, tabItemClasses], 'width', 'width', 0);\n    }\n    if (this.tabMinWidth === null) {\n      this.tabMinWidth = styles.getSize([tabAreaClasses, tabItemClasses], 'min-width', 'minWidth');\n    }\n    if (this.overflowTabItemWidth === null) {\n      this.overflowTabItemWidth = styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'min-width', 'minWidth');\n      this.overflowTabItemWidth += styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'margin-left', 'marginLeft');\n      this.overflowTabItemWidth += styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'margin-right', 'marginRight');\n    }\n  }\n  _onOverflowTabItemMouseDown(event) {\n    let tabArea = this.tabArea;\n    let overflowMenus = [];\n    let $overflowTabItem = $(event.currentTarget);\n    if ($overflowTabItem.data('popup')) {\n      $overflowTabItem.data('popup').close();\n      return;\n    }\n    this._overflowTabsIndizes.forEach(i => {\n      let tab = this.tabArea.getTabs()[i];\n      let menu = scout.create('Menu', {\n        parent: this.tabArea,\n        text: tab.getMenuText(),\n        tab: tab\n      });\n      menu.on('action', function () {\n        $.log.isDebugEnabled() && $.log.debug('(SimpleTabAreaLayout#_onMouseDownOverflow) tab=' + this);\n        tabArea.selectTab(this);\n      }.bind(tab));\n      overflowMenus.push(menu);\n    });\n    let popup = scout.create('ContextMenuPopup', {\n      parent: this.tabArea,\n      menuItems: overflowMenus,\n      cloneMenuItems: false,\n      $anchor: $overflowTabItem,\n      closeOnAnchorMouseDown: false\n    });\n    $overflowTabItem.addClass('selected');\n    $overflowTabItem.data('popup', popup);\n    popup.one('remove', () => {\n      $overflowTabItem.removeClass('selected');\n      $overflowTabItem.data('popup', null);\n    });\n    popup.open();\n  }\n}","map":{"version":3,"names":["AbstractLayout","Dimension","graphics","scout","SimpleTabArea","styles","widgets","$","SimpleTabAreaLayout","constructor","tabArea","_$overflowTab","_overflowTabsIndizes","tabWidth","tabMinWidth","overflowTabItemWidth","layout","$container","htmlContainer","htmlComp","containerSize","size","exact","$tabs","$comp","children","numTabs","getTabs","length","smallPrefSize","subtract","insets","_initSizes","remove","setVisible","updateFirstLastMarker","width","removeClass","addClass","numVisibleTabs","Math","floor","numOverflowTabs","selectedIndex","each","i","tab","hasClass","rightEnd","leftEnd","appendDiv","on","_onOverflowTabItemMouseDown","bind","text","push","getVisibleTabs","options","extend","minTabWidth","preferredLayoutSize","nvl","minWidth","useCssSize","prefSize","widthHint","displayStyle","DisplayStyle","SPREAD_EVEN","max","height","$tab","eq","clone","tabAreaClasses","attr","tabItemClasses","getSize","event","overflowMenus","$overflowTabItem","currentTarget","data","close","forEach","menu","create","parent","getMenuText","log","isDebugEnabled","debug","selectTab","popup","menuItems","cloneMenuItems","$anchor","closeOnAnchorMouseDown","one","open"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tabbox/SimpleTabAreaLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, scout, SimpleTabArea, styles, widgets} from '../index';\nimport $ from 'jquery';\n\nexport default class SimpleTabAreaLayout extends AbstractLayout {\n\n  constructor(tabArea) {\n    super();\n    this.tabArea = tabArea;\n    this._$overflowTab = null;\n    this._overflowTabsIndizes = [];\n\n    this.tabWidth = null;\n    this.tabMinWidth = null;\n    this.overflowTabItemWidth = null;\n  }\n\n  /**\n   * @override AbstractLayout.js\n   */\n  layout($container) {\n    let htmlContainer = this.tabArea.htmlComp,\n      containerSize = htmlContainer.size({\n        exact: true\n      }),\n      $tabs = htmlContainer.$comp.children('.simple-tab'),\n      numTabs = this.tabArea.getTabs().length,\n      smallPrefSize = this.smallPrefSize();\n\n    containerSize = containerSize.subtract(htmlContainer.insets());\n\n    this._initSizes();\n\n    // Reset tabs\n    if (this._$overflowTab) {\n      this._$overflowTab.remove();\n    }\n    $tabs.setVisible(true);\n    this._overflowTabsIndizes = [];\n    widgets.updateFirstLastMarker(this.tabArea.getTabs());\n\n    // All tabs fit in container -> no overflow menu necessary\n    if (smallPrefSize.width <= containerSize.width) {\n      $container.removeClass('overflown');\n      return;\n    }\n\n    // Not all tabs fit in container -> put tabs into overflow menu\n    $container.addClass('overflown');\n    containerSize.width -= this.overflowTabItemWidth;\n\n    // check how many tabs fit into remaining containerSize.width\n    let numVisibleTabs = Math.floor(containerSize.width / this.tabMinWidth);\n    let numOverflowTabs = numTabs - numVisibleTabs;\n\n    let selectedIndex = 0;\n    $tabs.each((i, tab) => {\n      if ($(tab).hasClass('selected')) {\n        selectedIndex = i;\n      }\n    });\n\n    // determine visible range\n    let rightEnd;\n    let leftEnd = selectedIndex - Math.floor(numVisibleTabs / 2);\n    if (leftEnd < 0) {\n      leftEnd = 0;\n      rightEnd = numVisibleTabs - 1;\n    } else {\n      rightEnd = leftEnd + numVisibleTabs - 1;\n      if (rightEnd > numTabs - 1) {\n        rightEnd = numTabs - 1;\n        leftEnd = rightEnd - numVisibleTabs + 1;\n      }\n    }\n\n    this._$overflowTab = htmlContainer.$comp\n      .appendDiv('simple-overflow-tab-item')\n      .on('mousedown', this._onOverflowTabItemMouseDown.bind(this));\n    this._$overflowTab.appendDiv('num-tabs').text(numOverflowTabs);\n\n    $tabs.each((i, tab) => {\n      if (i < leftEnd || i > rightEnd) {\n        $(tab).setVisible(false);\n        this._overflowTabsIndizes.push(i);\n      }\n    });\n    widgets.updateFirstLastMarker(this.tabArea.getVisibleTabs());\n  }\n\n  smallPrefSize(options = {}) {\n    this._initSizes();\n    options = $.extend({minTabWidth: this.tabMinWidth}, options);\n    return this.preferredLayoutSize(this.tabArea.$container, options);\n  }\n\n  preferredLayoutSize($container, options = {}) {\n    this._initSizes();\n    let minTabWidth = scout.nvl(options.minTabWidth, 0) || scout.nvl(this.tabWidth, 0);\n    let numTabs = this.tabArea.getTabs().length;\n    let minWidth = numTabs * minTabWidth;\n    options = $.extend({useCssSize: true}, options);\n    let prefSize = graphics.prefSize(this.tabArea.$container, options);\n    if (options.widthHint && this.tabArea.displayStyle === SimpleTabArea.DisplayStyle.SPREAD_EVEN) {\n      minWidth = Math.max(options.widthHint, minWidth);\n    }\n    return new Dimension(minWidth, prefSize.height);\n  }\n\n  /**\n   * Reads the default sizes from CSS -> the tabs need to specify a width and a min-width.\n   * The layout expects all tabs to have the same width.\n   */\n  _initSizes() {\n    if (this.tabWidth != null && this.tabMinWidth != null && this.overflowTabItemWidth != null) {\n      return;\n    }\n    let $tab = this.tabArea.$container.children('.simple-tab').eq(0);\n    if ($tab.length === 0) {\n      return;\n    }\n    $tab = $tab.clone().addClass('selected'); // Non selected items have a margin, selected ones don't -> we need to get the width incl. margin\n    let tabAreaClasses = this.tabArea.$container.attr('class');\n    let tabItemClasses = $tab.attr('class');\n    if (this.tabWidth === null) {\n      this.tabWidth = styles.getSize([tabAreaClasses, tabItemClasses], 'width', 'width', 0);\n    }\n    if (this.tabMinWidth === null) {\n      this.tabMinWidth = styles.getSize([tabAreaClasses, tabItemClasses], 'min-width', 'minWidth');\n    }\n    if (this.overflowTabItemWidth === null) {\n      this.overflowTabItemWidth = styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'min-width', 'minWidth');\n      this.overflowTabItemWidth += styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'margin-left', 'marginLeft');\n      this.overflowTabItemWidth += styles.getSize([tabAreaClasses, 'simple-overflow-tab-item'], 'margin-right', 'marginRight');\n    }\n  }\n\n  _onOverflowTabItemMouseDown(event) {\n    let tabArea = this.tabArea;\n    let overflowMenus = [];\n    let $overflowTabItem = $(event.currentTarget);\n    if ($overflowTabItem.data('popup')) {\n      $overflowTabItem.data('popup').close();\n      return;\n    }\n    this._overflowTabsIndizes.forEach(i => {\n      let tab = this.tabArea.getTabs()[i];\n      let menu = scout.create('Menu', {\n        parent: this.tabArea,\n        text: tab.getMenuText(),\n        tab: tab\n      });\n      menu.on('action', function() {\n        $.log.isDebugEnabled() && $.log.debug('(SimpleTabAreaLayout#_onMouseDownOverflow) tab=' + this);\n        tabArea.selectTab(this);\n      }.bind(tab));\n      overflowMenus.push(menu);\n    });\n\n    let popup = scout.create('ContextMenuPopup', {\n      parent: this.tabArea,\n      menuItems: overflowMenus,\n      cloneMenuItems: false,\n      $anchor: $overflowTabItem,\n      closeOnAnchorMouseDown: false\n    });\n    $overflowTabItem.addClass('selected');\n    $overflowTabItem.data('popup', popup);\n    popup.one('remove', () => {\n      $overflowTabItem.removeClass('selected');\n      $overflowTabItem.data('popup', null);\n    });\n    popup.open();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}