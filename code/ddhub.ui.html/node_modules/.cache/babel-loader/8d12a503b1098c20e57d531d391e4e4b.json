{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { GridData, LogicalGridMatrix, LogicalGridMatrixCell, LogicalGridMatrixCursor } from '../../../index';\nexport default class HorizontalGridMatrix extends LogicalGridMatrix {\n  constructor(columnCount) {\n    super(new LogicalGridMatrixCursor(0, 0, columnCount, Number.MAX_SAFE_INTEGER, LogicalGridMatrixCursor.HORIZONTAL));\n    this.rowCount = 0;\n  }\n  computeGridData(widgets) {\n    widgets.forEach(widget => {\n      let hints = GridData.createFromHints(widget, this.getColumnCount());\n      let gridData = new GridData(hints);\n      gridData.w = Math.min(hints.w, this.getColumnCount());\n      this._add(widget, hints, gridData);\n      widget.gridData = gridData;\n    });\n    this._cursor.rowCount = this.rowCount;\n    return true;\n  }\n  _add(widget, hints, data) {\n    this._nextFree(data.w, data.h);\n    let currentIndex = this._cursor.currentIndex();\n    if (data.w <= this.getColumnCount() - currentIndex.x) {\n      data.x = currentIndex.x;\n      data.y = currentIndex.y;\n      // add widget\n      for (let xx = currentIndex.x; xx < currentIndex.x + data.w; xx++) {\n        for (let yy = currentIndex.y; yy < currentIndex.y + data.h; yy++) {\n          this._setAssignedCell({\n            x: xx,\n            y: yy\n          }, new LogicalGridMatrixCell(widget, data));\n        }\n      }\n      this.rowCount = currentIndex.y + data.h;\n    } else {\n      // add dummy cell\n      this._setAssignedCell(this._cursor.currentIndex(), new LogicalGridMatrixCell());\n      this._add(widget, hints, data);\n    }\n  }\n}","map":{"version":3,"names":["GridData","LogicalGridMatrix","LogicalGridMatrixCell","LogicalGridMatrixCursor","HorizontalGridMatrix","constructor","columnCount","Number","MAX_SAFE_INTEGER","HORIZONTAL","rowCount","computeGridData","widgets","forEach","widget","hints","createFromHints","getColumnCount","gridData","w","Math","min","_add","_cursor","data","_nextFree","h","currentIndex","x","y","xx","yy","_setAssignedCell"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/logicalgrid/matrix/HorizontalGridMatrix.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {GridData, LogicalGridMatrix, LogicalGridMatrixCell, LogicalGridMatrixCursor} from '../../../index';\n\nexport default class HorizontalGridMatrix extends LogicalGridMatrix {\n\n  constructor(columnCount) {\n    super(new LogicalGridMatrixCursor(0, 0, columnCount, Number.MAX_SAFE_INTEGER, LogicalGridMatrixCursor.HORIZONTAL));\n\n    this.rowCount = 0;\n  }\n\n  computeGridData(widgets) {\n    widgets.forEach(widget => {\n      let hints = GridData.createFromHints(widget, this.getColumnCount());\n      let gridData = new GridData(hints);\n      gridData.w = Math.min(hints.w, this.getColumnCount());\n      this._add(widget, hints, gridData);\n      widget.gridData = gridData;\n    });\n    this._cursor.rowCount = this.rowCount;\n    return true;\n  }\n\n  _add(widget, hints, data) {\n    this._nextFree(data.w, data.h);\n    let currentIndex = this._cursor.currentIndex();\n    if (data.w <= (this.getColumnCount() - currentIndex.x)) {\n      data.x = currentIndex.x;\n      data.y = currentIndex.y;\n      // add widget\n      for (let xx = currentIndex.x; xx < currentIndex.x + data.w; xx++) {\n        for (let yy = currentIndex.y; yy < currentIndex.y + data.h; yy++) {\n          this._setAssignedCell({\n            x: xx,\n            y: yy\n          }, new LogicalGridMatrixCell(widget, data));\n        }\n      }\n      this.rowCount = currentIndex.y + data.h;\n    } else {\n      // add dummy cell\n      this._setAssignedCell(this._cursor.currentIndex(), new LogicalGridMatrixCell());\n      this._add(widget, hints, data);\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAQ,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,uBAAuB,QAAO,gBAAgB;AAE1G,eAAe,MAAMC,oBAAoB,SAASH,iBAAiB,CAAC;EAElEI,WAAW,CAACC,WAAW,EAAE;IACvB,KAAK,CAAC,IAAIH,uBAAuB,CAAC,CAAC,EAAE,CAAC,EAAEG,WAAW,EAAEC,MAAM,CAACC,gBAAgB,EAAEL,uBAAuB,CAACM,UAAU,CAAC,CAAC;IAElH,IAAI,CAACC,QAAQ,GAAG,CAAC;EACnB;EAEAC,eAAe,CAACC,OAAO,EAAE;IACvBA,OAAO,CAACC,OAAO,CAACC,MAAM,IAAI;MACxB,IAAIC,KAAK,GAAGf,QAAQ,CAACgB,eAAe,CAACF,MAAM,EAAE,IAAI,CAACG,cAAc,EAAE,CAAC;MACnE,IAAIC,QAAQ,GAAG,IAAIlB,QAAQ,CAACe,KAAK,CAAC;MAClCG,QAAQ,CAACC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACN,KAAK,CAACI,CAAC,EAAE,IAAI,CAACF,cAAc,EAAE,CAAC;MACrD,IAAI,CAACK,IAAI,CAACR,MAAM,EAAEC,KAAK,EAAEG,QAAQ,CAAC;MAClCJ,MAAM,CAACI,QAAQ,GAAGA,QAAQ;IAC5B,CAAC,CAAC;IACF,IAAI,CAACK,OAAO,CAACb,QAAQ,GAAG,IAAI,CAACA,QAAQ;IACrC,OAAO,IAAI;EACb;EAEAY,IAAI,CAACR,MAAM,EAAEC,KAAK,EAAES,IAAI,EAAE;IACxB,IAAI,CAACC,SAAS,CAACD,IAAI,CAACL,CAAC,EAAEK,IAAI,CAACE,CAAC,CAAC;IAC9B,IAAIC,YAAY,GAAG,IAAI,CAACJ,OAAO,CAACI,YAAY,EAAE;IAC9C,IAAIH,IAAI,CAACL,CAAC,IAAK,IAAI,CAACF,cAAc,EAAE,GAAGU,YAAY,CAACC,CAAE,EAAE;MACtDJ,IAAI,CAACI,CAAC,GAAGD,YAAY,CAACC,CAAC;MACvBJ,IAAI,CAACK,CAAC,GAAGF,YAAY,CAACE,CAAC;MACvB;MACA,KAAK,IAAIC,EAAE,GAAGH,YAAY,CAACC,CAAC,EAAEE,EAAE,GAAGH,YAAY,CAACC,CAAC,GAAGJ,IAAI,CAACL,CAAC,EAAEW,EAAE,EAAE,EAAE;QAChE,KAAK,IAAIC,EAAE,GAAGJ,YAAY,CAACE,CAAC,EAAEE,EAAE,GAAGJ,YAAY,CAACE,CAAC,GAAGL,IAAI,CAACE,CAAC,EAAEK,EAAE,EAAE,EAAE;UAChE,IAAI,CAACC,gBAAgB,CAAC;YACpBJ,CAAC,EAAEE,EAAE;YACLD,CAAC,EAAEE;UACL,CAAC,EAAE,IAAI7B,qBAAqB,CAACY,MAAM,EAAEU,IAAI,CAAC,CAAC;QAC7C;MACF;MACA,IAAI,CAACd,QAAQ,GAAGiB,YAAY,CAACE,CAAC,GAAGL,IAAI,CAACE,CAAC;IACzC,CAAC,MAAM;MACL;MACA,IAAI,CAACM,gBAAgB,CAAC,IAAI,CAACT,OAAO,CAACI,YAAY,EAAE,EAAE,IAAIzB,qBAAqB,EAAE,CAAC;MAC/E,IAAI,CAACoB,IAAI,CAACR,MAAM,EAAEC,KAAK,EAAES,IAAI,CAAC;IAChC;EACF;AACF"},"metadata":{},"sourceType":"module"}