{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, HtmlComponent } from '../index';\nimport $ from 'jquery';\n\n/**\n * Abstract layout class with functions used by all layout algorithms.\n * Subclasses of AbstractLayout.js must implement the following functions:\n * - layout\n * - preferredLayoutSize\n */\nexport default class AbstractLayout {\n  constructor() {\n    this.animateClasses = [];\n  }\n\n  /**\n   * Called when layout is invalidated. An implementation should delete cached layout-information\n   * when it is invalidated.\n   *\n   * May be implemented by sub-class.\n   */\n  invalidate() {//\n  }\n\n  /**\n   * Layouts children of the given $container, according to the implemented layout algorithm.\n   * The implementation should call setSize or setBounds on its children.\n   *\n   * Must be implemented by sub-class.\n   */\n  layout($container) {//\n  }\n\n  /**\n   * Reverts the adjustments made by {@link HtmlComponent#_adjustSizeHintsForPrefSize} without the margin.\n   * More concrete: it adds border and padding to the hints again.\n   */\n  _revertSizeHintsAdjustments($container, options) {\n    let htmlContainer = HtmlComponent.get($container);\n    if (options.widthHint) {\n      options.widthHint += htmlContainer.insets().horizontal();\n    }\n    if (options.heightHint) {\n      options.heightHint += htmlContainer.insets().vertical();\n    }\n  }\n\n  /**\n   * Returns the preferred size of the given $container.\n   *\n   * @return Dimension preferred size\n   */\n  preferredLayoutSize($container, options) {\n    options = $.extend({}, options);\n    if (this.animateClasses.length > 0) {\n      options.animateClasses = this.animateClasses;\n    }\n    // Insets have been removed automatically by the html component with the assumption that the layout will pass it to its child elements.\n    // Since this is not the case in this generic layout the insets have to be added again, otherwise the sizes used to measure would be too small.\n    this._revertSizeHintsAdjustments($container, options);\n    return graphics.prefSize($container, options);\n  }\n}","map":{"version":3,"names":["Dimension","graphics","HtmlComponent","$","AbstractLayout","constructor","animateClasses","invalidate","layout","$container","_revertSizeHintsAdjustments","options","htmlContainer","get","widthHint","insets","horizontal","heightHint","vertical","preferredLayoutSize","extend","length","prefSize"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/layout/AbstractLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, HtmlComponent} from '../index';\nimport $ from 'jquery';\n\n/**\n * Abstract layout class with functions used by all layout algorithms.\n * Subclasses of AbstractLayout.js must implement the following functions:\n * - layout\n * - preferredLayoutSize\n */\nexport default class AbstractLayout {\n\n  constructor() {\n    this.animateClasses = [];\n  }\n\n  /**\n   * Called when layout is invalidated. An implementation should delete cached layout-information\n   * when it is invalidated.\n   *\n   * May be implemented by sub-class.\n   */\n  invalidate() { //\n  }\n\n  /**\n   * Layouts children of the given $container, according to the implemented layout algorithm.\n   * The implementation should call setSize or setBounds on its children.\n   *\n   * Must be implemented by sub-class.\n   */\n  layout($container) { //\n  }\n\n  /**\n   * Reverts the adjustments made by {@link HtmlComponent#_adjustSizeHintsForPrefSize} without the margin.\n   * More concrete: it adds border and padding to the hints again.\n   */\n  _revertSizeHintsAdjustments($container, options) {\n    let htmlContainer = HtmlComponent.get($container);\n    if (options.widthHint) {\n      options.widthHint += htmlContainer.insets().horizontal();\n    }\n    if (options.heightHint) {\n      options.heightHint += htmlContainer.insets().vertical();\n    }\n  }\n\n  /**\n   * Returns the preferred size of the given $container.\n   *\n   * @return Dimension preferred size\n   */\n  preferredLayoutSize($container, options) {\n    options = $.extend({}, options);\n    if (this.animateClasses.length > 0) {\n      options.animateClasses = this.animateClasses;\n    }\n    // Insets have been removed automatically by the html component with the assumption that the layout will pass it to its child elements.\n    // Since this is not the case in this generic layout the insets have to be added again, otherwise the sizes used to measure would be too small.\n    this._revertSizeHintsAdjustments($container, options);\n    return graphics.prefSize($container, options);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,aAAa,QAAO,UAAU;AAC3D,OAAOC,CAAC,MAAM,QAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,cAAc,CAAC;EAElCC,WAAW,GAAG;IACZ,IAAI,CAACC,cAAc,GAAG,EAAE;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,UAAU,GAAG,CAAE;EAAA;;EAGf;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM,CAACC,UAAU,EAAE,CAAE;EAAA;;EAGrB;AACF;AACA;AACA;EACEC,2BAA2B,CAACD,UAAU,EAAEE,OAAO,EAAE;IAC/C,IAAIC,aAAa,GAAGV,aAAa,CAACW,GAAG,CAACJ,UAAU,CAAC;IACjD,IAAIE,OAAO,CAACG,SAAS,EAAE;MACrBH,OAAO,CAACG,SAAS,IAAIF,aAAa,CAACG,MAAM,EAAE,CAACC,UAAU,EAAE;IAC1D;IACA,IAAIL,OAAO,CAACM,UAAU,EAAE;MACtBN,OAAO,CAACM,UAAU,IAAIL,aAAa,CAACG,MAAM,EAAE,CAACG,QAAQ,EAAE;IACzD;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmB,CAACV,UAAU,EAAEE,OAAO,EAAE;IACvCA,OAAO,GAAGR,CAAC,CAACiB,MAAM,CAAC,CAAC,CAAC,EAAET,OAAO,CAAC;IAC/B,IAAI,IAAI,CAACL,cAAc,CAACe,MAAM,GAAG,CAAC,EAAE;MAClCV,OAAO,CAACL,cAAc,GAAG,IAAI,CAACA,cAAc;IAC9C;IACA;IACA;IACA,IAAI,CAACI,2BAA2B,CAACD,UAAU,EAAEE,OAAO,CAAC;IACrD,OAAOV,QAAQ,CAACqB,QAAQ,CAACb,UAAU,EAAEE,OAAO,CAAC;EAC/C;AACF"},"metadata":{},"sourceType":"module"}