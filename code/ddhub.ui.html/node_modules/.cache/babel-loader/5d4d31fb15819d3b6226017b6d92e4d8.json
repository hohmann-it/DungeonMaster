{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FileChooserFieldBrowseKeyStroke, FileChooserFieldDeleteKeyStroke, FileInput, objects, scout, ValueField } from '../../../index';\n\n/**\n * The <code>value</code> of the FormChooserField is a <code>File</code> object.\n */\nexport default class FileChooserField extends ValueField {\n  constructor() {\n    super();\n    this.fileInput = null;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n  }\n  _init(model) {\n    super._init(model);\n    this.fileInput.on('change', this._onFileChange.bind(this));\n    this.on('propertyChange', event => {\n      if (event.propertyName === 'enabledComputed') {\n        // Propagate \"enabledComputed\" to inner widget\n        this.fileInput.setEnabled(event.newValue);\n      }\n    });\n  }\n\n  /**\n   * Initializes the file input before calling set value.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    this.fileInput = scout.create('FileInput', {\n      parent: this,\n      acceptTypes: this.acceptTypes,\n      text: this.displayText,\n      enabled: this.enabledComputed,\n      maximumUploadSize: this.maximumUploadSize\n    });\n    super._initValue(value);\n  }\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    if (!this.fileInput.legacy) {\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldBrowseKeyStroke(this));\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldDeleteKeyStroke(this));\n    }\n  }\n  _render() {\n    this.addContainer(this.$parent, 'file-chooser-field has-icon');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this._renderFileInput();\n    this.addIcon();\n    this.addStatus();\n  }\n  _renderFileInput() {\n    this.fileInput.render();\n    this.addField(this.fileInput.$container);\n  }\n  setDisplayText(text) {\n    super.setDisplayText(text);\n    this.fileInput.setText(text);\n    if (!text) {\n      this.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _readDisplayText() {\n    return this.fileInput.text;\n  }\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n    this.fileInput.setAcceptTypes(acceptTypes);\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$field.setTabbable(this.enabledComputed);\n  }\n  _renderPlaceholder() {\n    let $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder(this.label);\n    }\n  }\n  _removePlaceholder() {\n    let $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder('');\n    }\n  }\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n    this.fileInput.setMaximumUploadSize(maximumUploadSize);\n  }\n  _clear() {\n    this.fileInput.clear();\n  }\n  _onIconMouseDown(event) {\n    super._onIconMouseDown(event);\n    this.activate();\n  }\n  _onFileChange(event) {\n    let file = arrays.first(event.files);\n    if (objects.isNullOrUndefined(file)) {\n      this.acceptInput(false);\n    }\n    this.setValue(file);\n  }\n\n  /**\n   * @override\n   */\n  activate() {\n    if (!this.enabledComputed || !this.rendered) {\n      return;\n    }\n    this.$field.focus();\n    this.fileInput.browse();\n  }\n\n  /**\n   * @override\n   */\n  _validateValue(value) {\n    this.fileInput.validateMaximumUploadSize(value);\n    return value;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    return !value ? '' : value.name;\n  }\n  _parseValue(displayText) {\n    if (!displayText) {\n      return null;\n    }\n    let files = this.fileInput.files;\n    return files && files.length ? files[0] : null;\n  }\n}","map":{"version":3,"names":["arrays","FileChooserFieldBrowseKeyStroke","FileChooserFieldDeleteKeyStroke","FileInput","objects","scout","ValueField","FileChooserField","constructor","fileInput","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","_init","model","on","_onFileChange","bind","event","propertyName","setEnabled","newValue","_initValue","value","create","parent","text","displayText","enabled","enabledComputed","_initKeyStrokeContext","legacy","keyStrokeContext","registerKeyStroke","_render","addContainer","$parent","addLabel","addMandatoryIndicator","_renderFileInput","addIcon","addStatus","render","addField","$container","setDisplayText","setText","clear","_readDisplayText","setAcceptTypes","setProperty","_renderEnabled","$field","setTabbable","_renderPlaceholder","$text","placeholder","label","_removePlaceholder","setMaximumUploadSize","_clear","_onIconMouseDown","activate","file","first","files","isNullOrUndefined","acceptInput","setValue","rendered","focus","browse","_validateValue","validateMaximumUploadSize","_formatValue","name","_parseValue","length"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/filechooserfield/FileChooserField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FileChooserFieldBrowseKeyStroke, FileChooserFieldDeleteKeyStroke, FileInput, objects, scout, ValueField} from '../../../index';\n\n/**\n * The <code>value</code> of the FormChooserField is a <code>File</code> object.\n */\nexport default class FileChooserField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.fileInput = null;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.fileInput.on('change', this._onFileChange.bind(this));\n    this.on('propertyChange', event => {\n      if (event.propertyName === 'enabledComputed') {\n        // Propagate \"enabledComputed\" to inner widget\n        this.fileInput.setEnabled(event.newValue);\n      }\n    });\n  }\n\n  /**\n   * Initializes the file input before calling set value.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    this.fileInput = scout.create('FileInput', {\n      parent: this,\n      acceptTypes: this.acceptTypes,\n      text: this.displayText,\n      enabled: this.enabledComputed,\n      maximumUploadSize: this.maximumUploadSize\n    });\n\n    super._initValue(value);\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    if (!this.fileInput.legacy) {\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldBrowseKeyStroke(this));\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldDeleteKeyStroke(this));\n    }\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'file-chooser-field has-icon');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this._renderFileInput();\n    this.addIcon();\n    this.addStatus();\n  }\n\n  _renderFileInput() {\n    this.fileInput.render();\n    this.addField(this.fileInput.$container);\n  }\n\n  setDisplayText(text) {\n    super.setDisplayText(text);\n    this.fileInput.setText(text);\n    if (!text) {\n      this.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _readDisplayText() {\n    return this.fileInput.text;\n  }\n\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n    this.fileInput.setAcceptTypes(acceptTypes);\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$field.setTabbable(this.enabledComputed);\n  }\n\n  _renderPlaceholder() {\n    let $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder(this.label);\n    }\n  }\n\n  _removePlaceholder() {\n    let $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder('');\n    }\n  }\n\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n    this.fileInput.setMaximumUploadSize(maximumUploadSize);\n  }\n\n  _clear() {\n    this.fileInput.clear();\n  }\n\n  _onIconMouseDown(event) {\n    super._onIconMouseDown(event);\n    this.activate();\n  }\n\n  _onFileChange(event) {\n    let file = arrays.first(event.files);\n    if (objects.isNullOrUndefined(file)) {\n      this.acceptInput(false);\n    }\n    this.setValue(file);\n  }\n\n  /**\n   * @override\n   */\n  activate() {\n    if (!this.enabledComputed || !this.rendered) {\n      return;\n    }\n    this.$field.focus();\n    this.fileInput.browse();\n  }\n\n  /**\n   * @override\n   */\n  _validateValue(value) {\n    this.fileInput.validateMaximumUploadSize(value);\n    return value;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    return !value ? '' : value.name;\n  }\n\n  _parseValue(displayText) {\n    if (!displayText) {\n      return null;\n    }\n    let files = this.fileInput.files;\n    return files && files.length ? files[0] : null;\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}