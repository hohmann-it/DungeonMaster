{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CalendarComponent, CalendarLayout, CalendarListComponent, DateRange, dates, Device, events, GroupBox, HtmlComponent, KeyStrokeContext, menus, numbers, objects, Point, Range, scout, scrollbars, strings, Widget } from '../index';\nimport $ from 'jquery';\nexport default class Calendar extends Widget {\n  constructor() {\n    super();\n    this.monthViewNumberOfWeeks = 6;\n    this.numberOfHourDivisions = this.getConfiguredNumberOfHourDivisions();\n    this.heightPerDivision = this.getConfiguredHeightPerDivision();\n    this.startHour = this.getConfiguredStartHour();\n    this.heightPerHour = this.numberOfHourDivisions * this.heightPerDivision;\n    this.heightPerDay = 24 * this.heightPerHour;\n    this.spaceBeforeScrollTop = 15;\n    this.workDayIndices = [1, 2, 3, 4, 5]; // Workdays: Mon-Fri (Week starts at Sun in JS)\n    this.components = [];\n    this.displayMode;\n    this.displayCondensed = false;\n    this.loadInProgress = false;\n    this.selectedDate = null;\n    this.showDisplayModeSelection = true;\n    this.title = null;\n    this.useOverflowCells = true;\n    this.viewRange = null;\n    this.calendarToggleListWidth = 270;\n    this.calendarToggleYearWidth = 215;\n\n    // main elements\n    this.$container = null;\n    this.$header = null;\n    this.$range = null;\n    this.$commands = null;\n    this.$grids = null;\n    this.$grid = null;\n    this.$topGrid = null;\n    this.$list = null;\n    this.$progress = null;\n\n    // additional modes; should be stored in model\n    this._showYearPanel = false;\n    this._showListPanel = false;\n\n    /**\n     * The narrow view range is different from the regular view range.\n     * It contains only dates that exactly match the requested dates,\n     * the regular view range contains also dates from the first and\n     * next month. The exact range is not sent to the server.\n     */\n    this._exactRange = null;\n\n    /**\n     * When the list panel is shown, this list contains the scout.CalenderListComponent\n     * items visible on the list.\n     */\n    this._listComponents = [];\n    this.menuInjectionTarget = null;\n    this._menuInjectionTargetMenusChangedHandler = null;\n\n    // Temporary data structure to store data while mouse actions are handled\n    this._moveData = null;\n    this._mouseMoveHandler = this._onMouseMove.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n    this._addWidgetProperties(['components', 'menus', 'selectedComponent']);\n    this._addPreserveOnPropertyChangeProperties(['selectedComponent']);\n  }\n  init(model, session, register) {\n    super.init(model, session, register);\n  }\n\n  /**\n   * Enum providing display-modes for calender-like components like calendar and planner.\n   * @see ICalendarDisplayMode.java\n   */\n\n  getConfiguredNumberOfHourDivisions() {\n    return 2;\n  }\n  getConfiguredHeightPerDivision() {\n    return 30;\n  }\n  getConfiguredStartHour() {\n    return 6;\n  }\n  _isDay() {\n    return this.displayMode === Calendar.DisplayMode.DAY;\n  }\n  _isWeek() {\n    return this.displayMode === Calendar.DisplayMode.WEEK;\n  }\n  _isMonth() {\n    return this.displayMode === Calendar.DisplayMode.MONTH;\n  }\n  _isWorkWeek() {\n    return this.displayMode === Calendar.DisplayMode.WORK_WEEK;\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n  _init(model) {\n    super._init(model);\n    this._yearPanel = scout.create('YearPanel', {\n      parent: this\n    });\n    this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n    this.modesMenu = scout.create('CalendarModesMenu', {\n      parent: this,\n      visible: false,\n      displayMode: this.displayMode\n    });\n    this._setSelectedDate(model.selectedDate);\n    this._setDisplayMode(model.displayMode);\n    this._setMenuInjectionTarget(model.menuInjectionTarget);\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n  }\n  setSelectedDate(date) {\n    this.setProperty('selectedDate', date);\n  }\n  _setSelectedDate(date) {\n    date = dates.ensure(date);\n    this._setProperty('selectedDate', date);\n    this._yearPanel.selectDate(this.selectedDate);\n  }\n  _renderSelectedDate() {\n    this._updateModel(true, false);\n  }\n  setDisplayMode(displayMode) {\n    if (objects.equals(this.displayMode, displayMode)) {\n      return;\n    }\n    let oldDisplayMode = this.displayMode;\n    this._setDisplayMode(displayMode);\n    if (this.rendered) {\n      this._renderDisplayMode(oldDisplayMode);\n    }\n  }\n  _setDisplayMode(displayMode) {\n    this._setProperty('displayMode', displayMode);\n    this._yearPanel.setDisplayMode(this.displayMode);\n    this.modesMenu.setDisplayMode(displayMode);\n    if (this._isWorkWeek()) {\n      // change date if selectedDate is on a weekend\n      let p = this._dateParts(this.selectedDate, true);\n      if (p.day > 4) {\n        this.setSelectedDate(new Date(p.year, p.month, p.date - p.day + 4));\n      }\n    }\n  }\n  _renderDisplayMode(oldDisplayMode) {\n    if (this.rendering) {\n      // only do it on property changes\n      return;\n    }\n    this._updateModel(false, true);\n\n    // only render if components have another layout\n    if (oldDisplayMode === Calendar.DisplayMode.MONTH || this.displayMode === Calendar.DisplayMode.MONTH) {\n      this._renderComponents();\n      this.needsScrollToStartHour = true;\n    }\n  }\n  _setViewRange(viewRange) {\n    viewRange = DateRange.ensure(viewRange);\n    this._setProperty('viewRange', viewRange);\n  }\n  _setMenus(menus) {\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      let originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(menus.concat(originalMenus));\n    }\n    this._setProperty('menus', menus);\n  }\n  _setMenuInjectionTarget(menuInjectionTarget) {\n    if (objects.isString(menuInjectionTarget)) {\n      menuInjectionTarget = scout.widget(menuInjectionTarget);\n    }\n    // Remove injected menus and installed listener from old injection target\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      menuInjectionTarget.off('propertyChange:menus', this._menuInjectionTargetMenusChangedHandler);\n      let originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(originalMenus);\n    }\n    if (this._checkMenuInjectionTarget(menuInjectionTarget)) {\n      menuInjectionTarget.setMenus(this.menus.concat(menuInjectionTarget.menus));\n      // Listen for menu changes on the injection target. Re inject menus into target if the menus have been altered.\n      this._menuInjectionTargetMenusChangedHandler = menuInjectionTarget.on('propertyChange:menus', evt => {\n        if (this.menuInjectionTarget.menus.some(element => {\n          return this.menus.includes(element);\n        })) {\n          // Menus have already been injected => Do nothing\n          return;\n        }\n        this.menuInjectionTarget.setMenus(this.menus.concat(this.menuInjectionTarget.menus));\n      });\n    }\n    this._setProperty('menuInjectionTarget', menuInjectionTarget);\n  }\n  _checkMenuInjectionTarget(menuInjectionTarget) {\n    return menuInjectionTarget instanceof GroupBox;\n  }\n  _removeInjectedMenus(menuInjectionTarget, injectedMenus) {\n    return menuInjectionTarget.menus.filter(element => {\n      return !injectedMenus.includes(element);\n    });\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('calendar');\n    let layout = new CalendarLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n    let isMobile = Device.get().type === Device.Type.MOBILE;\n\n    // main elements\n    this.$header = this.$container.appendDiv('calendar-header');\n    this.$header.toggleClass('mobile', isMobile);\n    this.$headerRow1 = this.$header.appendDiv('calendar-header-row first');\n    this.$headerRow2 = this.$header.appendDiv('calendar-header-row last');\n    this._yearPanel.render();\n    this.$grids = this.$container.appendDiv('calendar-grids');\n    this.$topGrid = this.$grids.appendDiv('calendar-top-grid');\n    this.$topGrid.toggleClass('mobile', isMobile);\n    this.$grid = this.$grids.appendDiv('calendar-grid');\n    this.$grid.toggleClass('mobile', isMobile);\n    this.$list = this.$container.appendDiv('calendar-list-container').appendDiv('calendar-list');\n    this.$listTitle = this.$list.appendDiv('calendar-list-title');\n\n    // header contains range, title and commands. On small screens title will be moved to headerRow2\n    this.$range = this.$headerRow1.appendDiv('calendar-range');\n    this.$range.appendDiv('calendar-previous').click(this._onPreviousClick.bind(this));\n    this.$range.appendDiv('calendar-today', this.session.text('ui.CalendarToday')).click(this._onTodayClick.bind(this));\n    this.$range.appendDiv('calendar-next').click(this._onNextClick.bind(this));\n\n    // title\n    this.$title = this.$headerRow1.appendDiv('calendar-title');\n    this.$select = this.$title.appendDiv('calendar-select');\n    this.$progress = this.$title.appendDiv('busyindicator-label');\n\n    // commands\n    this.$commands = this.$headerRow1.appendDiv('calendar-commands');\n    this.$commands.appendDiv('calendar-mode first', this.session.text('ui.CalendarDay')).attr('data-mode', Calendar.DisplayMode.DAY).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWorkWeek')).attr('data-mode', Calendar.DisplayMode.WORK_WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWeek')).attr('data-mode', Calendar.DisplayMode.WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode last', this.session.text('ui.CalendarMonth')).attr('data-mode', Calendar.DisplayMode.MONTH).click(this._onDisplayModeClick.bind(this));\n    this.modesMenu.render(this.$commands);\n    this.$commands.appendDiv('calendar-toggle-year').click(this._onYearClick.bind(this));\n    this.$commands.appendDiv('calendar-toggle-list').click(this._onListClick.bind(this));\n\n    // Append the top grid (day/week views)\n    let $weekHeader = this.$topGrid.appendDiv('calendar-week-header');\n    $weekHeader.appendDiv('calendar-week-name');\n    for (let dayTop = 0; dayTop < 7; dayTop++) {\n      $weekHeader.appendDiv('calendar-day-name').data('day', dayTop);\n    }\n    this.$topGrid.appendDiv('calendar-week-task').attr('data-axis-name', this.session.text('ui.CalendarDay'));\n    let $weekTopGridDays = this.$topGrid.appendDiv('calendar-week-allday-container');\n    $weekTopGridDays.appendDiv('calendar-week-name');\n    let dayContextMenuCallback = this._onDayContextMenu.bind(this);\n    for (let dayBottom = 0; dayBottom < 7; dayBottom++) {\n      $weekTopGridDays.appendDiv('calendar-day').addClass('calendar-scrollable-components').data('day', dayBottom).on('contextmenu', dayContextMenuCallback);\n    }\n    for (let w = 1; w < 7; w++) {\n      let $w = this.$grid.appendDiv('calendar-week');\n      for (let d = 0; d < 8; d++) {\n        let $d = $w.appendDiv();\n        if (w > 0 && d === 0) {\n          $d.addClass('calendar-week-name');\n        } else if (w > 0 && d > 0) {\n          $d.addClass('calendar-day').data('day', d).data('week', w).on('contextmenu', dayContextMenuCallback);\n        }\n      }\n    }\n\n    // click event on all day and children elements\n    let mousedownCallbackWithTime = this._onDayMouseDown.bind(this, true);\n    this.$grid.find('.calendar-day').on('mousedown', mousedownCallbackWithTime);\n    let mousedownCallback = this._onDayMouseDown.bind(this, false);\n    this.$topGrid.find('.calendar-day').on('mousedown', mousedownCallback);\n    this.$window = this.$container.window();\n    this.$container.on('mousedown touchstart', this._onMouseDown.bind(this));\n    this._updateScreen(false, false);\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderComponents();\n    this._renderSelectedComponent();\n    this._renderLoadInProgress();\n    this._renderDisplayMode();\n  }\n  _renderComponents() {\n    this.components.sort(this._sortFromTo);\n    this.components.forEach(component => component.remove());\n    this.components.forEach(component => component.render());\n    this._arrangeComponents();\n    this._updateListPanel();\n  }\n  _renderSelectedComponent() {\n    if (this.selectedComponent) {\n      this.selectedComponent.setSelected(true);\n    }\n  }\n  _renderLoadInProgress() {\n    this.$progress.setVisible(this.loadInProgress);\n  }\n  updateScrollPosition(animate) {\n    if (!this.rendered) {\n      // Execute delayed because table may be not layouted yet\n      this.session.layoutValidator.schedulePostValidateFunction(this._updateScrollPosition.bind(this, true, animate));\n    } else {\n      this._updateScrollPosition(true, animate);\n    }\n  }\n  _updateScrollPosition(scrollToInitialTime, animate) {\n    if (this._isMonth()) {\n      this._scrollToSelectedComponent(animate);\n    } else {\n      if (this.selectedComponent) {\n        if (this.selectedComponent.fullDay) {\n          this._scrollToSelectedComponent(animate); // scroll top-grid to selected component\n          if (scrollToInitialTime) {\n            this._scrollToInitialTime(animate); // scroll grid to initial time\n          }\n        } else {\n          let date = dates.parseJsonDate(this.selectedComponent.fromDate, this.selectedComponent);\n          let topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n          let topPos = this.heightPerDay * topPercent;\n          scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n            animate: animate\n          });\n        }\n      } else if (scrollToInitialTime) {\n        this._scrollToInitialTime(animate);\n      }\n    }\n  }\n  _scrollToSelectedComponent(animate) {\n    if (this.selectedComponent && this.selectedComponent._$parts[0] && this.selectedComponent._$parts[0].parent() && this.selectedComponent._$parts[0].isVisible()) {\n      scrollbars.scrollTo(this.selectedComponent._$parts[0].parent(), this.selectedComponent._$parts[0], {\n        animate: animate\n      });\n    }\n  }\n  _scrollToInitialTime(animate) {\n    this.needsScrollToStartHour = false;\n    if (!this._isMonth()) {\n      if (this.selectedComponent && !this.selectedComponent.fullDay) {\n        let date = dates.parseJsonDate(this.selectedComponent.fromDate);\n        let topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n        let topPos = this.heightPerDay * topPercent;\n        scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      } else {\n        let scrollTargetTop = this.heightPerHour * this.startHour;\n        scrollbars.scrollTop(this.$grid, scrollTargetTop - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      }\n    }\n  }\n\n  /* -- basics, events -------------------------------------------- */\n\n  _onPreviousClick(event) {\n    this._navigateDate(Calendar.Direction.BACKWARD);\n  }\n  _onNextClick(event) {\n    this._navigateDate(Calendar.Direction.FORWARD);\n  }\n  _dateParts(date, modulo) {\n    let parts = {\n      year: date.getFullYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay()\n    };\n    if (modulo) {\n      parts.day = (date.getDay() + 6) % 7;\n    }\n    return parts;\n  }\n  _navigateDate(direction) {\n    this.selectedDate = this._calcSelectedDate(direction);\n    this._updateModel(true, false);\n  }\n  _calcSelectedDate(direction) {\n    // noinspection UnnecessaryLocalVariableJS\n    let p = this._dateParts(this.selectedDate),\n      dayOperand = direction,\n      weekOperand = direction * 7,\n      monthOperand = direction;\n    if (this._isDay()) {\n      return new Date(p.year, p.month, p.date + dayOperand);\n    } else if (this._isWeek() || this._isWorkWeek()) {\n      return new Date(p.year, p.month, p.date + weekOperand);\n    } else if (this._isMonth()) {\n      return dates.shift(this.selectedDate, 0, monthOperand, 0);\n    }\n  }\n  _updateModel(updateTopGrid, animate) {\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n    this.trigger('modelChange');\n    this._updateScreen(updateTopGrid, animate);\n  }\n\n  /**\n   * Calculates exact date range of displayed components based on selected-date.\n   */\n  _calcExactRange() {\n    let from,\n      to,\n      p = this._dateParts(this.selectedDate, true);\n    if (this._isDay()) {\n      from = new Date(p.year, p.month, p.date);\n      to = new Date(p.year, p.month, p.date + 1);\n    } else if (this._isWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 6);\n    } else if (this._isMonth()) {\n      from = new Date(p.year, p.month, 1);\n      to = new Date(p.year, p.month + 1, 0);\n    } else if (this._isWorkWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 4);\n    } else {\n      throw new Error('invalid value for displayMode');\n    }\n    return new DateRange(from, to);\n  }\n\n  /**\n   * Calculates the view-range, which is what the user sees in the UI.\n   * The view-range is wider than the exact-range in the monthly mode,\n   * as it contains also dates from the previous and next month.\n   */\n  _calcViewRange() {\n    let viewFrom = calcViewFromDate(this._exactRange.from),\n      viewTo = calcViewToDate(viewFrom);\n    return new DateRange(viewFrom, viewTo);\n    function calcViewFromDate(fromDate) {\n      let i,\n        tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() - 1);\n        if (tmpDate.getDay() === 1 && tmpDate.getMonth() !== fromDate.getMonth()) {\n          return tmpDate;\n        }\n      }\n      throw new Error('failed to calc viewFrom date');\n    }\n    function calcViewToDate(fromDate) {\n      let i,\n        tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() + 1);\n      }\n      return tmpDate;\n    }\n  }\n  _onTodayClick(event) {\n    this.selectedDate = new Date();\n    this._updateModel(true, false);\n  }\n  _onDisplayModeClick(event) {\n    let displayMode = $(event.target).data('mode');\n    this.setDisplayMode(displayMode);\n  }\n  _onYearClick(event) {\n    this._showYearPanel = !this._showYearPanel;\n    this._updateScreen(true, true);\n  }\n  _onListClick(event) {\n    this._showListPanel = !this._showListPanel;\n    this._updateScreen(false, true);\n  }\n  _onDayMouseDown(withTime, event) {\n    let selectedDate = new Date($(event.delegateTarget).data('date'));\n    if (withTime && (this._isDay() || this._isWeek() || this._isWorkWeek())) {\n      let seconds = Math.floor(event.originalEvent.layerY / this.heightPerDivision) / this.numberOfHourDivisions * 60 * 60;\n      if (seconds < 60 * 60 * 24) {\n        selectedDate.setSeconds(seconds);\n      }\n    }\n    this._setSelection(selectedDate, null, false);\n  }\n\n  /**\n   * @param selectedDate\n   * @param selectedComponent may be null when a day is selected\n   */\n  _setSelection(selectedDate, selectedComponent, updateScrollPosition) {\n    let changed = false;\n\n    // selected date\n    if (dates.compareDays(this.selectedDate, selectedDate) !== 0) {\n      changed = true;\n      $('.calendar-day', this.$container).each((index, element) => {\n        let $day = $(element),\n          date = $day.data('date');\n        if (!date || dates.compareDays(date, this.selectedDate) === 0) {\n          $day.select(false); // de-select old date\n        } else if (dates.compareDays(date, selectedDate) === 0) {\n          $day.select(true); // select new date\n        }\n      });\n\n      this.selectedDate = selectedDate;\n    }\n\n    // selected component / part (may be null)\n    if (this.selectedComponent !== selectedComponent) {\n      changed = true;\n      if (this.selectedComponent) {\n        this.selectedComponent.setSelected(false);\n      }\n      if (selectedComponent) {\n        selectedComponent.setSelected(true);\n      }\n      this.selectedComponent = selectedComponent;\n    }\n    if (changed) {\n      this.trigger('selectionChange');\n      this._updateListPanel();\n      if (updateScrollPosition) {\n        this._updateScrollPosition(false, true);\n      }\n    }\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n  }\n\n  /* --  set display mode and range ------------------------------------- */\n\n  _updateScreen(updateTopGrid, animate) {\n    $.log.isInfoEnabled() && $.log.info('(Calendar#_updateScreen)');\n\n    // select mode\n    $('.calendar-mode', this.$commands).select(false);\n    $('[data-mode=\"' + this.displayMode + '\"]', this.$commands).select(true);\n\n    // remove selected day\n    $('.selected', this.$grid).select(false);\n\n    // layout grid\n    this.layoutLabel();\n    this.layoutSize(animate);\n    this.layoutAxis();\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n    this._updateListPanel();\n    this._updateScrollbars(this.$grid, animate);\n    if (updateTopGrid && !this._isMonth()) {\n      this._updateTopGrid();\n    }\n  }\n  layoutSize(animate) {\n    // reset animation sizes\n    $('div', this.$container).removeData(['new-width', 'new-height']);\n    if (this._isMonth()) {\n      this.$topGrid.addClass('calendar-top-grid-short');\n      this.$grid.removeClass('calendar-grid-short');\n    } else {\n      this.$topGrid.removeClass('calendar-top-grid-short');\n      this.$grid.addClass('calendar-grid-short');\n    }\n\n    // init vars (Selected: Day)\n    let $selected = $('.selected', this.$grid),\n      $topSelected = $('.selected', this.$topGrid),\n      containerW = this.$container.width(),\n      gridH = this.$grid.height(),\n      gridPaddingX = this.$grid.innerWidth() - this.$grid.width(),\n      gridW = containerW - gridPaddingX;\n\n    // show or hide year\n    $('.calendar-toggle-year', this.$commands).select(this._showYearPanel);\n    if (this._showYearPanel) {\n      this._yearPanel.$container.data('new-width', this.calendarToggleYearWidth);\n      gridW -= this.calendarToggleYearWidth;\n      containerW -= this.calendarToggleYearWidth;\n    } else {\n      this._yearPanel.$container.data('new-width', 0);\n    }\n\n    // show or hide work list\n    $('.calendar-toggle-list', this.$commands).select(this._showListPanel);\n    if (this._showListPanel) {\n      this.$list.parent().data('new-width', this.calendarToggleListWidth);\n      gridW -= this.calendarToggleListWidth;\n      containerW -= this.calendarToggleListWidth;\n    } else {\n      this.$list.parent().data('new-width', 0);\n    }\n\n    // basic grid width\n    this.$grids.data('new-width', containerW);\n    let $weeksToHide = $(); // Empty\n    let $allWeeks = $('.calendar-week', this.$grid);\n    // layout week\n\n    if (this._isDay() || this._isWeek() || this._isWorkWeek()) {\n      $allWeeks.removeClass('calendar-week-noborder');\n      // Parent of selected (Day) is a week\n      let selectedWeek = $selected.parent();\n      $weeksToHide = $allWeeks.not(selectedWeek); // Hide all (other) weeks delayed, height will animate to zero\n      $weeksToHide.data('new-height', 0);\n      $weeksToHide.removeClass('invisible');\n      selectedWeek.data('new-height', this.heightPerDay);\n      selectedWeek.addClass('calendar-week-noborder');\n      selectedWeek.removeClass('hidden invisible'); // Current week must be shown\n      $('.calendar-day', selectedWeek).data('new-height', this.heightPerDay);\n      // Hide the week-number in the lower grid\n      $('.calendar-week-name', this.$grid).addClass('invisible'); // Keep the reserved space\n      $('.calendar-week-allday-container', this.$topGrid).removeClass('hidden');\n      $('.calendar-week-task', this.$topGrid).removeClass('hidden');\n    } else {\n      // Month\n      let newHeightMonth = gridH / this.monthViewNumberOfWeeks;\n      $allWeeks.removeClass('calendar-week-noborder invisible hidden');\n      $allWeeks.eq(0).addClass('calendar-week-noborder');\n      $allWeeks.data('new-height', newHeightMonth);\n      $('.calendar-day', this.$grid).data('new-height', newHeightMonth);\n      let $allDays = $('.calendar-week-name', this.$grid);\n      $allDays.removeClass('hidden invisible');\n      $allDays.data('new-height', newHeightMonth);\n      $('.calendar-week-allday-container', this.$topGrid).addClass('hidden');\n      $('.calendar-week-task', this.$topGrid).addClass('hidden');\n    }\n\n    // layout days\n    let contentW = gridW - 45; // gridW - @calendar-week-name-width\n    if (this._isDay()) {\n      $('.calendar-day-name, .calendar-day', this.$topGrid).data('new-width', 0);\n      $('.calendar-day', this.$grid).data('new-width', 0);\n      $('.calendar-day-name:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($selected.index() + 1) + ')', this.$grid).data('new-width', contentW);\n      this.widthPerDivision = contentW;\n    } else if (this._isWorkWeek()) {\n      this.$topGrid.find('.calendar-day-name').data('new-width', 0);\n      this.$grids.find('.calendar-day').data('new-width', 0);\n      let newWidthWorkWeek = Math.round(contentW / this.workDayIndices.length);\n      this.$topGrid.find('.calendar-day-name').slice(0, 5).data('new-width', newWidthWorkWeek);\n      this.$topGrid.find('.calendar-day').slice(0, 5).data('new-width', newWidthWorkWeek);\n      $('.calendar-day:nth-child(-n+6)', this.$grid).data('new-width', newWidthWorkWeek);\n      this.widthPerDivision = newWidthWorkWeek;\n    } else if (this._isMonth() || this._isWeek()) {\n      let newWidthMonthOrWeek = Math.round(contentW / 7);\n      this.$grids.find('.calendar-day').data('new-width', newWidthMonthOrWeek);\n      this.$topGrid.find('.calendar-day-name').data('new-width', newWidthMonthOrWeek);\n      this.widthPerDivision = newWidthMonthOrWeek;\n    }\n\n    // layout components\n    if (this._isMonth()) {\n      $('.component-month', this.$grid).each(function () {\n        let $comp = $(this),\n          $day = $comp.closest('.calendar-day');\n        $comp.toggleClass('compact', $day.data('new-width') < CalendarComponent.MONTH_COMPACT_THRESHOLD);\n      });\n    }\n\n    // animate old to new sizes\n    $('div', this.$container).each((i, elem) => {\n      let $e = $(elem);\n      let w = $e.data('new-width');\n      let h = $e.data('new-height');\n      $e.stop(false, true);\n      if (w !== undefined && w !== $e.outerWidth()) {\n        if (animate) {\n          let opts = {\n            complete: () => this._afterLayout($e, animate)\n          };\n          if ($e[0] === this.$grids[0]) {\n            // Grid contains scroll shadows that should be updated during animation (don't due it always for performance reasons)\n            opts.progress = () => this._afterLayout($e, animate);\n          }\n          $e.animate({\n            width: w\n          }, opts);\n        } else {\n          $e.css('width', w);\n          this._afterLayout($e, animate);\n        }\n      }\n      if (h !== undefined && h !== $e.outerHeight()) {\n        if (h > 0) {\n          $e.removeClass('hidden');\n        }\n        if (animate) {\n          $e.animateAVCSD('height', h, () => {\n            if (h === 0) {\n              $e.addClass('hidden');\n            }\n            this._afterLayout($e, animate);\n          });\n        } else {\n          $e.css('height', h);\n          if (h === 0) {\n            $e.addClass('hidden');\n          }\n          this._afterLayout($e, animate);\n        }\n      }\n    });\n  }\n  _afterLayout($parent, animate) {\n    this._updateScrollbars($parent, animate);\n    this._updateWeekdayNames();\n  }\n  _updateWeekdayNames() {\n    // set day-name (based on width of shown column)\n    let weekdayWidth = this.$topGrid.width(),\n      weekdays;\n    if (this._isDay()) {\n      weekdayWidth /= 1;\n    } else if (this._isWorkWeek()) {\n      weekdayWidth /= this.workDayIndices.length;\n    } else if (this._isWeek()) {\n      weekdayWidth /= 7;\n    } else if (this._isMonth()) {\n      weekdayWidth /= 7;\n    }\n    if (weekdayWidth > 90) {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysOrdered;\n    } else {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysShortOrdered;\n    }\n    $('.calendar-day-name', this.$topGrid).each(function (index) {\n      $(this).attr('data-day-name', weekdays[index]);\n    });\n  }\n  _updateScrollbars($parent, animate) {\n    let $scrollables = $('.calendar-scrollable-components', $parent);\n    $scrollables.each((i, elem) => {\n      scrollbars.update($(elem), true);\n    });\n    this.updateScrollPosition(animate);\n  }\n  _uninstallComponentScrollbars($parent) {\n    $parent.find('.calendar-scrollable-components').each((i, elem) => {\n      scrollbars.uninstall($(elem), this.session);\n    });\n  }\n  _updateTopGrid() {\n    $('.calendar-component', this.$topGrid).each((index, part) => {\n      let component = $(part).data('component');\n      if (component) {\n        component.remove();\n      }\n    });\n    let allDayComponents = this.components.filter(component => component.fullDay);\n    // first remove all components and add them from scratch\n    allDayComponents.forEach(component => component.remove());\n    allDayComponents.forEach(component => component.render());\n    this._updateScrollbars(this.$topGrid, false);\n  }\n  layoutYearPanel() {\n    if (this._showYearPanel) {\n      scrollbars.update(this._yearPanel.$yearList);\n      this._yearPanel._scrollYear();\n    }\n  }\n  layoutLabel() {\n    let text,\n      $dates,\n      $topGridDates,\n      exFrom = this._exactRange.from,\n      exTo = this._exactRange.to;\n\n    // set range text\n    if (this._isDay()) {\n      text = this._format(exFrom, 'd. MMMM yyyy');\n    } else if (this._isWorkWeek() || this._isWeek()) {\n      let toText = this.session.text('ui.to');\n      if (exFrom.getMonth() === exTo.getMonth()) {\n        text = strings.join(' ', this._format(exFrom, 'd.'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else if (exFrom.getFullYear() === exTo.getFullYear()) {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM yyyy'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      }\n    } else if (this._isMonth()) {\n      text = this._format(exFrom, 'MMMM yyyy');\n    }\n    this.$select.text(text);\n\n    // prepare to set all day date and mark selected one\n    $dates = $('.calendar-day', this.$grid);\n    let w,\n      d,\n      cssClass,\n      currentMonth = this._exactRange.from.getMonth(),\n      date = new Date(this.viewRange.from.valueOf());\n\n    // Main grid: loop all days and set value and class\n    for (w = 0; w < this.monthViewNumberOfWeeks; w++) {\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n        if (!this._isMonth()) {\n          cssClass += ' calendar-no-label'; // If we're not in the month view, number is shown on top\n        }\n\n        // adjust position for days between 10 and 19 (because \"1\" is narrower than \"0\" or \"2\")\n        if (date.getDate() > 9 && date.getDate() < 20) {\n          cssClass += ' center-nice';\n        }\n        text = this._format(date, 'dd');\n        $dates.eq(w * 7 + d).removeClass('weekend-out weekend out selected now calendar-no-label').addClass(cssClass).attr('data-day-name', text).data('date', new Date(date.valueOf()));\n        date.setDate(date.getDate() + 1);\n      }\n    }\n\n    // Top grid: loop days of one calendar week and set value and class\n    if (!this._isMonth()) {\n      $topGridDates = $('.calendar-day', this.$topGrid);\n      // From the view range, find the week we are in\n      let exactDate = new Date(this._exactRange.from.valueOf());\n\n      // Find first day of week.\n      date = dates.firstDayOfWeek(exactDate, 1);\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n        text = this._format(date, 'dd');\n        $topGridDates.eq(d).removeClass('weekend-out weekend out selected now').addClass(cssClass).attr('data-day-name', text).data('date', new Date(date.valueOf()));\n        date.setDate(date.getDate() + 1);\n      }\n    }\n  }\n  layoutAxis() {\n    let $e;\n\n    // remove old axis\n    $('.calendar-week-axis, .calendar-week-task', this.$grid).remove();\n\n    // set weekname\n    let session = this.session;\n    $('.calendar-week-name', this.$container).each(function (index) {\n      if (index > 0) {\n        $e = $(this);\n        $e.text(session.text('ui.CW', dates.weekInYear($e.next().data('date'))));\n      }\n    });\n\n    // day schedule\n    if (!this._isMonth()) {\n      // Parent of selected day: Week\n      //    var $parent = $selected.parent();\n      let $parent = $('.calendar-week', this.$grid);\n      for (let h = 0; h < 24; h++) {\n        // Render lines for each hour\n        let paddedHour = ('00' + h).slice(-2);\n        let topPos = h * this.heightPerHour;\n        $parent.appendDiv('calendar-week-axis hour' + (h === 0 ? ' first' : '')).attr('data-axis-name', paddedHour + ':00').css('top', topPos + 'px');\n        for (let m = 1; m < this.numberOfHourDivisions; m++) {\n          // First one rendered above. Start at the next\n          topPos += this.heightPerDivision;\n          $parent.appendDiv('calendar-week-axis').attr('data-axis-name', '').css('top', topPos + 'px');\n        }\n      }\n    }\n  }\n\n  /* -- year events ---------------------------------------- */\n\n  _onYearPanelDateSelect(event) {\n    this.selectedDate = event.date;\n    this._updateModel(true, false);\n  }\n  _updateListPanel() {\n    if (this._showListPanel) {\n      // remove old list-components\n      this._listComponents.forEach(listComponent => {\n        listComponent.remove();\n      });\n      this._listComponents = [];\n      this._renderListPanel();\n    }\n  }\n  _remove() {\n    this._uninstallComponentScrollbars(this.$grid);\n    this._uninstallComponentScrollbars(this.$topGrid);\n    this.$window.off('mousemove touchmove', this._mouseMoveHandler).off('mouseup touchend touchcancel', this._mouseUpHandler);\n    this._moveData = null;\n    super._remove();\n  }\n\n  /**\n   * Renders the panel on the left, showing all components of the selected date.\n   */\n  _renderListPanel() {\n    let listComponent,\n      components = [];\n\n    // set title\n    this.$listTitle.text(this._format(this.selectedDate, 'd. MMMM yyyy'));\n\n    // find components to display on the list panel\n    this.components.forEach(component => {\n      if (belongsToSelectedDate.call(this, component)) {\n        components.push(component);\n      }\n    });\n    function belongsToSelectedDate(component) {\n      let selectedDate = dates.trunc(this.selectedDate);\n      return dates.compare(selectedDate, component.coveredDaysRange.from) >= 0 && dates.compare(selectedDate, component.coveredDaysRange.to) <= 0;\n    }\n    components.forEach(component => {\n      listComponent = new CalendarListComponent(this.selectedDate, component);\n      listComponent.render(this.$list);\n      this._listComponents.push(listComponent);\n    });\n  }\n\n  /* -- components, events-------------------------------------------- */\n\n  _selectedComponentChanged(component, partDay, updateScrollPosition) {\n    this._setSelection(partDay, component, updateScrollPosition);\n  }\n  _onDayContextMenu(event) {\n    this._showContextMenu(event, 'Calendar.EmptySpace');\n  }\n  _showContextMenu(event, allowedType) {\n    event.preventDefault();\n    event.stopPropagation();\n    let func = function func(event, allowedType) {\n      if (!this.rendered || !this.attached) {\n        // check needed because function is called asynchronously\n        return;\n      }\n      let filteredMenus = menus.filter(this.menus, [allowedType], true),\n        $part = $(event.currentTarget);\n      if (filteredMenus.length === 0) {\n        return;\n      }\n      let popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: filteredMenus,\n        location: {\n          x: event.pageX,\n          y: event.pageY\n        },\n        $anchor: $part\n      });\n      popup.open();\n    }.bind(this);\n    this.session.onRequestsDone(func, event, allowedType);\n  }\n\n  /* -- components, arrangement------------------------------------ */\n\n  _arrangeComponents() {\n    let k, j, $day, $allChildren, $children, $scrollableContainer, dayComponents, day;\n    let $days = $('.calendar-day', this.$grid);\n    // Main (Bottom) grid: Iterate over days\n    for (k = 0; k < $days.length; k++) {\n      $day = $days.eq(k);\n      $children = $day.children('.calendar-component:not(.component-task)');\n      $allChildren = $day.children('.calendar-component');\n      day = $day.data('date');\n\n      // Remove old element containers\n      $scrollableContainer = $day.children('.calendar-scrollable-components');\n      if ($scrollableContainer.length > 0) {\n        scrollbars.uninstall($scrollableContainer, this.session);\n        $scrollableContainer.remove();\n      }\n      if (this._isMonth() && $allChildren.length > 0) {\n        $scrollableContainer = $day.appendDiv('calendar-scrollable-components');\n        for (j = 0; j < $allChildren.length; j++) {\n          let $child = $allChildren.eq(j);\n          // non-tasks (communications) are distributed manually\n          // within the parent container in all views except the monthly view.\n          if (!this._isMonth() && !$child.hasClass('component-task')) {\n            continue;\n          }\n          $scrollableContainer.append($child);\n        }\n        scrollbars.install($scrollableContainer, {\n          parent: this,\n          session: this.session,\n          axis: 'y'\n        });\n      }\n      if (this._isMonth() && $children.length > 2) {\n        $day.addClass('many-items');\n      } else if (!this._isMonth() && $children.length > 1) {\n        // logical placement\n        dayComponents = this._getComponents($children);\n        this._arrange(dayComponents, day);\n\n        // screen placement\n        this._arrangeComponentSetPlacement($children, day);\n      }\n    }\n    if (this._isMonth()) {\n      this._uninstallScrollbars();\n      this._uninstallComponentScrollbars(this.$topGrid);\n      this.$grid.removeClass('calendar-scrollable-components');\n    } else {\n      this.$grid.addClass('calendar-scrollable-components');\n      // If we're in the non-month views, the time can scroll. Add scrollbars\n      this._installScrollbars({\n        parent: this,\n        session: this.session,\n        axis: 'y'\n      });\n      this.$topGrid.find('.calendar-scrollable-components').each((i, elem) => {\n        let $topDay = $(elem);\n        if ($topDay.data('scrollable')) {\n          scrollbars.update($topDay);\n          return;\n        }\n        scrollbars.install($topDay, {\n          parent: this,\n          session: this.session,\n          axis: 'y',\n          scrollShadow: 'none'\n        });\n      });\n    }\n  }\n  _getComponents($children) {\n    let i, $child;\n    let components = [];\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      components.push($child.data('component'));\n    }\n    return components;\n  }\n  _sort(components) {\n    components.sort(this._sortFromTo);\n  }\n\n  /**\n   * Arrange components (stack width, stack index) per day\n   * */\n  _arrange(components, day) {\n    let i,\n      j,\n      c,\n      r,\n      k,\n      columns = [];\n\n    // ordered by from, to\n    this._sort(components);\n\n    // clear existing placement\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      if (!c.stack) {\n        c.stack = {};\n      }\n      c.stack[day] = {};\n    }\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      r = c.getPartDayPosition(day); // Range [from,to]\n\n      // reduce number of columns, if all components end before this one\n      if (columns.length > 0 && this._allEndBefore(columns, r.from, day)) {\n        columns = [];\n      }\n\n      // replace an component that ends before and can be replaced\n      k = this._findReplacableColumn(columns, r.from, day);\n\n      // insert\n      if (k >= 0) {\n        columns[k] = c;\n        c.stack[day].x = k;\n      } else {\n        columns.push(c);\n        c.stack[day].x = columns.length - 1;\n      }\n\n      // update stackW\n      for (j = 0; j < columns.length; j++) {\n        columns[j].stack[day].w = columns.length;\n      }\n    }\n  }\n  _allEndBefore(columns, pos, day) {\n    let i;\n    for (i = 0; i < columns.length; i++) {\n      if (!this._endsBefore(columns[i], pos, day)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  _findReplacableColumn(columns, pos, day) {\n    let j;\n    for (j = 0; j < columns.length; j++) {\n      if (this._endsBefore(columns[j], pos, day)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n  _endsBefore(component, pos, day) {\n    return component.getPartDayPosition(day).to <= pos;\n  }\n  _arrangeComponentSetPlacement($children, day) {\n    let i, $child, stack;\n\n    // loop and place based on data\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      stack = $child.data('component').stack[day];\n\n      // make last element smaller\n      $child.css('width', 100 / stack.w + '%').css('left', stack.x * 100 / stack.w + '%');\n    }\n  }\n  get$Scrollable() {\n    return this.$grid;\n  }\n  _onMouseDown(event) {\n    if (this._moveData) {\n      // Do nothing, when dragging is already in progress. This can happen when the user leaves\n      // the browser window (e.g. using Alt-Tab) while holding the mouse button pressed and\n      // then returns and presses the mouse button again.\n      return;\n    }\n    let component = this._getCalendarComponentForMouseEvent(event);\n    // component has to be marked as draggable by the backend\n    // dragging of fullDay components is not supported yet\n    // dragging of components spanning more than one day is not supported yet\n    if (!component || !component.draggable || !this._isMonth() && component.fullDay || component._$parts.length > 1) {\n      return;\n    }\n\n    // Ignore right mouse button clicks (allow bubble up --> could trigger context menu)\n    if (event.which === 3) {\n      // Select clicked widget first, otherwise we might display the wrong context menu\n      return;\n    }\n    this.$window.off('mousemove touchmove', this._mouseMoveHandler).off('mouseup touchend touchcancel', this._mouseUpHandler).on('mousemove touchmove', this._mouseMoveHandler).on('mouseup touchend touchcancel', this._mouseUpHandler);\n    this._moveData = this._newMoveData(event);\n    this._onComponentMouseDown(event, component);\n    this._moveData.onMove = this._onComponentMouseMove.bind(this);\n    this._moveData.onUp = this._onComponentMouseUp.bind(this);\n  }\n  _onMouseMove(event) {\n    events.fixTouchEvent(event);\n    this._moveData.event = event;\n    this._moveData.currentCursorPosition = new Point(event.pageX - this._moveData.containerOffset.left + this._moveData.containerScrollPosition.x, event.pageY - this._moveData.containerOffset.top + this._moveData.containerScrollPosition.y);\n    this._scrollViewportWhileDragging(event);\n    if (this._moveData.onMove && !this._moveData.cancelled) {\n      this._moveData.onMove(event);\n    }\n  }\n  _scrollViewportWhileDragging(event, options) {\n    if (!this._moveData || this._moveData.mode === 'pan' || this._moveData.cancelled) {\n      return;\n    }\n    if (!this._moveData.viewportScroller) {\n      this._moveData.viewportScroller = scout.create('ViewportScroller', $.extend({\n        viewportWidth: this.$grid.width(),\n        viewportHeight: this.$grid.height(),\n        active: () => !!this._moveData,\n        scroll: (dx, dy) => {\n          let newScrollTop = this.get$Scrollable().scrollTop() + dy;\n          scrollbars.scrollTop(this.get$Scrollable(), newScrollTop);\n          this._moveData.containerScrollPosition = new Point(this.get$Scrollable().scrollLeft(), this.get$Scrollable().scrollTop());\n        }\n      }));\n    }\n\n    // Mouse position (viewport-relative coordinates) in pixel\n    let mouse = this._moveData.currentCursorPosition.subtract(this._moveData.containerScrollPosition);\n    this._moveData.viewportScroller.update(mouse);\n  }\n  _onMouseUp(event) {\n    this.$window.off('mousemove touchmove', this._mouseMoveHandler).off('mouseup touchend touchcancel', this._mouseUpHandler);\n    events.fixTouchEvent(event);\n    this._moveData.event = event;\n    if (this._moveData.onUp && !this._moveData.cancelled) {\n      this._moveData.onUp(event);\n    }\n    this._moveData = null;\n  }\n  _onComponentMouseDown(event, component) {\n    // Prepare for dragging\n    this._moveData.component = component;\n    this._moveData.logicalX = component._$parts[0].closest('.calendar-day').data().day;\n    this._moveData.logicalY = Math.round(component._$parts[0].position().top) / this.heightPerDivision;\n    if (this._isMonth()) {\n      this._moveData.logicalY = component._$parts[0].closest('.calendar-day').data().week;\n    }\n\n    // Prevent scrolling on touch devices (like \"touch-action: none\" but with better browser support).\n    // Theoretically, unwanted scrolling can be prevented by adding the CSS rule \"touch-action: none\"\n    // to the element. Unfortunately, not all devices support this (e.g. Apple Safari on iOS).\n    // Therefore, we always suppress the scrolling in JS. Because this also suppresses the 'click'\n    // event, click actions have to be triggered manually in the 'mouseup' handler.\n    event.preventDefault();\n  }\n  _onComponentMouseMove(event) {\n    if (!this._moveData.rafId) {\n      this._moveData.rafId = requestAnimationFrame(this._whileComponentMove.bind(this));\n    }\n  }\n  _onComponentMouseUp(event) {\n    this._endComponentMove();\n  }\n  _whileComponentMove() {\n    this._moveData.rafId = null;\n    let pixelDistance = new Point(this._moveData.currentCursorPosition.x - this._moveData.startCursorPosition.x, this._moveData.currentCursorPosition.y - this._moveData.startCursorPosition.y);\n\n    // Ignore small mouse movements\n    if (!this._moveData.moving) {\n      if (Math.abs(pixelDistance.x) < 7 && Math.abs(pixelDistance.y) < 7) {\n        return;\n      }\n      this._moveData.moving = true;\n    }\n\n    // Snap to grid\n    let logicalDistance = this.toLogicalPosition(pixelDistance);\n\n    // Limit logical distance\n    let minX = 1;\n    let minY = this._isMonth() ? 1 : 0;\n    let maxX = this._isWorkWeek() ? this.workDayIndices.length : 7;\n    let maxY = this._isMonth() ? this.monthViewNumberOfWeeks : 24 * this.numberOfHourDivisions - Math.ceil(this._moveData.component.getLengthInHoursDecimal() * this.numberOfHourDivisions);\n    function limitDistance(newPosition) {\n      let newX = newPosition.x;\n      let newY = newPosition.y;\n      if (newX < minX) {\n        logicalDistance.x -= newX - minX;\n      } else if (newX > maxX) {\n        logicalDistance.x -= newX - maxX;\n      }\n      if (newY < minY) {\n        logicalDistance.y -= newY - minY;\n      } else if (newY > maxY) {\n        logicalDistance.y -= newY - maxY;\n      }\n    }\n    limitDistance(new Point(this._moveData.logicalX, this._moveData.logicalY).add(logicalDistance));\n    this._moveData.distance = logicalDistance;\n\n    // Update logical position\n    let newLogicalPosition = new Point(this._moveData.logicalX, this._moveData.logicalY).add(this._moveData.distance);\n    this._setComponentLogicalPosition(this._moveData.component, newLogicalPosition);\n  }\n  _endComponentMove() {\n    if (this._moveData.rafId) {\n      cancelAnimationFrame(this._moveData.rafId);\n      this._moveData.rafId = null;\n    }\n    let component = this._moveData.component;\n    if (this._moveData.distance) {\n      let moved = false;\n      // Move pixel position by distance\n      let logicalPosition = new Point(this._moveData.logicalX, this._moveData.logicalY).add(this._moveData.distance);\n\n      // Logical position\n      let diffX = logicalPosition.x - this._moveData.logicalX;\n      let diffY = logicalPosition.y - this._moveData.logicalY;\n      moved = moved || !!diffX || !!diffY;\n      if (moved) {\n        let appointmentToDate = dates.parseJsonDate(component.toDate);\n        let appointmentFromDate = dates.parseJsonDate(component.fromDate);\n        let daysShift = diffX;\n        if (this._isMonth()) {\n          // in month mode the y-axis is a shit in weeks\n          daysShift += diffY * 7;\n        } else {\n          // time difference (y-axis) only if we are not in month mode\n          let timeDiff = this._hourMinuteByDivision(diffY);\n          appointmentFromDate = dates.shiftTime(appointmentFromDate, timeDiff.hour, timeDiff.minute);\n          appointmentToDate = dates.shiftTime(appointmentToDate, timeDiff.hour, timeDiff.minute);\n        }\n        appointmentFromDate = dates.shift(appointmentFromDate, 0, 0, daysShift);\n        appointmentToDate = dates.shift(appointmentToDate, 0, 0, daysShift);\n        component.fromDate = this._format(appointmentFromDate, 'yyyy-MM-dd HH:mm:ss.SSS');\n        component.toDate = this._format(appointmentToDate, 'yyyy-MM-dd HH:mm:ss.SSS');\n        component.coveredDaysRange = new Range(dates.trunc(appointmentFromDate), dates.trunc(appointmentToDate));\n        this._renderComponents();\n        this.trigger('componentMove', {\n          component: component\n        });\n      }\n    }\n  }\n  _setComponentLogicalPosition(component, vararg, y) {\n    let logicalPosition;\n    if (vararg instanceof Point) {\n      logicalPosition = vararg;\n    } else {\n      logicalPosition = new Point(vararg, y);\n    }\n    let currDay = component._$parts[0].closest('.calendar-day').data('day');\n    let currWeek = component._$parts[0].closest('.calendar-day').data('week');\n    if (component.rendered) {\n      if (this._isMonth()) {\n        if (currDay !== logicalPosition.x || currWeek !== logicalPosition.y) {\n          let newContainer = $('.calendar-week:not(.hidden) > .calendar-day').filter(function () {\n            return $(this).data('day') === logicalPosition.x && $(this).data('week') === logicalPosition.y;\n          });\n          let csc = newContainer.find('.calendar-scrollable-components');\n          newContainer = csc.length > 0 ? csc : newContainer;\n          component._$parts[0].detach().appendTo(newContainer);\n        }\n      } else {\n        if (currDay !== logicalPosition.x) {\n          component._$parts[0].detach().appendTo($('.calendar-week:not(.hidden) > .calendar-day').filter(function () {\n            return $(this).data('day') === logicalPosition.x;\n          }));\n        }\n        let pos = this._dayPositionByDivision(logicalPosition.y) + '%';\n        component._$parts[0].css('top', pos);\n      }\n    }\n  }\n  _getCalendarComponentForMouseEvent(event) {\n    let $elem = $(event.target);\n    $elem = $.ensure($elem);\n    while ($elem && $elem.length > 0) {\n      let component = $elem.data('component');\n      if (component) {\n        return component;\n      }\n      $elem = $elem.parent();\n    }\n    return null;\n  }\n  _newMoveData(event) {\n    let moveData = {};\n    moveData.event = event;\n    moveData.cancel = () => {\n      moveData.cancelled = true;\n    };\n    moveData.unitX = this.widthPerDivision;\n    moveData.unitY = this.heightPerDivision;\n    if (this._isMonth()) {\n      moveData.unitY = $(event.target).closest('.calendar-day').height();\n    }\n    moveData.containerOffset = this.$grid.offset();\n    moveData.containerScrollPosition = new Point(this.get$Scrollable().scrollLeft(), this.get$Scrollable().scrollTop());\n    moveData.startCursorPosition = new Point(event.pageX - moveData.containerOffset.left + moveData.containerScrollPosition.x, event.pageY - moveData.containerOffset.top + moveData.containerScrollPosition.y);\n    moveData.currentCursorPosition = moveData.startCursorPosition;\n    return moveData;\n  }\n  toLogicalPosition(vararg, y, roundingMode) {\n    let pixelPosition;\n    if (vararg instanceof Point) {\n      pixelPosition = vararg;\n      roundingMode = y;\n    } else {\n      pixelPosition = new Point(vararg, y);\n    }\n    if (this._isDay()) {\n      pixelPosition.x = 0;\n    }\n    return new Point(numbers.round(pixelPosition.x / this._moveData.unitX, roundingMode), numbers.round(pixelPosition.y / this._moveData.unitY, roundingMode));\n  }\n\n  /* -- helper ---------------------------------------------------- */\n\n  _hourMinuteByDivision(number) {\n    // from division number to decimal hour.min\n    number /= this.numberOfHourDivisions;\n    // Separate the int from the decimal part\n    let hour = Math.floor(number);\n    let decPart = number - hour;\n    let min = 1 / 60;\n    // Round to nearest minute\n    decPart = min * Math.round(decPart / min);\n    let minute = Math.floor(decPart * 60);\n    return {\n      hour: hour,\n      minute: minute\n    };\n  }\n  _dayPositionByDivision(number) {\n    let hourMin = this._hourMinuteByDivision(number);\n    return this._dayPosition(hourMin.hour, hourMin.minute);\n  }\n  _dayPosition(hour, minutes) {\n    // Height position in percent of total calendar\n\n    let pos;\n    if (hour < 0) {\n      pos = 0; // All day event\n    } else {\n      pos = 100 / (24 * 60) * (hour * 60 + minutes);\n    }\n    return Math.round(pos * 100) / 100;\n  }\n  _hourToNumber(hour) {\n    let splits = hour.split(':');\n    return parseFloat(splits[0]) + parseFloat(splits[1]) / 60;\n  }\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n  _sortFromTo(c1, c2) {\n    let from1 = dates.parseJsonDate(c1.fromDate);\n    let from2 = dates.parseJsonDate(c2.fromDate);\n    let diffFrom = dates.compare(from1, from2);\n    if (diffFrom !== 0) {\n      return diffFrom;\n    }\n    let to1 = dates.parseJsonDate(c1.toDate);\n    let to2 = dates.parseJsonDate(c2.toDate);\n    let diffTo = dates.compare(to1, to2);\n    if (diffTo !== 0) {\n      return diffTo;\n    }\n    let s1 = c1.item && c1.item.subject ? c1.item.subject : '';\n    let s2 = c2.item && c2.item.subject ? c2.item.subject : '';\n    return s1.localeCompare(s2);\n  }\n}\n_defineProperty(Calendar, \"DisplayMode\", {\n  DAY: 1,\n  WEEK: 2,\n  MONTH: 3,\n  WORK_WEEK: 4\n});\n_defineProperty(Calendar, \"Direction\", {\n  BACKWARD: -1,\n  FORWARD: 1\n});","map":{"version":3,"names":["CalendarComponent","CalendarLayout","CalendarListComponent","DateRange","dates","Device","events","GroupBox","HtmlComponent","KeyStrokeContext","menus","numbers","objects","Point","Range","scout","scrollbars","strings","Widget","$","Calendar","constructor","monthViewNumberOfWeeks","numberOfHourDivisions","getConfiguredNumberOfHourDivisions","heightPerDivision","getConfiguredHeightPerDivision","startHour","getConfiguredStartHour","heightPerHour","heightPerDay","spaceBeforeScrollTop","workDayIndices","components","displayMode","displayCondensed","loadInProgress","selectedDate","showDisplayModeSelection","title","useOverflowCells","viewRange","calendarToggleListWidth","calendarToggleYearWidth","$container","$header","$range","$commands","$grids","$grid","$topGrid","$list","$progress","_showYearPanel","_showListPanel","_exactRange","_listComponents","menuInjectionTarget","_menuInjectionTargetMenusChangedHandler","_moveData","_mouseMoveHandler","_onMouseMove","bind","_mouseUpHandler","_onMouseUp","_addWidgetProperties","_addPreserveOnPropertyChangeProperties","init","model","session","register","_isDay","DisplayMode","DAY","_isWeek","WEEK","_isMonth","MONTH","_isWorkWeek","WORK_WEEK","_createKeyStrokeContext","_init","_yearPanel","create","parent","on","_onYearPanelDateSelect","modesMenu","visible","_setSelectedDate","_setDisplayMode","_setMenuInjectionTarget","_calcExactRange","setViewRange","_calcViewRange","setSelectedDate","date","setProperty","ensure","_setProperty","selectDate","_renderSelectedDate","_updateModel","setDisplayMode","equals","oldDisplayMode","rendered","_renderDisplayMode","p","_dateParts","day","Date","year","month","rendering","_renderComponents","needsScrollToStartHour","_setViewRange","_setMenus","_checkMenuInjectionTarget","originalMenus","_removeInjectedMenus","setMenus","concat","isString","widget","off","evt","some","element","includes","injectedMenus","filter","_render","$parent","appendDiv","layout","htmlComp","install","setLayout","isMobile","get","type","Type","MOBILE","toggleClass","$headerRow1","$headerRow2","render","$listTitle","click","_onPreviousClick","text","_onTodayClick","_onNextClick","$title","$select","attr","_onDisplayModeClick","_onYearClick","_onListClick","$weekHeader","dayTop","data","$weekTopGridDays","dayContextMenuCallback","_onDayContextMenu","dayBottom","addClass","w","$w","d","$d","mousedownCallbackWithTime","_onDayMouseDown","find","mousedownCallback","$window","window","_onMouseDown","_updateScreen","_renderProperties","_renderSelectedComponent","_renderLoadInProgress","sort","_sortFromTo","forEach","component","remove","_arrangeComponents","_updateListPanel","selectedComponent","setSelected","setVisible","updateScrollPosition","animate","layoutValidator","schedulePostValidateFunction","_updateScrollPosition","scrollToInitialTime","_scrollToSelectedComponent","fullDay","_scrollToInitialTime","parseJsonDate","fromDate","topPercent","_dayPosition","getHours","getMinutes","topPos","scrollTop","_$parts","isVisible","scrollTo","scrollTargetTop","event","_navigateDate","Direction","BACKWARD","FORWARD","modulo","parts","getFullYear","getMonth","getDate","getDay","direction","_calcSelectedDate","dayOperand","weekOperand","monthOperand","shift","updateTopGrid","trigger","from","to","Error","viewFrom","calcViewFromDate","viewTo","calcViewToDate","i","tmpDate","valueOf","setDate","target","withTime","delegateTarget","seconds","Math","floor","originalEvent","layerY","setSeconds","_setSelection","changed","compareDays","each","index","$day","select","log","isInfoEnabled","info","layoutLabel","layoutSize","layoutAxis","_updateScrollbars","_updateTopGrid","removeData","removeClass","$selected","$topSelected","containerW","width","gridH","height","gridPaddingX","innerWidth","gridW","$weeksToHide","$allWeeks","selectedWeek","not","newHeightMonth","eq","$allDays","contentW","widthPerDivision","newWidthWorkWeek","round","length","slice","newWidthMonthOrWeek","$comp","closest","MONTH_COMPACT_THRESHOLD","elem","$e","h","stop","undefined","outerWidth","opts","complete","_afterLayout","progress","css","outerHeight","animateAVCSD","_updateWeekdayNames","weekdayWidth","weekdays","locale","dateFormat","symbols","weekdaysOrdered","weekdaysShortOrdered","$scrollables","update","_uninstallComponentScrollbars","uninstall","part","allDayComponents","layoutYearPanel","$yearList","_scrollYear","$dates","$topGridDates","exFrom","exTo","_format","toText","join","cssClass","currentMonth","indexOf","isSameDay","exactDate","firstDayOfWeek","weekInYear","next","paddedHour","m","listComponent","_renderListPanel","_remove","belongsToSelectedDate","call","push","trunc","compare","coveredDaysRange","_selectedComponentChanged","partDay","_showContextMenu","allowedType","preventDefault","stopPropagation","func","attached","filteredMenus","$part","currentTarget","popup","menuItems","location","x","pageX","y","pageY","$anchor","open","onRequestsDone","k","j","$allChildren","$children","$scrollableContainer","dayComponents","$days","children","$child","hasClass","append","axis","_getComponents","_arrange","_arrangeComponentSetPlacement","_uninstallScrollbars","_installScrollbars","$topDay","scrollShadow","_sort","c","r","columns","stack","getPartDayPosition","_allEndBefore","_findReplacableColumn","pos","_endsBefore","get$Scrollable","_getCalendarComponentForMouseEvent","draggable","which","_newMoveData","_onComponentMouseDown","onMove","_onComponentMouseMove","onUp","_onComponentMouseUp","fixTouchEvent","currentCursorPosition","containerOffset","left","containerScrollPosition","top","_scrollViewportWhileDragging","cancelled","options","mode","viewportScroller","extend","viewportWidth","viewportHeight","active","scroll","dx","dy","newScrollTop","scrollLeft","mouse","subtract","logicalX","logicalY","position","week","rafId","requestAnimationFrame","_whileComponentMove","_endComponentMove","pixelDistance","startCursorPosition","moving","abs","logicalDistance","toLogicalPosition","minX","minY","maxX","maxY","ceil","getLengthInHoursDecimal","limitDistance","newPosition","newX","newY","add","distance","newLogicalPosition","_setComponentLogicalPosition","cancelAnimationFrame","moved","logicalPosition","diffX","diffY","appointmentToDate","toDate","appointmentFromDate","daysShift","timeDiff","_hourMinuteByDivision","shiftTime","hour","minute","vararg","currDay","currWeek","newContainer","csc","detach","appendTo","_dayPositionByDivision","$elem","moveData","cancel","unitX","unitY","offset","roundingMode","pixelPosition","number","decPart","min","hourMin","minutes","_hourToNumber","splits","split","parseFloat","pattern","format","c1","c2","from1","from2","diffFrom","to1","to2","diffTo","s1","item","subject","s2","localeCompare"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/calendar/Calendar.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2022 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {CalendarComponent, CalendarLayout, CalendarListComponent, DateRange, dates, Device, events, GroupBox, HtmlComponent, KeyStrokeContext, menus, numbers, objects, Point, Range, scout, scrollbars, strings, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Calendar extends Widget {\n\n  constructor() {\n    super();\n\n    this.monthViewNumberOfWeeks = 6;\n    this.numberOfHourDivisions = this.getConfiguredNumberOfHourDivisions();\n    this.heightPerDivision = this.getConfiguredHeightPerDivision();\n    this.startHour = this.getConfiguredStartHour();\n    this.heightPerHour = this.numberOfHourDivisions * this.heightPerDivision;\n    this.heightPerDay = 24 * this.heightPerHour;\n    this.spaceBeforeScrollTop = 15;\n    this.workDayIndices = [1, 2, 3, 4, 5]; // Workdays: Mon-Fri (Week starts at Sun in JS)\n    this.components = [];\n    this.displayMode;\n    this.displayCondensed = false;\n    this.loadInProgress = false;\n    this.selectedDate = null;\n    this.showDisplayModeSelection = true;\n    this.title = null;\n    this.useOverflowCells = true;\n    this.viewRange = null;\n    this.calendarToggleListWidth = 270;\n    this.calendarToggleYearWidth = 215;\n\n    // main elements\n    this.$container = null;\n    this.$header = null;\n    this.$range = null;\n    this.$commands = null;\n    this.$grids = null;\n    this.$grid = null;\n    this.$topGrid = null;\n    this.$list = null;\n    this.$progress = null;\n\n    // additional modes; should be stored in model\n    this._showYearPanel = false;\n    this._showListPanel = false;\n\n    /**\n     * The narrow view range is different from the regular view range.\n     * It contains only dates that exactly match the requested dates,\n     * the regular view range contains also dates from the first and\n     * next month. The exact range is not sent to the server.\n     */\n    this._exactRange = null;\n\n    /**\n     * When the list panel is shown, this list contains the scout.CalenderListComponent\n     * items visible on the list.\n     */\n    this._listComponents = [];\n    this.menuInjectionTarget = null;\n    this._menuInjectionTargetMenusChangedHandler = null;\n\n    // Temporary data structure to store data while mouse actions are handled\n    this._moveData = null;\n\n    this._mouseMoveHandler = this._onMouseMove.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n\n    this._addWidgetProperties(['components', 'menus', 'selectedComponent']);\n    this._addPreserveOnPropertyChangeProperties(['selectedComponent']);\n  }\n\n  init(model, session, register) {\n    super.init(model, session, register);\n  }\n\n  /**\n   * Enum providing display-modes for calender-like components like calendar and planner.\n   * @see ICalendarDisplayMode.java\n   */\n  static DisplayMode = {\n    DAY: 1,\n    WEEK: 2,\n    MONTH: 3,\n    WORK_WEEK: 4\n  };\n\n  /**\n   * Used as a multiplier in date calculations back- and forward (in time).\n   */\n  static Direction = {\n    BACKWARD: -1,\n    FORWARD: 1\n  };\n\n  getConfiguredNumberOfHourDivisions() {\n    return 2;\n  }\n\n  getConfiguredHeightPerDivision() {\n    return 30;\n  }\n\n  getConfiguredStartHour() {\n    return 6;\n  }\n\n  _isDay() {\n    return this.displayMode === Calendar.DisplayMode.DAY;\n  }\n\n  _isWeek() {\n    return this.displayMode === Calendar.DisplayMode.WEEK;\n  }\n\n  _isMonth() {\n    return this.displayMode === Calendar.DisplayMode.MONTH;\n  }\n\n  _isWorkWeek() {\n    return this.displayMode === Calendar.DisplayMode.WORK_WEEK;\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  _init(model) {\n    super._init(model);\n    this._yearPanel = scout.create('YearPanel', {\n      parent: this\n    });\n    this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n    this.modesMenu = scout.create('CalendarModesMenu', {\n      parent: this,\n      visible: false,\n      displayMode: this.displayMode\n    });\n    this._setSelectedDate(model.selectedDate);\n    this._setDisplayMode(model.displayMode);\n    this._setMenuInjectionTarget(model.menuInjectionTarget);\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n  }\n\n  setSelectedDate(date) {\n    this.setProperty('selectedDate', date);\n  }\n\n  _setSelectedDate(date) {\n    date = dates.ensure(date);\n    this._setProperty('selectedDate', date);\n    this._yearPanel.selectDate(this.selectedDate);\n  }\n\n  _renderSelectedDate() {\n    this._updateModel(true, false);\n  }\n\n  setDisplayMode(displayMode) {\n    if (objects.equals(this.displayMode, displayMode)) {\n      return;\n    }\n    let oldDisplayMode = this.displayMode;\n    this._setDisplayMode(displayMode);\n    if (this.rendered) {\n      this._renderDisplayMode(oldDisplayMode);\n    }\n  }\n\n  _setDisplayMode(displayMode) {\n    this._setProperty('displayMode', displayMode);\n    this._yearPanel.setDisplayMode(this.displayMode);\n    this.modesMenu.setDisplayMode(displayMode);\n    if (this._isWorkWeek()) {\n      // change date if selectedDate is on a weekend\n      let p = this._dateParts(this.selectedDate, true);\n      if (p.day > 4) {\n        this.setSelectedDate(new Date(p.year, p.month, p.date - p.day + 4));\n      }\n    }\n  }\n\n  _renderDisplayMode(oldDisplayMode) {\n    if (this.rendering) {\n      // only do it on property changes\n      return;\n    }\n    this._updateModel(false, true);\n\n    // only render if components have another layout\n    if (oldDisplayMode === Calendar.DisplayMode.MONTH || this.displayMode === Calendar.DisplayMode.MONTH) {\n      this._renderComponents();\n      this.needsScrollToStartHour = true;\n    }\n  }\n\n  _setViewRange(viewRange) {\n    viewRange = DateRange.ensure(viewRange);\n    this._setProperty('viewRange', viewRange);\n  }\n\n  _setMenus(menus) {\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      let originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(menus.concat(originalMenus));\n    }\n    this._setProperty('menus', menus);\n  }\n\n  _setMenuInjectionTarget(menuInjectionTarget) {\n    if (objects.isString(menuInjectionTarget)) {\n      menuInjectionTarget = scout.widget(menuInjectionTarget);\n    }\n    // Remove injected menus and installed listener from old injection target\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      menuInjectionTarget.off('propertyChange:menus', this._menuInjectionTargetMenusChangedHandler);\n      let originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(originalMenus);\n    }\n    if (this._checkMenuInjectionTarget(menuInjectionTarget)) {\n      menuInjectionTarget.setMenus(this.menus.concat(menuInjectionTarget.menus));\n      // Listen for menu changes on the injection target. Re inject menus into target if the menus have been altered.\n      this._menuInjectionTargetMenusChangedHandler = menuInjectionTarget.on('propertyChange:menus',\n        evt => {\n          if (this.menuInjectionTarget.menus.some(element => {\n            return this.menus.includes(element);\n          })) {\n            // Menus have already been injected => Do nothing\n            return;\n          }\n          this.menuInjectionTarget.setMenus(this.menus.concat(this.menuInjectionTarget.menus));\n        }\n      );\n    }\n    this._setProperty('menuInjectionTarget', menuInjectionTarget);\n  }\n\n  _checkMenuInjectionTarget(menuInjectionTarget) {\n    return menuInjectionTarget instanceof GroupBox;\n  }\n\n  _removeInjectedMenus(menuInjectionTarget, injectedMenus) {\n    return menuInjectionTarget.menus.filter(element => {\n      return !injectedMenus.includes(element);\n    });\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('calendar');\n\n    let layout = new CalendarLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n    let isMobile = Device.get().type === Device.Type.MOBILE;\n\n    // main elements\n    this.$header = this.$container.appendDiv('calendar-header');\n    this.$header.toggleClass('mobile', isMobile);\n    this.$headerRow1 = this.$header.appendDiv('calendar-header-row first');\n    this.$headerRow2 = this.$header.appendDiv('calendar-header-row last');\n    this._yearPanel.render();\n\n    this.$grids = this.$container.appendDiv('calendar-grids');\n    this.$topGrid = this.$grids.appendDiv('calendar-top-grid');\n    this.$topGrid.toggleClass('mobile', isMobile);\n    this.$grid = this.$grids.appendDiv('calendar-grid');\n    this.$grid.toggleClass('mobile', isMobile);\n\n    this.$list = this.$container.appendDiv('calendar-list-container').appendDiv('calendar-list');\n    this.$listTitle = this.$list.appendDiv('calendar-list-title');\n\n    // header contains range, title and commands. On small screens title will be moved to headerRow2\n    this.$range = this.$headerRow1.appendDiv('calendar-range');\n    this.$range.appendDiv('calendar-previous').click(this._onPreviousClick.bind(this));\n    this.$range.appendDiv('calendar-today', this.session.text('ui.CalendarToday')).click(this._onTodayClick.bind(this));\n    this.$range.appendDiv('calendar-next').click(this._onNextClick.bind(this));\n\n    // title\n    this.$title = this.$headerRow1.appendDiv('calendar-title');\n    this.$select = this.$title.appendDiv('calendar-select');\n    this.$progress = this.$title.appendDiv('busyindicator-label');\n\n    // commands\n    this.$commands = this.$headerRow1.appendDiv('calendar-commands');\n    this.$commands.appendDiv('calendar-mode first', this.session.text('ui.CalendarDay')).attr('data-mode', Calendar.DisplayMode.DAY).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWorkWeek')).attr('data-mode', Calendar.DisplayMode.WORK_WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWeek')).attr('data-mode', Calendar.DisplayMode.WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode last', this.session.text('ui.CalendarMonth')).attr('data-mode', Calendar.DisplayMode.MONTH).click(this._onDisplayModeClick.bind(this));\n    this.modesMenu.render(this.$commands);\n    this.$commands.appendDiv('calendar-toggle-year').click(this._onYearClick.bind(this));\n    this.$commands.appendDiv('calendar-toggle-list').click(this._onListClick.bind(this));\n\n    // Append the top grid (day/week views)\n    let $weekHeader = this.$topGrid.appendDiv('calendar-week-header');\n    $weekHeader.appendDiv('calendar-week-name');\n    for (let dayTop = 0; dayTop < 7; dayTop++) {\n      $weekHeader.appendDiv('calendar-day-name')\n        .data('day', dayTop);\n    }\n\n    this.$topGrid.appendDiv('calendar-week-task').attr('data-axis-name', this.session.text('ui.CalendarDay'));\n    let $weekTopGridDays = this.$topGrid.appendDiv('calendar-week-allday-container');\n    $weekTopGridDays.appendDiv('calendar-week-name');\n\n    let dayContextMenuCallback = this._onDayContextMenu.bind(this);\n    for (let dayBottom = 0; dayBottom < 7; dayBottom++) {\n      $weekTopGridDays.appendDiv('calendar-day')\n        .addClass('calendar-scrollable-components')\n        .data('day', dayBottom)\n        .on('contextmenu', dayContextMenuCallback);\n    }\n\n    for (let w = 1; w < 7; w++) {\n      let $w = this.$grid.appendDiv('calendar-week');\n      for (let d = 0; d < 8; d++) {\n        let $d = $w.appendDiv();\n        if (w > 0 && d === 0) {\n          $d.addClass('calendar-week-name');\n        } else if (w > 0 && d > 0) {\n          $d.addClass('calendar-day')\n            .data('day', d)\n            .data('week', w)\n            .on('contextmenu', dayContextMenuCallback);\n        }\n      }\n    }\n\n    // click event on all day and children elements\n    let mousedownCallbackWithTime = this._onDayMouseDown.bind(this, true);\n    this.$grid.find('.calendar-day').on('mousedown', mousedownCallbackWithTime);\n    let mousedownCallback = this._onDayMouseDown.bind(this, false);\n    this.$topGrid.find('.calendar-day').on('mousedown', mousedownCallback);\n\n    this.$window = this.$container.window();\n    this.$container.on('mousedown touchstart', this._onMouseDown.bind(this));\n\n    this._updateScreen(false, false);\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderComponents();\n    this._renderSelectedComponent();\n    this._renderLoadInProgress();\n    this._renderDisplayMode();\n  }\n\n  _renderComponents() {\n    this.components.sort(this._sortFromTo);\n    this.components.forEach(component => component.remove());\n    this.components.forEach(component => component.render());\n    this._arrangeComponents();\n    this._updateListPanel();\n  }\n\n  _renderSelectedComponent() {\n    if (this.selectedComponent) {\n      this.selectedComponent.setSelected(true);\n    }\n  }\n\n  _renderLoadInProgress() {\n    this.$progress.setVisible(this.loadInProgress);\n  }\n\n  updateScrollPosition(animate) {\n    if (!this.rendered) {\n      // Execute delayed because table may be not layouted yet\n      this.session.layoutValidator.schedulePostValidateFunction(this._updateScrollPosition.bind(this, true, animate));\n    } else {\n      this._updateScrollPosition(true, animate);\n    }\n  }\n\n  _updateScrollPosition(scrollToInitialTime, animate) {\n    if (this._isMonth()) {\n      this._scrollToSelectedComponent(animate);\n    } else {\n      if (this.selectedComponent) {\n        if (this.selectedComponent.fullDay) {\n          this._scrollToSelectedComponent(animate); // scroll top-grid to selected component\n          if (scrollToInitialTime) {\n            this._scrollToInitialTime(animate); // scroll grid to initial time\n          }\n        } else {\n          let date = dates.parseJsonDate(this.selectedComponent.fromDate, this.selectedComponent);\n          let topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n          let topPos = this.heightPerDay * topPercent;\n          scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n            animate: animate\n          });\n        }\n      } else if (scrollToInitialTime) {\n        this._scrollToInitialTime(animate);\n      }\n    }\n  }\n\n  _scrollToSelectedComponent(animate) {\n    if (this.selectedComponent && this.selectedComponent._$parts[0] && this.selectedComponent._$parts[0].parent() && this.selectedComponent._$parts[0].isVisible()) {\n      scrollbars.scrollTo(this.selectedComponent._$parts[0].parent(), this.selectedComponent._$parts[0], {\n        animate: animate\n      });\n    }\n  }\n\n  _scrollToInitialTime(animate) {\n    this.needsScrollToStartHour = false;\n    if (!this._isMonth()) {\n      if (this.selectedComponent && !this.selectedComponent.fullDay) {\n        let date = dates.parseJsonDate(this.selectedComponent.fromDate);\n        let topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n        let topPos = this.heightPerDay * topPercent;\n        scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      } else {\n        let scrollTargetTop = this.heightPerHour * this.startHour;\n        scrollbars.scrollTop(this.$grid, scrollTargetTop - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      }\n    }\n  }\n\n  /* -- basics, events -------------------------------------------- */\n\n  _onPreviousClick(event) {\n    this._navigateDate(Calendar.Direction.BACKWARD);\n  }\n\n  _onNextClick(event) {\n    this._navigateDate(Calendar.Direction.FORWARD);\n  }\n\n  _dateParts(date, modulo) {\n    let parts = {\n      year: date.getFullYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay()\n    };\n    if (modulo) {\n      parts.day = (date.getDay() + 6) % 7;\n    }\n    return parts;\n  }\n\n  _navigateDate(direction) {\n    this.selectedDate = this._calcSelectedDate(direction);\n    this._updateModel(true, false);\n  }\n\n  _calcSelectedDate(direction) {\n    // noinspection UnnecessaryLocalVariableJS\n    let p = this._dateParts(this.selectedDate),\n      dayOperand = direction,\n      weekOperand = direction * 7,\n      monthOperand = direction;\n\n    if (this._isDay()) {\n      return new Date(p.year, p.month, p.date + dayOperand);\n    } else if (this._isWeek() || this._isWorkWeek()) {\n      return new Date(p.year, p.month, p.date + weekOperand);\n    } else if (this._isMonth()) {\n      return dates.shift(this.selectedDate, 0, monthOperand, 0);\n    }\n  }\n\n  _updateModel(updateTopGrid, animate) {\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n    this.trigger('modelChange');\n    this._updateScreen(updateTopGrid, animate);\n  }\n\n  /**\n   * Calculates exact date range of displayed components based on selected-date.\n   */\n  _calcExactRange() {\n    let from, to,\n      p = this._dateParts(this.selectedDate, true);\n\n    if (this._isDay()) {\n      from = new Date(p.year, p.month, p.date);\n      to = new Date(p.year, p.month, p.date + 1);\n    } else if (this._isWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 6);\n    } else if (this._isMonth()) {\n      from = new Date(p.year, p.month, 1);\n      to = new Date(p.year, p.month + 1, 0);\n    } else if (this._isWorkWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 4);\n    } else {\n      throw new Error('invalid value for displayMode');\n    }\n\n    return new DateRange(from, to);\n  }\n\n  /**\n   * Calculates the view-range, which is what the user sees in the UI.\n   * The view-range is wider than the exact-range in the monthly mode,\n   * as it contains also dates from the previous and next month.\n   */\n  _calcViewRange() {\n    let viewFrom = calcViewFromDate(this._exactRange.from),\n      viewTo = calcViewToDate(viewFrom);\n    return new DateRange(viewFrom, viewTo);\n\n    function calcViewFromDate(fromDate) {\n      let i, tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() - 1);\n        if ((tmpDate.getDay() === 1) && tmpDate.getMonth() !== fromDate.getMonth()) {\n          return tmpDate;\n        }\n      }\n      throw new Error('failed to calc viewFrom date');\n    }\n\n    function calcViewToDate(fromDate) {\n      let i, tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() + 1);\n      }\n      return tmpDate;\n    }\n  }\n\n  _onTodayClick(event) {\n    this.selectedDate = new Date();\n    this._updateModel(true, false);\n  }\n\n  _onDisplayModeClick(event) {\n    let displayMode = $(event.target).data('mode');\n    this.setDisplayMode(displayMode);\n  }\n\n  _onYearClick(event) {\n    this._showYearPanel = !this._showYearPanel;\n    this._updateScreen(true, true);\n  }\n\n  _onListClick(event) {\n    this._showListPanel = !this._showListPanel;\n    this._updateScreen(false, true);\n  }\n\n  _onDayMouseDown(withTime, event) {\n    let selectedDate = new Date($(event.delegateTarget).data('date'));\n    if (withTime && (this._isDay() || this._isWeek() || this._isWorkWeek())) {\n      let seconds = Math.floor(event.originalEvent.layerY / this.heightPerDivision) / this.numberOfHourDivisions * 60 * 60;\n      if (seconds < 60 * 60 * 24) {\n        selectedDate.setSeconds(seconds);\n      }\n    }\n    this._setSelection(selectedDate, null, false);\n  }\n\n  /**\n   * @param selectedDate\n   * @param selectedComponent may be null when a day is selected\n   */\n  _setSelection(selectedDate, selectedComponent, updateScrollPosition) {\n    let changed = false;\n\n    // selected date\n    if (dates.compareDays(this.selectedDate, selectedDate) !== 0) {\n      changed = true;\n      $('.calendar-day', this.$container).each((index, element) => {\n        let $day = $(element),\n          date = $day.data('date');\n        if (!date || dates.compareDays(date, this.selectedDate) === 0) {\n          $day.select(false); // de-select old date\n        } else if (dates.compareDays(date, selectedDate) === 0) {\n          $day.select(true); // select new date\n        }\n      });\n      this.selectedDate = selectedDate;\n    }\n\n    // selected component / part (may be null)\n    if (this.selectedComponent !== selectedComponent) {\n      changed = true;\n      if (this.selectedComponent) {\n        this.selectedComponent.setSelected(false);\n      }\n      if (selectedComponent) {\n        selectedComponent.setSelected(true);\n      }\n      this.selectedComponent = selectedComponent;\n    }\n\n    if (changed) {\n      this.trigger('selectionChange');\n      this._updateListPanel();\n      if (updateScrollPosition) {\n        this._updateScrollPosition(false, true);\n      }\n    }\n\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n  }\n\n  /* --  set display mode and range ------------------------------------- */\n\n  _updateScreen(updateTopGrid, animate) {\n    $.log.isInfoEnabled() && $.log.info('(Calendar#_updateScreen)');\n\n    // select mode\n    $('.calendar-mode', this.$commands).select(false);\n    $('[data-mode=\"' + this.displayMode + '\"]', this.$commands).select(true);\n\n    // remove selected day\n    $('.selected', this.$grid).select(false);\n\n    // layout grid\n    this.layoutLabel();\n    this.layoutSize(animate);\n    this.layoutAxis();\n\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n\n    this._updateListPanel();\n    this._updateScrollbars(this.$grid, animate);\n    if (updateTopGrid && !this._isMonth()) {\n      this._updateTopGrid();\n    }\n  }\n\n  layoutSize(animate) {\n    // reset animation sizes\n    $('div', this.$container).removeData(['new-width', 'new-height']);\n\n    if (this._isMonth()) {\n      this.$topGrid.addClass('calendar-top-grid-short');\n      this.$grid.removeClass('calendar-grid-short');\n    } else {\n      this.$topGrid.removeClass('calendar-top-grid-short');\n      this.$grid.addClass('calendar-grid-short');\n    }\n\n    // init vars (Selected: Day)\n    let $selected = $('.selected', this.$grid),\n      $topSelected = $('.selected', this.$topGrid),\n      containerW = this.$container.width(),\n      gridH = this.$grid.height(),\n      gridPaddingX = this.$grid.innerWidth() - this.$grid.width(),\n      gridW = containerW - gridPaddingX;\n\n    // show or hide year\n    $('.calendar-toggle-year', this.$commands).select(this._showYearPanel);\n    if (this._showYearPanel) {\n      this._yearPanel.$container.data('new-width', this.calendarToggleYearWidth);\n      gridW -= this.calendarToggleYearWidth;\n      containerW -= this.calendarToggleYearWidth;\n    } else {\n      this._yearPanel.$container.data('new-width', 0);\n    }\n\n    // show or hide work list\n    $('.calendar-toggle-list', this.$commands).select(this._showListPanel);\n    if (this._showListPanel) {\n      this.$list.parent().data('new-width', this.calendarToggleListWidth);\n      gridW -= this.calendarToggleListWidth;\n      containerW -= this.calendarToggleListWidth;\n    } else {\n      this.$list.parent().data('new-width', 0);\n    }\n\n    // basic grid width\n    this.$grids.data('new-width', containerW);\n\n    let $weeksToHide = $(); // Empty\n    let $allWeeks = $('.calendar-week', this.$grid);\n    // layout week\n\n    if (this._isDay() || this._isWeek() || this._isWorkWeek()) {\n      $allWeeks.removeClass('calendar-week-noborder');\n      // Parent of selected (Day) is a week\n      let selectedWeek = $selected.parent();\n      $weeksToHide = $allWeeks.not(selectedWeek); // Hide all (other) weeks delayed, height will animate to zero\n      $weeksToHide.data('new-height', 0);\n      $weeksToHide.removeClass('invisible');\n      selectedWeek.data('new-height', this.heightPerDay);\n      selectedWeek.addClass('calendar-week-noborder');\n      selectedWeek.removeClass('hidden invisible'); // Current week must be shown\n      $('.calendar-day', selectedWeek).data('new-height', this.heightPerDay);\n      // Hide the week-number in the lower grid\n      $('.calendar-week-name', this.$grid).addClass('invisible'); // Keep the reserved space\n      $('.calendar-week-allday-container', this.$topGrid).removeClass('hidden');\n      $('.calendar-week-task', this.$topGrid).removeClass('hidden');\n    } else {\n      // Month\n      let newHeightMonth = gridH / this.monthViewNumberOfWeeks;\n      $allWeeks.removeClass('calendar-week-noborder invisible hidden');\n      $allWeeks.eq(0).addClass('calendar-week-noborder');\n      $allWeeks.data('new-height', newHeightMonth);\n      $('.calendar-day', this.$grid).data('new-height', newHeightMonth);\n      let $allDays = $('.calendar-week-name', this.$grid);\n      $allDays.removeClass('hidden invisible');\n      $allDays.data('new-height', newHeightMonth);\n      $('.calendar-week-allday-container', this.$topGrid).addClass('hidden');\n      $('.calendar-week-task', this.$topGrid).addClass('hidden');\n    }\n\n    // layout days\n    let contentW = gridW - 45; // gridW - @calendar-week-name-width\n    if (this._isDay()) {\n      $('.calendar-day-name, .calendar-day', this.$topGrid).data('new-width', 0);\n      $('.calendar-day', this.$grid).data('new-width', 0);\n      $('.calendar-day-name:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid)\n        .data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($selected.index() + 1) + ')', this.$grid).data('new-width', contentW);\n      this.widthPerDivision = contentW;\n    } else if (this._isWorkWeek()) {\n      this.$topGrid.find('.calendar-day-name').data('new-width', 0);\n      this.$grids.find('.calendar-day').data('new-width', 0);\n      let newWidthWorkWeek = Math.round(contentW / this.workDayIndices.length);\n      this.$topGrid.find('.calendar-day-name').slice(0, 5).data('new-width', newWidthWorkWeek);\n      this.$topGrid.find('.calendar-day').slice(0, 5).data('new-width', newWidthWorkWeek);\n      $('.calendar-day:nth-child(-n+6)', this.$grid).data('new-width', newWidthWorkWeek);\n      this.widthPerDivision = newWidthWorkWeek;\n    } else if (this._isMonth() || this._isWeek()) {\n      let newWidthMonthOrWeek = Math.round(contentW / 7);\n      this.$grids.find('.calendar-day').data('new-width', newWidthMonthOrWeek);\n      this.$topGrid.find('.calendar-day-name').data('new-width', newWidthMonthOrWeek);\n      this.widthPerDivision = newWidthMonthOrWeek;\n    }\n\n    // layout components\n    if (this._isMonth()) {\n      $('.component-month', this.$grid).each(function() {\n        let $comp = $(this),\n          $day = $comp.closest('.calendar-day');\n        $comp.toggleClass('compact', $day.data('new-width') < CalendarComponent.MONTH_COMPACT_THRESHOLD);\n      });\n    }\n\n    // animate old to new sizes\n    $('div', this.$container).each((i, elem) => {\n      let $e = $(elem);\n      let w = $e.data('new-width');\n      let h = $e.data('new-height');\n      $e.stop(false, true);\n\n      if (w !== undefined && w !== $e.outerWidth()) {\n        if (animate) {\n          let opts = {\n            complete: () => this._afterLayout($e, animate)\n          };\n          if ($e[0] === this.$grids[0]) {\n            // Grid contains scroll shadows that should be updated during animation (don't due it always for performance reasons)\n            opts.progress = () => this._afterLayout($e, animate);\n          }\n          $e.animate({width: w}, opts);\n        } else {\n          $e.css('width', w);\n          this._afterLayout($e, animate);\n        }\n      }\n      if (h !== undefined && h !== $e.outerHeight()) {\n        if (h > 0) {\n          $e.removeClass('hidden');\n        }\n        if (animate) {\n          $e.animateAVCSD('height', h, () => {\n            if (h === 0) {\n              $e.addClass('hidden');\n            }\n            this._afterLayout($e, animate);\n          });\n        } else {\n          $e.css('height', h);\n          if (h === 0) {\n            $e.addClass('hidden');\n          }\n          this._afterLayout($e, animate);\n        }\n      }\n    });\n  }\n\n  _afterLayout($parent, animate) {\n    this._updateScrollbars($parent, animate);\n    this._updateWeekdayNames();\n  }\n\n  _updateWeekdayNames() {\n    // set day-name (based on width of shown column)\n    let weekdayWidth = this.$topGrid.width(),\n      weekdays;\n\n    if (this._isDay()) {\n      weekdayWidth /= 1;\n    } else if (this._isWorkWeek()) {\n      weekdayWidth /= this.workDayIndices.length;\n    } else if (this._isWeek()) {\n      weekdayWidth /= 7;\n    } else if (this._isMonth()) {\n      weekdayWidth /= 7;\n    }\n\n    if (weekdayWidth > 90) {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysOrdered;\n    } else {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysShortOrdered;\n    }\n\n    $('.calendar-day-name', this.$topGrid).each(function(index) {\n      $(this).attr('data-day-name', weekdays[index]);\n    });\n  }\n\n  _updateScrollbars($parent, animate) {\n    let $scrollables = $('.calendar-scrollable-components', $parent);\n    $scrollables.each((i, elem) => {\n      scrollbars.update($(elem), true);\n    });\n    this.updateScrollPosition(animate);\n  }\n\n  _uninstallComponentScrollbars($parent) {\n    $parent.find('.calendar-scrollable-components').each((i, elem) => {\n      scrollbars.uninstall($(elem), this.session);\n    });\n  }\n\n  _updateTopGrid() {\n    $('.calendar-component', this.$topGrid).each((index, part) => {\n      let component = $(part).data('component');\n      if (component) {\n        component.remove();\n      }\n    });\n    let allDayComponents = this.components.filter(component => component.fullDay);\n    // first remove all components and add them from scratch\n    allDayComponents.forEach(component => component.remove());\n    allDayComponents.forEach(component => component.render());\n    this._updateScrollbars(this.$topGrid, false);\n  }\n\n  layoutYearPanel() {\n    if (this._showYearPanel) {\n      scrollbars.update(this._yearPanel.$yearList);\n      this._yearPanel._scrollYear();\n    }\n  }\n\n  layoutLabel() {\n    let text, $dates, $topGridDates,\n      exFrom = this._exactRange.from,\n      exTo = this._exactRange.to;\n\n    // set range text\n    if (this._isDay()) {\n      text = this._format(exFrom, 'd. MMMM yyyy');\n    } else if (this._isWorkWeek() || this._isWeek()) {\n      let toText = this.session.text('ui.to');\n      if (exFrom.getMonth() === exTo.getMonth()) {\n        text = strings.join(' ', this._format(exFrom, 'd.'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else if (exFrom.getFullYear() === exTo.getFullYear()) {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM yyyy'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      }\n\n    } else if (this._isMonth()) {\n      text = this._format(exFrom, 'MMMM yyyy');\n    }\n    this.$select.text(text);\n\n    // prepare to set all day date and mark selected one\n    $dates = $('.calendar-day', this.$grid);\n\n    let w, d, cssClass,\n      currentMonth = this._exactRange.from.getMonth(),\n      date = new Date(this.viewRange.from.valueOf());\n\n    // Main grid: loop all days and set value and class\n    for (w = 0; w < this.monthViewNumberOfWeeks; w++) {\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n        if (!this._isMonth()) {\n          cssClass += ' calendar-no-label'; // If we're not in the month view, number is shown on top\n        }\n\n        // adjust position for days between 10 and 19 (because \"1\" is narrower than \"0\" or \"2\")\n        if (date.getDate() > 9 && date.getDate() < 20) {\n          cssClass += ' center-nice';\n        }\n\n        text = this._format(date, 'dd');\n        $dates.eq(w * 7 + d)\n          .removeClass('weekend-out weekend out selected now calendar-no-label')\n          .addClass(cssClass)\n          .attr('data-day-name', text)\n          .data('date', new Date(date.valueOf()));\n        date.setDate(date.getDate() + 1);\n      }\n    }\n\n    // Top grid: loop days of one calendar week and set value and class\n    if (!this._isMonth()) {\n      $topGridDates = $('.calendar-day', this.$topGrid);\n      // From the view range, find the week we are in\n      let exactDate = new Date(this._exactRange.from.valueOf());\n\n      // Find first day of week.\n      date = dates.firstDayOfWeek(exactDate, 1);\n\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n\n        text = this._format(date, 'dd');\n        $topGridDates.eq(d)\n          .removeClass('weekend-out weekend out selected now')\n          .addClass(cssClass)\n          .attr('data-day-name', text)\n          .data('date', new Date(date.valueOf()));\n\n        date.setDate(date.getDate() + 1);\n      }\n    }\n\n  }\n\n  layoutAxis() {\n    let $e;\n\n    // remove old axis\n    $('.calendar-week-axis, .calendar-week-task', this.$grid).remove();\n\n    // set weekname\n    let session = this.session;\n\n    $('.calendar-week-name', this.$container).each(function(index) {\n      if (index > 0) {\n        $e = $(this);\n        $e.text(session.text('ui.CW', dates.weekInYear($e.next().data('date'))));\n      }\n    });\n\n    // day schedule\n    if (!this._isMonth()) {\n      // Parent of selected day: Week\n      //    var $parent = $selected.parent();\n      let $parent = $('.calendar-week', this.$grid);\n\n      for (let h = 0; h < 24; h++) { // Render lines for each hour\n        let paddedHour = ('00' + h).slice(-2);\n        let topPos = h * this.heightPerHour;\n        $parent.appendDiv('calendar-week-axis hour' + (h === 0 ? ' first' : '')).attr('data-axis-name', paddedHour + ':00').css('top', topPos + 'px');\n\n        for (let m = 1; m < this.numberOfHourDivisions; m++) { // First one rendered above. Start at the next\n          topPos += this.heightPerDivision;\n          $parent.appendDiv('calendar-week-axis').attr('data-axis-name', '').css('top', topPos + 'px');\n        }\n      }\n    }\n  }\n\n  /* -- year events ---------------------------------------- */\n\n  _onYearPanelDateSelect(event) {\n    this.selectedDate = event.date;\n    this._updateModel(true, false);\n  }\n\n  _updateListPanel() {\n    if (this._showListPanel) {\n\n      // remove old list-components\n      this._listComponents.forEach(listComponent => {\n        listComponent.remove();\n      });\n\n      this._listComponents = [];\n      this._renderListPanel();\n    }\n  }\n\n  _remove() {\n    this._uninstallComponentScrollbars(this.$grid);\n    this._uninstallComponentScrollbars(this.$topGrid);\n\n    this.$window\n      .off('mousemove touchmove', this._mouseMoveHandler)\n      .off('mouseup touchend touchcancel', this._mouseUpHandler);\n    this._moveData = null;\n\n    super._remove();\n  }\n\n  /**\n   * Renders the panel on the left, showing all components of the selected date.\n   */\n  _renderListPanel() {\n    let listComponent, components = [];\n\n    // set title\n    this.$listTitle.text(this._format(this.selectedDate, 'd. MMMM yyyy'));\n\n    // find components to display on the list panel\n    this.components.forEach(component => {\n      if (belongsToSelectedDate.call(this, component)) {\n        components.push(component);\n      }\n    });\n\n    function belongsToSelectedDate(component) {\n      let selectedDate = dates.trunc(this.selectedDate);\n      return dates.compare(selectedDate, component.coveredDaysRange.from) >= 0 &&\n        dates.compare(selectedDate, component.coveredDaysRange.to) <= 0;\n    }\n\n    components.forEach(component => {\n      listComponent = new CalendarListComponent(this.selectedDate, component);\n      listComponent.render(this.$list);\n      this._listComponents.push(listComponent);\n    });\n  }\n\n  /* -- components, events-------------------------------------------- */\n\n  _selectedComponentChanged(component, partDay, updateScrollPosition) {\n    this._setSelection(partDay, component, updateScrollPosition);\n  }\n\n  _onDayContextMenu(event) {\n    this._showContextMenu(event, 'Calendar.EmptySpace');\n  }\n\n  _showContextMenu(event, allowedType) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    let func = function func(event, allowedType) {\n      if (!this.rendered || !this.attached) { // check needed because function is called asynchronously\n        return;\n      }\n      let filteredMenus = menus.filter(this.menus, [allowedType], true),\n        $part = $(event.currentTarget);\n      if (filteredMenus.length === 0) {\n        return;\n      }\n      let popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: filteredMenus,\n        location: {\n          x: event.pageX,\n          y: event.pageY\n        },\n        $anchor: $part\n      });\n      popup.open();\n    }.bind(this);\n\n    this.session.onRequestsDone(func, event, allowedType);\n  }\n\n  /* -- components, arrangement------------------------------------ */\n\n  _arrangeComponents() {\n    let k, j, $day, $allChildren, $children, $scrollableContainer, dayComponents, day;\n\n    let $days = $('.calendar-day', this.$grid);\n    // Main (Bottom) grid: Iterate over days\n    for (k = 0; k < $days.length; k++) {\n      $day = $days.eq(k);\n      $children = $day.children('.calendar-component:not(.component-task)');\n      $allChildren = $day.children('.calendar-component');\n      day = $day.data('date');\n\n      // Remove old element containers\n      $scrollableContainer = $day.children('.calendar-scrollable-components');\n      if ($scrollableContainer.length > 0) {\n        scrollbars.uninstall($scrollableContainer, this.session);\n        $scrollableContainer.remove();\n      }\n\n      if (this._isMonth() && $allChildren.length > 0) {\n        $scrollableContainer = $day.appendDiv('calendar-scrollable-components');\n\n        for (j = 0; j < $allChildren.length; j++) {\n          let $child = $allChildren.eq(j);\n          // non-tasks (communications) are distributed manually\n          // within the parent container in all views except the monthly view.\n          if (!this._isMonth() && !$child.hasClass('component-task')) {\n            continue;\n          }\n          $scrollableContainer.append($child);\n        }\n\n        scrollbars.install($scrollableContainer, {\n          parent: this,\n          session: this.session,\n          axis: 'y'\n        });\n      }\n\n      if (this._isMonth() && $children.length > 2) {\n        $day.addClass('many-items');\n      } else if (!this._isMonth() && $children.length > 1) {\n        // logical placement\n        dayComponents = this._getComponents($children);\n        this._arrange(dayComponents, day);\n\n        // screen placement\n        this._arrangeComponentSetPlacement($children, day);\n      }\n    }\n\n    if (this._isMonth()) {\n      this._uninstallScrollbars();\n      this._uninstallComponentScrollbars(this.$topGrid);\n      this.$grid.removeClass('calendar-scrollable-components');\n    } else {\n      this.$grid.addClass('calendar-scrollable-components');\n      // If we're in the non-month views, the time can scroll. Add scrollbars\n      this._installScrollbars({\n        parent: this,\n        session: this.session,\n        axis: 'y'\n      });\n      this.$topGrid.find('.calendar-scrollable-components').each((i, elem) => {\n        let $topDay = $(elem);\n        if ($topDay.data('scrollable')) {\n          scrollbars.update($topDay);\n          return;\n        }\n        scrollbars.install($topDay, {\n          parent: this,\n          session: this.session,\n          axis: 'y',\n          scrollShadow: 'none'\n        });\n      });\n    }\n  }\n\n  _getComponents($children) {\n    let i, $child;\n    let components = [];\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      components.push($child.data('component'));\n    }\n    return components;\n  }\n\n  _sort(components) {\n    components.sort(this._sortFromTo);\n  }\n\n  /**\n   * Arrange components (stack width, stack index) per day\n   * */\n  _arrange(components, day) {\n    let i, j, c, r, k,\n      columns = [];\n\n    // ordered by from, to\n    this._sort(components);\n\n    // clear existing placement\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      if (!c.stack) {\n        c.stack = {};\n      }\n      c.stack[day] = {};\n    }\n\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      r = c.getPartDayPosition(day); // Range [from,to]\n\n      // reduce number of columns, if all components end before this one\n      if (columns.length > 0 && this._allEndBefore(columns, r.from, day)) {\n        columns = [];\n      }\n\n      // replace an component that ends before and can be replaced\n      k = this._findReplacableColumn(columns, r.from, day);\n\n      // insert\n      if (k >= 0) {\n        columns[k] = c;\n        c.stack[day].x = k;\n      } else {\n        columns.push(c);\n        c.stack[day].x = columns.length - 1;\n      }\n\n      // update stackW\n      for (j = 0; j < columns.length; j++) {\n        columns[j].stack[day].w = columns.length;\n      }\n    }\n  }\n\n  _allEndBefore(columns, pos, day) {\n    let i;\n    for (i = 0; i < columns.length; i++) {\n      if (!this._endsBefore(columns[i], pos, day)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _findReplacableColumn(columns, pos, day) {\n    let j;\n    for (j = 0; j < columns.length; j++) {\n      if (this._endsBefore(columns[j], pos, day)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  _endsBefore(component, pos, day) {\n    return component.getPartDayPosition(day).to <= pos;\n  }\n\n  _arrangeComponentSetPlacement($children, day) {\n    let i, $child, stack;\n\n    // loop and place based on data\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      stack = $child.data('component').stack[day];\n\n      // make last element smaller\n      $child\n        .css('width', 100 / stack.w + '%')\n        .css('left', stack.x * 100 / stack.w + '%');\n    }\n  }\n\n  get$Scrollable() {\n    return this.$grid;\n  }\n\n  _onMouseDown(event) {\n    if (this._moveData) {\n      // Do nothing, when dragging is already in progress. This can happen when the user leaves\n      // the browser window (e.g. using Alt-Tab) while holding the mouse button pressed and\n      // then returns and presses the mouse button again.\n      return;\n    }\n\n    let component = this._getCalendarComponentForMouseEvent(event);\n    // component has to be marked as draggable by the backend\n    // dragging of fullDay components is not supported yet\n    // dragging of components spanning more than one day is not supported yet\n    if (!component || !component.draggable || (!this._isMonth() && component.fullDay) || component._$parts.length > 1) {\n      return;\n    }\n\n    // Ignore right mouse button clicks (allow bubble up --> could trigger context menu)\n    if (event.which === 3) {\n      // Select clicked widget first, otherwise we might display the wrong context menu\n      return;\n    }\n\n    this.$window\n      .off('mousemove touchmove', this._mouseMoveHandler)\n      .off('mouseup touchend touchcancel', this._mouseUpHandler)\n      .on('mousemove touchmove', this._mouseMoveHandler)\n      .on('mouseup touchend touchcancel', this._mouseUpHandler);\n\n    this._moveData = this._newMoveData(event);\n\n    this._onComponentMouseDown(event, component);\n    this._moveData.onMove = this._onComponentMouseMove.bind(this);\n    this._moveData.onUp = this._onComponentMouseUp.bind(this);\n  }\n\n  _onMouseMove(event) {\n    events.fixTouchEvent(event);\n\n    this._moveData.event = event;\n    this._moveData.currentCursorPosition = new Point(\n      event.pageX - this._moveData.containerOffset.left + this._moveData.containerScrollPosition.x,\n      event.pageY - this._moveData.containerOffset.top + this._moveData.containerScrollPosition.y\n    );\n\n    this._scrollViewportWhileDragging(event);\n\n    if (this._moveData.onMove && !this._moveData.cancelled) {\n      this._moveData.onMove(event);\n    }\n  }\n\n  _scrollViewportWhileDragging(event, options) {\n    if (!this._moveData || this._moveData.mode === 'pan' || this._moveData.cancelled) {\n      return;\n    }\n\n    if (!this._moveData.viewportScroller) {\n      this._moveData.viewportScroller = scout.create('ViewportScroller', $.extend({\n        viewportWidth: this.$grid.width(),\n        viewportHeight: this.$grid.height(),\n        active: () => !!this._moveData,\n        scroll: (dx, dy) => {\n          let newScrollTop = this.get$Scrollable().scrollTop() + dy;\n          scrollbars.scrollTop(this.get$Scrollable(), newScrollTop);\n          this._moveData.containerScrollPosition = new Point(this.get$Scrollable().scrollLeft(), this.get$Scrollable().scrollTop());\n        }\n      }));\n    }\n\n    // Mouse position (viewport-relative coordinates) in pixel\n    let mouse = this._moveData.currentCursorPosition.subtract(this._moveData.containerScrollPosition);\n    this._moveData.viewportScroller.update(mouse);\n  }\n\n  _onMouseUp(event) {\n    this.$window\n      .off('mousemove touchmove', this._mouseMoveHandler)\n      .off('mouseup touchend touchcancel', this._mouseUpHandler);\n\n    events.fixTouchEvent(event);\n\n    this._moveData.event = event;\n\n    if (this._moveData.onUp && !this._moveData.cancelled) {\n      this._moveData.onUp(event);\n    }\n\n    this._moveData = null;\n  }\n\n  _onComponentMouseDown(event, component) {\n\n    // Prepare for dragging\n    this._moveData.component = component;\n    this._moveData.logicalX = component._$parts[0].closest('.calendar-day').data().day;\n    this._moveData.logicalY = Math.round(component._$parts[0].position().top) / this.heightPerDivision;\n    if (this._isMonth()) {\n      this._moveData.logicalY = component._$parts[0].closest('.calendar-day').data().week;\n    }\n\n    // Prevent scrolling on touch devices (like \"touch-action: none\" but with better browser support).\n    // Theoretically, unwanted scrolling can be prevented by adding the CSS rule \"touch-action: none\"\n    // to the element. Unfortunately, not all devices support this (e.g. Apple Safari on iOS).\n    // Therefore, we always suppress the scrolling in JS. Because this also suppresses the 'click'\n    // event, click actions have to be triggered manually in the 'mouseup' handler.\n    event.preventDefault();\n  }\n\n  _onComponentMouseMove(event) {\n    if (!this._moveData.rafId) {\n      this._moveData.rafId = requestAnimationFrame(this._whileComponentMove.bind(this));\n    }\n  }\n\n  _onComponentMouseUp(event) {\n    this._endComponentMove();\n  }\n\n  _whileComponentMove() {\n    this._moveData.rafId = null;\n\n    let pixelDistance = new Point(\n      this._moveData.currentCursorPosition.x - this._moveData.startCursorPosition.x,\n      this._moveData.currentCursorPosition.y - this._moveData.startCursorPosition.y);\n\n    // Ignore small mouse movements\n    if (!this._moveData.moving) {\n      if (Math.abs(pixelDistance.x) < 7 && Math.abs(pixelDistance.y) < 7) {\n        return;\n      }\n      this._moveData.moving = true;\n    }\n\n    // Snap to grid\n    let logicalDistance = this.toLogicalPosition(pixelDistance);\n\n    // Limit logical distance\n    let minX = 1;\n    let minY = this._isMonth() ? 1 : 0;\n    let maxX = this._isWorkWeek() ? this.workDayIndices.length : 7;\n    let maxY = this._isMonth() ?\n      this.monthViewNumberOfWeeks :\n      (24 * this.numberOfHourDivisions) - Math.ceil(this._moveData.component.getLengthInHoursDecimal() * this.numberOfHourDivisions);\n\n    function limitDistance(newPosition) {\n      let newX = newPosition.x;\n      let newY = newPosition.y;\n      if (newX < minX) {\n        logicalDistance.x -= (newX - minX);\n      } else if (newX > maxX) {\n        logicalDistance.x -= (newX - maxX);\n      }\n      if (newY < minY) {\n        logicalDistance.y -= (newY - minY);\n      } else if (newY > maxY) {\n        logicalDistance.y -= (newY - maxY);\n      }\n    }\n\n    limitDistance(new Point(this._moveData.logicalX, this._moveData.logicalY).add(logicalDistance));\n\n    this._moveData.distance = logicalDistance;\n\n    // Update logical position\n    let newLogicalPosition = new Point(this._moveData.logicalX, this._moveData.logicalY).add(this._moveData.distance);\n\n    this._setComponentLogicalPosition(this._moveData.component, newLogicalPosition);\n  }\n\n  _endComponentMove() {\n    if (this._moveData.rafId) {\n      cancelAnimationFrame(this._moveData.rafId);\n      this._moveData.rafId = null;\n    }\n\n    let component = this._moveData.component;\n\n    if (this._moveData.distance) {\n      let moved = false;\n      // Move pixel position by distance\n      let logicalPosition = new Point(this._moveData.logicalX, this._moveData.logicalY).add(this._moveData.distance);\n\n      // Logical position\n      let diffX = logicalPosition.x - this._moveData.logicalX;\n      let diffY = logicalPosition.y - this._moveData.logicalY;\n\n      moved = moved || !!diffX || !!diffY;\n\n      if (moved) {\n        let appointmentToDate = dates.parseJsonDate(component.toDate);\n        let appointmentFromDate = dates.parseJsonDate(component.fromDate);\n\n        let daysShift = diffX;\n        if (this._isMonth()) {\n          // in month mode the y-axis is a shit in weeks\n          daysShift += diffY * 7;\n        } else {\n          // time difference (y-axis) only if we are not in month mode\n          let timeDiff = this._hourMinuteByDivision(diffY);\n          appointmentFromDate = dates.shiftTime(appointmentFromDate, timeDiff.hour, timeDiff.minute);\n          appointmentToDate = dates.shiftTime(appointmentToDate, timeDiff.hour, timeDiff.minute);\n        }\n        appointmentFromDate = dates.shift(appointmentFromDate, 0, 0, daysShift);\n        appointmentToDate = dates.shift(appointmentToDate, 0, 0, daysShift);\n\n        component.fromDate = this._format(appointmentFromDate, 'yyyy-MM-dd HH:mm:ss.SSS');\n        component.toDate = this._format(appointmentToDate, 'yyyy-MM-dd HH:mm:ss.SSS');\n        component.coveredDaysRange = new Range(dates.trunc(appointmentFromDate), dates.trunc(appointmentToDate));\n        this._renderComponents();\n\n        this.trigger('componentMove', {\n          component: component\n        });\n      }\n    }\n  }\n\n  _setComponentLogicalPosition(component, vararg, y) {\n    let logicalPosition;\n    if (vararg instanceof Point) {\n      logicalPosition = vararg;\n    } else {\n      logicalPosition = new Point(vararg, y);\n    }\n    let currDay = component._$parts[0].closest('.calendar-day').data('day');\n    let currWeek = component._$parts[0].closest('.calendar-day').data('week');\n\n    if (component.rendered) {\n      if (this._isMonth()) {\n        if (currDay !== logicalPosition.x || currWeek !== logicalPosition.y) {\n          let newContainer =\n            $('.calendar-week:not(.hidden) > .calendar-day')\n              .filter(function() {\n                return $(this).data('day') === logicalPosition.x &&\n                  $(this).data('week') === logicalPosition.y;\n              });\n          let csc = newContainer.find('.calendar-scrollable-components');\n          newContainer = csc.length > 0 ? csc : newContainer;\n          component._$parts[0].detach().appendTo(newContainer);\n        }\n      } else {\n        if (currDay !== logicalPosition.x) {\n          component._$parts[0].detach().appendTo($('.calendar-week:not(.hidden) > .calendar-day')\n            .filter(function() {\n              return $(this).data('day') === logicalPosition.x;\n            }));\n        }\n\n        let pos = this._dayPositionByDivision(logicalPosition.y) + '%';\n        component._$parts[0].css('top', pos);\n      }\n    }\n  }\n\n  _getCalendarComponentForMouseEvent(event) {\n    let $elem = $(event.target);\n    $elem = $.ensure($elem);\n    while ($elem && $elem.length > 0) {\n      let component = $elem.data('component');\n      if (component) {\n        return component;\n      }\n      $elem = $elem.parent();\n    }\n    return null;\n  }\n\n  _newMoveData(event) {\n    let moveData = {};\n    moveData.event = event;\n    moveData.cancel = () => {\n      moveData.cancelled = true;\n    };\n\n    moveData.unitX = this.widthPerDivision;\n    moveData.unitY = this.heightPerDivision;\n    if (this._isMonth()) {\n      moveData.unitY = $(event.target).closest('.calendar-day').height();\n    }\n\n    moveData.containerOffset = this.$grid.offset();\n    moveData.containerScrollPosition = new Point(this.get$Scrollable().scrollLeft(), this.get$Scrollable().scrollTop());\n\n    moveData.startCursorPosition = new Point(\n      event.pageX - moveData.containerOffset.left + moveData.containerScrollPosition.x,\n      event.pageY - moveData.containerOffset.top + moveData.containerScrollPosition.y\n    );\n    moveData.currentCursorPosition = moveData.startCursorPosition;\n\n    return moveData;\n  }\n\n  toLogicalPosition(vararg, y, roundingMode) {\n    let pixelPosition;\n    if (vararg instanceof Point) {\n      pixelPosition = vararg;\n      roundingMode = y;\n    } else {\n      pixelPosition = new Point(vararg, y);\n    }\n\n    if (this._isDay()) {\n      pixelPosition.x = 0;\n    }\n\n    return new Point(\n      numbers.round(pixelPosition.x / this._moveData.unitX, roundingMode),\n      numbers.round(pixelPosition.y / this._moveData.unitY, roundingMode)\n    );\n  }\n\n  /* -- helper ---------------------------------------------------- */\n\n  _hourMinuteByDivision(number) {\n    // from division number to decimal hour.min\n    number /= this.numberOfHourDivisions;\n    // Separate the int from the decimal part\n    let hour = Math.floor(number);\n    let decPart = number - hour;\n\n    let min = 1 / 60;\n    // Round to nearest minute\n    decPart = min * Math.round(decPart / min);\n\n    let minute = Math.floor(decPart * 60);\n    return {\n      hour: hour,\n      minute: minute\n    };\n  }\n\n  _dayPositionByDivision(number) {\n    let hourMin = this._hourMinuteByDivision(number);\n    return this._dayPosition(hourMin.hour, hourMin.minute);\n  }\n\n  _dayPosition(hour, minutes) {\n    // Height position in percent of total calendar\n\n    let pos;\n    if (hour < 0) {\n      pos = 0; // All day event\n    } else {\n      pos = 100 / (24 * 60) * (hour * 60 + minutes);\n    }\n    return Math.round(pos * 100) / 100;\n  }\n\n  _hourToNumber(hour) {\n    let splits = hour.split(':');\n    return parseFloat(splits[0]) + parseFloat(splits[1]) / 60;\n  }\n\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n\n  _sortFromTo(c1, c2) {\n    let from1 = dates.parseJsonDate(c1.fromDate);\n    let from2 = dates.parseJsonDate(c2.fromDate);\n    let diffFrom = dates.compare(from1, from2);\n    if (diffFrom !== 0) {\n      return diffFrom;\n    }\n    let to1 = dates.parseJsonDate(c1.toDate);\n    let to2 = dates.parseJsonDate(c2.toDate);\n    let diffTo = dates.compare(to1, to2);\n    if (diffTo !== 0) {\n      return diffTo;\n    }\n    let s1 = c1.item && c1.item.subject ? c1.item.subject : '';\n    let s2 = c2.item && c2.item.subject ? c2.item.subject : '';\n    return s1.localeCompare(s2);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}