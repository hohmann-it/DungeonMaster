{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, GroupLayout, GroupToggleCollapseKeyStroke, HtmlComponent, Icon, Insets, KeyStrokeContext, LoadingSupport, scout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\nexport default class Group extends Widget {\n  constructor() {\n    super();\n    this.bodyAnimating = false;\n    this.collapsed = false;\n    this.collapsible = true;\n    this.title = null;\n    this.titleHtmlEnabled = false;\n    this.titleSuffix = null;\n    this.header = null;\n    this.headerFocusable = false;\n    this.headerVisible = true;\n    this.body = null;\n    this.$container = null;\n    this.$header = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this.collapseStyle = Group.CollapseStyle.LEFT;\n    this.htmlComp = null;\n    this.htmlHeader = null;\n    this.htmlFooter = null;\n    this.iconId = null;\n    this.icon = null;\n    this._addWidgetProperties(['header']);\n    this._addWidgetProperties(['body']);\n  }\n  _init(model) {\n    super._init(model);\n    this.resolveTextKeys(['title', 'titleSuffix']);\n    this.resolveIconIds(['iconId']);\n    this._setBody(this.body);\n    this._setHeader(this.header);\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Key stroke should only work when header is focused\n    this.keyStrokeContext.$bindTarget = function () {\n      return this.$header;\n    }.bind(this);\n    this.keyStrokeContext.registerKeyStroke([new GroupToggleCollapseKeyStroke(this)]);\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('group');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new GroupLayout(this));\n    this._renderHeader();\n    this.$collapseIcon = this.$header.appendDiv('group-collapse-icon');\n    this.$footer = this.$container.appendDiv('group-footer');\n    this.$collapseBorderLeft = this.$footer.appendDiv('group-collapse-border');\n    this.$collapseBorderRight = this.$footer.appendDiv('group-collapse-border');\n    this.htmlFooter = HtmlComponent.install(this.$footer, this.session);\n    this.$footer.on('mousedown', this._onFooterMouseDown.bind(this));\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderTitle();\n    this._renderTitleSuffix();\n    this._renderHeaderVisible();\n    this._renderHeaderFocusable();\n    this._renderCollapsed();\n    this._renderCollapseStyle();\n    this._renderCollapsible();\n  }\n  _remove() {\n    this.$header = null;\n    this.$title = null;\n    this.$titleSuffix = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this._removeIconId();\n    super._remove();\n  }\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$header.setTabbable(this.enabledComputed);\n  }\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the group header by adding either an IMG or SPAN element.\n   */\n  _renderIconId() {\n    let iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      this._updateIconStyle();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      this._updateIconStyle();\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', () => {\n      this.icon = null;\n    });\n    this.icon.render(this.$header);\n    this._updateIconStyle();\n  }\n  _updateIconStyle() {\n    let hasTitle = !!this.title;\n    this.get$Icon().toggleClass('with-title', hasTitle);\n    this.get$Icon().addClass('group-icon');\n    this._renderCollapseStyle();\n  }\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n  setHeader(header) {\n    this.setProperty('header', header);\n  }\n  _setHeader(header) {\n    this._setProperty('header', header);\n  }\n  setHeaderFocusable(headerFocusable) {\n    this.setProperty('headerFocusable', headerFocusable);\n  }\n  _renderHeaderFocusable() {\n    this.$header.toggleClass('unfocusable', !this.headerFocusable);\n  }\n  setTitle(title) {\n    this.setProperty('title', title);\n  }\n  _renderTitle() {\n    if (this.$title) {\n      if (this.titleHtmlEnabled) {\n        this.$title.htmlOrNbsp(this.title);\n      } else {\n        this.$title.textOrNbsp(this.title);\n      }\n      this._updateIconStyle();\n    }\n  }\n  setTitleSuffix(titleSuffix) {\n    this.setProperty('titleSuffix', titleSuffix);\n  }\n  _renderTitleSuffix() {\n    if (this.$titleSuffix) {\n      this.$titleSuffix.text(this.titleSuffix || '');\n    }\n  }\n  setHeaderVisible(headerVisible) {\n    this.setProperty('headerVisible', headerVisible);\n  }\n  _renderHeaderVisible() {\n    this.$header.setVisible(this.headerVisible);\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n  setBody(body) {\n    this.setProperty('body', body);\n  }\n  _setBody(body) {\n    if (!body) {\n      // Create empty body if no body was provided\n      body = scout.create('Widget', {\n        parent: this,\n        _render: function () {\n          this.$container = this.$parent.appendDiv('group');\n          this.htmlComp = HtmlComponent.install(this.$container, this.session);\n        }\n      });\n    }\n    this._setProperty('body', body);\n  }\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function () {\n        return this.$header;\n      }.bind(this)\n    });\n  }\n  _renderHeader() {\n    if (this.$header) {\n      this.$header.remove();\n      this._removeIconId();\n    }\n    if (this.header) {\n      this.header.render();\n      this.$header = this.header.$container.addClass('group-header').addClass('custom-header-widget').prependTo(this.$container);\n      this.htmlHeader = this.header.htmlComp;\n    } else {\n      this.$header = this.$container.prependDiv('group-header').unfocusable().addClass('prevent-initial-focus');\n      this.$title = this.$header.appendDiv('group-title');\n      this.$titleSuffix = this.$header.appendDiv('group-title-suffix');\n      tooltips.installForEllipsis(this.$title, {\n        parent: this\n      });\n      this.htmlHeader = HtmlComponent.install(this.$header, this.session);\n      if (!this.rendering) {\n        this._renderIconId();\n        this._renderTitle();\n        this._renderTitleSuffix();\n      }\n    }\n    this.$header.on('mousedown', this._onHeaderMouseDown.bind(this));\n    this.invalidateLayoutTree();\n  }\n  _renderBody() {\n    this.body.render();\n    this.body.$container.insertAfter(this.$header);\n    this.body.$container.addClass('group-body');\n    this.body.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (!this.rendered) {\n      return false;\n    }\n    return this.$header;\n  }\n  toggleCollapse() {\n    this.setCollapsed(!this.collapsed && this.collapsible);\n  }\n  setCollapsed(collapsed) {\n    this.setProperty('collapsed', collapsed);\n  }\n  _renderCollapsed() {\n    this.$container.toggleClass('collapsed', this.collapsed);\n    this.$collapseIcon.toggleClass('collapsed', this.collapsed);\n    if (!this.collapsed && !this.bodyAnimating) {\n      this._renderBody();\n    }\n    if (this.rendered) {\n      this.resizeBody();\n    } else if (this.collapsed) {\n      // Body will be removed after the animation, if there is no animation, remove it now\n      this.body.remove();\n    }\n    this.invalidateLayoutTree();\n  }\n  setCollapsible(collapsible) {\n    this.setProperty('collapsible', collapsible);\n  }\n  _renderCollapsible() {\n    this.$container.toggleClass('collapsible', this.collapsible);\n    this.$header.toggleClass('disabled', !this.collapsible);\n    // footer is visible if collapseStyle is 'bottom' and either header is visible or has a (collapsible) body\n    this.$footer.setVisible(this.collapseStyle === Group.CollapseStyle.BOTTOM && (this.headerVisible || this.collapsible));\n    this.$collapseIcon.setVisible(this.collapsible);\n    this.invalidateLayoutTree();\n  }\n  setCollapseStyle(collapseStyle) {\n    this.setProperty('collapseStyle', collapseStyle);\n  }\n  _renderCollapseStyle() {\n    this.$header.toggleClass('collapse-right', this.collapseStyle === Group.CollapseStyle.RIGHT);\n    this.$container.toggleClass('collapse-bottom', this.collapseStyle === Group.CollapseStyle.BOTTOM);\n    if (this.collapseStyle === Group.CollapseStyle.RIGHT && !this.header) {\n      this.$collapseIcon.appendTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.LEFT && !this.header) {\n      this.$collapseIcon.prependTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.BOTTOM) {\n      let sibling = this.body.$container ? this.body.$container : this.$header;\n      this.$footer.insertAfter(sibling);\n      this.$collapseIcon.insertAfter(this.$collapseBorderLeft);\n    }\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n  _onHeaderMouseDown(event) {\n    if (this.collapsible && (!this.header || this.collapseStyle !== Group.CollapseStyle.BOTTOM)) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n  _onFooterMouseDown(event) {\n    if (this.collapsible) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n\n  /**\n   * Resizes the body to its preferred size by animating the height.\n   */\n  resizeBody() {\n    this.animateToggleCollapse().done(() => {\n      if (this.bodyAnimating) {\n        // Another animation has been started in the mean time -> ignore done event\n        return;\n      }\n      if (this.collapsed) {\n        this.body.remove();\n      }\n      this.invalidateLayoutTree();\n    });\n  }\n\n  /**\n   * @param {object} [options]\n   * @returns {Promise}\n   */\n  animateToggleCollapse(options) {\n    let currentSize = graphics.cssSize(this.body.$container);\n    let currentMargins = graphics.margins(this.body.$container);\n    let currentPaddings = graphics.paddings(this.body.$container);\n    let targetHeight, targetMargins, targetPaddings;\n    if (this.collapsed) {\n      // Collapsing\n      // Set target values to 0 when collapsing\n      targetHeight = 0;\n      targetMargins = new Insets();\n      targetPaddings = new Insets();\n    } else {\n      // Expanding\n      // Expand to preferred size of the body\n      targetHeight = this.body.htmlComp.prefSize({\n        widthHint: currentSize.width\n      }).height;\n\n      // Make sure body is layouted correctly before starting the animation (with the target size)\n      // Use setSize to explicitly call its layout (this might even be necessary during the animation, see GroupLayout.invalidate)\n      this.body.htmlComp.setSize(new Dimension(this.body.$container.outerWidth(), targetHeight));\n      if (this.bodyAnimating) {\n        // The group may be expanded while being collapsed or vice verca.\n        // In that case, use the current values of the inline style as starting values\n\n        // Clear current insets to read target insets from CSS anew\n        this.body.$container.cssMarginY('').cssPaddingY('');\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      } else {\n        // If toggling is not already in progress, start expanding from 0\n        currentSize.height = 0;\n        currentMargins = new Insets();\n        currentPaddings = new Insets();\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      }\n    }\n    this.bodyAnimating = true;\n    if (this.collapsed) {\n      this.$container.addClass('collapsing');\n    }\n    return this.body.$container.stop(true).cssHeight(currentSize.height).cssMarginTop(currentMargins.top).cssMarginBottom(currentMargins.bottom).cssPaddingTop(currentPaddings.top).cssPaddingBottom(currentPaddings.bottom).animate({\n      height: targetHeight,\n      marginTop: targetMargins.top,\n      marginBottom: targetMargins.bottom,\n      paddingTop: targetPaddings.top,\n      paddingBottom: targetPaddings.bottom\n    }, {\n      duration: 350,\n      progress: function () {\n        this.trigger('bodyHeightChange');\n        this.revalidateLayoutTree();\n      }.bind(this),\n      complete: function () {\n        this.bodyAnimating = false;\n        if (this.body.rendered) {\n          // Remove inline styles when finished\n          this.body.$container.cssMarginY('');\n          this.body.$container.cssPaddingY('');\n        }\n        if (this.rendered) {\n          this.$container.removeClass('collapsing');\n        }\n        this.trigger('bodyHeightChangeDone');\n      }.bind(this)\n    }).promise();\n  }\n}\n_defineProperty(Group, \"CollapseStyle\", {\n  LEFT: 'left',\n  RIGHT: 'right',\n  BOTTOM: 'bottom'\n});","map":{"version":3,"names":["Dimension","graphics","GroupLayout","GroupToggleCollapseKeyStroke","HtmlComponent","Icon","Insets","KeyStrokeContext","LoadingSupport","scout","tooltips","Widget","$","Group","constructor","bodyAnimating","collapsed","collapsible","title","titleHtmlEnabled","titleSuffix","header","headerFocusable","headerVisible","body","$container","$header","$footer","$collapseIcon","$collapseBorderLeft","$collapseBorderRight","collapseStyle","CollapseStyle","LEFT","htmlComp","htmlHeader","htmlFooter","iconId","icon","_addWidgetProperties","_init","model","resolveTextKeys","resolveIconIds","_setBody","_setHeader","_createKeyStrokeContext","_initKeyStrokeContext","keyStrokeContext","$bindTarget","bind","registerKeyStroke","_render","$parent","appendDiv","install","session","setLayout","_renderHeader","on","_onFooterMouseDown","_renderProperties","_renderIconId","_renderTitle","_renderTitleSuffix","_renderHeaderVisible","_renderHeaderFocusable","_renderCollapsed","_renderCollapseStyle","_renderCollapsible","_remove","$title","$titleSuffix","_removeIconId","_renderEnabled","setTabbable","enabledComputed","setIconId","setProperty","_updateIconStyle","setIconDesc","create","parent","iconDesc","prepend","one","render","hasTitle","get$Icon","toggleClass","addClass","destroy","setHeader","_setProperty","setHeaderFocusable","setTitle","htmlOrNbsp","textOrNbsp","setTitleSuffix","text","setHeaderVisible","setVisible","invalidateLayoutTree","setBody","_createLoadingSupport","widget","remove","prependTo","prependDiv","unfocusable","installForEllipsis","rendering","_onHeaderMouseDown","_renderBody","insertAfter","getFocusableElement","rendered","toggleCollapse","setCollapsed","resizeBody","setCollapsible","BOTTOM","setCollapseStyle","RIGHT","appendTo","sibling","event","animateToggleCollapse","done","options","currentSize","cssSize","currentMargins","margins","currentPaddings","paddings","targetHeight","targetMargins","targetPaddings","prefSize","widthHint","width","height","setSize","outerWidth","cssMarginY","cssPaddingY","stop","cssHeight","cssMarginTop","top","cssMarginBottom","bottom","cssPaddingTop","cssPaddingBottom","animate","marginTop","marginBottom","paddingTop","paddingBottom","duration","progress","trigger","revalidateLayoutTree","complete","removeClass","promise"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/group/Group.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, GroupLayout, GroupToggleCollapseKeyStroke, HtmlComponent, Icon, Insets, KeyStrokeContext, LoadingSupport, scout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Group extends Widget {\n\n  constructor() {\n    super();\n    this.bodyAnimating = false;\n    this.collapsed = false;\n    this.collapsible = true;\n    this.title = null;\n    this.titleHtmlEnabled = false;\n    this.titleSuffix = null;\n    this.header = null;\n    this.headerFocusable = false;\n    this.headerVisible = true;\n    this.body = null;\n\n    this.$container = null;\n    this.$header = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this.collapseStyle = Group.CollapseStyle.LEFT;\n    this.htmlComp = null;\n    this.htmlHeader = null;\n    this.htmlFooter = null;\n    this.iconId = null;\n    this.icon = null;\n    this._addWidgetProperties(['header']);\n    this._addWidgetProperties(['body']);\n  }\n\n  static CollapseStyle = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n  };\n\n  _init(model) {\n    super._init(model);\n    this.resolveTextKeys(['title', 'titleSuffix']);\n    this.resolveIconIds(['iconId']);\n    this._setBody(this.body);\n    this._setHeader(this.header);\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Key stroke should only work when header is focused\n    this.keyStrokeContext.$bindTarget = function() {\n      return this.$header;\n    }.bind(this);\n    this.keyStrokeContext.registerKeyStroke([\n      new GroupToggleCollapseKeyStroke(this)\n    ]);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('group');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new GroupLayout(this));\n\n    this._renderHeader();\n\n    this.$collapseIcon = this.$header.appendDiv('group-collapse-icon');\n    this.$footer = this.$container.appendDiv('group-footer');\n    this.$collapseBorderLeft = this.$footer.appendDiv('group-collapse-border');\n    this.$collapseBorderRight = this.$footer.appendDiv('group-collapse-border');\n    this.htmlFooter = HtmlComponent.install(this.$footer, this.session);\n    this.$footer.on('mousedown', this._onFooterMouseDown.bind(this));\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderTitle();\n    this._renderTitleSuffix();\n    this._renderHeaderVisible();\n    this._renderHeaderFocusable();\n    this._renderCollapsed();\n    this._renderCollapseStyle();\n    this._renderCollapsible();\n  }\n\n  _remove() {\n    this.$header = null;\n    this.$title = null;\n    this.$titleSuffix = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this._removeIconId();\n    super._remove();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$header.setTabbable(this.enabledComputed);\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the group header by adding either an IMG or SPAN element.\n   */\n  _renderIconId() {\n    let iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      this._updateIconStyle();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      this._updateIconStyle();\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', () => {\n      this.icon = null;\n    });\n    this.icon.render(this.$header);\n    this._updateIconStyle();\n  }\n\n  _updateIconStyle() {\n    let hasTitle = !!this.title;\n    this.get$Icon().toggleClass('with-title', hasTitle);\n    this.get$Icon().addClass('group-icon');\n    this._renderCollapseStyle();\n  }\n\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n\n  setHeader(header) {\n    this.setProperty('header', header);\n  }\n\n  _setHeader(header) {\n    this._setProperty('header', header);\n  }\n\n  setHeaderFocusable(headerFocusable) {\n    this.setProperty('headerFocusable', headerFocusable);\n  }\n\n  _renderHeaderFocusable() {\n    this.$header.toggleClass('unfocusable', !this.headerFocusable);\n  }\n\n  setTitle(title) {\n    this.setProperty('title', title);\n  }\n\n  _renderTitle() {\n    if (this.$title) {\n      if (this.titleHtmlEnabled) {\n        this.$title.htmlOrNbsp(this.title);\n      } else {\n        this.$title.textOrNbsp(this.title);\n      }\n      this._updateIconStyle();\n    }\n  }\n\n  setTitleSuffix(titleSuffix) {\n    this.setProperty('titleSuffix', titleSuffix);\n  }\n\n  _renderTitleSuffix() {\n    if (this.$titleSuffix) {\n      this.$titleSuffix.text(this.titleSuffix || '');\n    }\n  }\n\n  setHeaderVisible(headerVisible) {\n    this.setProperty('headerVisible', headerVisible);\n  }\n\n  _renderHeaderVisible() {\n    this.$header.setVisible(this.headerVisible);\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n\n  setBody(body) {\n    this.setProperty('body', body);\n  }\n\n  _setBody(body) {\n    if (!body) {\n      // Create empty body if no body was provided\n      body = scout.create('Widget', {\n        parent: this,\n        _render: function() {\n          this.$container = this.$parent.appendDiv('group');\n          this.htmlComp = HtmlComponent.install(this.$container, this.session);\n        }\n      });\n    }\n    this._setProperty('body', body);\n  }\n\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$header;\n      }.bind(this)\n    });\n  }\n\n  _renderHeader() {\n    if (this.$header) {\n      this.$header.remove();\n      this._removeIconId();\n    }\n    if (this.header) {\n      this.header.render();\n      this.$header = this.header.$container\n        .addClass('group-header')\n        .addClass('custom-header-widget')\n        .prependTo(this.$container);\n      this.htmlHeader = this.header.htmlComp;\n    } else {\n      this.$header = this.$container\n        .prependDiv('group-header')\n        .unfocusable()\n        .addClass('prevent-initial-focus');\n      this.$title = this.$header.appendDiv('group-title');\n      this.$titleSuffix = this.$header.appendDiv('group-title-suffix');\n      tooltips.installForEllipsis(this.$title, {\n        parent: this\n      });\n      this.htmlHeader = HtmlComponent.install(this.$header, this.session);\n      if (!this.rendering) {\n        this._renderIconId();\n        this._renderTitle();\n        this._renderTitleSuffix();\n      }\n    }\n    this.$header.on('mousedown', this._onHeaderMouseDown.bind(this));\n    this.invalidateLayoutTree();\n  }\n\n  _renderBody() {\n    this.body.render();\n    this.body.$container.insertAfter(this.$header);\n    this.body.$container.addClass('group-body');\n    this.body.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (!this.rendered) {\n      return false;\n    }\n    return this.$header;\n  }\n\n  toggleCollapse() {\n    this.setCollapsed(!this.collapsed && this.collapsible);\n  }\n\n  setCollapsed(collapsed) {\n    this.setProperty('collapsed', collapsed);\n  }\n\n  _renderCollapsed() {\n    this.$container.toggleClass('collapsed', this.collapsed);\n    this.$collapseIcon.toggleClass('collapsed', this.collapsed);\n    if (!this.collapsed && !this.bodyAnimating) {\n      this._renderBody();\n    }\n    if (this.rendered) {\n      this.resizeBody();\n    } else if (this.collapsed) {\n      // Body will be removed after the animation, if there is no animation, remove it now\n      this.body.remove();\n    }\n    this.invalidateLayoutTree();\n  }\n\n  setCollapsible(collapsible) {\n    this.setProperty('collapsible', collapsible);\n  }\n\n  _renderCollapsible() {\n    this.$container.toggleClass('collapsible', this.collapsible);\n    this.$header.toggleClass('disabled', !this.collapsible);\n    // footer is visible if collapseStyle is 'bottom' and either header is visible or has a (collapsible) body\n    this.$footer.setVisible(this.collapseStyle === Group.CollapseStyle.BOTTOM && (this.headerVisible || this.collapsible));\n    this.$collapseIcon.setVisible(this.collapsible);\n    this.invalidateLayoutTree();\n  }\n\n  setCollapseStyle(collapseStyle) {\n    this.setProperty('collapseStyle', collapseStyle);\n  }\n\n  _renderCollapseStyle() {\n    this.$header.toggleClass('collapse-right', this.collapseStyle === Group.CollapseStyle.RIGHT);\n    this.$container.toggleClass('collapse-bottom', this.collapseStyle === Group.CollapseStyle.BOTTOM);\n\n    if (this.collapseStyle === Group.CollapseStyle.RIGHT && !this.header) {\n      this.$collapseIcon.appendTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.LEFT && !this.header) {\n      this.$collapseIcon.prependTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.BOTTOM) {\n      let sibling = this.body.$container ? this.body.$container : this.$header;\n      this.$footer.insertAfter(sibling);\n      this.$collapseIcon.insertAfter(this.$collapseBorderLeft);\n    }\n\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n\n  _onHeaderMouseDown(event) {\n    if (this.collapsible && (!this.header || this.collapseStyle !== Group.CollapseStyle.BOTTOM)) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n\n  _onFooterMouseDown(event) {\n    if (this.collapsible) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n\n  /**\n   * Resizes the body to its preferred size by animating the height.\n   */\n  resizeBody() {\n    this.animateToggleCollapse().done(() => {\n      if (this.bodyAnimating) {\n        // Another animation has been started in the mean time -> ignore done event\n        return;\n      }\n      if (this.collapsed) {\n        this.body.remove();\n      }\n      this.invalidateLayoutTree();\n    });\n  }\n\n  /**\n   * @param {object} [options]\n   * @returns {Promise}\n   */\n  animateToggleCollapse(options) {\n    let currentSize = graphics.cssSize(this.body.$container);\n    let currentMargins = graphics.margins(this.body.$container);\n    let currentPaddings = graphics.paddings(this.body.$container);\n    let targetHeight, targetMargins, targetPaddings;\n\n    if (this.collapsed) {\n      // Collapsing\n      // Set target values to 0 when collapsing\n      targetHeight = 0;\n      targetMargins = new Insets();\n      targetPaddings = new Insets();\n    } else {\n      // Expanding\n      // Expand to preferred size of the body\n      targetHeight = this.body.htmlComp.prefSize({\n        widthHint: currentSize.width\n      }).height;\n\n      // Make sure body is layouted correctly before starting the animation (with the target size)\n      // Use setSize to explicitly call its layout (this might even be necessary during the animation, see GroupLayout.invalidate)\n      this.body.htmlComp.setSize(new Dimension(this.body.$container.outerWidth(), targetHeight));\n\n      if (this.bodyAnimating) {\n        // The group may be expanded while being collapsed or vice verca.\n        // In that case, use the current values of the inline style as starting values\n\n        // Clear current insets to read target insets from CSS anew\n        this.body.$container\n          .cssMarginY('')\n          .cssPaddingY('');\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      } else {\n        // If toggling is not already in progress, start expanding from 0\n        currentSize.height = 0;\n        currentMargins = new Insets();\n        currentPaddings = new Insets();\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      }\n    }\n\n    this.bodyAnimating = true;\n    if (this.collapsed) {\n      this.$container.addClass('collapsing');\n    }\n    return this.body.$container\n      .stop(true)\n      .cssHeight(currentSize.height)\n      .cssMarginTop(currentMargins.top)\n      .cssMarginBottom(currentMargins.bottom)\n      .cssPaddingTop(currentPaddings.top)\n      .cssPaddingBottom(currentPaddings.bottom)\n      .animate({\n        height: targetHeight,\n        marginTop: targetMargins.top,\n        marginBottom: targetMargins.bottom,\n        paddingTop: targetPaddings.top,\n        paddingBottom: targetPaddings.bottom\n      }, {\n        duration: 350,\n        progress: function() {\n          this.trigger('bodyHeightChange');\n          this.revalidateLayoutTree();\n        }.bind(this),\n        complete: function() {\n          this.bodyAnimating = false;\n          if (this.body.rendered) {\n            // Remove inline styles when finished\n            this.body.$container.cssMarginY('');\n            this.body.$container.cssPaddingY('');\n          }\n          if (this.rendered) {\n            this.$container.removeClass('collapsing');\n          }\n          this.trigger('bodyHeightChangeDone');\n        }.bind(this)\n      })\n      .promise();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}