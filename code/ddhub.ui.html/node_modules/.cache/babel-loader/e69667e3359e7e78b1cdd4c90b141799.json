{"ast":null,"code":"/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormFieldLayout } from '../../../index';\nimport $ from 'jquery';\nexport default class BrowserFieldLayout extends FormFieldLayout {\n  constructor(browserField) {\n    super(browserField);\n    this.browserField = browserField;\n  }\n  preferredLayoutSize($container, options) {\n    let prefSize = super.preferredLayoutSize($container, options);\n    if (this._isIFrameReadable()) {\n      prefSize.height = this.browserField.$field.contents().height() +\n      // get height of content\n      this.browserField.iframe.htmlComp.insets().vertical() +\n      // add insets of iframe\n      this.browserField.htmlComp.insets().vertical(); // add insets of browser field\n    }\n\n    return prefSize;\n  }\n  _isIFrameReadable() {\n    let field = this.browserField;\n    let perms = field.sandboxPermissions;\n    if (field.sandboxEnabled && perms && perms.indexOf('allow-same-origin') === -1) {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height.' + ' Reason: sandbox is enabled or \"allow-same-origin\" is not set');\n      return false;\n    }\n    try {\n      field.$field[0].contentWindow.document;\n    } catch (e) {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height. Reason: denied by browser');\n      return false;\n    }\n    if (field.$field.contents().attr('readyState') === 'loading') {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height. Reason: readyState == \"loading\"');\n      return false;\n    }\n    return true;\n  }\n}","map":{"version":3,"names":["FormFieldLayout","$","BrowserFieldLayout","constructor","browserField","preferredLayoutSize","$container","options","prefSize","_isIFrameReadable","height","$field","contents","iframe","htmlComp","insets","vertical","field","perms","sandboxPermissions","sandboxEnabled","indexOf","log","isWarnEnabled","warn","contentWindow","document","e","attr"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/browserfield/BrowserFieldLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormFieldLayout} from '../../../index';\nimport $ from 'jquery';\n\nexport default class BrowserFieldLayout extends FormFieldLayout {\n\n  constructor(browserField) {\n    super(browserField);\n    this.browserField = browserField;\n  }\n\n  preferredLayoutSize($container, options) {\n    let prefSize = super.preferredLayoutSize($container, options);\n    if (this._isIFrameReadable()) {\n      prefSize.height = this.browserField.$field.contents().height() + // get height of content\n        this.browserField.iframe.htmlComp.insets().vertical() + // add insets of iframe\n        this.browserField.htmlComp.insets().vertical(); // add insets of browser field\n    }\n    return prefSize;\n  }\n\n  _isIFrameReadable() {\n    let field = this.browserField;\n    let perms = field.sandboxPermissions;\n    if (field.sandboxEnabled && (perms && perms.indexOf('allow-same-origin') === -1)) {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height.' +\n        ' Reason: sandbox is enabled or \"allow-same-origin\" is not set');\n      return false;\n    }\n    try {\n      field.$field[0].contentWindow.document;\n    } catch (e) {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height. Reason: denied by browser');\n      return false;\n    }\n    if (field.$field.contents().attr('readyState') === 'loading') {\n      $.log.isWarnEnabled() && $.log.warn('Access to IFrame denied, cannot read height. Reason: readyState == \"loading\"');\n      return false;\n    }\n    return true;\n  }\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,eAAe,QAAO,gBAAgB;AAC9C,OAAOC,CAAC,MAAM,QAAQ;AAEtB,eAAe,MAAMC,kBAAkB,SAASF,eAAe,CAAC;EAE9DG,WAAW,CAACC,YAAY,EAAE;IACxB,KAAK,CAACA,YAAY,CAAC;IACnB,IAAI,CAACA,YAAY,GAAGA,YAAY;EAClC;EAEAC,mBAAmB,CAACC,UAAU,EAAEC,OAAO,EAAE;IACvC,IAAIC,QAAQ,GAAG,KAAK,CAACH,mBAAmB,CAACC,UAAU,EAAEC,OAAO,CAAC;IAC7D,IAAI,IAAI,CAACE,iBAAiB,EAAE,EAAE;MAC5BD,QAAQ,CAACE,MAAM,GAAG,IAAI,CAACN,YAAY,CAACO,MAAM,CAACC,QAAQ,EAAE,CAACF,MAAM,EAAE;MAAG;MAC/D,IAAI,CAACN,YAAY,CAACS,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAAG;MACxD,IAAI,CAACZ,YAAY,CAACU,QAAQ,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAAC,CAAC;IACpD;;IACA,OAAOR,QAAQ;EACjB;EAEAC,iBAAiB,GAAG;IAClB,IAAIQ,KAAK,GAAG,IAAI,CAACb,YAAY;IAC7B,IAAIc,KAAK,GAAGD,KAAK,CAACE,kBAAkB;IACpC,IAAIF,KAAK,CAACG,cAAc,IAAKF,KAAK,IAAIA,KAAK,CAACG,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAE,EAAE;MAChFpB,CAAC,CAACqB,GAAG,CAACC,aAAa,EAAE,IAAItB,CAAC,CAACqB,GAAG,CAACE,IAAI,CAAC,8CAA8C,GAChF,+DAA+D,CAAC;MAClE,OAAO,KAAK;IACd;IACA,IAAI;MACFP,KAAK,CAACN,MAAM,CAAC,CAAC,CAAC,CAACc,aAAa,CAACC,QAAQ;IACxC,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV1B,CAAC,CAACqB,GAAG,CAACC,aAAa,EAAE,IAAItB,CAAC,CAACqB,GAAG,CAACE,IAAI,CAAC,wEAAwE,CAAC;MAC7G,OAAO,KAAK;IACd;IACA,IAAIP,KAAK,CAACN,MAAM,CAACC,QAAQ,EAAE,CAACgB,IAAI,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;MAC5D3B,CAAC,CAACqB,GAAG,CAACC,aAAa,EAAE,IAAItB,CAAC,CAACqB,GAAG,CAACE,IAAI,CAAC,8EAA8E,CAAC;MACnH,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;AAEF"},"metadata":{},"sourceType":"module"}