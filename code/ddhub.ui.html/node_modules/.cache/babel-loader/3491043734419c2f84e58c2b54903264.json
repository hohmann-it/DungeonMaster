{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, DesktopNavigation, Dimension, ResponsiveManager, Tree } from '../index';\nexport default class DesktopLayout extends AbstractLayout {\n  constructor(desktop) {\n    super();\n    this.desktop = desktop;\n  }\n  layout($container) {\n    let navigationSize,\n      headerSize,\n      htmlHeader,\n      htmlBench,\n      benchSize,\n      htmlNavigation,\n      animationProps,\n      navigationWidth = 0,\n      headerHeight = 0,\n      desktop = this.desktop,\n      navigation = desktop.navigation,\n      header = desktop.header,\n      bench = desktop.bench,\n      // Animation moves header and bench to the left when navigation gets invisible or moves bench to the right if bench gets invisible (used for mobile)\n      animated = desktop.animateLayoutChange,\n      containerSize = this.containerSize(),\n      fullWidthNavigation = navigation && navigation.htmlComp.layoutData.fullWidth;\n    ResponsiveManager.get().handleResponsive(desktop, $container.width());\n    if (navigation) {\n      navigationWidth = this.calculateNavigationWidth(containerSize);\n      if (desktop.splitter) {\n        desktop.splitter.setPosition(navigationWidth);\n      }\n      if (desktop.navigationVisible) {\n        htmlNavigation = navigation.htmlComp;\n        navigationSize = new Dimension(navigationWidth, containerSize.height).subtract(htmlNavigation.margins());\n        htmlNavigation.setSize(navigationSize);\n      }\n    }\n    if (header) {\n      htmlHeader = header.htmlComp;\n      headerHeight = htmlHeader.$comp.outerHeight(true);\n      if (desktop.headerVisible) {\n        // positioning\n        if (!animated) {\n          header.$container.cssLeft(navigationWidth);\n        }\n\n        // sizing\n        headerSize = new Dimension(containerSize.width - navigationWidth, headerHeight).subtract(htmlHeader.margins());\n        if (!animated || fullWidthNavigation) {\n          htmlHeader.setSize(headerSize);\n        }\n        if (animated) {\n          animationProps = {\n            left: containerSize.width\n          };\n          prepareAnimate(animationProps, htmlHeader, headerSize);\n          this._animate(animationProps, htmlHeader, headerSize);\n        }\n      }\n    }\n    if (bench) {\n      htmlBench = bench.htmlComp;\n      if (desktop.benchVisible) {\n        // positioning\n        bench.$container.cssTop(headerHeight);\n        if (!animated) {\n          bench.$container.cssLeft(navigationWidth);\n        }\n\n        // sizing\n        benchSize = new Dimension(containerSize.width - navigationWidth, containerSize.height - headerHeight).subtract(htmlBench.margins());\n        if (!animated || fullWidthNavigation) {\n          let oldSize = htmlBench.size();\n          htmlBench.setSize(benchSize);\n          if (!htmlBench.size().equals(oldSize)) {\n            desktop.repositionTooltips();\n          }\n        }\n        if (animated) {\n          animationProps = {\n            left: containerSize.width\n          };\n          prepareAnimate(animationProps, htmlBench, benchSize);\n          this._animate(animationProps, htmlBench, benchSize);\n        }\n      }\n    }\n    function prepareAnimate(animationProps, htmlComp, size) {\n      if (fullWidthNavigation) {\n        // Slide bench in from right to left, don't resize\n        htmlComp.$comp.cssLeft(containerSize.width);\n      } else {\n        // Resize bench\n        animationProps.width = size.width;\n        // Layout once before animation begins\n        // Resizing on every step/progress would result in poor performance (e.g. when a form is open in the bench)\n        htmlComp.setSize(size);\n      }\n      // Move to new point (=0, if navigation is invisible)\n      animationProps.left = navigationWidth;\n    }\n  }\n\n  /**\n   * Used to animate bench and header\n   */\n  _animate(animationProps, htmlComp, size) {\n    // If animation is already running, stop the existing and don't use timeout to schedule the new to have a smoother transition\n    // Concurrent animation of the same element is bad because jquery messes up the overflow style\n    if (htmlComp.$comp.is(':animated')) {\n      animate.call(this);\n    } else {\n      // schedule animation to have a smoother start\n      setTimeout(animate.bind(this));\n    }\n    function animate() {\n      htmlComp.$comp.stop().animate(animationProps, {\n        complete: this.desktop.onLayoutAnimationComplete.bind(this.desktop),\n        step: this.desktop.onLayoutAnimationStep.bind(this.desktop)\n      });\n    }\n  }\n  containerSize() {\n    let htmlContainer = this.desktop.htmlComp,\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      });\n    return containerSize.subtract(htmlContainer.insets());\n  }\n  calculateNavigationWidth(containerSize) {\n    if (!this.desktop.navigationVisible) {\n      return 0;\n    }\n    let navigationLayoutData = this.desktop.navigation.htmlComp.layoutData;\n    if (navigationLayoutData.fullWidth) {\n      return containerSize.width;\n    }\n    let splitterPosition = 0;\n    if (this.desktop.splitter) {\n      splitterPosition = this.desktop.splitter.position;\n    }\n    let outline = this.desktop.outline;\n    if (!this.desktop.resizing && outline && outline.toggleBreadcrumbStyleEnabled) {\n      // If toggleBreadcrumbStyleEnabled is true, BREADCRUMB_STYLE_WIDTH triggers the toggling between the two modes.\n      // This code ensures this rule is never violated (necessary if mode is toggled programmatically rather than by the user)\n      if (outline.displayStyle === Tree.DisplayStyle.BREADCRUMB) {\n        splitterPosition = DesktopNavigation.BREADCRUMB_STYLE_WIDTH;\n      } else if (Math.floor(splitterPosition) <= DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n        splitterPosition = DesktopNavigation.DEFAULT_STYLE_WIDTH;\n      }\n    }\n    return Math.max(splitterPosition, DesktopNavigation.MIN_WIDTH); // ensure newSize is not negative\n  }\n}","map":{"version":3,"names":["AbstractLayout","DesktopNavigation","Dimension","ResponsiveManager","Tree","DesktopLayout","constructor","desktop","layout","$container","navigationSize","headerSize","htmlHeader","htmlBench","benchSize","htmlNavigation","animationProps","navigationWidth","headerHeight","navigation","header","bench","animated","animateLayoutChange","containerSize","fullWidthNavigation","htmlComp","layoutData","fullWidth","get","handleResponsive","width","calculateNavigationWidth","splitter","setPosition","navigationVisible","height","subtract","margins","setSize","$comp","outerHeight","headerVisible","cssLeft","left","prepareAnimate","_animate","benchVisible","cssTop","oldSize","size","equals","repositionTooltips","is","animate","call","setTimeout","bind","stop","complete","onLayoutAnimationComplete","step","onLayoutAnimationStep","htmlContainer","availableSize","exact","insets","navigationLayoutData","splitterPosition","position","outline","resizing","toggleBreadcrumbStyleEnabled","displayStyle","DisplayStyle","BREADCRUMB","BREADCRUMB_STYLE_WIDTH","Math","floor","DEFAULT_STYLE_WIDTH","max","MIN_WIDTH"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/DesktopLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, DesktopNavigation, Dimension, ResponsiveManager, Tree} from '../index';\n\nexport default class DesktopLayout extends AbstractLayout {\n\n  constructor(desktop) {\n    super();\n    this.desktop = desktop;\n  }\n\n  layout($container) {\n    let navigationSize, headerSize, htmlHeader, htmlBench, benchSize, htmlNavigation, animationProps,\n      navigationWidth = 0,\n      headerHeight = 0,\n      desktop = this.desktop,\n      navigation = desktop.navigation,\n      header = desktop.header,\n      bench = desktop.bench,\n      // Animation moves header and bench to the left when navigation gets invisible or moves bench to the right if bench gets invisible (used for mobile)\n      animated = desktop.animateLayoutChange,\n      containerSize = this.containerSize(),\n      fullWidthNavigation = navigation && navigation.htmlComp.layoutData.fullWidth;\n\n    ResponsiveManager.get().handleResponsive(desktop, $container.width());\n\n    if (navigation) {\n      navigationWidth = this.calculateNavigationWidth(containerSize);\n      if (desktop.splitter) {\n        desktop.splitter.setPosition(navigationWidth);\n      }\n\n      if (desktop.navigationVisible) {\n        htmlNavigation = navigation.htmlComp;\n        navigationSize = new Dimension(navigationWidth, containerSize.height)\n          .subtract(htmlNavigation.margins());\n        htmlNavigation.setSize(navigationSize);\n      }\n    }\n\n    if (header) {\n      htmlHeader = header.htmlComp;\n      headerHeight = htmlHeader.$comp.outerHeight(true);\n      if (desktop.headerVisible) {\n        // positioning\n        if (!animated) {\n          header.$container.cssLeft(navigationWidth);\n        }\n\n        // sizing\n        headerSize = new Dimension(containerSize.width - navigationWidth, headerHeight)\n          .subtract(htmlHeader.margins());\n        if (!animated || fullWidthNavigation) {\n          htmlHeader.setSize(headerSize);\n        }\n\n        if (animated) {\n          animationProps = {\n            left: containerSize.width\n          };\n          prepareAnimate(animationProps, htmlHeader, headerSize);\n          this._animate(animationProps, htmlHeader, headerSize);\n        }\n      }\n    }\n\n    if (bench) {\n      htmlBench = bench.htmlComp;\n      if (desktop.benchVisible) {\n        // positioning\n        bench.$container.cssTop(headerHeight);\n        if (!animated) {\n          bench.$container.cssLeft(navigationWidth);\n        }\n\n        // sizing\n        benchSize = new Dimension(containerSize.width - navigationWidth, containerSize.height - headerHeight)\n          .subtract(htmlBench.margins());\n        if (!animated || fullWidthNavigation) {\n          let oldSize = htmlBench.size();\n          htmlBench.setSize(benchSize);\n          if (!htmlBench.size().equals(oldSize)) {\n            desktop.repositionTooltips();\n          }\n        }\n\n        if (animated) {\n          animationProps = {\n            left: containerSize.width\n          };\n          prepareAnimate(animationProps, htmlBench, benchSize);\n          this._animate(animationProps, htmlBench, benchSize);\n        }\n      }\n    }\n\n    function prepareAnimate(animationProps, htmlComp, size) {\n      if (fullWidthNavigation) {\n        // Slide bench in from right to left, don't resize\n        htmlComp.$comp.cssLeft(containerSize.width);\n      } else {\n        // Resize bench\n        animationProps.width = size.width;\n        // Layout once before animation begins\n        // Resizing on every step/progress would result in poor performance (e.g. when a form is open in the bench)\n        htmlComp.setSize(size);\n      }\n      // Move to new point (=0, if navigation is invisible)\n      animationProps.left = navigationWidth;\n    }\n  }\n\n  /**\n   * Used to animate bench and header\n   */\n  _animate(animationProps, htmlComp, size) {\n    // If animation is already running, stop the existing and don't use timeout to schedule the new to have a smoother transition\n    // Concurrent animation of the same element is bad because jquery messes up the overflow style\n    if (htmlComp.$comp.is(':animated')) {\n      animate.call(this);\n    } else {\n      // schedule animation to have a smoother start\n      setTimeout(animate.bind(this));\n    }\n\n    function animate() {\n      htmlComp.$comp.stop().animate(animationProps, {\n        complete: this.desktop.onLayoutAnimationComplete.bind(this.desktop),\n        step: this.desktop.onLayoutAnimationStep.bind(this.desktop)\n      });\n    }\n  }\n\n  containerSize() {\n    let htmlContainer = this.desktop.htmlComp,\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      });\n\n    return containerSize.subtract(htmlContainer.insets());\n  }\n\n  calculateNavigationWidth(containerSize) {\n    if (!this.desktop.navigationVisible) {\n      return 0;\n    }\n    let navigationLayoutData = this.desktop.navigation.htmlComp.layoutData;\n    if (navigationLayoutData.fullWidth) {\n      return containerSize.width;\n    }\n    let splitterPosition = 0;\n    if (this.desktop.splitter) {\n      splitterPosition = this.desktop.splitter.position;\n    }\n    let outline = this.desktop.outline;\n    if (!this.desktop.resizing && outline && outline.toggleBreadcrumbStyleEnabled) {\n      // If toggleBreadcrumbStyleEnabled is true, BREADCRUMB_STYLE_WIDTH triggers the toggling between the two modes.\n      // This code ensures this rule is never violated (necessary if mode is toggled programmatically rather than by the user)\n      if (outline.displayStyle === Tree.DisplayStyle.BREADCRUMB) {\n        splitterPosition = DesktopNavigation.BREADCRUMB_STYLE_WIDTH;\n      } else if (Math.floor(splitterPosition) <= DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n        splitterPosition = DesktopNavigation.DEFAULT_STYLE_WIDTH;\n      }\n    }\n    return Math.max(splitterPosition, DesktopNavigation.MIN_WIDTH); // ensure newSize is not negative\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}