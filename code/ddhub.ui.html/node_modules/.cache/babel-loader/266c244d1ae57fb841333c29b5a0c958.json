{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { strings, TableFilter } from '../index';\nexport default class TextTableFilter extends TableFilter {\n  /**\n   * @param {function} [textSupplier] - An optional function that extracts the text from\n   *          a table row. The default expects the row object to have a \"lookupRow\"\n   *          property and returns the \"text\" property.\n   */\n  constructor(textSupplier) {\n    super();\n    this.acceptedText = null;\n    this.textSupplier = textSupplier || (row => row.lookupRow && row.lookupRow.text);\n    this.active = true;\n    this.alwaysAcceptedRowIds = [];\n  }\n  accept(row) {\n    if (!this.active || strings.empty(this.acceptedText) || this.alwaysAcceptedRowIds.indexOf(row.id) !== -1) {\n      return true;\n    }\n    let text = this.textSupplier(row);\n    if (strings.empty(text)) {\n      return false;\n    }\n    return strings.contains(text.toLowerCase(), this.acceptedText.toLowerCase());\n  }\n  setAcceptedText(acceptedText) {\n    this.acceptedText = acceptedText;\n  }\n  setActive(active) {\n    this.active = active;\n  }\n  setAlwaysAcceptedRowIds() {\n    for (var _len = arguments.length, rowIds = new Array(_len), _key = 0; _key < _len; _key++) {\n      rowIds[_key] = arguments[_key];\n    }\n    this.alwaysAcceptedRowIds = rowIds;\n  }\n}","map":{"version":3,"names":["strings","TableFilter","TextTableFilter","constructor","textSupplier","acceptedText","row","lookupRow","text","active","alwaysAcceptedRowIds","accept","empty","indexOf","id","contains","toLowerCase","setAcceptedText","setActive","setAlwaysAcceptedRowIds","rowIds"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TextTableFilter.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {strings, TableFilter} from '../index';\n\nexport default class TextTableFilter extends TableFilter {\n\n  /**\n   * @param {function} [textSupplier] - An optional function that extracts the text from\n   *          a table row. The default expects the row object to have a \"lookupRow\"\n   *          property and returns the \"text\" property.\n   */\n  constructor(textSupplier) {\n    super();\n    this.acceptedText = null;\n    this.textSupplier = textSupplier || (row => row.lookupRow && row.lookupRow.text);\n    this.active = true;\n    this.alwaysAcceptedRowIds = [];\n  }\n\n  accept(row) {\n    if (!this.active || strings.empty(this.acceptedText) || this.alwaysAcceptedRowIds.indexOf(row.id) !== -1) {\n      return true;\n    }\n    let text = this.textSupplier(row);\n    if (strings.empty(text)) {\n      return false;\n    }\n    return strings.contains(text.toLowerCase(), this.acceptedText.toLowerCase());\n  }\n\n  setAcceptedText(acceptedText) {\n    this.acceptedText = acceptedText;\n  }\n\n  setActive(active) {\n    this.active = active;\n  }\n\n  setAlwaysAcceptedRowIds(...rowIds) {\n    this.alwaysAcceptedRowIds = rowIds;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAO,EAAEC,WAAW,QAAO,UAAU;AAE7C,eAAe,MAAMC,eAAe,SAASD,WAAW,CAAC;EAEvD;AACF;AACA;AACA;AACA;EACEE,WAAW,CAACC,YAAY,EAAE;IACxB,KAAK,EAAE;IACP,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACD,YAAY,GAAGA,YAAY,KAAKE,GAAG,IAAIA,GAAG,CAACC,SAAS,IAAID,GAAG,CAACC,SAAS,CAACC,IAAI,CAAC;IAChF,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,oBAAoB,GAAG,EAAE;EAChC;EAEAC,MAAM,CAACL,GAAG,EAAE;IACV,IAAI,CAAC,IAAI,CAACG,MAAM,IAAIT,OAAO,CAACY,KAAK,CAAC,IAAI,CAACP,YAAY,CAAC,IAAI,IAAI,CAACK,oBAAoB,CAACG,OAAO,CAACP,GAAG,CAACQ,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;MACxG,OAAO,IAAI;IACb;IACA,IAAIN,IAAI,GAAG,IAAI,CAACJ,YAAY,CAACE,GAAG,CAAC;IACjC,IAAIN,OAAO,CAACY,KAAK,CAACJ,IAAI,CAAC,EAAE;MACvB,OAAO,KAAK;IACd;IACA,OAAOR,OAAO,CAACe,QAAQ,CAACP,IAAI,CAACQ,WAAW,EAAE,EAAE,IAAI,CAACX,YAAY,CAACW,WAAW,EAAE,CAAC;EAC9E;EAEAC,eAAe,CAACZ,YAAY,EAAE;IAC5B,IAAI,CAACA,YAAY,GAAGA,YAAY;EAClC;EAEAa,SAAS,CAACT,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAU,uBAAuB,GAAY;IAAA,kCAARC,MAAM;MAANA,MAAM;IAAA;IAC/B,IAAI,CAACV,oBAAoB,GAAGU,MAAM;EACpC;AACF"},"metadata":{},"sourceType":"module"}