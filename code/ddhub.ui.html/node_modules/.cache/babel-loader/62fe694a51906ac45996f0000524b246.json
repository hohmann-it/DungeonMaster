{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { EventDelegator, FormField } from '../../../index';\nexport default class TileField extends FormField {\n  constructor() {\n    super();\n    this.eventDelegator = null;\n    this._addWidgetProperties(['tileGrid']);\n  }\n  _init(model) {\n    super._init(model);\n    this._setTileGrid(this.tileGrid);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    // Loading is delegated to tileGrid\n    return null;\n  }\n  _render() {\n    this.addContainer(this.$parent, 'tile-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addStatus();\n    if (this.tileGrid) {\n      this._renderTileGrid();\n    }\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderDropType();\n  }\n  setTileGrid(tileGrid) {\n    this.setProperty('tileGrid', tileGrid);\n  }\n  _setTileGrid(tileGrid) {\n    if (this.tileGrid) {\n      if (this.eventDelegator) {\n        this.eventDelegator.destroy();\n        this.eventDelegator = null;\n      }\n    }\n    this._setProperty('tileGrid', tileGrid);\n    if (tileGrid) {\n      this.eventDelegator = EventDelegator.create(this, tileGrid, {\n        delegateProperties: ['loading']\n      });\n      tileGrid.setLoading(this.loading);\n      tileGrid.setScrollTop(this.scrollTop);\n    }\n  }\n  _renderTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.render();\n    this.addField(this.tileGrid.$container);\n    this.invalidateLayoutTree();\n  }\n  _removeTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.remove();\n    this._removeField();\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getDelegateScrollable() {\n    return this.tileGrid;\n  }\n}","map":{"version":3,"names":["EventDelegator","FormField","TileField","constructor","eventDelegator","_addWidgetProperties","_init","model","_setTileGrid","tileGrid","_createLoadingSupport","_render","addContainer","$parent","addLabel","addMandatoryIndicator","addStatus","_renderTileGrid","_renderProperties","_renderDropType","setTileGrid","setProperty","destroy","_setProperty","create","delegateProperties","setLoading","loading","setScrollTop","scrollTop","render","addField","$container","invalidateLayoutTree","_removeTileGrid","remove","_removeField","getDelegateScrollable"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/tilefield/TileField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {EventDelegator, FormField} from '../../../index';\n\nexport default class TileField extends FormField {\n\n  constructor() {\n    super();\n    this.eventDelegator = null;\n    this._addWidgetProperties(['tileGrid']);\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this._setTileGrid(this.tileGrid);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    // Loading is delegated to tileGrid\n    return null;\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'tile-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addStatus();\n    if (this.tileGrid) {\n      this._renderTileGrid();\n    }\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderDropType();\n  }\n\n  setTileGrid(tileGrid) {\n    this.setProperty('tileGrid', tileGrid);\n  }\n\n  _setTileGrid(tileGrid) {\n    if (this.tileGrid) {\n      if (this.eventDelegator) {\n        this.eventDelegator.destroy();\n        this.eventDelegator = null;\n      }\n    }\n    this._setProperty('tileGrid', tileGrid);\n    if (tileGrid) {\n      this.eventDelegator = EventDelegator.create(this, tileGrid, {\n        delegateProperties: ['loading']\n      });\n      tileGrid.setLoading(this.loading);\n      tileGrid.setScrollTop(this.scrollTop);\n    }\n  }\n\n  _renderTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.render();\n    this.addField(this.tileGrid.$container);\n    this.invalidateLayoutTree();\n  }\n\n  _removeTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.remove();\n    this._removeField();\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getDelegateScrollable() {\n    return this.tileGrid;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAc,EAAEC,SAAS,QAAO,gBAAgB;AAExD,eAAe,MAAMC,SAAS,SAASD,SAAS,CAAC;EAE/CE,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,oBAAoB,CAAC,CAAC,UAAU,CAAC,CAAC;EACzC;EAEAC,KAAK,CAACC,KAAK,EAAE;IACX,KAAK,CAACD,KAAK,CAACC,KAAK,CAAC;IAElB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,QAAQ,CAAC;EAClC;;EAEA;AACF;AACA;EACEC,qBAAqB,GAAG;IACtB;IACA,OAAO,IAAI;EACb;EAEAC,OAAO,GAAG;IACR,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,OAAO,EAAE,YAAY,CAAC;IAC7C,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,IAAI,CAACP,QAAQ,EAAE;MACjB,IAAI,CAACQ,eAAe,EAAE;IACxB;EACF;EAEAC,iBAAiB,GAAG;IAClB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAC,WAAW,CAACX,QAAQ,EAAE;IACpB,IAAI,CAACY,WAAW,CAAC,UAAU,EAAEZ,QAAQ,CAAC;EACxC;EAEAD,YAAY,CAACC,QAAQ,EAAE;IACrB,IAAI,IAAI,CAACA,QAAQ,EAAE;MACjB,IAAI,IAAI,CAACL,cAAc,EAAE;QACvB,IAAI,CAACA,cAAc,CAACkB,OAAO,EAAE;QAC7B,IAAI,CAAClB,cAAc,GAAG,IAAI;MAC5B;IACF;IACA,IAAI,CAACmB,YAAY,CAAC,UAAU,EAAEd,QAAQ,CAAC;IACvC,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACL,cAAc,GAAGJ,cAAc,CAACwB,MAAM,CAAC,IAAI,EAAEf,QAAQ,EAAE;QAC1DgB,kBAAkB,EAAE,CAAC,SAAS;MAChC,CAAC,CAAC;MACFhB,QAAQ,CAACiB,UAAU,CAAC,IAAI,CAACC,OAAO,CAAC;MACjClB,QAAQ,CAACmB,YAAY,CAAC,IAAI,CAACC,SAAS,CAAC;IACvC;EACF;EAEAZ,eAAe,GAAG;IAChB,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE;MAClB;IACF;IACA,IAAI,CAACA,QAAQ,CAACqB,MAAM,EAAE;IACtB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACtB,QAAQ,CAACuB,UAAU,CAAC;IACvC,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAC,eAAe,GAAG;IAChB,IAAI,CAAC,IAAI,CAACzB,QAAQ,EAAE;MAClB;IACF;IACA,IAAI,CAACA,QAAQ,CAAC0B,MAAM,EAAE;IACtB,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACH,oBAAoB,EAAE;EAC7B;;EAEA;AACF;AACA;EACEI,qBAAqB,GAAG;IACtB,OAAO,IAAI,CAAC5B,QAAQ;EACtB;AACF"},"metadata":{},"sourceType":"module"}