{"ast":null,"code":"/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { scout, strings } from '../../index';\nexport default class CompactLineBlock {\n  constructor(text, icon) {\n    this.text = '';\n    this.icon = '';\n    this._processedText = null;\n    this.encodeHtmlEnabled = true;\n    this.nlToBrEnabled = false;\n    this.htmlToPlainTextEnabled = false;\n    this.setText(text);\n    this.setIcon(icon);\n  }\n\n  /**\n   * @param {string} text\n   */\n  setText(text) {\n    this.text = scout.nvl(text, '');\n  }\n  processedText() {\n    if (this._processedText == null) {\n      this._processedText = this.processText();\n    }\n    return this._processedText;\n  }\n\n  /**\n   * @param {string} icon\n   */\n  setIcon(icon) {\n    this.icon = scout.nvl(icon, '');\n  }\n\n  /**\n   * Has no effect if htmlToPlainTextEnabled is true.\n   * @param {boolean}\n   */\n  setEncodeHtmlEnabled(encodeHtmlEnabled) {\n    if (this.encodeHtmlEnabled !== encodeHtmlEnabled) {\n      this._processedText = null;\n    }\n    this.encodeHtmlEnabled = encodeHtmlEnabled;\n  }\n\n  /**\n   * @param {boolean} nlToBrEnabled\n   */\n  setNlToBrEnabled(nlToBrEnabled) {\n    if (this.nlToBrEnabled !== nlToBrEnabled) {\n      this._processedText = null;\n    }\n    this.nlToBrEnabled = nlToBrEnabled;\n  }\n\n  /**\n   * Wins over encodeHtmlEnabled\n   * @param {boolean} htmlToPlainTextEnabled\n   */\n  setHtmlToPlainTextEnabled(htmlToPlainTextEnabled) {\n    if (this.htmlToPlainTextEnabled !== htmlToPlainTextEnabled) {\n      this._processedText = null;\n    }\n    this.htmlToPlainTextEnabled = htmlToPlainTextEnabled;\n  }\n  processText() {\n    let text = this.text;\n    if (this.htmlToPlainTextEnabled) {\n      if (this.nlToBrEnabled) {\n        // Preserve new lines, toPlainText would replace \\n with \" \"\n        text = strings.nl2br(text, false);\n      }\n      text = strings.plainText(text);\n    } else if (this.encodeHtmlEnabled) {\n      text = strings.encode(text);\n    }\n    if (this.nlToBrEnabled) {\n      text = strings.nl2br(text, false);\n    }\n    return text;\n  }\n  build() {\n    if (this.icon) {\n      return $('<div>').appendIcon(this.icon).addClass(this.processedText() ? ' with-text' : '').parent()[0].innerHTML + this.processedText();\n    }\n    return this.processedText();\n  }\n}","map":{"version":3,"names":["scout","strings","CompactLineBlock","constructor","text","icon","_processedText","encodeHtmlEnabled","nlToBrEnabled","htmlToPlainTextEnabled","setText","setIcon","nvl","processedText","processText","setEncodeHtmlEnabled","setNlToBrEnabled","setHtmlToPlainTextEnabled","nl2br","plainText","encode","build","$","appendIcon","addClass","parent","innerHTML"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/columns/CompactLineBlock.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {scout, strings} from '../../index';\n\nexport default class CompactLineBlock {\n\n  constructor(text, icon) {\n    this.text = '';\n    this.icon = '';\n    this._processedText = null;\n    this.encodeHtmlEnabled = true;\n    this.nlToBrEnabled = false;\n    this.htmlToPlainTextEnabled = false;\n    this.setText(text);\n    this.setIcon(icon);\n  }\n\n  /**\n   * @param {string} text\n   */\n  setText(text) {\n    this.text = scout.nvl(text, '');\n  }\n\n  processedText() {\n    if (this._processedText == null) {\n      this._processedText = this.processText();\n    }\n    return this._processedText;\n  }\n\n  /**\n   * @param {string} icon\n   */\n  setIcon(icon) {\n    this.icon = scout.nvl(icon, '');\n  }\n\n  /**\n   * Has no effect if htmlToPlainTextEnabled is true.\n   * @param {boolean}\n   */\n  setEncodeHtmlEnabled(encodeHtmlEnabled) {\n    if (this.encodeHtmlEnabled !== encodeHtmlEnabled) {\n      this._processedText = null;\n    }\n    this.encodeHtmlEnabled = encodeHtmlEnabled;\n  }\n\n  /**\n   * @param {boolean} nlToBrEnabled\n   */\n  setNlToBrEnabled(nlToBrEnabled) {\n    if (this.nlToBrEnabled !== nlToBrEnabled) {\n      this._processedText = null;\n    }\n    this.nlToBrEnabled = nlToBrEnabled;\n  }\n\n  /**\n   * Wins over encodeHtmlEnabled\n   * @param {boolean} htmlToPlainTextEnabled\n   */\n  setHtmlToPlainTextEnabled(htmlToPlainTextEnabled) {\n    if (this.htmlToPlainTextEnabled !== htmlToPlainTextEnabled) {\n      this._processedText = null;\n    }\n    this.htmlToPlainTextEnabled = htmlToPlainTextEnabled;\n  }\n\n  processText() {\n    let text = this.text;\n    if (this.htmlToPlainTextEnabled) {\n      if (this.nlToBrEnabled) {\n        // Preserve new lines, toPlainText would replace \\n with \" \"\n        text = strings.nl2br(text, false);\n      }\n      text = strings.plainText(text);\n    } else if (this.encodeHtmlEnabled) {\n      text = strings.encode(text);\n    }\n    if (this.nlToBrEnabled) {\n      text = strings.nl2br(text, false);\n    }\n    return text;\n  }\n\n  build() {\n    if (this.icon) {\n      return $('<div>').appendIcon(this.icon).addClass(this.processedText() ? ' with-text' : '').parent()[0].innerHTML + this.processedText();\n    }\n    return this.processedText();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}