{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Key, keys, KeyStroke, scout } from '../index';\n\n/**\n * Keystroke to move the cursor into filter field.\n *\n * Hint: This keystroke is not implemented as RangeKeyStroke.js because:\n *       a) the accepted keys are not rendered on F1, but a condensed 'a-z' instead;\n *       b) there is no need to evaluate a concrete key's propagation status when being rendered (because of (a))\n *\n */\nexport default class FocusFilterFieldKeyStroke extends KeyStroke {\n  constructor(field) {\n    super();\n    this.field = field;\n    this.renderingHints.$drawingArea = ($drawingArea, event) => event._$filterInput;\n    this.virtualKeyStrokeWhich = 'a-Z;a-z;0-9';\n    this.preventDefault = false; // false so that the key is inserted into the search field.\n    this.keyStrokeMode = KeyStroke.Mode.DOWN;\n    this.stopPropagation = true;\n    this.inheritAccessibility = false;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _accept(event) {\n    if (!this._isKeyStrokeInRange(event)) {\n      return false;\n    }\n    let $filterInput = this.field.$container.data('filter-field');\n    if (!$filterInput || !$filterInput.length || !$filterInput.is(':focusable')) {\n      return false;\n    }\n    let $activeElement = this.field.$container.activeElement();\n    if ($activeElement[0] !== $filterInput[0]) {\n      event._$filterInput = $filterInput;\n      this._isKeyStrokeInRange(event);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  handle(event) {\n    let $filterInput = event._$filterInput;\n\n    // Focus the field and move cursor to the end.\n    if (this.field.session.focusManager.requestFocus($filterInput)) {\n      $filterInput.focus();\n      let length = scout.nvl($filterInput.val(), '').length;\n      $filterInput[0].setSelectionRange(length, length);\n    }\n  }\n\n  /**\n   * Returns a virtual key to represent this keystroke.\n   */\n  keys() {\n    return [new Key(this, this.virtualKeyStrokeWhich)];\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  renderKeyBox($drawingArea, event) {\n    let $filterInput = event._$filterInput;\n    let filterInputPosition = $filterInput.position();\n    let left = filterInputPosition.left + $filterInput.cssMarginLeft() + 4;\n    $filterInput.beforeDiv('key-box char', 'a - z').toggleClass('disabled', !this.enabledByFilter).cssLeft(left);\n    return $filterInput.parent();\n  }\n  _isKeyStrokeInRange(event) {\n    if (event.which === this.virtualKeyStrokeWhich) {\n      return true; // the event has this keystroke's 'virtual which part' in case it is rendered.\n    }\n\n    if (event.altKey | event.ctrlKey) {\n      // NOSONAR\n      return false;\n    }\n    return event.which >= keys.a && event.which <= keys.z || event.which >= keys.A && event.which <= keys.Z || event.which >= keys['0'] && event.which <= keys['9'] || event.which >= keys.NUMPAD_0 && event.which <= keys.NUMPAD_9;\n  }\n}","map":{"version":3,"names":["Key","keys","KeyStroke","scout","FocusFilterFieldKeyStroke","constructor","field","renderingHints","$drawingArea","event","_$filterInput","virtualKeyStrokeWhich","preventDefault","keyStrokeMode","Mode","DOWN","stopPropagation","inheritAccessibility","_accept","_isKeyStrokeInRange","$filterInput","$container","data","length","is","$activeElement","activeElement","handle","session","focusManager","requestFocus","focus","nvl","val","setSelectionRange","renderKeyBox","filterInputPosition","position","left","cssMarginLeft","beforeDiv","toggleClass","enabledByFilter","cssLeft","parent","which","altKey","ctrlKey","a","z","A","Z","NUMPAD_0","NUMPAD_9"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/keystroke/FocusFilterFieldKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Key, keys, KeyStroke, scout} from '../index';\n\n/**\n * Keystroke to move the cursor into filter field.\n *\n * Hint: This keystroke is not implemented as RangeKeyStroke.js because:\n *       a) the accepted keys are not rendered on F1, but a condensed 'a-z' instead;\n *       b) there is no need to evaluate a concrete key's propagation status when being rendered (because of (a))\n *\n */\nexport default class FocusFilterFieldKeyStroke extends KeyStroke {\n\n  constructor(field) {\n    super();\n    this.field = field;\n\n    this.renderingHints.$drawingArea = ($drawingArea, event) => event._$filterInput;\n\n    this.virtualKeyStrokeWhich = 'a-Z;a-z;0-9';\n    this.preventDefault = false; // false so that the key is inserted into the search field.\n    this.keyStrokeMode = KeyStroke.Mode.DOWN;\n    this.stopPropagation = true;\n    this.inheritAccessibility = false;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _accept(event) {\n    if (!this._isKeyStrokeInRange(event)) {\n      return false;\n    }\n\n    let $filterInput = this.field.$container.data('filter-field');\n    if (!$filterInput || !$filterInput.length || !$filterInput.is(':focusable')) {\n      return false;\n    }\n\n    let $activeElement = this.field.$container.activeElement();\n    if ($activeElement[0] !== $filterInput[0]) {\n      event._$filterInput = $filterInput;\n      this._isKeyStrokeInRange(event);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  handle(event) {\n    let $filterInput = event._$filterInput;\n\n    // Focus the field and move cursor to the end.\n    if (this.field.session.focusManager.requestFocus($filterInput)) {\n      $filterInput.focus();\n\n      let length = scout.nvl($filterInput.val(), '').length;\n      $filterInput[0].setSelectionRange(length, length);\n    }\n  }\n\n  /**\n   * Returns a virtual key to represent this keystroke.\n   */\n  keys() {\n    return [new Key(this, this.virtualKeyStrokeWhich)];\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  renderKeyBox($drawingArea, event) {\n    let $filterInput = event._$filterInput;\n    let filterInputPosition = $filterInput.position();\n    let left = filterInputPosition.left + $filterInput.cssMarginLeft() + 4;\n    $filterInput.beforeDiv('key-box char', 'a - z')\n      .toggleClass('disabled', !this.enabledByFilter)\n      .cssLeft(left);\n    return $filterInput.parent();\n  }\n\n  _isKeyStrokeInRange(event) {\n    if (event.which === this.virtualKeyStrokeWhich) {\n      return true; // the event has this keystroke's 'virtual which part' in case it is rendered.\n    }\n\n    if (event.altKey | event.ctrlKey) { // NOSONAR\n      return false;\n    }\n    return (event.which >= keys.a && event.which <= keys.z) ||\n      (event.which >= keys.A && event.which <= keys.Z) ||\n      (event.which >= keys['0'] && event.which <= keys['9']) ||\n      (event.which >= keys.NUMPAD_0 && event.which <= keys.NUMPAD_9);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}