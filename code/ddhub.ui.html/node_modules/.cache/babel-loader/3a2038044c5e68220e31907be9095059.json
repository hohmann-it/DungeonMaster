{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, KeyStroke } from '../../index';\nexport default class CellEditorTabKeyStroke extends KeyStroke {\n  constructor(popup) {\n    super();\n    this.field = popup;\n    this.which = [keys.TAB];\n    this.shift = undefined; // to tab forward and backward\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    return accepted && !this.field.isCompleteCellEditRequested(); // Make sure events (complete, prepare) don't get sent twice since it will lead to exceptions. This may happen if user presses and holds the tab key.\n  }\n\n  handle(event) {\n    let pos,\n      backwards = event.shiftKey,\n      table = this.field.table,\n      column = this.field.column,\n      row = this.field.row;\n    this.field.completeEdit().then(() => {\n      pos = table.nextEditableCellPos(column, row, backwards);\n      if (pos) {\n        table.prepareCellEdit(pos.column, pos.row);\n      }\n    });\n  }\n}","map":{"version":3,"names":["keys","KeyStroke","CellEditorTabKeyStroke","constructor","popup","field","which","TAB","shift","undefined","_accept","event","accepted","isCompleteCellEditRequested","handle","pos","backwards","shiftKey","table","column","row","completeEdit","then","nextEditableCellPos","prepareCellEdit"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/editor/CellEditorTabKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, KeyStroke} from '../../index';\n\nexport default class CellEditorTabKeyStroke extends KeyStroke {\n\n  constructor(popup) {\n    super();\n    this.field = popup;\n    this.which = [keys.TAB];\n    this.shift = undefined; // to tab forward and backward\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    return accepted && !this.field.isCompleteCellEditRequested(); // Make sure events (complete, prepare) don't get sent twice since it will lead to exceptions. This may happen if user presses and holds the tab key.\n  }\n\n  handle(event) {\n    let pos,\n      backwards = event.shiftKey,\n      table = this.field.table,\n      column = this.field.column,\n      row = this.field.row;\n\n    this.field.completeEdit()\n      .then(() => {\n        pos = table.nextEditableCellPos(column, row, backwards);\n        if (pos) {\n          table.prepareCellEdit(pos.column, pos.row);\n        }\n      });\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,SAAS,QAAO,aAAa;AAE3C,eAAe,MAAMC,sBAAsB,SAASD,SAAS,CAAC;EAE5DE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAGD,KAAK;IAClB,IAAI,CAACE,KAAK,GAAG,CAACN,IAAI,CAACO,GAAG,CAAC;IACvB,IAAI,CAACC,KAAK,GAAGC,SAAS,CAAC,CAAC;EAC1B;;EAEAC,OAAO,CAACC,KAAK,EAAE;IACb,IAAIC,QAAQ,GAAG,KAAK,CAACF,OAAO,CAACC,KAAK,CAAC;IACnC,OAAOC,QAAQ,IAAI,CAAC,IAAI,CAACP,KAAK,CAACQ,2BAA2B,EAAE,CAAC,CAAC;EAChE;;EAEAC,MAAM,CAACH,KAAK,EAAE;IACZ,IAAII,GAAG;MACLC,SAAS,GAAGL,KAAK,CAACM,QAAQ;MAC1BC,KAAK,GAAG,IAAI,CAACb,KAAK,CAACa,KAAK;MACxBC,MAAM,GAAG,IAAI,CAACd,KAAK,CAACc,MAAM;MAC1BC,GAAG,GAAG,IAAI,CAACf,KAAK,CAACe,GAAG;IAEtB,IAAI,CAACf,KAAK,CAACgB,YAAY,EAAE,CACtBC,IAAI,CAAC,MAAM;MACVP,GAAG,GAAGG,KAAK,CAACK,mBAAmB,CAACJ,MAAM,EAAEC,GAAG,EAAEJ,SAAS,CAAC;MACvD,IAAID,GAAG,EAAE;QACPG,KAAK,CAACM,eAAe,CAACT,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,GAAG,CAAC;MAC5C;IACF,CAAC,CAAC;EACN;AACF"},"metadata":{},"sourceType":"module"}