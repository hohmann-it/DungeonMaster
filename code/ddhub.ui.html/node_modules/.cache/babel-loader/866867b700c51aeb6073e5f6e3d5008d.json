{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FormField, GroupBox, scout, SmartField, ValueField } from '../index';\nexport default class TileTableHeaderBox extends GroupBox {\n  constructor() {\n    super();\n    this.table = null;\n    this.labelVisible = false;\n    this.statusVisible = false;\n    this.gridColumnCount = 7;\n    this.bodyLayoutConfig = {\n      hgap: 8\n    };\n    this.groupByField = null;\n    this.sortByField = null;\n    this._tableGroupHandler = this._onTableGroup.bind(this);\n    this._tableSortHandler = this._onTableSort.bind(this);\n    this._destroyHandler = this._uninstallListeners.bind(this);\n  }\n  _installListeners() {\n    this.table.on('group', this._tableGroupHandler);\n    this.table.on('sort', this._tableSortHandler);\n    this.table.one('destroy', this._destroyHandler);\n  }\n  _uninstallListeners() {\n    this.table.off('group', this._tableGroupHandler);\n    this.table.off('sort', this._tableSortHandler);\n  }\n  _init(model) {\n    super._init(model);\n    this.table = this.parent;\n    this._installListeners();\n    this.insertField(scout.create('PlaceholderField', {\n      id: 'PlaceholderField',\n      parent: this,\n      gridDataHints: {\n        w: 5\n      }\n    }));\n\n    // Group By Field\n    this.groupByField = scout.create('SmartField', {\n      id: 'GroupByField',\n      parent: this,\n      label: this.session.text('GroupBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.groupByField.setLookupCall(this._createGroupByLookupCall());\n    this.groupByField.setVisible(!arrays.empty(this.groupByField.lookupCall.data));\n    this.groupByField.on('propertyChange', this._onGroupingChange.bind(this));\n    this.insertField(this.groupByField);\n\n    // Sort By Field\n    this.sortByField = scout.create('SmartField', {\n      id: 'SortByField',\n      parent: this,\n      label: this.session.text('SortBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.sortByField.setLookupCall(this._createSortByLookupCall());\n    this.sortByField.setVisible(!arrays.empty(this.sortByField.lookupCall.data));\n    this.sortByField.on('propertyChange', this._onSortingChange.bind(this));\n    this.insertField(this.sortByField);\n\n    // it's okay to sync the fields here, _onGroupingChange/_onSortingChange will return early since the tileMode property is not set yet at this point\n    this._syncSortingGroupingFields();\n  }\n  _findSortByLookupRowForKey(key) {\n    return this.sortByField.lookupCall.data.map(lookupRow => {\n      return lookupRow[0];\n    }).find(rowKey => {\n      return rowKey.column === key.column && rowKey.asc === key.asc;\n    }, this);\n  }\n  _createGroupByLookupCall() {\n    return scout.create('TileTableHeaderGroupByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n  _createSortByLookupCall() {\n    return scout.create('TileTableHeaderSortByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n  _onGroupingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isGrouping = true;\n      let column;\n      if (event.newValue !== null) {\n        column = event.newValue;\n        let direction = column.sortIndex >= 0 && !column.sortAscending ? 'desc' : 'asc';\n        this.table.groupColumn(column, false, direction, false);\n      } else {\n        column = event.oldValue;\n        this.table.groupColumn(column, false, null, true);\n      }\n      this.isGrouping = false;\n    }\n  }\n  _onSortingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isSorting = true;\n      let column, sortInfo;\n      if (event.newValue !== null) {\n        sortInfo = event.newValue.column;\n        column = event.newValue.column;\n        this.table.sort(event.newValue.column, event.newValue.asc ? 'asc' : 'desc', false, false);\n      } else {\n        this.table.sort(event.oldValue, null, false, true);\n      }\n      this.isSorting = false;\n    }\n  }\n  _syncSortingGroupingFields() {\n    let primaryGroupingColumn = arrays.find(this.table.visibleColumns(), column => {\n      return column.grouped && column.sortIndex === 0;\n    });\n    if (primaryGroupingColumn) {\n      this.groupByField.setValue(primaryGroupingColumn);\n    } else {\n      this.groupByField.setValue(null);\n    }\n    let primarySortingColumn = arrays.find(this.table.visibleColumns(), column => {\n      return column.sortActive && column.sortIndex === 0;\n    });\n    if (primarySortingColumn) {\n      this.sortByField.setValue(this._findSortByLookupRowForKey({\n        column: primarySortingColumn,\n        asc: primarySortingColumn.sortAscending\n      }));\n    } else {\n      this.sortByField.setValue(null);\n    }\n  }\n  _onTableGroup(event) {\n    if (!this.isGrouping) {\n      this._syncSortingGroupingFields();\n    }\n  }\n  _onTableSort(event) {\n    if (!this.isSorting) {\n      this._syncSortingGroupingFields();\n    }\n  }\n}","map":{"version":3,"names":["arrays","FormField","GroupBox","scout","SmartField","ValueField","TileTableHeaderBox","constructor","table","labelVisible","statusVisible","gridColumnCount","bodyLayoutConfig","hgap","groupByField","sortByField","_tableGroupHandler","_onTableGroup","bind","_tableSortHandler","_onTableSort","_destroyHandler","_uninstallListeners","_installListeners","on","one","off","_init","model","parent","insertField","create","id","gridDataHints","w","label","session","text","labelPosition","LabelPosition","ON_FIELD","clearable","Clearable","ALWAYS","displayStyle","DisplayStyle","DROPDOWN","setLookupCall","_createGroupByLookupCall","setVisible","empty","lookupCall","data","_onGroupingChange","_createSortByLookupCall","_onSortingChange","_syncSortingGroupingFields","_findSortByLookupRowForKey","key","map","lookupRow","find","rowKey","column","asc","event","tileMode","propertyName","isGrouping","newValue","direction","sortIndex","sortAscending","groupColumn","oldValue","isSorting","sortInfo","sort","primaryGroupingColumn","visibleColumns","grouped","setValue","primarySortingColumn","sortActive"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TileTableHeaderBox.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FormField, GroupBox, scout, SmartField, ValueField} from '../index';\n\nexport default class TileTableHeaderBox extends GroupBox {\n\n  constructor() {\n    super();\n\n    this.table = null;\n    this.labelVisible = false;\n    this.statusVisible = false;\n    this.gridColumnCount = 7;\n    this.bodyLayoutConfig = {\n      hgap: 8\n    };\n\n    this.groupByField = null;\n    this.sortByField = null;\n\n    this._tableGroupHandler = this._onTableGroup.bind(this);\n    this._tableSortHandler = this._onTableSort.bind(this);\n    this._destroyHandler = this._uninstallListeners.bind(this);\n  }\n\n  _installListeners() {\n    this.table.on('group', this._tableGroupHandler);\n    this.table.on('sort', this._tableSortHandler);\n    this.table.one('destroy', this._destroyHandler);\n  }\n\n  _uninstallListeners() {\n    this.table.off('group', this._tableGroupHandler);\n    this.table.off('sort', this._tableSortHandler);\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.table = this.parent;\n    this._installListeners();\n\n    this.insertField(scout.create('PlaceholderField', {\n      id: 'PlaceholderField',\n      parent: this,\n      gridDataHints: {\n        w: 5\n      }\n    }));\n\n    // Group By Field\n    this.groupByField = scout.create('SmartField', {\n      id: 'GroupByField',\n      parent: this,\n      label: this.session.text('GroupBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.groupByField.setLookupCall(this._createGroupByLookupCall());\n    this.groupByField.setVisible(!arrays.empty(this.groupByField.lookupCall.data));\n    this.groupByField.on('propertyChange', this._onGroupingChange.bind(this));\n\n    this.insertField(this.groupByField);\n\n    // Sort By Field\n    this.sortByField = scout.create('SmartField', {\n      id: 'SortByField',\n      parent: this,\n      label: this.session.text('SortBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.sortByField.setLookupCall(this._createSortByLookupCall());\n    this.sortByField.setVisible(!arrays.empty(this.sortByField.lookupCall.data));\n    this.sortByField.on('propertyChange', this._onSortingChange.bind(this));\n\n    this.insertField(this.sortByField);\n\n    // it's okay to sync the fields here, _onGroupingChange/_onSortingChange will return early since the tileMode property is not set yet at this point\n    this._syncSortingGroupingFields();\n  }\n\n  _findSortByLookupRowForKey(key) {\n    return this.sortByField.lookupCall.data.map(lookupRow => {\n      return lookupRow[0];\n    }).find(rowKey => {\n      return rowKey.column === key.column && rowKey.asc === key.asc;\n    }, this);\n  }\n\n  _createGroupByLookupCall() {\n    return scout.create('TileTableHeaderGroupByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n\n  _createSortByLookupCall() {\n    return scout.create('TileTableHeaderSortByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n\n  _onGroupingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isGrouping = true;\n      let column;\n      if (event.newValue !== null) {\n        column = event.newValue;\n        let direction = (column.sortIndex >= 0 && !column.sortAscending) ? 'desc' : 'asc';\n        this.table.groupColumn(column, false, direction, false);\n      } else {\n        column = event.oldValue;\n        this.table.groupColumn(column, false, null, true);\n      }\n      this.isGrouping = false;\n    }\n  }\n\n  _onSortingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isSorting = true;\n      let column, sortInfo;\n      if (event.newValue !== null) {\n        sortInfo = event.newValue.column;\n        column = event.newValue.column;\n        this.table.sort(event.newValue.column, event.newValue.asc ? 'asc' : 'desc', false, false);\n      } else {\n        this.table.sort(event.oldValue, null, false, true);\n      }\n      this.isSorting = false;\n    }\n  }\n\n  _syncSortingGroupingFields() {\n    let primaryGroupingColumn = arrays.find(this.table.visibleColumns(), column => {\n      return column.grouped && column.sortIndex === 0;\n    });\n    if (primaryGroupingColumn) {\n      this.groupByField.setValue(primaryGroupingColumn);\n    } else {\n      this.groupByField.setValue(null);\n    }\n\n    let primarySortingColumn = arrays.find(this.table.visibleColumns(), column => {\n      return column.sortActive && column.sortIndex === 0;\n    });\n\n    if (primarySortingColumn) {\n      this.sortByField.setValue(this._findSortByLookupRowForKey({\n        column: primarySortingColumn,\n        asc: primarySortingColumn.sortAscending\n      }));\n    } else {\n      this.sortByField.setValue(null);\n    }\n  }\n\n  _onTableGroup(event) {\n    if (!this.isGrouping) {\n      this._syncSortingGroupingFields();\n    }\n  }\n\n  _onTableSort(event) {\n    if (!this.isSorting) {\n      this._syncSortingGroupingFields();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}