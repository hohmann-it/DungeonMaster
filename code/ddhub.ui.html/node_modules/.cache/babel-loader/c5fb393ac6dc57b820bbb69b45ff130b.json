{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class OutlineMediator {\n  init(model) {}\n  _skipEvent(page) {\n    return page === null || page.getOutline() === null || page.leaf;\n  }\n  onTableRowsInserted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().insertNodes(childPages, pageWithTable);\n  }\n  onTableRowsDeleted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().deleteNodes(childPages, pageWithTable);\n  }\n  onTableRowsUpdated(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    let pages = pageWithTable.updatePagesFromTableRows(event.rows);\n    pageWithTable.getTree().updateNodes(pages);\n  }\n  onTableRowAction(event, page) {\n    let childPage = event.row.page;\n    if (!childPage) {\n      return;\n    }\n    let outline = childPage.getOutline();\n    if (!outline) {\n      return;\n    }\n    outline.selectNode(childPage);\n    outline.setNodeExpanded(childPage, true);\n  }\n  onTableRowOrderChanged(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    let table = event.source;\n    let childPages = pageWithTable.pagesForTableRows(table.rows);\n    pageWithTable.getOutline().updateNodeOrder(childPages, pageWithTable);\n  }\n  onTableFilter(event, page) {\n    page.getOutline().filter();\n  }\n}","map":{"version":3,"names":["OutlineMediator","init","model","_skipEvent","page","getOutline","leaf","onTableRowsInserted","rows","childPages","pageWithTable","getTree","insertNodes","onTableRowsDeleted","deleteNodes","onTableRowsUpdated","event","pages","updatePagesFromTableRows","updateNodes","onTableRowAction","childPage","row","outline","selectNode","setNodeExpanded","onTableRowOrderChanged","table","source","pagesForTableRows","updateNodeOrder","onTableFilter","filter"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/desktop/outline/OutlineMediator.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class OutlineMediator {\n\n  init(model) {\n  }\n\n  _skipEvent(page) {\n    return page === null || page.getOutline() === null || page.leaf;\n  }\n\n  onTableRowsInserted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().insertNodes(childPages, pageWithTable);\n  }\n\n  onTableRowsDeleted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().deleteNodes(childPages, pageWithTable);\n  }\n\n  onTableRowsUpdated(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n\n    let pages = pageWithTable.updatePagesFromTableRows(event.rows);\n    pageWithTable.getTree().updateNodes(pages);\n  }\n\n  onTableRowAction(event, page) {\n    let childPage = event.row.page;\n    if (!childPage) {\n      return;\n    }\n\n    let outline = childPage.getOutline();\n    if (!outline) {\n      return;\n    }\n\n    outline.selectNode(childPage);\n    outline.setNodeExpanded(childPage, true);\n  }\n\n  onTableRowOrderChanged(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n\n    let table = event.source;\n    let childPages = pageWithTable.pagesForTableRows(table.rows);\n    pageWithTable.getOutline().updateNodeOrder(childPages, pageWithTable);\n  }\n\n  onTableFilter(event, page) {\n    page.getOutline().filter();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,eAAe,CAAC;EAEnCC,IAAI,CAACC,KAAK,EAAE,CACZ;EAEAC,UAAU,CAACC,IAAI,EAAE;IACf,OAAOA,IAAI,KAAK,IAAI,IAAIA,IAAI,CAACC,UAAU,EAAE,KAAK,IAAI,IAAID,IAAI,CAACE,IAAI;EACjE;EAEAC,mBAAmB,CAACC,IAAI,EAAEC,UAAU,EAAEC,aAAa,EAAE;IACnD,IAAI,IAAI,CAACP,UAAU,CAACO,aAAa,CAAC,EAAE;MAClC;IACF;IACAA,aAAa,CAACC,OAAO,EAAE,CAACC,WAAW,CAACH,UAAU,EAAEC,aAAa,CAAC;EAChE;EAEAG,kBAAkB,CAACL,IAAI,EAAEC,UAAU,EAAEC,aAAa,EAAE;IAClD,IAAI,IAAI,CAACP,UAAU,CAACO,aAAa,CAAC,EAAE;MAClC;IACF;IACAA,aAAa,CAACC,OAAO,EAAE,CAACG,WAAW,CAACL,UAAU,EAAEC,aAAa,CAAC;EAChE;EAEAK,kBAAkB,CAACC,KAAK,EAAEN,aAAa,EAAE;IACvC,IAAI,IAAI,CAACP,UAAU,CAACO,aAAa,CAAC,EAAE;MAClC;IACF;IAEA,IAAIO,KAAK,GAAGP,aAAa,CAACQ,wBAAwB,CAACF,KAAK,CAACR,IAAI,CAAC;IAC9DE,aAAa,CAACC,OAAO,EAAE,CAACQ,WAAW,CAACF,KAAK,CAAC;EAC5C;EAEAG,gBAAgB,CAACJ,KAAK,EAAEZ,IAAI,EAAE;IAC5B,IAAIiB,SAAS,GAAGL,KAAK,CAACM,GAAG,CAAClB,IAAI;IAC9B,IAAI,CAACiB,SAAS,EAAE;MACd;IACF;IAEA,IAAIE,OAAO,GAAGF,SAAS,CAAChB,UAAU,EAAE;IACpC,IAAI,CAACkB,OAAO,EAAE;MACZ;IACF;IAEAA,OAAO,CAACC,UAAU,CAACH,SAAS,CAAC;IAC7BE,OAAO,CAACE,eAAe,CAACJ,SAAS,EAAE,IAAI,CAAC;EAC1C;EAEAK,sBAAsB,CAACV,KAAK,EAAEN,aAAa,EAAE;IAC3C,IAAI,IAAI,CAACP,UAAU,CAACO,aAAa,CAAC,EAAE;MAClC;IACF;IAEA,IAAIiB,KAAK,GAAGX,KAAK,CAACY,MAAM;IACxB,IAAInB,UAAU,GAAGC,aAAa,CAACmB,iBAAiB,CAACF,KAAK,CAACnB,IAAI,CAAC;IAC5DE,aAAa,CAACL,UAAU,EAAE,CAACyB,eAAe,CAACrB,UAAU,EAAEC,aAAa,CAAC;EACvE;EAEAqB,aAAa,CAACf,KAAK,EAAEZ,IAAI,EAAE;IACzBA,IAAI,CAACC,UAAU,EAAE,CAAC2B,MAAM,EAAE;EAC5B;AACF"},"metadata":{},"sourceType":"module"}