{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Calendar, dates, Planner, scout, scrollbars, Widget } from '../index';\nimport $ from 'jquery';\nexport default class YearPanel extends Widget {\n  constructor() {\n    super();\n    this.$yearTitle;\n    this.$yearList;\n    this.selectedDate;\n    this.displayMode;\n    this.alwaysSelectFirstDay;\n  }\n  _init(model) {\n    super._init(model);\n\n    // If true, it is only possible to select the first day of a range, depending of the selected mode\n    // day mode: every day may be selected\n    // week, work week, calendar week mode: only first day of week may be selected\n    // year, month mode: only first day of month may be selected\n    this.alwaysSelectFirstDay = model.alwaysSelectFirstDay;\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('year-panel-container');\n    this.$yearTitle = this.$container.appendDiv('year-panel-title');\n    this.$yearList = this.$container.appendDiv('year-panel-list');\n  }\n  renderContent() {\n    this.removeContent();\n    this._drawYear();\n    this._installScrollbars({\n      axis: 'y'\n    });\n    this.yearRendered = true;\n    this._colorYear();\n  }\n  get$Scrollable() {\n    return this.$yearList;\n  }\n  removeContent() {\n    this._uninstallScrollbars();\n    this.$yearList.empty();\n    this.yearRendered = false;\n  }\n  _remove() {\n    this.removeContent();\n    super._remove();\n  }\n  _drawYear() {\n    let first,\n      month,\n      $month,\n      d,\n      day,\n      $day,\n      year = this.selectedDate.getFullYear();\n\n    // append 3 years\n    this.$yearTitle.data('year', year).empty();\n    this.$yearTitle.appendDiv('year-title-item', year - 1).data('year-diff', -1).click(this._onYearClick.bind(this));\n    this.$yearTitle.appendDiv('year-title-item selected', year);\n    this.$yearTitle.appendDiv('year-title-item', year + 1).data('year-diff', +1).click(this._onYearClick.bind(this));\n\n    // add months and days\n    for (month = 0; month < 12; month++) {\n      first = new Date(year, month, 1);\n      $month = this.$yearList.appendDiv('year-month').attr('data-title', this._format(first, 'MMMM'));\n      for (d = 1; d <= 31; d++) {\n        day = new Date(year, month, d);\n\n        // stop if day is already out of range\n        if (day.getMonth() !== month) {\n          break;\n        }\n\n        // add div per day\n        $day = $month.appendDiv('year-day', d).data('date', day);\n        if (day.getDay() === 0 || day.getDay() === 6) {\n          $day.addClass('weekend');\n        }\n\n        // first day has margin depending on weekday\n        if (d === 1) {\n          $day.css('margin-left', (day.getDay() + 6) % 7 * $day.outerWidth());\n        }\n      }\n    }\n\n    // bind events for days divs\n    $('.year-day', this.$yearList).click(this._onYearDayClick.bind(this)).hover(this._onYearHoverIn.bind(this), this._onYearHoverOut.bind(this));\n\n    // update scrollbar\n    scrollbars.update(this.$yearList);\n  }\n  _colorYear() {\n    if (!this.yearRendered) {\n      return;\n    }\n\n    // remove color information\n    $('.year-day.year-range, .year-day.year-range-day', this.$yearList).removeClass('year-range year-range-day');\n\n    // loop all days and colorize based on range and selected\n    let that = this,\n      $day,\n      date;\n    $('.year-day', this.$yearList).each(function () {\n      $day = $(this);\n      date = $day.data('date');\n      if (that.displayMode !== Calendar.DisplayMode.DAY && date >= that.viewRange.from && date < that.viewRange.to) {\n        $day.addClass('year-range');\n      }\n      if (dates.isSameDay(date, that.selectedDate)) {\n        $day.addClass('year-range-day');\n      }\n    });\n\n    // selected has to be visible day\n    this._scrollYear();\n  }\n  _scrollYear() {\n    let top,\n      halfMonth,\n      halfYear,\n      $day = $('.year-range-day', this.$yearList),\n      $month = $day.parent(),\n      $year = $day.parent().parent();\n    if (!$month[0]) {\n      return;\n    }\n    top = $month[0].offsetTop;\n    halfMonth = $month.outerHeight() / 2;\n    halfYear = $year.outerHeight() / 2;\n    this.$yearList.animateAVCSD('scrollTop', top + halfMonth - halfYear);\n  }\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n  selectDate(date) {\n    this.selectedDate = date;\n    if (this.rendered) {\n      // If year shown and changed, redraw year\n      if (!date || date.getFullYear() !== this.$yearTitle.data('year')) {\n        this.renderContent();\n      }\n      this._colorYear();\n    }\n  }\n  setDisplayMode(displayMode) {\n    if (displayMode === this.displayMode) {\n      return;\n    }\n    this._setProperty('displayMode', displayMode);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n  setViewRange(viewRange) {\n    if (viewRange === this.viewRange) {\n      return;\n    }\n    this._setProperty('viewRange', viewRange);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n\n  /* -- events ---------------------------------------- */\n\n  _onYearClick(event) {\n    let\n      // we must use Planner.DisplayMode (extends Calendar.DisplayMode) here\n      // because YearPanel must work for calendar and planner.\n      displayMode = Planner.DisplayMode,\n      diff = $(event.target).data('year-diff'),\n      year = this.selectedDate.getFullYear(),\n      month = this.selectedDate.getMonth(),\n      date = this.selectedDate.getDate(),\n      newDate = new Date(year + diff, month, date),\n      oldWeek,\n      newWeek,\n      weekDiff;\n    if (this.alwaysSelectFirstDay) {\n      // find date based on mode\n      if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK, displayMode.CALENDAR_WEEK)) {\n        oldWeek = dates.weekInYear(this.selectedDate);\n        newWeek = dates.weekInYear(newDate);\n        weekDiff = oldWeek - newWeek;\n        // shift new selection that week in year does not change and the new selection is a monday.\n        newDate = dates.shift(newDate, 0, 0, weekDiff * 7);\n        newDate = dates.shiftToNextOrPrevMonday(newDate, 0);\n      } else if (scout.isOneOf(this.displayMode, displayMode.MONTH, displayMode.YEAR)) {\n        // set to first day of month\n        newDate = new Date(year + diff, month, 1);\n      }\n    }\n    this.selectedDate = newDate;\n    this.trigger('dateSelect', {\n      date: this.selectedDate\n    });\n  }\n  _onYearDayClick(event) {\n    this.selectedDate = $('.year-hover-day', this.$yearList).data('date');\n    if (this.selectedDate) {\n      this.trigger('dateSelect', {\n        date: this.selectedDate\n      });\n    }\n  }\n  _onYearHoverIn(event) {\n    let $day = $(event.target),\n      date1 = $day.data('date'),\n      year = date1.getFullYear(),\n      month = date1.getMonth(),\n      date = date1.getDate(),\n      day = (date1.getDay() + 6) % 7,\n      startHover,\n      endHover,\n      $day2,\n      date2;\n\n    // find hover based on mode\n    if (this.displayMode === Calendar.DisplayMode.DAY) {\n      startHover = new Date(year, month, date);\n      endHover = new Date(year, month, date);\n    } else if (this.displayMode === Calendar.DisplayMode.WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 6);\n    } else if (this.displayMode === Calendar.DisplayMode.WORK_WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 4);\n\n      // don't allow selecting a weekend day\n      if (date1 > endHover) {\n        date1 = endHover;\n      }\n    } else if (this.displayMode === Calendar.DisplayMode.MONTH) {\n      startHover = new Date(year, month, 1);\n      endHover = new Date(year, month + 1, 0);\n    } else if (this.displayMode === Planner.DisplayMode.YEAR) {\n      startHover = new Date(year, month, 1);\n      endHover = startHover;\n    } else {\n      startHover = new Date(year, month, date - day);\n      endHover = startHover;\n    }\n    if (this.alwaysSelectFirstDay) {\n      date1 = startHover;\n    }\n\n    // loop days and colorize based on hover start and hover end\n    $('.year-day', this.$yearList).each(function () {\n      $day2 = $(this);\n      date2 = $day2.data('date');\n      if (date2 >= startHover && date2 <= endHover) {\n        $day2.addClass('year-hover');\n      } else {\n        $day2.removeClass('year-hover');\n      }\n      if (dates.isSameDay(date1, date2)) {\n        $day2.addClass('year-hover-day');\n      }\n    });\n  }\n\n  // remove all hover effects\n  _onYearHoverOut(event) {\n    $('.year-day.year-hover, .year-day.year-hover-day', this.$yearList).removeClass('year-hover year-hover-day');\n  }\n}","map":{"version":3,"names":["Calendar","dates","Planner","scout","scrollbars","Widget","$","YearPanel","constructor","$yearTitle","$yearList","selectedDate","displayMode","alwaysSelectFirstDay","_init","model","_render","$container","$parent","appendDiv","renderContent","removeContent","_drawYear","_installScrollbars","axis","yearRendered","_colorYear","get$Scrollable","_uninstallScrollbars","empty","_remove","first","month","$month","d","day","$day","year","getFullYear","data","click","_onYearClick","bind","Date","attr","_format","getMonth","getDay","addClass","css","outerWidth","_onYearDayClick","hover","_onYearHoverIn","_onYearHoverOut","update","removeClass","that","date","each","DisplayMode","DAY","viewRange","from","to","isSameDay","_scrollYear","top","halfMonth","halfYear","parent","$year","offsetTop","outerHeight","animateAVCSD","pattern","format","session","locale","selectDate","rendered","setDisplayMode","_setProperty","setViewRange","event","diff","target","getDate","newDate","oldWeek","newWeek","weekDiff","isOneOf","WEEK","WORK_WEEK","CALENDAR_WEEK","weekInYear","shift","shiftToNextOrPrevMonday","MONTH","YEAR","trigger","date1","startHover","endHover","$day2","date2"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/calendar/YearPanel.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Calendar, dates, Planner, scout, scrollbars, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class YearPanel extends Widget {\n\n  constructor() {\n    super();\n\n    this.$yearTitle;\n    this.$yearList;\n    this.selectedDate;\n    this.displayMode;\n    this.alwaysSelectFirstDay;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    // If true, it is only possible to select the first day of a range, depending of the selected mode\n    // day mode: every day may be selected\n    // week, work week, calendar week mode: only first day of week may be selected\n    // year, month mode: only first day of month may be selected\n    this.alwaysSelectFirstDay = model.alwaysSelectFirstDay;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('year-panel-container');\n    this.$yearTitle = this.$container.appendDiv('year-panel-title');\n    this.$yearList = this.$container.appendDiv('year-panel-list');\n  }\n\n  renderContent() {\n    this.removeContent();\n    this._drawYear();\n    this._installScrollbars({\n      axis: 'y'\n    });\n    this.yearRendered = true;\n    this._colorYear();\n  }\n\n  get$Scrollable() {\n    return this.$yearList;\n  }\n\n  removeContent() {\n    this._uninstallScrollbars();\n    this.$yearList.empty();\n    this.yearRendered = false;\n  }\n\n  _remove() {\n    this.removeContent();\n    super._remove();\n  }\n\n  _drawYear() {\n    let first, month, $month, d, day, $day,\n      year = this.selectedDate.getFullYear();\n\n    // append 3 years\n    this.$yearTitle\n      .data('year', year)\n      .empty();\n\n    this.$yearTitle.appendDiv('year-title-item', year - 1)\n      .data('year-diff', -1)\n      .click(this._onYearClick.bind(this));\n\n    this.$yearTitle.appendDiv('year-title-item selected', year);\n\n    this.$yearTitle.appendDiv('year-title-item', year + 1)\n      .data('year-diff', +1)\n      .click(this._onYearClick.bind(this));\n\n    // add months and days\n    for (month = 0; month < 12; month++) {\n      first = new Date(year, month, 1);\n      $month = this.$yearList.appendDiv('year-month').attr('data-title', this._format(first, 'MMMM'));\n      for (d = 1; d <= 31; d++) {\n        day = new Date(year, month, d);\n\n        // stop if day is already out of range\n        if (day.getMonth() !== month) {\n          break;\n        }\n\n        // add div per day\n        $day = $month.appendDiv('year-day', d).data('date', day);\n\n        if (day.getDay() === 0 || day.getDay() === 6) {\n          $day.addClass('weekend');\n        }\n\n        // first day has margin depending on weekday\n        if (d === 1) {\n          $day.css('margin-left', ((day.getDay() + 6) % 7) * $day.outerWidth());\n        }\n      }\n    }\n\n    // bind events for days divs\n    $('.year-day', this.$yearList)\n      .click(this._onYearDayClick.bind(this))\n      .hover(this._onYearHoverIn.bind(this), this._onYearHoverOut.bind(this));\n\n    // update scrollbar\n    scrollbars.update(this.$yearList);\n  }\n\n  _colorYear() {\n    if (!this.yearRendered) {\n      return;\n    }\n\n    // remove color information\n    $('.year-day.year-range, .year-day.year-range-day', this.$yearList).removeClass('year-range year-range-day');\n\n    // loop all days and colorize based on range and selected\n    let that = this,\n      $day, date;\n\n    $('.year-day', this.$yearList).each(function() {\n      $day = $(this);\n      date = $day.data('date');\n      if (that.displayMode !== Calendar.DisplayMode.DAY &&\n        date >= that.viewRange.from && date < that.viewRange.to) {\n        $day.addClass('year-range');\n      }\n      if (dates.isSameDay(date, that.selectedDate)) {\n        $day.addClass('year-range-day');\n      }\n    });\n\n    // selected has to be visible day\n    this._scrollYear();\n  }\n\n  _scrollYear() {\n    let top, halfMonth, halfYear,\n      $day = $('.year-range-day', this.$yearList),\n      $month = $day.parent(),\n      $year = $day.parent().parent();\n\n    if (!$month[0]) {\n      return;\n    }\n    top = $month[0].offsetTop;\n    halfMonth = $month.outerHeight() / 2;\n    halfYear = $year.outerHeight() / 2;\n\n    this.$yearList.animateAVCSD('scrollTop', top + halfMonth - halfYear);\n  }\n\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n\n  selectDate(date) {\n    this.selectedDate = date;\n\n    if (this.rendered) {\n      // If year shown and changed, redraw year\n      if (!date || date.getFullYear() !== this.$yearTitle.data('year')) {\n        this.renderContent();\n      }\n      this._colorYear();\n    }\n  }\n\n  setDisplayMode(displayMode) {\n    if (displayMode === this.displayMode) {\n      return;\n    }\n    this._setProperty('displayMode', displayMode);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n\n  setViewRange(viewRange) {\n    if (viewRange === this.viewRange) {\n      return;\n    }\n    this._setProperty('viewRange', viewRange);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n\n  /* -- events ---------------------------------------- */\n\n  _onYearClick(event) {\n    let\n      // we must use Planner.DisplayMode (extends Calendar.DisplayMode) here\n      // because YearPanel must work for calendar and planner.\n      displayMode = Planner.DisplayMode,\n      diff = $(event.target).data('year-diff'),\n      year = this.selectedDate.getFullYear(),\n      month = this.selectedDate.getMonth(),\n      date = this.selectedDate.getDate(),\n      newDate = new Date(year + diff, month, date),\n      oldWeek,\n      newWeek,\n      weekDiff;\n\n    if (this.alwaysSelectFirstDay) {\n      // find date based on mode\n      if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK, displayMode.CALENDAR_WEEK)) {\n        oldWeek = dates.weekInYear(this.selectedDate);\n        newWeek = dates.weekInYear(newDate);\n        weekDiff = oldWeek - newWeek;\n        // shift new selection that week in year does not change and the new selection is a monday.\n        newDate = dates.shift(newDate, 0, 0, weekDiff * 7);\n        newDate = dates.shiftToNextOrPrevMonday(newDate, 0);\n      } else if (scout.isOneOf(this.displayMode, displayMode.MONTH, displayMode.YEAR)) {\n        // set to first day of month\n        newDate = new Date(year + diff, month, 1);\n      }\n    }\n\n    this.selectedDate = newDate;\n    this.trigger('dateSelect', {\n      date: this.selectedDate\n    });\n  }\n\n  _onYearDayClick(event) {\n    this.selectedDate = $('.year-hover-day', this.$yearList).data('date');\n    if (this.selectedDate) {\n      this.trigger('dateSelect', {\n        date: this.selectedDate\n      });\n    }\n  }\n\n  _onYearHoverIn(event) {\n    let $day = $(event.target),\n      date1 = $day.data('date'),\n      year = date1.getFullYear(),\n      month = date1.getMonth(),\n      date = date1.getDate(),\n      day = (date1.getDay() + 6) % 7,\n      startHover,\n      endHover,\n      $day2, date2;\n\n    // find hover based on mode\n    if (this.displayMode === Calendar.DisplayMode.DAY) {\n      startHover = new Date(year, month, date);\n      endHover = new Date(year, month, date);\n    } else if (this.displayMode === Calendar.DisplayMode.WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 6);\n    } else if (this.displayMode === Calendar.DisplayMode.WORK_WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 4);\n\n      // don't allow selecting a weekend day\n      if (date1 > endHover) {\n        date1 = endHover;\n      }\n    } else if (this.displayMode === Calendar.DisplayMode.MONTH) {\n      startHover = new Date(year, month, 1);\n      endHover = new Date(year, month + 1, 0);\n    } else if (this.displayMode === Planner.DisplayMode.YEAR) {\n      startHover = new Date(year, month, 1);\n      endHover = startHover;\n    } else {\n      startHover = new Date(year, month, date - day);\n      endHover = startHover;\n    }\n\n    if (this.alwaysSelectFirstDay) {\n      date1 = startHover;\n    }\n\n    // loop days and colorize based on hover start and hover end\n    $('.year-day', this.$yearList).each(function() {\n      $day2 = $(this);\n      date2 = $day2.data('date');\n      if (date2 >= startHover && date2 <= endHover) {\n        $day2.addClass('year-hover');\n      } else {\n        $day2.removeClass('year-hover');\n      }\n      if (dates.isSameDay(date1, date2)) {\n        $day2.addClass('year-hover-day');\n      }\n    });\n  }\n\n  // remove all hover effects\n  _onYearHoverOut(event) {\n    $('.year-day.year-hover, .year-day.year-hover-day', this.$yearList).removeClass('year-hover year-hover-day');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}