{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { DateRange, dates, ModelAdapter } from '../index';\nexport default class PlannerAdapter extends ModelAdapter {\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayMode', 'viewRange', 'selectionRange', 'selectedActivity']);\n  }\n  _orderPropertyNamesOnSync(newProperties) {\n    return Object.keys(newProperties).sort(this._createPropertySortFunc(PlannerAdapter.PROPERTIES_ORDER));\n  }\n  _sendViewRange(viewRange) {\n    this._send('property', {\n      viewRange: dates.toJsonDateRange(viewRange)\n    });\n  }\n  _sendSelectedActivity() {\n    let activityId = null;\n    if (this.widget.selectedActivity) {\n      activityId = this.widget.selectedActivity.id;\n    }\n    this._send('property', {\n      selectedActivity: activityId\n    });\n  }\n  _sendSelectionRange() {\n    let selectionRange = dates.toJsonDateRange(this.widget.selectionRange);\n    this._send('property', {\n      selectionRange: selectionRange\n    });\n  }\n  _onWidgetResourcesSelected(event) {\n    this._sendResourcesSelected();\n  }\n  _sendResourcesSelected() {\n    let resourceIds = this.widget.selectedResources.map(r => {\n      return r.id;\n    });\n    this._send('resourcesSelected', {\n      resourceIds: resourceIds\n    });\n  }\n  _onWidgetEvent(event) {\n    if (event.type === 'resourcesSelected') {\n      this._onWidgetResourcesSelected(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n  _onResourcesInserted(resources) {\n    this.widget.insertResources(resources);\n  }\n  _onResourcesDeleted(resourceIds) {\n    let resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteResources(resources);\n  }\n  _onAllResourcesDeleted() {\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteAllResources();\n  }\n  _onResourcesSelected(resourceIds) {\n    let resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.widget.selectResources(resources, false);\n  }\n  _onResourcesUpdated(resources) {\n    this.widget.updateResources(resources);\n  }\n  onModelAction(event) {\n    if (event.type === 'resourcesInserted') {\n      this._onResourcesInserted(event.resources);\n    } else if (event.type === 'resourcesDeleted') {\n      this._onResourcesDeleted(event.resourceIds);\n    } else if (event.type === 'allResourcesDeleted') {\n      this._onAllResourcesDeleted();\n    } else if (event.type === 'resourcesSelected') {\n      this._onResourcesSelected(event.resourceIds);\n    } else if (event.type === 'resourcesUpdated') {\n      this._onResourcesUpdated(event.resources);\n    } else {\n      super.onModelAction(event);\n    }\n  }\n}\n_defineProperty(PlannerAdapter, \"PROPERTIES_ORDER\", ['displayMode', 'viewRange']);","map":{"version":3,"names":["DateRange","dates","ModelAdapter","PlannerAdapter","constructor","_addRemoteProperties","_orderPropertyNamesOnSync","newProperties","Object","keys","sort","_createPropertySortFunc","PROPERTIES_ORDER","_sendViewRange","viewRange","_send","toJsonDateRange","_sendSelectedActivity","activityId","widget","selectedActivity","id","_sendSelectionRange","selectionRange","_onWidgetResourcesSelected","event","_sendResourcesSelected","resourceIds","selectedResources","map","r","_onWidgetEvent","type","_onResourcesInserted","resources","insertResources","_onResourcesDeleted","_resourcesByIds","addFilterForWidgetEventType","addFilterForProperties","deleteResources","_onAllResourcesDeleted","deleteAllResources","_onResourcesSelected","selectResources","_onResourcesUpdated","updateResources","onModelAction"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/planner/PlannerAdapter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {DateRange, dates, ModelAdapter} from '../index';\n\nexport default class PlannerAdapter extends ModelAdapter {\n\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayMode', 'viewRange', 'selectionRange', 'selectedActivity']);\n  }\n\n  static PROPERTIES_ORDER = ['displayMode', 'viewRange'];\n\n  _orderPropertyNamesOnSync(newProperties) {\n    return Object.keys(newProperties).sort(this._createPropertySortFunc(PlannerAdapter.PROPERTIES_ORDER));\n  }\n\n  _sendViewRange(viewRange) {\n    this._send('property', {\n      viewRange: dates.toJsonDateRange(viewRange)\n    });\n  }\n\n  _sendSelectedActivity() {\n    let activityId = null;\n    if (this.widget.selectedActivity) {\n      activityId = this.widget.selectedActivity.id;\n    }\n    this._send('property', {\n      selectedActivity: activityId\n    });\n  }\n\n  _sendSelectionRange() {\n    let selectionRange = dates.toJsonDateRange(this.widget.selectionRange);\n    this._send('property', {\n      selectionRange: selectionRange\n    });\n  }\n\n  _onWidgetResourcesSelected(event) {\n    this._sendResourcesSelected();\n  }\n\n  _sendResourcesSelected() {\n    let resourceIds = this.widget.selectedResources.map(r => {\n      return r.id;\n    });\n    this._send('resourcesSelected', {\n      resourceIds: resourceIds\n    });\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'resourcesSelected') {\n      this._onWidgetResourcesSelected(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  _onResourcesInserted(resources) {\n    this.widget.insertResources(resources);\n  }\n\n  _onResourcesDeleted(resourceIds) {\n    let resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteResources(resources);\n  }\n\n  _onAllResourcesDeleted() {\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteAllResources();\n  }\n\n  _onResourcesSelected(resourceIds) {\n    let resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.widget.selectResources(resources, false);\n  }\n\n  _onResourcesUpdated(resources) {\n    this.widget.updateResources(resources);\n  }\n\n  onModelAction(event) {\n    if (event.type === 'resourcesInserted') {\n      this._onResourcesInserted(event.resources);\n    } else if (event.type === 'resourcesDeleted') {\n      this._onResourcesDeleted(event.resourceIds);\n    } else if (event.type === 'allResourcesDeleted') {\n      this._onAllResourcesDeleted();\n    } else if (event.type === 'resourcesSelected') {\n      this._onResourcesSelected(event.resourceIds);\n    } else if (event.type === 'resourcesUpdated') {\n      this._onResourcesUpdated(event.resources);\n    } else {\n      super.onModelAction(event);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}