{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, strings, Widget } from '../index';\nexport default class TableRowDetail extends Widget {\n  constructor() {\n    super();\n    this.table = null;\n    this.page = null;\n    this.row = null;\n    this._tableRowsUpdatedHandler = this._onTableRowsUpdated.bind(this);\n    this._tableRowsInsertedHandler = this._onTableRowsInserted.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this.row = this.page.row;\n    this.table.on('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.on('rowsInserted', this._tableRowsInsertedHandler);\n  }\n  _destroy() {\n    this.table.off('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.off('rowsInserted', this._tableRowsInsertedHandler);\n    super._destroy();\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('table-row-detail');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this._renderRow();\n  }\n  _renderRow() {\n    this.table.visibleColumns().forEach(this._renderCell.bind(this));\n    this.invalidateLayoutTree();\n  }\n  _renderCell(column) {\n    let cell = this.table.cell(column, this.row);\n    if (strings.empty(cell.text) && !cell.iconId) {\n      return;\n    }\n    let headerText;\n    if (column.headerHtmlEnabled) {\n      headerText = strings.plainText(column.text);\n    } else {\n      headerText = column.text;\n    }\n    if (strings.empty(headerText)) {\n      if (column.headerTooltipHtmlEnabled) {\n        headerText = strings.plainText(column.headerTooltipText);\n      } else {\n        headerText = column.headerTooltipText;\n      }\n    }\n    let cellText = column.cellTextForRowDetail(this.row);\n    let $field = this.$container.appendDiv('table-row-detail-field');\n    if (!strings.empty(headerText)) {\n      $field.appendSpan('table-row-detail-name').text(headerText + ': ');\n    }\n    let iconId = cell.iconId;\n    let hasCellText = !strings.empty(cellText);\n    if (iconId) {\n      let $icon = $field.appendIcon(iconId, 'table-row-detail-icon');\n      $icon.toggleClass('with-text', hasCellText);\n    }\n    if (hasCellText) {\n      $field.appendSpan('table-row-detail-value').html(cellText);\n    }\n  }\n  _refreshRow() {\n    this.$container.empty();\n    this._renderRow();\n  }\n  _onTableRowsUpdated(event) {\n    if (!this.rendered) {\n      return;\n    }\n    let row = arrays.find(event.rows, row => {\n      return row.id === this.row.id;\n    });\n    if (!row) {\n      return;\n    }\n    this.row = row;\n    this._refreshRow();\n  }\n\n  /**\n   * If the table is reloaded without reloading the corresponding nodes,\n   * the insert events need to be handled to refresh the table row detail.\n   */\n  _onTableRowsInserted(event) {\n    if (!this.rendered) {\n      return;\n    }\n    if (event.source.rows.indexOf(this.page.row) < 0) {\n      return;\n    }\n    this.row = this.page.row;\n    this._refreshRow();\n  }\n}","map":{"version":3,"names":["arrays","HtmlComponent","strings","Widget","TableRowDetail","constructor","table","page","row","_tableRowsUpdatedHandler","_onTableRowsUpdated","bind","_tableRowsInsertedHandler","_onTableRowsInserted","_init","model","on","_destroy","off","_render","$container","$parent","appendDiv","htmlComp","install","session","_renderRow","visibleColumns","forEach","_renderCell","invalidateLayoutTree","column","cell","empty","text","iconId","headerText","headerHtmlEnabled","plainText","headerTooltipHtmlEnabled","headerTooltipText","cellText","cellTextForRowDetail","$field","appendSpan","hasCellText","$icon","appendIcon","toggleClass","html","_refreshRow","event","rendered","find","rows","id","source","indexOf"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TableRowDetail.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HtmlComponent, strings, Widget} from '../index';\n\nexport default class TableRowDetail extends Widget {\n\n  constructor() {\n    super();\n    this.table = null;\n    this.page = null;\n    this.row = null;\n    this._tableRowsUpdatedHandler = this._onTableRowsUpdated.bind(this);\n    this._tableRowsInsertedHandler = this._onTableRowsInserted.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.row = this.page.row;\n    this.table.on('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.on('rowsInserted', this._tableRowsInsertedHandler);\n  }\n\n  _destroy() {\n    this.table.off('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.off('rowsInserted', this._tableRowsInsertedHandler);\n    super._destroy();\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('table-row-detail');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this._renderRow();\n  }\n\n  _renderRow() {\n    this.table.visibleColumns().forEach(this._renderCell.bind(this));\n    this.invalidateLayoutTree();\n  }\n\n  _renderCell(column) {\n    let cell = this.table.cell(column, this.row);\n    if (strings.empty(cell.text) && !cell.iconId) {\n      return;\n    }\n\n    let headerText;\n    if (column.headerHtmlEnabled) {\n      headerText = strings.plainText(column.text);\n    } else {\n      headerText = column.text;\n    }\n\n    if (strings.empty(headerText)) {\n      if (column.headerTooltipHtmlEnabled) {\n        headerText = strings.plainText(column.headerTooltipText);\n      } else {\n        headerText = column.headerTooltipText;\n      }\n    }\n\n    let cellText = column.cellTextForRowDetail(this.row);\n\n    let $field = this.$container.appendDiv('table-row-detail-field');\n    if (!strings.empty(headerText)) {\n      $field.appendSpan('table-row-detail-name').text(headerText + ': ');\n    }\n\n    let iconId = cell.iconId;\n    let hasCellText = !strings.empty(cellText);\n    if (iconId) {\n      let $icon = $field.appendIcon(iconId, 'table-row-detail-icon');\n      $icon.toggleClass('with-text', hasCellText);\n    }\n    if (hasCellText) {\n      $field.appendSpan('table-row-detail-value').html(cellText);\n    }\n  }\n\n  _refreshRow() {\n    this.$container.empty();\n    this._renderRow();\n  }\n\n  _onTableRowsUpdated(event) {\n    if (!this.rendered) {\n      return;\n    }\n\n    let row = arrays.find(event.rows, row => {\n      return row.id === this.row.id;\n    });\n\n    if (!row) {\n      return;\n    }\n\n    this.row = row;\n\n    this._refreshRow();\n  }\n\n  /**\n   * If the table is reloaded without reloading the corresponding nodes,\n   * the insert events need to be handled to refresh the table row detail.\n   */\n  _onTableRowsInserted(event) {\n    if (!this.rendered) {\n      return;\n    }\n\n    if (event.source.rows.indexOf(this.page.row) < 0) {\n      return;\n    }\n\n    this.row = this.page.row;\n    this._refreshRow();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}