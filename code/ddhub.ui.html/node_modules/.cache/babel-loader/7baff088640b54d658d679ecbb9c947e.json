{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { App, ModelAdapter, objects, TableTileGridMediator } from '../index';\nexport default class TableTileGridMediatorAdapter extends ModelAdapter {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Static method to modify the prototype of TableTileGridMediatorAdapter.\n   */\n  static modifyTableTileGridMediator() {\n    if (!App.get().remote) {\n      return;\n    }\n\n    // tiles are already provided by the backend in classic mode\n    objects.replacePrototypeFunction(TableTileGridMediator, 'loadTiles', function () {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this.loadTilesOrig();\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsInserted', function (event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsInsertedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsDeleted', function (event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsDeletedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableAllRowsDeleted', function (event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableAllRowsDeletedOrig(event);\n    }, true);\n  }\n}\nApp.addListener('bootstrap', TableTileGridMediatorAdapter.modifyTableTileGridMediator);","map":{"version":3,"names":["App","ModelAdapter","objects","TableTileGridMediator","TableTileGridMediatorAdapter","constructor","modifyTableTileGridMediator","get","remote","replacePrototypeFunction","modelAdapter","loadTilesOrig","event","_onTableRowsInsertedOrig","_onTableRowsDeletedOrig","_onTableAllRowsDeletedOrig","addListener"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TableTileGridMediatorAdapter.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {App, ModelAdapter, objects, TableTileGridMediator} from '../index';\n\nexport default class TableTileGridMediatorAdapter extends ModelAdapter {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Static method to modify the prototype of TableTileGridMediatorAdapter.\n   */\n  static modifyTableTileGridMediator() {\n    if (!App.get().remote) {\n      return;\n    }\n\n    // tiles are already provided by the backend in classic mode\n    objects.replacePrototypeFunction(TableTileGridMediator, 'loadTiles', function() {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this.loadTilesOrig();\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsInserted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsInsertedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsDeleted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsDeletedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableAllRowsDeleted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableAllRowsDeletedOrig(event);\n    }, true);\n  }\n}\n\nApp.addListener('bootstrap', TableTileGridMediatorAdapter.modifyTableTileGridMediator);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,GAAG,EAAEC,YAAY,EAAEC,OAAO,EAAEC,qBAAqB,QAAO,UAAU;AAE1E,eAAe,MAAMC,4BAA4B,SAASH,YAAY,CAAC;EACrEI,WAAW,GAAG;IACZ,KAAK,EAAE;EACT;;EAEA;AACF;AACA;EACE,OAAOC,2BAA2B,GAAG;IACnC,IAAI,CAACN,GAAG,CAACO,GAAG,EAAE,CAACC,MAAM,EAAE;MACrB;IACF;;IAEA;IACAN,OAAO,CAACO,wBAAwB,CAACN,qBAAqB,EAAE,WAAW,EAAE,YAAW;MAC9E,IAAI,IAAI,CAACO,YAAY,EAAE;QACrB;QACA;MACF;MACA,OAAO,IAAI,CAACC,aAAa,EAAE;IAC7B,CAAC,EAAE,IAAI,CAAC;;IAER;IACAT,OAAO,CAACO,wBAAwB,CAACN,qBAAqB,EAAE,sBAAsB,EAAE,UAASS,KAAK,EAAE;MAC9F,IAAI,IAAI,CAACF,YAAY,EAAE;QACrB;QACA;MACF;MACA,OAAO,IAAI,CAACG,wBAAwB,CAACD,KAAK,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;;IAER;IACAV,OAAO,CAACO,wBAAwB,CAACN,qBAAqB,EAAE,qBAAqB,EAAE,UAASS,KAAK,EAAE;MAC7F,IAAI,IAAI,CAACF,YAAY,EAAE;QACrB;QACA;MACF;MACA,OAAO,IAAI,CAACI,uBAAuB,CAACF,KAAK,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;;IAER;IACAV,OAAO,CAACO,wBAAwB,CAACN,qBAAqB,EAAE,wBAAwB,EAAE,UAASS,KAAK,EAAE;MAChG,IAAI,IAAI,CAACF,YAAY,EAAE;QACrB;QACA;MACF;MACA,OAAO,IAAI,CAACK,0BAA0B,CAACH,KAAK,CAAC;IAC/C,CAAC,EAAE,IAAI,CAAC;EACV;AACF;AAEAZ,GAAG,CAACgB,WAAW,CAAC,WAAW,EAAEZ,4BAA4B,CAACE,2BAA2B,CAAC"},"metadata":{},"sourceType":"module"}