{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, graphics } from '../index';\nimport $ from 'jquery';\nexport default class TableFooterLayout extends AbstractLayout {\n  constructor(tableFooter) {\n    super();\n    this._tableFooter = tableFooter;\n  }\n\n  /**\n   * @override\n   */\n  layout($container) {\n    let contentFits,\n      $controls = this._tableFooter._$controls,\n      $info = this._tableFooter._$info,\n      $infoItems = $info.find('.table-info-item'),\n      containerWidth = graphics.size($container).width;\n    let controlsWidth = graphics.size($controls, true).width;\n    let infoWidth = graphics.size($info, true).width;\n\n    // Remove width to make sure elements are as width as they want to be\n    $infoItems.each(function () {\n      let $item = $(this);\n      // Do not touch items which are being hidden to make sure they can properly animate width to 0\n      if ($item.isVisible() && !$item.hasClass('hiding')) {\n        $item.data('oldWidth', $item.outerWidth());\n        $item.css('width', 'auto');\n      }\n    });\n    $info.css('max-width', '');\n\n    // Always try to use max space first\n    if (this._tableFooter._compactStyle) {\n      this._tableFooter._compactStyle = false;\n      this._tableFooter._renderInfo();\n    }\n    infoWidth = graphics.size($info, true).width;\n    if (controlsWidth + infoWidth <= containerWidth) {\n      // Make sure table info tooltip is not shown anymore (only available in compact style)\n      if (this._tableFooter._tableInfoTooltip) {\n        this._tableFooter._tableInfoTooltip.destroy();\n      }\n      contentFits = true;\n    }\n    if (!contentFits) {\n      // If elements don't fit, try to minimize table-info\n      this._tableFooter._compactStyle = true;\n      this._tableFooter._renderInfo();\n      infoWidth = graphics.size($info, true).width;\n      if (controlsWidth + infoWidth <= containerWidth) {\n        contentFits = true;\n      }\n      // Make sure info section does not overlap controls\n      $info.css('max-width', Math.max(containerWidth - controlsWidth - $info.cssMarginX(), 0));\n    }\n\n    // don't animate on the first layouting -> only animate on user interactions\n    let animated = this._tableFooter.htmlComp.layouted;\n    this._setInfoItemsSize($infoItems, animated);\n    if (this._tableFooter._tableStatusTooltip && this._tableFooter._tableStatusTooltip.rendered) {\n      this._tableFooter._tableStatusTooltip.position();\n    }\n    if (this._tableFooter._tableInfoTooltip && this._tableFooter._tableInfoTooltip.rendered) {\n      this._tableFooter._tableInfoTooltip.position();\n    }\n\n    // Let table controls update their content according to the new footer size\n    this._tableFooter.table.tableControls.forEach(control => {\n      control.revalidateLayout();\n    });\n  }\n  _setInfoItemsSize($infoItems, animated) {\n    $infoItems.each(function () {\n      let $item = $(this);\n      if ($item.isVisible() && !$item.hasClass('hiding')) {\n        // Make sure complete function of already scheduled animation will be executed\n        let existingComplete = $item.data('animationComplete');\n        if (animated) {\n          $item.stop().cssWidthAnimated($item.data('oldWidth'), $item.outerWidth(), {\n            complete: existingComplete\n          });\n          $item.removeData('oldWidth');\n        } else {\n          $item.cssWidth($item.outerWidth());\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["AbstractLayout","graphics","$","TableFooterLayout","constructor","tableFooter","_tableFooter","layout","$container","contentFits","$controls","_$controls","$info","_$info","$infoItems","find","containerWidth","size","width","controlsWidth","infoWidth","each","$item","isVisible","hasClass","data","outerWidth","css","_compactStyle","_renderInfo","_tableInfoTooltip","destroy","Math","max","cssMarginX","animated","htmlComp","layouted","_setInfoItemsSize","_tableStatusTooltip","rendered","position","table","tableControls","forEach","control","revalidateLayout","existingComplete","stop","cssWidthAnimated","complete","removeData","cssWidth"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/TableFooterLayout.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, graphics} from '../index';\nimport $ from 'jquery';\n\nexport default class TableFooterLayout extends AbstractLayout {\n\n  constructor(tableFooter) {\n    super();\n    this._tableFooter = tableFooter;\n  }\n\n  /**\n   * @override\n   */\n  layout($container) {\n    let contentFits,\n      $controls = this._tableFooter._$controls,\n      $info = this._tableFooter._$info,\n      $infoItems = $info.find('.table-info-item'),\n      containerWidth = graphics.size($container).width;\n\n    let controlsWidth = graphics.size($controls, true).width;\n    let infoWidth = graphics.size($info, true).width;\n\n    // Remove width to make sure elements are as width as they want to be\n    $infoItems.each(function() {\n      let $item = $(this);\n      // Do not touch items which are being hidden to make sure they can properly animate width to 0\n      if ($item.isVisible() && !$item.hasClass('hiding')) {\n        $item.data('oldWidth', $item.outerWidth());\n        $item.css('width', 'auto');\n      }\n    });\n    $info.css('max-width', '');\n\n    // Always try to use max space first\n    if (this._tableFooter._compactStyle) {\n      this._tableFooter._compactStyle = false;\n      this._tableFooter._renderInfo();\n    }\n    infoWidth = graphics.size($info, true).width;\n    if (controlsWidth + infoWidth <= containerWidth) {\n      // Make sure table info tooltip is not shown anymore (only available in compact style)\n      if (this._tableFooter._tableInfoTooltip) {\n        this._tableFooter._tableInfoTooltip.destroy();\n      }\n      contentFits = true;\n    }\n\n    if (!contentFits) {\n      // If elements don't fit, try to minimize table-info\n      this._tableFooter._compactStyle = true;\n      this._tableFooter._renderInfo();\n\n      infoWidth = graphics.size($info, true).width;\n      if (controlsWidth + infoWidth <= containerWidth) {\n        contentFits = true;\n      }\n      // Make sure info section does not overlap controls\n      $info.css('max-width', Math.max(containerWidth - controlsWidth - $info.cssMarginX(), 0));\n    }\n\n    // don't animate on the first layouting -> only animate on user interactions\n    let animated = this._tableFooter.htmlComp.layouted;\n    this._setInfoItemsSize($infoItems, animated);\n\n    if (this._tableFooter._tableStatusTooltip && this._tableFooter._tableStatusTooltip.rendered) {\n      this._tableFooter._tableStatusTooltip.position();\n    }\n    if (this._tableFooter._tableInfoTooltip && this._tableFooter._tableInfoTooltip.rendered) {\n      this._tableFooter._tableInfoTooltip.position();\n    }\n\n    // Let table controls update their content according to the new footer size\n    this._tableFooter.table.tableControls.forEach(control => {\n      control.revalidateLayout();\n    });\n  }\n\n  _setInfoItemsSize($infoItems, animated) {\n    $infoItems.each(function() {\n      let $item = $(this);\n      if ($item.isVisible() && !$item.hasClass('hiding')) {\n        // Make sure complete function of already scheduled animation will be executed\n        let existingComplete = $item.data('animationComplete');\n        if (animated) {\n          $item.stop().cssWidthAnimated($item.data('oldWidth'), $item.outerWidth(), {\n            complete: existingComplete\n          });\n          $item.removeData('oldWidth');\n        } else {\n          $item.cssWidth($item.outerWidth());\n        }\n      }\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}