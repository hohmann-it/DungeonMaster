{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { App, arrays, DateField, dates, objects, ParsingFailedStatus, ValueFieldAdapter } from '../../../index';\nexport default class DateFieldAdapter extends ValueFieldAdapter {\n  constructor() {\n    super();\n  }\n  /**\n   * @override\n   */\n  _onWidgetAcceptInput(event) {\n    let parsingFailedError = null;\n    let errorStatus = this.widget.errorStatus;\n    // Only send Parsing errors to the server\n    if (errorStatus && errorStatus.hasChildren()) {\n      parsingFailedError = arrays.find(errorStatus.asFlatList(), childStatus => {\n        return childStatus instanceof ParsingFailedStatus;\n      });\n    }\n    let data = {\n      displayText: this.widget.displayText,\n      errorStatus: parsingFailedError\n    };\n    // In case of an error, the value is still the old, valid value -> don't send it\n    if (!parsingFailedError) {\n      data.value = dates.toJsonDate(this.widget.value);\n    }\n    this._send('acceptInput', data, {\n      showBusyIndicator: !event.whileTyping,\n      coalesce: function (previous) {\n        return this.target === previous.target && this.type === previous.type;\n      }\n    });\n  }\n\n  /**\n   * Make sure hasDate and hasTime are always set before displayText, otherwise toggling hasDate and hasTime dynamically\n   * won't work because renderDisplayText would try to write the time into the date field\n   *\n   * @override\n   */\n  _orderPropertyNamesOnSync(newProperties) {\n    return Object.keys(newProperties).sort(this._createPropertySortFunc(DateFieldAdapter.PROPERTIES_ORDER));\n  }\n  static isDateAllowedRemote(date) {\n    if (!this.modelAdapter) {\n      return this.isDateAllowedOrig(date);\n    }\n    // Server will take care of it\n    return true;\n  }\n  static modifyPrototype() {\n    if (!App.get().remote) {\n      return;\n    }\n    objects.replacePrototypeFunction(DateField, 'isDateAllowed', DateFieldAdapter.isDateAllowedRemote, true);\n  }\n}\n_defineProperty(DateFieldAdapter, \"PROPERTIES_ORDER\", ['hasTime', 'hasDate']);\nApp.addListener('bootstrap', DateFieldAdapter.modifyPrototype);","map":{"version":3,"names":["App","arrays","DateField","dates","objects","ParsingFailedStatus","ValueFieldAdapter","DateFieldAdapter","constructor","_onWidgetAcceptInput","event","parsingFailedError","errorStatus","widget","hasChildren","find","asFlatList","childStatus","data","displayText","value","toJsonDate","_send","showBusyIndicator","whileTyping","coalesce","previous","target","type","_orderPropertyNamesOnSync","newProperties","Object","keys","sort","_createPropertySortFunc","PROPERTIES_ORDER","isDateAllowedRemote","date","modelAdapter","isDateAllowedOrig","modifyPrototype","get","remote","replacePrototypeFunction","addListener"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/datefield/DateFieldAdapter.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {App, arrays, DateField, dates, objects, ParsingFailedStatus, ValueFieldAdapter} from '../../../index';\n\nexport default class DateFieldAdapter extends ValueFieldAdapter {\n\n  constructor() {\n    super();\n  }\n\n  static PROPERTIES_ORDER = ['hasTime', 'hasDate'];\n\n  /**\n   * @override\n   */\n  _onWidgetAcceptInput(event) {\n    let parsingFailedError = null;\n    let errorStatus = this.widget.errorStatus;\n    // Only send Parsing errors to the server\n    if (errorStatus && errorStatus.hasChildren()) {\n      parsingFailedError = arrays.find(errorStatus.asFlatList(), childStatus => {\n        return childStatus instanceof ParsingFailedStatus;\n      });\n    }\n\n    let data = {\n      displayText: this.widget.displayText,\n      errorStatus: parsingFailedError\n    };\n    // In case of an error, the value is still the old, valid value -> don't send it\n    if (!parsingFailedError) {\n      data.value = dates.toJsonDate(this.widget.value);\n    }\n    this._send('acceptInput', data, {\n      showBusyIndicator: !event.whileTyping,\n      coalesce: function(previous) {\n        return this.target === previous.target && this.type === previous.type;\n      }\n    });\n  }\n\n  /**\n   * Make sure hasDate and hasTime are always set before displayText, otherwise toggling hasDate and hasTime dynamically\n   * won't work because renderDisplayText would try to write the time into the date field\n   *\n   * @override\n   */\n  _orderPropertyNamesOnSync(newProperties) {\n    return Object.keys(newProperties).sort(this._createPropertySortFunc(DateFieldAdapter.PROPERTIES_ORDER));\n  }\n\n  static isDateAllowedRemote(date) {\n    if (!this.modelAdapter) {\n      return this.isDateAllowedOrig(date);\n    }\n    // Server will take care of it\n    return true;\n  }\n\n  static modifyPrototype() {\n    if (!App.get().remote) {\n      return;\n    }\n\n    objects.replacePrototypeFunction(DateField, 'isDateAllowed', DateFieldAdapter.isDateAllowedRemote, true);\n  }\n}\n\nApp.addListener('bootstrap', DateFieldAdapter.modifyPrototype);\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,iBAAiB,QAAO,gBAAgB;AAE7G,eAAe,MAAMC,gBAAgB,SAASD,iBAAiB,CAAC;EAE9DE,WAAW,GAAG;IACZ,KAAK,EAAE;EACT;EAIA;AACF;AACA;EACEC,oBAAoB,CAACC,KAAK,EAAE;IAC1B,IAAIC,kBAAkB,GAAG,IAAI;IAC7B,IAAIC,WAAW,GAAG,IAAI,CAACC,MAAM,CAACD,WAAW;IACzC;IACA,IAAIA,WAAW,IAAIA,WAAW,CAACE,WAAW,EAAE,EAAE;MAC5CH,kBAAkB,GAAGV,MAAM,CAACc,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE,EAAEC,WAAW,IAAI;QACxE,OAAOA,WAAW,YAAYZ,mBAAmB;MACnD,CAAC,CAAC;IACJ;IAEA,IAAIa,IAAI,GAAG;MACTC,WAAW,EAAE,IAAI,CAACN,MAAM,CAACM,WAAW;MACpCP,WAAW,EAAED;IACf,CAAC;IACD;IACA,IAAI,CAACA,kBAAkB,EAAE;MACvBO,IAAI,CAACE,KAAK,GAAGjB,KAAK,CAACkB,UAAU,CAAC,IAAI,CAACR,MAAM,CAACO,KAAK,CAAC;IAClD;IACA,IAAI,CAACE,KAAK,CAAC,aAAa,EAAEJ,IAAI,EAAE;MAC9BK,iBAAiB,EAAE,CAACb,KAAK,CAACc,WAAW;MACrCC,QAAQ,EAAE,UAASC,QAAQ,EAAE;QAC3B,OAAO,IAAI,CAACC,MAAM,KAAKD,QAAQ,CAACC,MAAM,IAAI,IAAI,CAACC,IAAI,KAAKF,QAAQ,CAACE,IAAI;MACvE;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,yBAAyB,CAACC,aAAa,EAAE;IACvC,OAAOC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,IAAI,CAAC,IAAI,CAACC,uBAAuB,CAAC3B,gBAAgB,CAAC4B,gBAAgB,CAAC,CAAC;EACzG;EAEA,OAAOC,mBAAmB,CAACC,IAAI,EAAE;IAC/B,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;MACtB,OAAO,IAAI,CAACC,iBAAiB,CAACF,IAAI,CAAC;IACrC;IACA;IACA,OAAO,IAAI;EACb;EAEA,OAAOG,eAAe,GAAG;IACvB,IAAI,CAACxC,GAAG,CAACyC,GAAG,EAAE,CAACC,MAAM,EAAE;MACrB;IACF;IAEAtC,OAAO,CAACuC,wBAAwB,CAACzC,SAAS,EAAE,eAAe,EAAEK,gBAAgB,CAAC6B,mBAAmB,EAAE,IAAI,CAAC;EAC1G;AACF;AAAC,gBA9DoB7B,gBAAgB,sBAMT,CAAC,SAAS,EAAE,SAAS,CAAC;AA0DlDP,GAAG,CAAC4C,WAAW,CAAC,WAAW,EAAErC,gBAAgB,CAACiC,eAAe,CAAC"},"metadata":{},"sourceType":"module"}