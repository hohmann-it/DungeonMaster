{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, DateFormat, dates, Device, events, graphics, HtmlComponent, objects, scout, Widget } from '../index';\nimport $ from 'jquery';\nexport default class DatePicker extends Widget {\n  constructor() {\n    super();\n\n    // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n    this.preselectedDate = null;\n    this.selectedDate = null;\n    this.dateFormat = null;\n    this.viewDate = null;\n    this.allowedDates = [];\n    this.currentMonth = null;\n    this.$scrollable = null;\n    // Contains the months to be rendered.\n    // Only the this.currentMonth is visible, the others are needed for the swipe animation.\n    // The month is an object with the properties viewDate, rendered and $container\n    this.months = [];\n    this._showWeekendSeparator = true;\n  }\n  _init(options) {\n    super._init(options);\n    this._setDateFormat(this.dateFormat);\n    this._showWeekendSeparator = this.dateFormat.symbols.firstDayOfWeek === 1; // only add the separator if the weeks starts on Monday\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('date-picker').toggleClass('touch-only', Device.get().supportsOnlyTouch());\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this._$header = this._append$Header();\n    this._$header.find('.date-picker-left-y, .date-picker-left-m, .date-picker-right-m, .date-picker-right-y').mousedown(this._onNavigationMouseDown.bind(this));\n    this.$container.appendDiv('date-picker-separator');\n    this.$scrollable = this.$container.appendDiv('date-picker-scrollable');\n    this._registerSwipeHandlers();\n  }\n  _setDateFormat(dateFormat) {\n    if (!dateFormat) {\n      dateFormat = this.session.locale.dateFormatPatternDefault;\n    }\n    dateFormat = DateFormat.ensure(this.session.locale, dateFormat);\n    this._setProperty('dateFormat', dateFormat);\n  }\n  prependMonth(month) {\n    let months = this.months.slice();\n    arrays.insert(months, month, 0);\n    this.setMonths(months);\n  }\n  appendMonth(month) {\n    let months = this.months.slice();\n    months.push(month);\n    this.setMonths(months);\n  }\n\n  /**\n   * Resets the month boxes. Always render 3 months to make swiping more smooth (especially on mobile devices).\n   */\n  resetMonths(viewDate) {\n    viewDate = viewDate || this.viewDate;\n    let prevDate = dates.shift(viewDate, 0, -1, 0);\n    let nextDate = dates.shift(viewDate, 0, 1, 0);\n    this.setMonths([prevDate, viewDate, nextDate]);\n  }\n  setMonths(months) {\n    months = arrays.ensure(months);\n    months = months.map(function (month) {\n      let viewDate = month;\n      if (!(month instanceof Date)) {\n        viewDate = month.viewDate;\n      }\n      // Use existing month object (so that $container won't be removed, see below)\n      let existingMonth = this._findMonthByViewDate(viewDate);\n      if (existingMonth) {\n        return existingMonth;\n      }\n      return {\n        rendered: false,\n        viewDate: viewDate,\n        $container: undefined\n      };\n    }, this);\n\n    // Remove the obsolete months\n    if (this.rendered) {\n      this.months.forEach(month => {\n        if (months.indexOf(month) < 0 && month.rendered) {\n          month.$container.remove();\n        }\n      }, this);\n    }\n    this.setProperty('months', months);\n  }\n  _renderMonths() {\n    // Render the months if needed\n    this.months.forEach(function (month) {\n      if (month.rendered) {\n        this._layoutWeekendSeparator(month);\n      } else {\n        this._renderMonth(month);\n\n        // move month to correct position in DOM.\n        // Current month must not be moved, otherwise click event gets lost.\n        if (this.currentMonth && dates.compare(month.viewDate, this.currentMonth.viewDate) < 0) {\n          month.$container.insertBefore(this.currentMonth.$container);\n        }\n      }\n    }, this);\n\n    // Adjust size and position of the scrollable\n    let scrollableWidth = this.months.length * this._boxWidth;\n    this.$scrollable.width(scrollableWidth);\n    if (this.currentMonth) {\n      this.$scrollable.cssLeft(this._scrollableLeftForMonth(this.currentMonth));\n    }\n  }\n  _findMonthByViewDate(viewDate) {\n    return arrays.find(this.months, month => {\n      return dates.compareMonths(month.viewDate, viewDate) === 0;\n    });\n  }\n\n  /**\n   * @returns {number} the x coordinate of the scrollable if the given month should be displayed\n   */\n  _scrollableLeftForMonth(month) {\n    let scrollableInsets = graphics.insets(this.$scrollable);\n    let monthMargins = graphics.margins(month.$container);\n    return -1 * (month.$container.position().left - monthMargins.left - scrollableInsets.left);\n  }\n  _renderMonth(month) {\n    if (month.rendered) {\n      return;\n    }\n    let $box = this.$parent.makeDiv('date-picker-month-box');\n    if (this._showWeekendSeparator) {\n      month.$weekendSeparator = $box.appendDiv('date-picker-weekend-separator');\n    }\n    this._build$DateBox(month.viewDate).appendTo($box);\n    $box.on('DOMMouseScroll mousewheel', this._onMouseWheel.bind(this)).appendTo(this.$scrollable);\n\n    // Fix the size of the box\n    if (!this._boxWidth) {\n      this._boxWidth = $box.width();\n    }\n    $box.width(this._boxWidth);\n    month.$container = $box;\n    month.rendered = true;\n  }\n\n  /**\n   * @internal, use showDate, selectDate, shiftViewDate, etc. to change the view date\n   */\n  setViewDate(viewDate, animated) {\n    if (objects.equals(this.viewDate, viewDate)) {\n      return;\n    }\n    this._setProperty('viewDate', viewDate);\n    if (this.rendered) {\n      this._renderViewDate(animated);\n    }\n  }\n  _renderViewDate(animated) {\n    let month = this._findMonthByViewDate(this.viewDate);\n    let newLeft = this._scrollableLeftForMonth(month);\n    if (!this.currentMonth) {\n      // The first time a month is rendered, revalidate the layout.\n      // Reason: When the popup opens, the datepicker is not rendered yet, thus the preferred size cannot be determined\n      this.revalidateLayoutTree();\n    }\n    this.currentMonth = month;\n    this._updateHeader(this.viewDate);\n    animated = scout.nvl(animated, true);\n    if (!animated) {\n      this.$scrollable.cssLeft(newLeft);\n      this.resetMonths();\n    } else {\n      // Animate\n      // At first: stop existing animation when shifting multiple dates in a row (e.g. with mouse wheel)\n      this.$scrollable.stop(true).animate({\n        left: newLeft\n      }, 300, () => {\n        this.resetMonths();\n      });\n    }\n  }\n  _layoutWeekendSeparators() {\n    this.months.forEach(m => this._layoutWeekendSeparator(m));\n  }\n  _layoutWeekendSeparator(month) {\n    if (!month.$weekendSeparator) {\n      return;\n    }\n    let $weekdays = this.$container.find('.date-picker-weekdays').first().children();\n    if ($weekdays.length < 6) {\n      return;\n    }\n    let $friday = $weekdays.eq(4); // Friday is always pos 4 as the separator is only available if the weeks starts on Monday\n    let $saturday = $weekdays.eq(5); // Saturday is always pos 5 as the separator is only available if the weeks starts on Monday\n\n    let fridayTopRight = graphics.position($friday).x + graphics.size($friday, {\n      includeMargin: true\n    }).width;\n    let saturdayTopLeft = graphics.position($saturday).x;\n    let space = saturdayTopLeft - fridayTopRight; // space between Friday cell an Saturday cell\n    let borderWidth = month.$weekendSeparator.cssBorderWidthX();\n    let posLeft = Math.floor(fridayTopRight + space / 2 - borderWidth);\n    month.$weekendSeparator.cssLeft(posLeft);\n  }\n  preselectDate(date, animated) {\n    this.showDate(date, animated);\n    if (date) {\n      // Clear selection when a date is preselected\n      this.setSelectedDate(null);\n    }\n    this.setPreselectedDate(date);\n  }\n\n  /**\n   * @internal, use preselectDate to preselect a date\n   */\n  setPreselectedDate(preselectedDate) {\n    this.setProperty('preselectedDate', preselectedDate);\n  }\n  _renderPreselectedDate() {\n    if (!this.currentMonth) {\n      return;\n    }\n    let $box = this.currentMonth.$container;\n    $box.find('.date-picker-day').each((i, elem) => {\n      let $day = $(elem);\n      $day.removeClass('preselected');\n      if (dates.isSameDay(this.preselectedDate, $day.data('date'))) {\n        $day.addClass('preselected');\n      }\n    });\n  }\n  selectDate(date, animated) {\n    this.showDate(date, animated);\n    if (date) {\n      // Clear preselection when a date is selected\n      this.setPreselectedDate(null);\n    }\n    this.setSelectedDate(date);\n  }\n\n  /**\n   * @internal, use selectDate to select a date\n   */\n  setSelectedDate(selectedDate) {\n    this.setProperty('selectedDate', selectedDate);\n  }\n  _renderSelectedDate() {\n    if (!this.currentMonth) {\n      return;\n    }\n    let $box = this.currentMonth.$container;\n    $box.find('.date-picker-day').each((i, elem) => {\n      let $day = $(elem);\n      $day.removeClass('selected');\n      if (dates.isSameDay(this.selectedDate, $day.data('date'))) {\n        $day.addClass('selected');\n      }\n    });\n  }\n\n  /**\n   * Shows the month which contains the given date.\n   * @param {Date} date\n   * @param {boolean} [animated] - Default is true\n   */\n  showDate(viewDate, animated) {\n    let viewDateDiff = 0;\n    if (this.viewDate) {\n      viewDateDiff = dates.compareMonths(viewDate, this.viewDate);\n    }\n    if (this.currentMonth && viewDateDiff) {\n      if (viewDateDiff < 0) {\n        this.prependMonth(viewDate);\n      } else {\n        this.appendMonth(viewDate);\n      }\n    } else {\n      if (!this.currentMonth) {\n        // Initially (when the popup is opened), don't reset, just display one month.\n        // Reason: _renderMonths may not determine the proper scroll left yet\n        this.setMonths([viewDate]);\n      } else {\n        this.resetMonths(viewDate);\n      }\n    }\n    this.setViewDate(viewDate, animated);\n  }\n  shiftViewDate(years, months, days) {\n    let date = this.viewDate;\n    date = dates.shift(date, years, months, days);\n    this.showDate(date);\n  }\n  shiftSelectedDate(years, months, days) {\n    let date = this.preselectedDate;\n    if (this.selectedDate) {\n      if (this.allowedDates.length > 0) {\n        date = this._findNextAllowedDate(years, months, days);\n      } else {\n        date = dates.shift(this.selectedDate, years, months, days);\n      }\n    }\n    if (!date) {\n      return; // do nothing when no date was found\n    }\n\n    this.selectDate(date, true);\n  }\n  _findNextAllowedDate(years, months, days) {\n    let i,\n      date,\n      sum = years + months + days,\n      dir = sum > 0 ? 1 : -1,\n      now = this.selectedDate || dates.trunc(new Date());\n\n    // if we shift by year or month, shift the 'now' date and then use that date as starting point\n    // to find the next allowed date.\n    if (years !== 0) {\n      now = dates.shift(now, years, 0, 0);\n    } else if (months !== 0) {\n      now = dates.shift(now, 0, months, 0);\n    }\n    if (dir === 1) {\n      // find next allowed date, starting from currently selected date\n      for (i = 0; i < this.allowedDates.length; i++) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) < 0) {\n          return date;\n        }\n      }\n    } else if (dir === -1) {\n      // find previous allowed date, starting from currently selected date\n      for (i = this.allowedDates.length - 1; i >= 0; i--) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) > 0) {\n          return date;\n        }\n      }\n    }\n    return null;\n  }\n  _isDateAllowed(date) {\n    // when allowedDates is empty or not set, any date is allowed\n    if (this.allowedDates.length === 0) {\n      return true;\n    }\n    // when allowedDates is set, only dates contained in this array are allowed\n    let dateAsTimestamp = dates.trunc(date).getTime();\n    return this.allowedDates.some(allowedDate => allowedDate.getTime() === dateAsTimestamp);\n  }\n  _build$DateBox(viewDate) {\n    let cl,\n      i,\n      day,\n      dayEnabled,\n      dayInMonth,\n      $day,\n      now = new Date(),\n      start = new Date(viewDate);\n    let $box = this.$container.makeDiv('date-picker-month').data('viewDate', viewDate);\n\n    // Create weekday header\n    let $weekdays = $box.appendDiv('date-picker-weekdays');\n    this.dateFormat.symbols.weekdaysShortOrdered.map(weekday => weekday.length > 2 ? weekday.substr(0, 2) : weekday).forEach(weekday => $weekdays.appendDiv('date-picker-weekday', weekday.toUpperCase()));\n\n    // Find start date (-1)\n    let $week;\n    for (let offset = 0; offset < 42; offset++) {\n      start.setDate(start.getDate() - 1);\n      let diff = new Date(start.getYear(), viewDate.getMonth(), 0).getDate() - start.getDate();\n      if (start.getDay() === 0 && start.getMonth() !== viewDate.getMonth() && diff > 1) {\n        break;\n      }\n    }\n\n    // Create days\n    for (i = 0; i < 42; i++) {\n      if (i % 7 === 0) {\n        $week = $box.appendDiv('date-picker-week');\n      }\n      start.setDate(start.getDate() + 1);\n      dayInMonth = start.getDate();\n      if (start.getDay() === 6 || start.getDay() === 0) {\n        cl = start.getMonth() !== viewDate.getMonth() ? ' date-picker-out-weekend' : ' date-picker-weekend';\n        if (this._showWeekendSeparator && start.getDay() === 6) {\n          cl += ' date-picker-day-weekend-separator';\n        }\n      } else {\n        cl = start.getMonth() !== viewDate.getMonth() ? ' date-picker-out' : '';\n      }\n      if (dates.isSameDay(start, now)) {\n        cl += ' date-picker-now';\n      }\n      if (dates.isSameDay(this.selectedDate, start)) {\n        cl += ' selected';\n      }\n      if (dates.isSameDay(this.preselectedDate, start)) {\n        cl += ' preselected';\n      }\n\n      // helps to center days between 10 and 19 nicer (especially when website is zoomed > 100%)\n      if (dayInMonth > 9 && dayInMonth < 20) {\n        cl += ' ten';\n      }\n      dayEnabled = this._isDateAllowed(start);\n      if (!dayEnabled) {\n        cl += ' disabled';\n      }\n      day = dayInMonth <= 9 ? '0' + dayInMonth : dayInMonth;\n      $day = $week.appendDiv('date-picker-day' + cl).data('dayInMonth', dayInMonth).data('date', new Date(start));\n      $day.appendSpan('text', day);\n      if (dayEnabled) {\n        $day.on('click', this._onDayClick.bind(this));\n      }\n    }\n    return $box;\n  }\n  _append$Header() {\n    let headerHtml = '<div class=\"date-picker-header\">' + '  <div class=\"date-picker-left-y\" data-shift=\"-12\"></div>' + '  <div class=\"date-picker-left-m\" data-shift=\"-1\"></div>' + '  <div class=\"date-picker-right-y\" data-shift=\"12\"></div>' + '  <div class=\"date-picker-right-m\" data-shift=\"1\"></div>' + '  <div class=\"date-picker-header-month\">&nbsp;</div>' + '</div>';\n    return this.$container.appendElement(headerHtml).toggleClass('touch', this.touch);\n  }\n  _updateHeader(viewDate) {\n    this._$header.find('.date-picker-header-month').text(this._createHeaderText(viewDate));\n  }\n  _createHeaderText(viewDate) {\n    let months = this.dateFormat.symbols.months;\n    return months[viewDate.getMonth()] + ' ' + viewDate.getFullYear();\n  }\n  _registerSwipeHandlers() {\n    let prevDate, nextDate;\n    let onDown = /** @type {SwipeCallbackEvent} */e => {\n      // stop pending animations, otherwise the months may be removed by the animation stop handler before touchend is executed\n      this.$scrollable.stop(true);\n\n      // Prepare months. On the first swipe the 3 boxes are already rendered, so nothing happens when setMonths is called.\n      // But on a subsequent swipe (while the pane is still moving) the next month needs to be rendered.\n      prevDate = dates.shift(this.viewDate, 0, -1, 0);\n      nextDate = dates.shift(this.viewDate, 0, 1, 0);\n      this.setMonths([prevDate, this.viewDate, nextDate]);\n      this.swiped = false;\n      return true;\n    };\n    let onMove = /** @type {SwipeCallbackEvent} */e => {\n      let minX = this.$container.width() - this.$scrollable.outerWidth();\n      let newScrollableLeft = Math.max(Math.min(e.newLeft, 0), minX); // limit the drag range\n      if (newScrollableLeft !== e.originalLeft) {\n        this.$scrollable.cssLeft(newScrollableLeft); // set the new position\n      }\n\n      return newScrollableLeft;\n    };\n    let onUp = /** @type {SwipeCallbackEvent} */e => {\n      // If the movement is less than this value (in px), the swipe won't happen. Instead, the value is selected.\n      let minMove = 5;\n      let viewDate = this.viewDate;\n\n      // Detect in which direction the swipe happened\n      if (e.deltaX < -minMove) {\n        viewDate = nextDate; // dragged left -> use next month\n      } else if (e.deltaX > minMove) {\n        viewDate = prevDate; // dragged right -> use previous month\n      }\n\n      if (this.viewDate !== viewDate) {\n        this.swiped = true;\n        this.setViewDate(viewDate);\n      }\n    };\n    events.onSwipe(this.$scrollable, 'datepickerDrag', onDown, onMove, onUp);\n  }\n  _onNavigationMouseDown(event) {\n    let $target = $(event.currentTarget);\n    let diff = $target.data('shift');\n    this.shiftViewDate(0, diff, 0);\n  }\n  _onDayClick(event) {\n    if (this.swiped) {\n      // Don't handle on a swipe action\n      return;\n    }\n    let $target = $(event.currentTarget);\n    let date = $target.data('date');\n    this.selectDate(date);\n    this.trigger('dateSelect', {\n      date: date\n    });\n  }\n  _onMouseWheel(event) {\n    event = event.originalEvent || this.$container.window(true).event.originalEvent;\n    let wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n    let diff = wheelData >= 0 ? -1 : 1;\n    this.shiftViewDate(0, diff, 0);\n    event.preventDefault();\n  }\n}","map":{"version":3,"names":["arrays","DateFormat","dates","Device","events","graphics","HtmlComponent","objects","scout","Widget","$","DatePicker","constructor","preselectedDate","selectedDate","dateFormat","viewDate","allowedDates","currentMonth","$scrollable","months","_showWeekendSeparator","_init","options","_setDateFormat","symbols","firstDayOfWeek","_render","$container","$parent","appendDiv","toggleClass","get","supportsOnlyTouch","htmlComp","install","session","_$header","_append$Header","find","mousedown","_onNavigationMouseDown","bind","_registerSwipeHandlers","locale","dateFormatPatternDefault","ensure","_setProperty","prependMonth","month","slice","insert","setMonths","appendMonth","push","resetMonths","prevDate","shift","nextDate","map","Date","existingMonth","_findMonthByViewDate","rendered","undefined","forEach","indexOf","remove","setProperty","_renderMonths","_layoutWeekendSeparator","_renderMonth","compare","insertBefore","scrollableWidth","length","_boxWidth","width","cssLeft","_scrollableLeftForMonth","compareMonths","scrollableInsets","insets","monthMargins","margins","position","left","$box","makeDiv","$weekendSeparator","_build$DateBox","appendTo","on","_onMouseWheel","setViewDate","animated","equals","_renderViewDate","newLeft","revalidateLayoutTree","_updateHeader","nvl","stop","animate","_layoutWeekendSeparators","m","$weekdays","first","children","$friday","eq","$saturday","fridayTopRight","x","size","includeMargin","saturdayTopLeft","space","borderWidth","cssBorderWidthX","posLeft","Math","floor","preselectDate","date","showDate","setSelectedDate","setPreselectedDate","_renderPreselectedDate","each","i","elem","$day","removeClass","isSameDay","data","addClass","selectDate","_renderSelectedDate","viewDateDiff","shiftViewDate","years","days","shiftSelectedDate","_findNextAllowedDate","sum","dir","now","trunc","_isDateAllowed","dateAsTimestamp","getTime","some","allowedDate","cl","day","dayEnabled","dayInMonth","start","weekdaysShortOrdered","weekday","substr","toUpperCase","$week","offset","setDate","getDate","diff","getYear","getMonth","getDay","appendSpan","_onDayClick","headerHtml","appendElement","touch","text","_createHeaderText","getFullYear","onDown","e","swiped","onMove","minX","outerWidth","newScrollableLeft","max","min","originalLeft","onUp","minMove","deltaX","onSwipe","event","$target","currentTarget","trigger","originalEvent","window","wheelData","wheelDelta","detail","preventDefault"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/datepicker/DatePicker.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, DateFormat, dates, Device, events, graphics, HtmlComponent, objects, scout, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class DatePicker extends Widget {\n\n  constructor() {\n    super();\n\n    // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n    this.preselectedDate = null;\n    this.selectedDate = null;\n    this.dateFormat = null;\n    this.viewDate = null;\n    this.allowedDates = [];\n    this.currentMonth = null;\n    this.$scrollable = null;\n    // Contains the months to be rendered.\n    // Only the this.currentMonth is visible, the others are needed for the swipe animation.\n    // The month is an object with the properties viewDate, rendered and $container\n    this.months = [];\n    this._showWeekendSeparator = true;\n  }\n\n  _init(options) {\n    super._init(options);\n    this._setDateFormat(this.dateFormat);\n    this._showWeekendSeparator = this.dateFormat.symbols.firstDayOfWeek === 1; // only add the separator if the weeks starts on Monday\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('date-picker')\n      .toggleClass('touch-only', Device.get().supportsOnlyTouch());\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this._$header = this._append$Header();\n    this._$header\n      .find('.date-picker-left-y, .date-picker-left-m, .date-picker-right-m, .date-picker-right-y')\n      .mousedown(this._onNavigationMouseDown.bind(this));\n\n    this.$container.appendDiv('date-picker-separator');\n    this.$scrollable = this.$container.appendDiv('date-picker-scrollable');\n    this._registerSwipeHandlers();\n  }\n\n  _setDateFormat(dateFormat) {\n    if (!dateFormat) {\n      dateFormat = this.session.locale.dateFormatPatternDefault;\n    }\n    dateFormat = DateFormat.ensure(this.session.locale, dateFormat);\n    this._setProperty('dateFormat', dateFormat);\n  }\n\n  prependMonth(month) {\n    let months = this.months.slice();\n    arrays.insert(months, month, 0);\n    this.setMonths(months);\n  }\n\n  appendMonth(month) {\n    let months = this.months.slice();\n    months.push(month);\n    this.setMonths(months);\n  }\n\n  /**\n   * Resets the month boxes. Always render 3 months to make swiping more smooth (especially on mobile devices).\n   */\n  resetMonths(viewDate) {\n    viewDate = viewDate || this.viewDate;\n    let prevDate = dates.shift(viewDate, 0, -1, 0);\n    let nextDate = dates.shift(viewDate, 0, 1, 0);\n    this.setMonths([prevDate, viewDate, nextDate]);\n  }\n\n  setMonths(months) {\n    months = arrays.ensure(months);\n    months = months.map(function(month) {\n      let viewDate = month;\n      if (!(month instanceof Date)) {\n        viewDate = month.viewDate;\n      }\n      // Use existing month object (so that $container won't be removed, see below)\n      let existingMonth = this._findMonthByViewDate(viewDate);\n      if (existingMonth) {\n        return existingMonth;\n      }\n      return {\n        rendered: false,\n        viewDate: viewDate,\n        $container: undefined\n      };\n    }, this);\n\n    // Remove the obsolete months\n    if (this.rendered) {\n      this.months.forEach(month => {\n        if (months.indexOf(month) < 0 && month.rendered) {\n          month.$container.remove();\n        }\n      }, this);\n    }\n    this.setProperty('months', months);\n  }\n\n  _renderMonths() {\n    // Render the months if needed\n    this.months.forEach(function(month) {\n      if (month.rendered) {\n        this._layoutWeekendSeparator(month);\n      } else {\n        this._renderMonth(month);\n\n        // move month to correct position in DOM.\n        // Current month must not be moved, otherwise click event gets lost.\n        if (this.currentMonth && dates.compare(month.viewDate, this.currentMonth.viewDate) < 0) {\n          month.$container.insertBefore(this.currentMonth.$container);\n        }\n      }\n    }, this);\n\n    // Adjust size and position of the scrollable\n    let scrollableWidth = this.months.length * this._boxWidth;\n    this.$scrollable.width(scrollableWidth);\n    if (this.currentMonth) {\n      this.$scrollable.cssLeft(this._scrollableLeftForMonth(this.currentMonth));\n    }\n  }\n\n  _findMonthByViewDate(viewDate) {\n    return arrays.find(this.months, month => {\n      return dates.compareMonths(month.viewDate, viewDate) === 0;\n    });\n  }\n\n  /**\n   * @returns {number} the x coordinate of the scrollable if the given month should be displayed\n   */\n  _scrollableLeftForMonth(month) {\n    let scrollableInsets = graphics.insets(this.$scrollable);\n    let monthMargins = graphics.margins(month.$container);\n    return -1 * (month.$container.position().left - monthMargins.left - scrollableInsets.left);\n  }\n\n  _renderMonth(month) {\n    if (month.rendered) {\n      return;\n    }\n\n    let $box = this.$parent.makeDiv('date-picker-month-box');\n    if (this._showWeekendSeparator) {\n      month.$weekendSeparator = $box.appendDiv('date-picker-weekend-separator');\n    }\n    this._build$DateBox(month.viewDate).appendTo($box);\n    $box.on('DOMMouseScroll mousewheel', this._onMouseWheel.bind(this))\n      .appendTo(this.$scrollable);\n\n    // Fix the size of the box\n    if (!this._boxWidth) {\n      this._boxWidth = $box.width();\n    }\n    $box.width(this._boxWidth);\n\n    month.$container = $box;\n    month.rendered = true;\n  }\n\n  /**\n   * @internal, use showDate, selectDate, shiftViewDate, etc. to change the view date\n   */\n  setViewDate(viewDate, animated) {\n    if (objects.equals(this.viewDate, viewDate)) {\n      return;\n    }\n    this._setProperty('viewDate', viewDate);\n    if (this.rendered) {\n      this._renderViewDate(animated);\n    }\n  }\n\n  _renderViewDate(animated) {\n    let month = this._findMonthByViewDate(this.viewDate);\n    let newLeft = this._scrollableLeftForMonth(month);\n    if (!this.currentMonth) {\n      // The first time a month is rendered, revalidate the layout.\n      // Reason: When the popup opens, the datepicker is not rendered yet, thus the preferred size cannot be determined\n      this.revalidateLayoutTree();\n    }\n    this.currentMonth = month;\n    this._updateHeader(this.viewDate);\n\n    animated = scout.nvl(animated, true);\n    if (!animated) {\n      this.$scrollable.cssLeft(newLeft);\n      this.resetMonths();\n    } else {\n      // Animate\n      // At first: stop existing animation when shifting multiple dates in a row (e.g. with mouse wheel)\n      this.$scrollable\n        .stop(true)\n        .animate({\n          left: newLeft\n        }, 300, () => {\n          this.resetMonths();\n        });\n    }\n  }\n\n  _layoutWeekendSeparators() {\n    this.months.forEach(m => this._layoutWeekendSeparator(m));\n  }\n\n  _layoutWeekendSeparator(month) {\n    if (!month.$weekendSeparator) {\n      return;\n    }\n    let $weekdays = this.$container.find('.date-picker-weekdays').first().children();\n    if ($weekdays.length < 6) {\n      return;\n    }\n\n    let $friday = $weekdays.eq(4); // Friday is always pos 4 as the separator is only available if the weeks starts on Monday\n    let $saturday = $weekdays.eq(5); // Saturday is always pos 5 as the separator is only available if the weeks starts on Monday\n\n    let fridayTopRight = graphics.position($friday).x + graphics.size($friday, {includeMargin: true}).width;\n    let saturdayTopLeft = graphics.position($saturday).x;\n    let space = saturdayTopLeft - fridayTopRight; // space between Friday cell an Saturday cell\n    let borderWidth = month.$weekendSeparator.cssBorderWidthX();\n\n    let posLeft = Math.floor(fridayTopRight + (space / 2) - borderWidth);\n    month.$weekendSeparator.cssLeft(posLeft);\n  }\n\n  preselectDate(date, animated) {\n    this.showDate(date, animated);\n    if (date) {\n      // Clear selection when a date is preselected\n      this.setSelectedDate(null);\n    }\n    this.setPreselectedDate(date);\n  }\n\n  /**\n   * @internal, use preselectDate to preselect a date\n   */\n  setPreselectedDate(preselectedDate) {\n    this.setProperty('preselectedDate', preselectedDate);\n  }\n\n  _renderPreselectedDate() {\n    if (!this.currentMonth) {\n      return;\n    }\n    let $box = this.currentMonth.$container;\n    $box.find('.date-picker-day').each((i, elem) => {\n      let $day = $(elem);\n      $day.removeClass('preselected');\n      if (dates.isSameDay(this.preselectedDate, $day.data('date'))) {\n        $day.addClass('preselected');\n      }\n    });\n  }\n\n  selectDate(date, animated) {\n    this.showDate(date, animated);\n    if (date) {\n      // Clear preselection when a date is selected\n      this.setPreselectedDate(null);\n    }\n    this.setSelectedDate(date);\n  }\n\n  /**\n   * @internal, use selectDate to select a date\n   */\n  setSelectedDate(selectedDate) {\n    this.setProperty('selectedDate', selectedDate);\n  }\n\n  _renderSelectedDate() {\n    if (!this.currentMonth) {\n      return;\n    }\n    let $box = this.currentMonth.$container;\n    $box.find('.date-picker-day').each((i, elem) => {\n      let $day = $(elem);\n      $day.removeClass('selected');\n      if (dates.isSameDay(this.selectedDate, $day.data('date'))) {\n        $day.addClass('selected');\n      }\n    });\n  }\n\n  /**\n   * Shows the month which contains the given date.\n   * @param {Date} date\n   * @param {boolean} [animated] - Default is true\n   */\n  showDate(viewDate, animated) {\n    let viewDateDiff = 0;\n    if (this.viewDate) {\n      viewDateDiff = dates.compareMonths(viewDate, this.viewDate);\n    }\n\n    if (this.currentMonth && viewDateDiff) {\n      if (viewDateDiff < 0) {\n        this.prependMonth(viewDate);\n      } else {\n        this.appendMonth(viewDate);\n      }\n    } else {\n      if (!this.currentMonth) {\n        // Initially (when the popup is opened), don't reset, just display one month.\n        // Reason: _renderMonths may not determine the proper scroll left yet\n        this.setMonths([viewDate]);\n      } else {\n        this.resetMonths(viewDate);\n      }\n    }\n    this.setViewDate(viewDate, animated);\n  }\n\n  shiftViewDate(years, months, days) {\n    let date = this.viewDate;\n    date = dates.shift(date, years, months, days);\n    this.showDate(date);\n  }\n\n  shiftSelectedDate(years, months, days) {\n    let date = this.preselectedDate;\n\n    if (this.selectedDate) {\n      if (this.allowedDates.length > 0) {\n        date = this._findNextAllowedDate(years, months, days);\n      } else {\n        date = dates.shift(this.selectedDate, years, months, days);\n      }\n    }\n\n    if (!date) {\n      return; // do nothing when no date was found\n    }\n\n    this.selectDate(date, true);\n  }\n\n  _findNextAllowedDate(years, months, days) {\n    let i, date,\n      sum = years + months + days,\n      dir = sum > 0 ? 1 : -1,\n      now = this.selectedDate || dates.trunc(new Date());\n\n    // if we shift by year or month, shift the 'now' date and then use that date as starting point\n    // to find the next allowed date.\n    if (years !== 0) {\n      now = dates.shift(now, years, 0, 0);\n    } else if (months !== 0) {\n      now = dates.shift(now, 0, months, 0);\n    }\n\n    if (dir === 1) { // find next allowed date, starting from currently selected date\n      for (i = 0; i < this.allowedDates.length; i++) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) < 0) {\n          return date;\n        }\n      }\n    } else if (dir === -1) { // find previous allowed date, starting from currently selected date\n      for (i = this.allowedDates.length - 1; i >= 0; i--) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) > 0) {\n          return date;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  _isDateAllowed(date) {\n    // when allowedDates is empty or not set, any date is allowed\n    if (this.allowedDates.length === 0) {\n      return true;\n    }\n    // when allowedDates is set, only dates contained in this array are allowed\n    let dateAsTimestamp = dates.trunc(date).getTime();\n    return this.allowedDates.some(allowedDate => allowedDate.getTime() === dateAsTimestamp);\n  }\n\n  _build$DateBox(viewDate) {\n    let cl, i, day, dayEnabled, dayInMonth, $day,\n      now = new Date(),\n      start = new Date(viewDate);\n\n    let $box = this.$container\n      .makeDiv('date-picker-month')\n      .data('viewDate', viewDate);\n\n    // Create weekday header\n    let $weekdays = $box.appendDiv('date-picker-weekdays');\n    this.dateFormat.symbols.weekdaysShortOrdered\n      .map(weekday => weekday.length > 2 ? weekday.substr(0, 2) : weekday)\n      .forEach(weekday => $weekdays.appendDiv('date-picker-weekday', weekday.toUpperCase()));\n\n    // Find start date (-1)\n    let $week;\n    for (let offset = 0; offset < 42; offset++) {\n      start.setDate(start.getDate() - 1);\n      let diff = new Date(start.getYear(), viewDate.getMonth(), 0).getDate() - start.getDate();\n      if ((start.getDay() === 0) && (start.getMonth() !== viewDate.getMonth()) && (diff > 1)) {\n        break;\n      }\n    }\n\n    // Create days\n    for (i = 0; i < 42; i++) {\n      if (i % 7 === 0) {\n        $week = $box.appendDiv('date-picker-week');\n      }\n\n      start.setDate(start.getDate() + 1);\n      dayInMonth = start.getDate();\n\n      if ((start.getDay() === 6) || (start.getDay() === 0)) {\n        cl = (start.getMonth() !== viewDate.getMonth() ? ' date-picker-out-weekend' : ' date-picker-weekend');\n        if (this._showWeekendSeparator && start.getDay() === 6) {\n          cl += ' date-picker-day-weekend-separator';\n        }\n      } else {\n        cl = (start.getMonth() !== viewDate.getMonth() ? ' date-picker-out' : '');\n      }\n\n      if (dates.isSameDay(start, now)) {\n        cl += ' date-picker-now';\n      }\n\n      if (dates.isSameDay(this.selectedDate, start)) {\n        cl += ' selected';\n      }\n\n      if (dates.isSameDay(this.preselectedDate, start)) {\n        cl += ' preselected';\n      }\n\n      // helps to center days between 10 and 19 nicer (especially when website is zoomed > 100%)\n      if (dayInMonth > 9 && dayInMonth < 20) {\n        cl += ' ten';\n      }\n\n      dayEnabled = this._isDateAllowed(start);\n      if (!dayEnabled) {\n        cl += ' disabled';\n      }\n\n      day = (dayInMonth <= 9 ? '0' + dayInMonth : dayInMonth);\n      $day = $week\n        .appendDiv('date-picker-day' + cl)\n        .data('dayInMonth', dayInMonth)\n        .data('date', new Date(start));\n      $day.appendSpan('text', day);\n\n      if (dayEnabled) {\n        $day.on('click', this._onDayClick.bind(this));\n      }\n    }\n\n    return $box;\n  }\n\n  _append$Header() {\n    let headerHtml =\n      '<div class=\"date-picker-header\">' +\n      '  <div class=\"date-picker-left-y\" data-shift=\"-12\"></div>' +\n      '  <div class=\"date-picker-left-m\" data-shift=\"-1\"></div>' +\n      '  <div class=\"date-picker-right-y\" data-shift=\"12\"></div>' +\n      '  <div class=\"date-picker-right-m\" data-shift=\"1\"></div>' +\n      '  <div class=\"date-picker-header-month\">&nbsp;</div>' +\n      '</div>';\n    return this.$container\n      .appendElement(headerHtml)\n      .toggleClass('touch', this.touch);\n  }\n\n  _updateHeader(viewDate) {\n    this._$header.find('.date-picker-header-month').text(this._createHeaderText(viewDate));\n  }\n\n  _createHeaderText(viewDate) {\n    let months = this.dateFormat.symbols.months;\n    return months[viewDate.getMonth()] + ' ' + viewDate.getFullYear();\n  }\n\n  _registerSwipeHandlers() {\n    let prevDate, nextDate;\n    let onDown = /** @type {SwipeCallbackEvent} */e => {\n      // stop pending animations, otherwise the months may be removed by the animation stop handler before touchend is executed\n      this.$scrollable.stop(true);\n\n      // Prepare months. On the first swipe the 3 boxes are already rendered, so nothing happens when setMonths is called.\n      // But on a subsequent swipe (while the pane is still moving) the next month needs to be rendered.\n      prevDate = dates.shift(this.viewDate, 0, -1, 0);\n      nextDate = dates.shift(this.viewDate, 0, 1, 0);\n      this.setMonths([prevDate, this.viewDate, nextDate]);\n      this.swiped = false;\n      return true;\n    };\n    let onMove = /** @type {SwipeCallbackEvent} */e => {\n      let minX = this.$container.width() - this.$scrollable.outerWidth();\n      let newScrollableLeft = Math.max(Math.min(e.newLeft, 0), minX); // limit the drag range\n      if (newScrollableLeft !== e.originalLeft) {\n        this.$scrollable.cssLeft(newScrollableLeft); // set the new position\n      }\n      return newScrollableLeft;\n    };\n    let onUp = /** @type {SwipeCallbackEvent} */e => {\n      // If the movement is less than this value (in px), the swipe won't happen. Instead, the value is selected.\n      let minMove = 5;\n      let viewDate = this.viewDate;\n\n      // Detect in which direction the swipe happened\n      if (e.deltaX < -minMove) {\n        viewDate = nextDate; // dragged left -> use next month\n      } else if (e.deltaX > minMove) {\n        viewDate = prevDate; // dragged right -> use previous month\n      }\n\n      if (this.viewDate !== viewDate) {\n        this.swiped = true;\n        this.setViewDate(viewDate);\n      }\n    };\n    events.onSwipe(this.$scrollable, 'datepickerDrag', onDown, onMove, onUp);\n  }\n\n  _onNavigationMouseDown(event) {\n    let $target = $(event.currentTarget);\n    let diff = $target.data('shift');\n    this.shiftViewDate(0, diff, 0);\n  }\n\n  _onDayClick(event) {\n    if (this.swiped) {\n      // Don't handle on a swipe action\n      return;\n    }\n    let $target = $(event.currentTarget);\n    let date = $target.data('date');\n    this.selectDate(date);\n    this.trigger('dateSelect', {\n      date: date\n    });\n  }\n\n  _onMouseWheel(event) {\n    event = event.originalEvent || this.$container.window(true).event.originalEvent;\n    let wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n    let diff = (wheelData >= 0 ? -1 : 1);\n    this.shiftViewDate(0, diff, 0);\n    event.preventDefault();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}