{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Form, FormField } from '../../../index';\nexport default class WrappedFormField extends FormField {\n  constructor() {\n    super();\n    this._addWidgetProperties(['innerForm']);\n    this.innerForm = null;\n    this.initialFocusEnabled = false;\n    this._formDestroyHandler = this._onInnerFormDestroy.bind(this);\n  }\n  _init(model) {\n    super._init(model);\n    this._setInnerForm(this.innerForm);\n  }\n  _render() {\n    this.addContainer(this.$parent, 'wrapped-form-field');\n    this.addLabel();\n    this.addStatus();\n  }\n  _renderProperties() {\n    super._renderProperties();\n    this._renderInnerForm();\n  }\n  setInnerForm(innerForm) {\n    this.setProperty('innerForm', innerForm);\n  }\n  _setInnerForm(innerForm) {\n    if (this.innerForm) {\n      this.innerForm.off('destroy', this._formDestroyHandler);\n    }\n    if (innerForm) {\n      innerForm.on('destroy', this._formDestroyHandler);\n    }\n    this._setProperty('innerForm', innerForm);\n  }\n\n  /**\n   * Will also be called by model adapter on property change event\n   */\n  _renderInnerForm() {\n    if (!this.innerForm) {\n      return;\n    }\n    this.innerForm.setDisplayHint(Form.DisplayHint.VIEW); // by definition, an inner form is a view.\n    this.innerForm.setModal(false); // by definition, an inner form is not modal.\n    this.innerForm.setClosable(false); // Disable close key stroke\n    this.innerForm.renderInitialFocusEnabled = this.initialFocusEnabled; // do not render initial focus of form if disabled.\n\n    this.innerForm.render();\n    this.addField(this.innerForm.$container);\n    this.innerForm.invalidateLayoutTree();\n\n    // required because active element is lost when 'addField' is called.\n    this._renderInitialFocusEnabled();\n  }\n  _removeInnerForm() {\n    if (this.innerForm) {\n      this.innerForm.remove();\n    }\n    this._removeField();\n  }\n  _onInnerFormDestroy(event) {\n    this._removeInnerForm();\n    this._setInnerForm(null);\n  }\n  _renderInitialFocusEnabled() {\n    if (this.innerForm && this.initialFocusEnabled) {\n      this.innerForm.renderInitialFocus();\n    }\n  }\n}","map":{"version":3,"names":["Form","FormField","WrappedFormField","constructor","_addWidgetProperties","innerForm","initialFocusEnabled","_formDestroyHandler","_onInnerFormDestroy","bind","_init","model","_setInnerForm","_render","addContainer","$parent","addLabel","addStatus","_renderProperties","_renderInnerForm","setInnerForm","setProperty","off","on","_setProperty","setDisplayHint","DisplayHint","VIEW","setModal","setClosable","renderInitialFocusEnabled","render","addField","$container","invalidateLayoutTree","_renderInitialFocusEnabled","_removeInnerForm","remove","_removeField","event","renderInitialFocus"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/form/fields/wrappedform/WrappedFormField.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Form, FormField} from '../../../index';\n\nexport default class WrappedFormField extends FormField {\n\n  constructor() {\n    super();\n    this._addWidgetProperties(['innerForm']);\n    this.innerForm = null;\n    this.initialFocusEnabled = false;\n\n    this._formDestroyHandler = this._onInnerFormDestroy.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setInnerForm(this.innerForm);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'wrapped-form-field');\n    this.addLabel();\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderInnerForm();\n  }\n\n  setInnerForm(innerForm) {\n    this.setProperty('innerForm', innerForm);\n  }\n\n  _setInnerForm(innerForm) {\n    if (this.innerForm) {\n      this.innerForm.off('destroy', this._formDestroyHandler);\n    }\n    if (innerForm) {\n      innerForm.on('destroy', this._formDestroyHandler);\n    }\n    this._setProperty('innerForm', innerForm);\n  }\n\n  /**\n   * Will also be called by model adapter on property change event\n   */\n  _renderInnerForm() {\n    if (!this.innerForm) {\n      return;\n    }\n\n    this.innerForm.setDisplayHint(Form.DisplayHint.VIEW); // by definition, an inner form is a view.\n    this.innerForm.setModal(false); // by definition, an inner form is not modal.\n    this.innerForm.setClosable(false); // Disable close key stroke\n    this.innerForm.renderInitialFocusEnabled = this.initialFocusEnabled; // do not render initial focus of form if disabled.\n\n    this.innerForm.render();\n\n    this.addField(this.innerForm.$container);\n    this.innerForm.invalidateLayoutTree();\n\n    // required because active element is lost when 'addField' is called.\n    this._renderInitialFocusEnabled();\n  }\n\n  _removeInnerForm() {\n    if (this.innerForm) {\n      this.innerForm.remove();\n    }\n    this._removeField();\n  }\n\n  _onInnerFormDestroy(event) {\n    this._removeInnerForm();\n    this._setInnerForm(null);\n  }\n\n  _renderInitialFocusEnabled() {\n    if (this.innerForm && this.initialFocusEnabled) {\n      this.innerForm.renderInitialFocus();\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,SAAS,QAAO,gBAAgB;AAE9C,eAAe,MAAMC,gBAAgB,SAASD,SAAS,CAAC;EAEtDE,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC;IACxC,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAEhC,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACC,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC;EAChE;EAEAC,KAAK,CAACC,KAAK,EAAE;IACX,KAAK,CAACD,KAAK,CAACC,KAAK,CAAC;IAClB,IAAI,CAACC,aAAa,CAAC,IAAI,CAACP,SAAS,CAAC;EACpC;EAEAQ,OAAO,GAAG;IACR,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,OAAO,EAAE,oBAAoB,CAAC;IACrD,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,iBAAiB,GAAG;IAClB,KAAK,CAACA,iBAAiB,EAAE;IACzB,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAC,YAAY,CAACf,SAAS,EAAE;IACtB,IAAI,CAACgB,WAAW,CAAC,WAAW,EAAEhB,SAAS,CAAC;EAC1C;EAEAO,aAAa,CAACP,SAAS,EAAE;IACvB,IAAI,IAAI,CAACA,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACiB,GAAG,CAAC,SAAS,EAAE,IAAI,CAACf,mBAAmB,CAAC;IACzD;IACA,IAAIF,SAAS,EAAE;MACbA,SAAS,CAACkB,EAAE,CAAC,SAAS,EAAE,IAAI,CAAChB,mBAAmB,CAAC;IACnD;IACA,IAAI,CAACiB,YAAY,CAAC,WAAW,EAAEnB,SAAS,CAAC;EAC3C;;EAEA;AACF;AACA;EACEc,gBAAgB,GAAG;IACjB,IAAI,CAAC,IAAI,CAACd,SAAS,EAAE;MACnB;IACF;IAEA,IAAI,CAACA,SAAS,CAACoB,cAAc,CAACzB,IAAI,CAAC0B,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC;IACtD,IAAI,CAACtB,SAAS,CAACuB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,IAAI,CAACvB,SAAS,CAACwB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACnC,IAAI,CAACxB,SAAS,CAACyB,yBAAyB,GAAG,IAAI,CAACxB,mBAAmB,CAAC,CAAC;;IAErE,IAAI,CAACD,SAAS,CAAC0B,MAAM,EAAE;IAEvB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAC3B,SAAS,CAAC4B,UAAU,CAAC;IACxC,IAAI,CAAC5B,SAAS,CAAC6B,oBAAoB,EAAE;;IAErC;IACA,IAAI,CAACC,0BAA0B,EAAE;EACnC;EAEAC,gBAAgB,GAAG;IACjB,IAAI,IAAI,CAAC/B,SAAS,EAAE;MAClB,IAAI,CAACA,SAAS,CAACgC,MAAM,EAAE;IACzB;IACA,IAAI,CAACC,YAAY,EAAE;EACrB;EAEA9B,mBAAmB,CAAC+B,KAAK,EAAE;IACzB,IAAI,CAACH,gBAAgB,EAAE;IACvB,IAAI,CAACxB,aAAa,CAAC,IAAI,CAAC;EAC1B;EAEAuB,0BAA0B,GAAG;IAC3B,IAAI,IAAI,CAAC9B,SAAS,IAAI,IAAI,CAACC,mBAAmB,EAAE;MAC9C,IAAI,CAACD,SAAS,CAACmC,kBAAkB,EAAE;IACrC;EACF;AACF"},"metadata":{},"sourceType":"module"}