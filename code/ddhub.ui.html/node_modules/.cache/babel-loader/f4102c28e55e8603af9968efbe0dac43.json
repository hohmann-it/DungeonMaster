{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractCompactTreeControlKeyStroke, keys } from '../../index';\nexport default class CompactTreeLeftKeyStroke extends AbstractCompactTreeControlKeyStroke {\n  constructor(compactProcessTree) {\n    super(compactProcessTree);\n    this.renderingHints.text = '←';\n    this.which = [keys.LEFT];\n  }\n  _findNextNode($currentNode, currentNode) {\n    // Find first process node of previous section, or first process node.\n    return $currentNode.parent().prev('.section').children('.section-node').first().data('node') || $currentNode.parent().children('.section-node').not($currentNode).first().data('node');\n  }\n}","map":{"version":3,"names":["AbstractCompactTreeControlKeyStroke","keys","CompactTreeLeftKeyStroke","constructor","compactProcessTree","renderingHints","text","which","LEFT","_findNextNode","$currentNode","currentNode","parent","prev","children","first","data","not"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tree/keystrokes/CompactTreeLeftKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractCompactTreeControlKeyStroke, keys} from '../../index';\n\nexport default class CompactTreeLeftKeyStroke extends AbstractCompactTreeControlKeyStroke {\n\n  constructor(compactProcessTree) {\n    super(compactProcessTree);\n    this.renderingHints.text = '←';\n    this.which = [keys.LEFT];\n  }\n\n  _findNextNode($currentNode, currentNode) {\n    // Find first process node of previous section, or first process node.\n    return $currentNode.parent().prev('.section').children('.section-node').first().data('node') || $currentNode.parent().children('.section-node').not($currentNode).first().data('node');\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mCAAmC,EAAEC,IAAI,QAAO,aAAa;AAErE,eAAe,MAAMC,wBAAwB,SAASF,mCAAmC,CAAC;EAExFG,WAAW,CAACC,kBAAkB,EAAE;IAC9B,KAAK,CAACA,kBAAkB,CAAC;IACzB,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACC,KAAK,GAAG,CAACN,IAAI,CAACO,IAAI,CAAC;EAC1B;EAEAC,aAAa,CAACC,YAAY,EAAEC,WAAW,EAAE;IACvC;IACA,OAAOD,YAAY,CAACE,MAAM,EAAE,CAACC,IAAI,CAAC,UAAU,CAAC,CAACC,QAAQ,CAAC,eAAe,CAAC,CAACC,KAAK,EAAE,CAACC,IAAI,CAAC,MAAM,CAAC,IAAIN,YAAY,CAACE,MAAM,EAAE,CAACE,QAAQ,CAAC,eAAe,CAAC,CAACG,GAAG,CAACP,YAAY,CAAC,CAACK,KAAK,EAAE,CAACC,IAAI,CAAC,MAAM,CAAC;EACxL;AACF"},"metadata":{},"sourceType":"module"}