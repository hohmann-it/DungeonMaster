{"ast":null,"code":"/*\n * Copyright (c) 2014-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { strings } from '../index';\nimport $ from 'jquery';\n\n/**\n * @class\n * @constructor\n */\nexport default class Cell {\n  constructor() {\n    this.cssClass = null;\n    this.editable = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.errorStatus = null;\n    this.horizontalAlignment = null; /* do not initialize with -1. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.htmlEnabled = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.iconId = null;\n    this.mandatory = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this._cachedEncodedText = null;\n    this.text = null;\n    this.value = null;\n    this.tooltipText = null;\n    this.sortCode = null;\n  }\n  init(model) {\n    this._init(model);\n  }\n  _init(model) {\n    $.extend(this, model);\n  }\n  update(model) {\n    this.setText(model.text);\n    $.extend(this, model);\n  }\n  setEditable(editable) {\n    this.editable = editable;\n  }\n  setMandatory(mandatory) {\n    this.mandatory = mandatory;\n  }\n  setHorizontalAlignment(hAlign) {\n    this.horizontalAlignment = hAlign;\n  }\n  setValue(value) {\n    this.value = value;\n  }\n  setErrorStatus(errorStatus) {\n    this.errorStatus = errorStatus;\n  }\n  setText(text) {\n    let oldText = this.text;\n    this.text = text;\n\n    // reset cached encodedText, so when encodedText() is called the next time\n    // it will be set to the a new value\n    if (oldText !== this.text) {\n      this._cachedEncodedText = null;\n    }\n  }\n  setIconId(iconId) {\n    this.iconId = iconId;\n  }\n  encodedText() {\n    if (!this._cachedEncodedText) {\n      // Encode text and cache it, encoding is expensive\n      this._cachedEncodedText = strings.encode(this.text);\n    }\n    return this._cachedEncodedText;\n  }\n  setCssClass(cssClass) {\n    this.cssClass = cssClass;\n  }\n  setSortCode(sortCode) {\n    this.sortCode = sortCode;\n  }\n}","map":{"version":3,"names":["strings","$","Cell","constructor","cssClass","editable","errorStatus","horizontalAlignment","htmlEnabled","iconId","mandatory","_cachedEncodedText","text","value","tooltipText","sortCode","init","model","_init","extend","update","setText","setEditable","setMandatory","setHorizontalAlignment","hAlign","setValue","setErrorStatus","oldText","setIconId","encodedText","encode","setCssClass","setSortCode"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/cell/Cell.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {strings} from '../index';\nimport $ from 'jquery';\n\n/**\n * @class\n * @constructor\n */\nexport default class Cell {\n\n  constructor() {\n    this.cssClass = null;\n    this.editable = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.errorStatus = null;\n    this.horizontalAlignment = null; /* do not initialize with -1. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.htmlEnabled = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this.iconId = null;\n    this.mandatory = null; /* do not initialize with false. This is required because there's a subtle logic in Column.js (_initCell) which checks if a value is set. */\n    this._cachedEncodedText = null;\n    this.text = null;\n    this.value = null;\n    this.tooltipText = null;\n    this.sortCode = null;\n  }\n\n  init(model) {\n    this._init(model);\n  }\n\n  _init(model) {\n    $.extend(this, model);\n  }\n\n  update(model) {\n    this.setText(model.text);\n    $.extend(this, model);\n  }\n\n  setEditable(editable) {\n    this.editable = editable;\n  }\n\n  setMandatory(mandatory) {\n    this.mandatory = mandatory;\n  }\n\n  setHorizontalAlignment(hAlign) {\n    this.horizontalAlignment = hAlign;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  setErrorStatus(errorStatus) {\n    this.errorStatus = errorStatus;\n  }\n\n  setText(text) {\n    let oldText = this.text;\n    this.text = text;\n\n    // reset cached encodedText, so when encodedText() is called the next time\n    // it will be set to the a new value\n    if (oldText !== this.text) {\n      this._cachedEncodedText = null;\n    }\n  }\n\n  setIconId(iconId) {\n    this.iconId = iconId;\n  }\n\n  encodedText() {\n    if (!this._cachedEncodedText) {\n      // Encode text and cache it, encoding is expensive\n      this._cachedEncodedText = strings.encode(this.text);\n    }\n    return this._cachedEncodedText;\n  }\n\n  setCssClass(cssClass) {\n    this.cssClass = cssClass;\n  }\n\n  setSortCode(sortCode) {\n    this.sortCode = sortCode;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAO,QAAO,UAAU;AAChC,OAAOC,CAAC,MAAM,QAAQ;;AAEtB;AACA;AACA;AACA;AACA,eAAe,MAAMC,IAAI,CAAC;EAExBC,WAAW,GAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAC,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAAC,CAAC;IACjC,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC,CAAC;IACvB,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,QAAQ,GAAG,IAAI;EACtB;EAEAC,IAAI,CAACC,KAAK,EAAE;IACV,IAAI,CAACC,KAAK,CAACD,KAAK,CAAC;EACnB;EAEAC,KAAK,CAACD,KAAK,EAAE;IACXhB,CAAC,CAACkB,MAAM,CAAC,IAAI,EAAEF,KAAK,CAAC;EACvB;EAEAG,MAAM,CAACH,KAAK,EAAE;IACZ,IAAI,CAACI,OAAO,CAACJ,KAAK,CAACL,IAAI,CAAC;IACxBX,CAAC,CAACkB,MAAM,CAAC,IAAI,EAAEF,KAAK,CAAC;EACvB;EAEAK,WAAW,CAACjB,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAkB,YAAY,CAACb,SAAS,EAAE;IACtB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC5B;EAEAc,sBAAsB,CAACC,MAAM,EAAE;IAC7B,IAAI,CAAClB,mBAAmB,GAAGkB,MAAM;EACnC;EAEAC,QAAQ,CAACb,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAc,cAAc,CAACrB,WAAW,EAAE;IAC1B,IAAI,CAACA,WAAW,GAAGA,WAAW;EAChC;EAEAe,OAAO,CAACT,IAAI,EAAE;IACZ,IAAIgB,OAAO,GAAG,IAAI,CAAChB,IAAI;IACvB,IAAI,CAACA,IAAI,GAAGA,IAAI;;IAEhB;IACA;IACA,IAAIgB,OAAO,KAAK,IAAI,CAAChB,IAAI,EAAE;MACzB,IAAI,CAACD,kBAAkB,GAAG,IAAI;IAChC;EACF;EAEAkB,SAAS,CAACpB,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEAqB,WAAW,GAAG;IACZ,IAAI,CAAC,IAAI,CAACnB,kBAAkB,EAAE;MAC5B;MACA,IAAI,CAACA,kBAAkB,GAAGX,OAAO,CAAC+B,MAAM,CAAC,IAAI,CAACnB,IAAI,CAAC;IACrD;IACA,OAAO,IAAI,CAACD,kBAAkB;EAChC;EAEAqB,WAAW,CAAC5B,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEA6B,WAAW,CAAClB,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;AACF"},"metadata":{},"sourceType":"module"}