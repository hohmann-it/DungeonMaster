{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AjaxError, Call, URL } from '../index';\nimport $ from 'jquery';\nexport default class AjaxCall extends Call {\n  constructor() {\n    super();\n    this.type = 'ajax';\n    this.ajaxOptions = null;\n  }\n  init(model) {\n    if (!model) {\n      throw new Error('Missing argument \"model\"');\n    }\n    if (!model.ajaxOptions) {\n      throw new Error('Missing model property \"ajaxOptions\"');\n    }\n    if (!model.name) {\n      model.name = model.ajaxOptions.url;\n    }\n    super.init(model);\n  }\n\n  // ==================================================================================\n\n  _callImpl() {\n    // Mark retries by adding an URL parameter\n    if (this.callCounter !== 1) {\n      this.ajaxOptions.url = new URL(this.ajaxOptions.url).setParameter('retry', this.callCounter - 1).toString({\n        alwaysLast: ['retry']\n      });\n    }\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + (this.callCounter === 1 ? '--- ' : '') + this.ajaxOptions.type + ' \"' + this.ajaxOptions.url + '\"' + (this.callCounter === 1 ? ' ---' : ''));\n    return $.ajax(this.ajaxOptions);\n  }\n  _setResultFail(jqXHR, textStatus, errorThrown) {\n    // Store result as single object to make rethrowing the error easier for callers of AjaxCall\n    this._setResult(new AjaxError({\n      jqXHR: jqXHR,\n      textStatus: textStatus,\n      errorThrown: errorThrown,\n      requestOptions: this.ajaxOptions\n    }));\n  }\n  _onCallDone(data, textStatus, jqXHR) {\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'AJAX success');\n    super._onCallDone(data, textStatus, jqXHR);\n  }\n  _onCallFail(jqXHR, textStatus, errorThrown) {\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'AJAX fail: type=' + textStatus + ', httpStatus=' + jqXHR.status + (errorThrown ? ' \"' + errorThrown + '\"' : ''));\n    super._onCallFail(jqXHR, textStatus, errorThrown);\n  }\n  _nextRetryImpl(jqXHR, textStatus, errorThrown) {\n    let offlineError = AjaxCall.isOfflineError(jqXHR, textStatus, errorThrown, this.request);\n    if (!offlineError) {\n      $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'Unexpected HTTP error');\n      return false;\n    }\n    return super._nextRetryImpl();\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  static isOfflineError(jqXHR, textStatus, errorThrown, request) {\n    // noinspection UnnecessaryLocalVariableJS\n    let offline =\n    // Status code = 0 -> no connection\n    !jqXHR.status ||\n    // Workaround for IE 9: Apparently, Windows network error codes (http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx)\n    // are passed to JS as HTTP 'status' in some cases (e.g. when server goes offline).\n    jqXHR.status >= 12000 ||\n    // Status code 502 = Bad Gateway\n    // Status code 503 = Service Unavailable\n    // Status code 504 = Gateway Timeout\n    // Those codes usually happen when some network component between browser and UI server (e.g. a load balancer)\n    // has a short outage, most likely only temporarily. Therefore, we treat them like a lost connection.\n    // Otherwise, the polling loop would break, eventually causing the HTTP session to be invalidated on the\n    // server due to inactivity. Going offline starts the reconnector which regularly emits ping requests.\n    // This allows us to reconnect to the server as soon as the connection is fixed, hopefully saving the\n    // HTTP session from inactivation.\n    jqXHR.status === 502 || jqXHR.status === 503 || jqXHR.status === 504;\n    return offline;\n  }\n}","map":{"version":3,"names":["AjaxError","Call","URL","$","AjaxCall","constructor","type","ajaxOptions","init","model","Error","name","url","_callImpl","callCounter","setParameter","toString","alwaysLast","log","isTraceEnabled","trace","logPrefix","ajax","_setResultFail","jqXHR","textStatus","errorThrown","_setResult","requestOptions","_onCallDone","data","_onCallFail","status","_nextRetryImpl","offlineError","isOfflineError","request","offline"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/ajax/AjaxCall.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AjaxError, Call, URL} from '../index';\nimport $ from 'jquery';\n\nexport default class AjaxCall extends Call {\n\n  constructor() {\n    super();\n    this.type = 'ajax';\n    this.ajaxOptions = null;\n  }\n\n  init(model) {\n    if (!model) {\n      throw new Error('Missing argument \"model\"');\n    }\n    if (!model.ajaxOptions) {\n      throw new Error('Missing model property \"ajaxOptions\"');\n    }\n    if (!model.name) {\n      model.name = model.ajaxOptions.url;\n    }\n    super.init(model);\n  }\n\n  // ==================================================================================\n\n  _callImpl() {\n    // Mark retries by adding an URL parameter\n    if (this.callCounter !== 1) {\n      this.ajaxOptions.url = new URL(this.ajaxOptions.url).setParameter('retry', this.callCounter - 1).toString({\n        alwaysLast: ['retry']\n      });\n    }\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + (this.callCounter === 1 ? '--- ' : '') + this.ajaxOptions.type + ' \"' + this.ajaxOptions.url + '\"' + (this.callCounter === 1 ? ' ---' : ''));\n\n    return $.ajax(this.ajaxOptions);\n  }\n\n  _setResultFail(jqXHR, textStatus, errorThrown) {\n    // Store result as single object to make rethrowing the error easier for callers of AjaxCall\n    this._setResult(new AjaxError({\n      jqXHR: jqXHR,\n      textStatus: textStatus,\n      errorThrown: errorThrown,\n      requestOptions: this.ajaxOptions\n    }));\n  }\n\n  _onCallDone(data, textStatus, jqXHR) {\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'AJAX success');\n    super._onCallDone(data, textStatus, jqXHR);\n  }\n\n  _onCallFail(jqXHR, textStatus, errorThrown) {\n    $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'AJAX fail: type=' + textStatus + ', httpStatus=' + jqXHR.status + (errorThrown ? ' \"' + errorThrown + '\"' : ''));\n    super._onCallFail(jqXHR, textStatus, errorThrown);\n  }\n\n  _nextRetryImpl(jqXHR, textStatus, errorThrown) {\n    let offlineError = AjaxCall.isOfflineError(jqXHR, textStatus, errorThrown, this.request);\n    if (!offlineError) {\n      $.log.isTraceEnabled() && $.log.trace(this.logPrefix + 'Unexpected HTTP error');\n      return false;\n    }\n    return super._nextRetryImpl();\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  static isOfflineError(jqXHR, textStatus, errorThrown, request) {\n    // noinspection UnnecessaryLocalVariableJS\n    let offline = (\n      // Status code = 0 -> no connection\n      !jqXHR.status ||\n      // Workaround for IE 9: Apparently, Windows network error codes (http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx)\n      // are passed to JS as HTTP 'status' in some cases (e.g. when server goes offline).\n      jqXHR.status >= 12000 ||\n      // Status code 502 = Bad Gateway\n      // Status code 503 = Service Unavailable\n      // Status code 504 = Gateway Timeout\n      // Those codes usually happen when some network component between browser and UI server (e.g. a load balancer)\n      // has a short outage, most likely only temporarily. Therefore, we treat them like a lost connection.\n      // Otherwise, the polling loop would break, eventually causing the HTTP session to be invalidated on the\n      // server due to inactivity. Going offline starts the reconnector which regularly emits ping requests.\n      // This allows us to reconnect to the server as soon as the connection is fixed, hopefully saving the\n      // HTTP session from inactivation.\n      jqXHR.status === 502 ||\n      jqXHR.status === 503 ||\n      jqXHR.status === 504\n    );\n    return offline;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}