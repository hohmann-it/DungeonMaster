{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, TileGridSelectKeyStroke } from '../../index';\nexport default class TileGridSelectAllKeyStroke extends TileGridSelectKeyStroke {\n  constructor(tileGrid) {\n    super(tileGrid);\n    this.ctrl = true;\n    this.shift = false;\n    this.which = [keys.A];\n    this.renderingHints.$drawingArea = function ($drawingArea, event) {\n      let tile = this.getSelectionHandler().getVisibleTiles()[0];\n      if (tile) {\n        // Draw in first tile so that other key stroke hints (e.g. left, right etc.) don't overlap this one\n        return tile.$container;\n      }\n    }.bind(this);\n  }\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    if (!this.getSelectionHandler().isMultiSelect()) {\n      return false;\n    }\n    return true;\n  }\n  handle(event) {\n    this.getSelectionHandler().toggleSelection();\n  }\n}","map":{"version":3,"names":["keys","TileGridSelectKeyStroke","TileGridSelectAllKeyStroke","constructor","tileGrid","ctrl","shift","which","A","renderingHints","$drawingArea","event","tile","getSelectionHandler","getVisibleTiles","$container","bind","_accept","accepted","isMultiSelect","handle","toggleSelection"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/tile/keystrokes/TileGridSelectAllKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, TileGridSelectKeyStroke} from '../../index';\n\nexport default class TileGridSelectAllKeyStroke extends TileGridSelectKeyStroke {\n\n  constructor(tileGrid) {\n    super(tileGrid);\n    this.ctrl = true;\n    this.shift = false;\n    this.which = [keys.A];\n    this.renderingHints.$drawingArea = function($drawingArea, event) {\n      let tile = this.getSelectionHandler().getVisibleTiles()[0];\n      if (tile) {\n        // Draw in first tile so that other key stroke hints (e.g. left, right etc.) don't overlap this one\n        return tile.$container;\n      }\n    }.bind(this);\n  }\n\n  _accept(event) {\n    let accepted = super._accept(event);\n    if (!accepted) {\n      return false;\n    }\n    if (!this.getSelectionHandler().isMultiSelect()) {\n      return false;\n    }\n    return true;\n  }\n\n  handle(event) {\n    this.getSelectionHandler().toggleSelection();\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAI,EAAEC,uBAAuB,QAAO,aAAa;AAEzD,eAAe,MAAMC,0BAA0B,SAASD,uBAAuB,CAAC;EAE9EE,WAAW,CAACC,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IACf,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG,CAACP,IAAI,CAACQ,CAAC,CAAC;IACrB,IAAI,CAACC,cAAc,CAACC,YAAY,GAAG,UAASA,YAAY,EAAEC,KAAK,EAAE;MAC/D,IAAIC,IAAI,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAACC,eAAe,EAAE,CAAC,CAAC,CAAC;MAC1D,IAAIF,IAAI,EAAE;QACR;QACA,OAAOA,IAAI,CAACG,UAAU;MACxB;IACF,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACd;EAEAC,OAAO,CAACN,KAAK,EAAE;IACb,IAAIO,QAAQ,GAAG,KAAK,CAACD,OAAO,CAACN,KAAK,CAAC;IACnC,IAAI,CAACO,QAAQ,EAAE;MACb,OAAO,KAAK;IACd;IACA,IAAI,CAAC,IAAI,CAACL,mBAAmB,EAAE,CAACM,aAAa,EAAE,EAAE;MAC/C,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EAEAC,MAAM,CAACT,KAAK,EAAE;IACZ,IAAI,CAACE,mBAAmB,EAAE,CAACQ,eAAe,EAAE;EAC9C;AACF"},"metadata":{},"sourceType":"module"}