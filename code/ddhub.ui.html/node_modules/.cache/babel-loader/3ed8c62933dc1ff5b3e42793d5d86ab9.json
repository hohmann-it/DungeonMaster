{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, arrays, keys, scout } from '../../index';\nexport default class TableNavigationUpKeyStroke extends AbstractTableNavigationKeyStroke {\n  constructor(table) {\n    super(table);\n    this.which = [keys.UP];\n    this.renderingHints.text = '↑';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.firstRowBeforeSelection();\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n  handle(event) {\n    let table = this.field,\n      rows = table.visibleRows,\n      selectedRows = table.selectedRows,\n      lastActionRow = table.selectionHandler.lastActionRow,\n      lastActionRowIndex = -1,\n      newActionRowIndex = -1,\n      newSelectedRows,\n      newActionRow;\n    if (lastActionRow) {\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n    if (rows.length > 1 && (selectedRows.length > 0 || lastActionRowIndex > -1)) {\n      // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n      if (lastActionRowIndex < 0) {\n        if (rows.length === selectedRows.length) {\n          lastActionRow = arrays.last(rows);\n        } else {\n          lastActionRow = arrays.first(selectedRows);\n        }\n        lastActionRowIndex = rows.indexOf(lastActionRow);\n      }\n      if (lastActionRowIndex === 0) {\n        return;\n      }\n      newActionRowIndex = lastActionRowIndex - 1;\n      newActionRow = rows[newActionRowIndex];\n      newSelectedRows = [newActionRow];\n      if (event.shiftKey) {\n        if (table.isRowSelected(newActionRow)) {\n          // if new action row already is selected, remove last action row from selection\n          // use case: rows 2,3,4 are selected, last action row is 4. User presses shift-up -> rows 2,3 need to be the new selection\n          newSelectedRows = [];\n          arrays.pushAll(newSelectedRows, selectedRows);\n          // only unselect when first or last row (but not in the middle of the selection, see #172929)\n          let selectionIndizes = table.selectionHandler.getMinMaxSelectionIndizes();\n          if (scout.isOneOf(lastActionRowIndex, selectionIndizes[0], selectionIndizes[1])) {\n            arrays.remove(newSelectedRows, lastActionRow);\n          }\n        } else {\n          newSelectedRows = arrays.union(newSelectedRows, selectedRows);\n          newActionRow = this._findLastSelectedRowBefore(table, newActionRowIndex);\n        }\n      }\n    } else {\n      newSelectedRows = [arrays.last(rows)];\n      newActionRow = newSelectedRows[0];\n    }\n    table.selectionHandler.lastActionRow = newActionRow;\n    table.selectRows(newSelectedRows, true);\n    table.scrollTo(newActionRow);\n    if (!table.isFocused()) {\n      table.focus();\n    }\n  }\n}","map":{"version":3,"names":["AbstractTableNavigationKeyStroke","arrays","keys","scout","TableNavigationUpKeyStroke","constructor","table","which","UP","renderingHints","text","$drawingArea","event","row","firstRowBeforeSelection","$row","handle","field","rows","visibleRows","selectedRows","lastActionRow","selectionHandler","lastActionRowIndex","newActionRowIndex","newSelectedRows","newActionRow","indexOf","length","last","first","shiftKey","isRowSelected","pushAll","selectionIndizes","getMinMaxSelectionIndizes","isOneOf","remove","union","_findLastSelectedRowBefore","selectRows","scrollTo","isFocused","focus"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationUpKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, arrays, keys, scout} from '../../index';\n\nexport default class TableNavigationUpKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.which = [keys.UP];\n    this.renderingHints.text = '↑';\n    this.renderingHints.$drawingArea = ($drawingArea, event) => {\n      let row = this.firstRowBeforeSelection();\n      if (row) {\n        return row.$row;\n      }\n    };\n  }\n\n  handle(event) {\n    let table = this.field,\n      rows = table.visibleRows,\n      selectedRows = table.selectedRows,\n      lastActionRow = table.selectionHandler.lastActionRow,\n      lastActionRowIndex = -1,\n      newActionRowIndex = -1,\n      newSelectedRows, newActionRow;\n\n    if (lastActionRow) {\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n\n    if (rows.length > 1 && (selectedRows.length > 0 || lastActionRowIndex > -1)) {\n      // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n      if (lastActionRowIndex < 0) {\n        if (rows.length === selectedRows.length) {\n          lastActionRow = arrays.last(rows);\n        } else {\n          lastActionRow = arrays.first(selectedRows);\n        }\n        lastActionRowIndex = rows.indexOf(lastActionRow);\n      }\n      if (lastActionRowIndex === 0) {\n        return;\n      }\n\n      newActionRowIndex = lastActionRowIndex - 1;\n      newActionRow = rows[newActionRowIndex];\n      newSelectedRows = [newActionRow];\n\n      if (event.shiftKey) {\n        if (table.isRowSelected(newActionRow)) {\n          // if new action row already is selected, remove last action row from selection\n          // use case: rows 2,3,4 are selected, last action row is 4. User presses shift-up -> rows 2,3 need to be the new selection\n          newSelectedRows = [];\n          arrays.pushAll(newSelectedRows, selectedRows);\n          // only unselect when first or last row (but not in the middle of the selection, see #172929)\n          let selectionIndizes = table.selectionHandler.getMinMaxSelectionIndizes();\n          if (scout.isOneOf(lastActionRowIndex, selectionIndizes[0], selectionIndizes[1])) {\n            arrays.remove(newSelectedRows, lastActionRow);\n          }\n        } else {\n          newSelectedRows = arrays.union(newSelectedRows, selectedRows);\n          newActionRow = this._findLastSelectedRowBefore(table, newActionRowIndex);\n        }\n      }\n    } else {\n      newSelectedRows = [arrays.last(rows)];\n      newActionRow = newSelectedRows[0];\n    }\n\n    table.selectionHandler.lastActionRow = newActionRow;\n    table.selectRows(newSelectedRows, true);\n    table.scrollTo(newActionRow);\n    if (!table.isFocused()) {\n      table.focus();\n    }\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gCAAgC,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAO,aAAa;AAEjF,eAAe,MAAMC,0BAA0B,SAASJ,gCAAgC,CAAC;EAEvFK,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAACL,IAAI,CAACM,EAAE,CAAC;IACtB,IAAI,CAACC,cAAc,CAACC,IAAI,GAAG,GAAG;IAC9B,IAAI,CAACD,cAAc,CAACE,YAAY,GAAG,CAACA,YAAY,EAAEC,KAAK,KAAK;MAC1D,IAAIC,GAAG,GAAG,IAAI,CAACC,uBAAuB,EAAE;MACxC,IAAID,GAAG,EAAE;QACP,OAAOA,GAAG,CAACE,IAAI;MACjB;IACF,CAAC;EACH;EAEAC,MAAM,CAACJ,KAAK,EAAE;IACZ,IAAIN,KAAK,GAAG,IAAI,CAACW,KAAK;MACpBC,IAAI,GAAGZ,KAAK,CAACa,WAAW;MACxBC,YAAY,GAAGd,KAAK,CAACc,YAAY;MACjCC,aAAa,GAAGf,KAAK,CAACgB,gBAAgB,CAACD,aAAa;MACpDE,kBAAkB,GAAG,CAAC,CAAC;MACvBC,iBAAiB,GAAG,CAAC,CAAC;MACtBC,eAAe;MAAEC,YAAY;IAE/B,IAAIL,aAAa,EAAE;MACjBE,kBAAkB,GAAGL,IAAI,CAACS,OAAO,CAACN,aAAa,CAAC;IAClD;IAEA,IAAIH,IAAI,CAACU,MAAM,GAAG,CAAC,KAAKR,YAAY,CAACQ,MAAM,GAAG,CAAC,IAAIL,kBAAkB,GAAG,CAAC,CAAC,CAAC,EAAE;MAC3E;MACA,IAAIA,kBAAkB,GAAG,CAAC,EAAE;QAC1B,IAAIL,IAAI,CAACU,MAAM,KAAKR,YAAY,CAACQ,MAAM,EAAE;UACvCP,aAAa,GAAGpB,MAAM,CAAC4B,IAAI,CAACX,IAAI,CAAC;QACnC,CAAC,MAAM;UACLG,aAAa,GAAGpB,MAAM,CAAC6B,KAAK,CAACV,YAAY,CAAC;QAC5C;QACAG,kBAAkB,GAAGL,IAAI,CAACS,OAAO,CAACN,aAAa,CAAC;MAClD;MACA,IAAIE,kBAAkB,KAAK,CAAC,EAAE;QAC5B;MACF;MAEAC,iBAAiB,GAAGD,kBAAkB,GAAG,CAAC;MAC1CG,YAAY,GAAGR,IAAI,CAACM,iBAAiB,CAAC;MACtCC,eAAe,GAAG,CAACC,YAAY,CAAC;MAEhC,IAAId,KAAK,CAACmB,QAAQ,EAAE;QAClB,IAAIzB,KAAK,CAAC0B,aAAa,CAACN,YAAY,CAAC,EAAE;UACrC;UACA;UACAD,eAAe,GAAG,EAAE;UACpBxB,MAAM,CAACgC,OAAO,CAACR,eAAe,EAAEL,YAAY,CAAC;UAC7C;UACA,IAAIc,gBAAgB,GAAG5B,KAAK,CAACgB,gBAAgB,CAACa,yBAAyB,EAAE;UACzE,IAAIhC,KAAK,CAACiC,OAAO,CAACb,kBAAkB,EAAEW,gBAAgB,CAAC,CAAC,CAAC,EAAEA,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE;YAC/EjC,MAAM,CAACoC,MAAM,CAACZ,eAAe,EAAEJ,aAAa,CAAC;UAC/C;QACF,CAAC,MAAM;UACLI,eAAe,GAAGxB,MAAM,CAACqC,KAAK,CAACb,eAAe,EAAEL,YAAY,CAAC;UAC7DM,YAAY,GAAG,IAAI,CAACa,0BAA0B,CAACjC,KAAK,EAAEkB,iBAAiB,CAAC;QAC1E;MACF;IACF,CAAC,MAAM;MACLC,eAAe,GAAG,CAACxB,MAAM,CAAC4B,IAAI,CAACX,IAAI,CAAC,CAAC;MACrCQ,YAAY,GAAGD,eAAe,CAAC,CAAC,CAAC;IACnC;IAEAnB,KAAK,CAACgB,gBAAgB,CAACD,aAAa,GAAGK,YAAY;IACnDpB,KAAK,CAACkC,UAAU,CAACf,eAAe,EAAE,IAAI,CAAC;IACvCnB,KAAK,CAACmC,QAAQ,CAACf,YAAY,CAAC;IAC5B,IAAI,CAACpB,KAAK,CAACoC,SAAS,EAAE,EAAE;MACtBpC,KAAK,CAACqC,KAAK,EAAE;IACf;EACF;AACF"},"metadata":{},"sourceType":"module"}