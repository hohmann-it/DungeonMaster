{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Key, KeyStroke } from '../index';\n\n/**\n * KeyStroke which is bound to a range of keys, e.g. ctrl-1 ... ctrl-9.\n */\nexport default class RangeKeyStroke extends KeyStroke {\n  constructor() {\n    super();\n    this.ranges = [];\n  }\n  registerRange(from, to) {\n    this.ranges.push({\n      from: from,\n      to: to\n    });\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _accept(event) {\n    // event.ctrlKey||event.metaKey  --> some keystrokes with ctrl modifier are captured and suppressed by osx use in this cases command key\n    if ((event.ctrlKey || event.metaKey) !== this.ctrl || event.altKey !== this.alt || event.shiftKey !== this.shift) {\n      return false;\n    }\n    return this.ranges.some(function (range) {\n      return event.which >= this._getRangeFrom(range) && event.which <= this._getRangeTo(range);\n    }, this);\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  keys() {\n    let keys = [];\n    this.ranges.forEach(function (range) {\n      let from = this._getRangeFrom(range);\n      let to = this._getRangeTo(range);\n      for (let which = from; which <= to; which++) {\n        keys.push(new Key(this, which));\n      }\n    }, this);\n    return keys;\n  }\n  _getRangeFrom(range) {\n    return typeof range.from === 'function' ? range.from() : range.from;\n  }\n  _getRangeTo(range) {\n    return typeof range.to === 'function' ? range.to() : range.to;\n  }\n}","map":{"version":3,"names":["Key","KeyStroke","RangeKeyStroke","constructor","ranges","registerRange","from","to","push","_accept","event","ctrlKey","metaKey","ctrl","altKey","alt","shiftKey","shift","some","range","which","_getRangeFrom","_getRangeTo","keys","forEach"],"sources":["C:/workspace/ddhub/ddhub/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/keystroke/RangeKeyStroke.js"],"sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Key, KeyStroke} from '../index';\n\n/**\n * KeyStroke which is bound to a range of keys, e.g. ctrl-1 ... ctrl-9.\n */\nexport default class RangeKeyStroke extends KeyStroke {\n\n  constructor() {\n    super();\n    this.ranges = [];\n  }\n\n  registerRange(from, to) {\n    this.ranges.push({\n      from: from,\n      to: to\n    });\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _accept(event) {\n    // event.ctrlKey||event.metaKey  --> some keystrokes with ctrl modifier are captured and suppressed by osx use in this cases command key\n    if ((event.ctrlKey || event.metaKey) !== this.ctrl ||\n      event.altKey !== this.alt ||\n      event.shiftKey !== this.shift\n    ) {\n      return false;\n    }\n\n    return this.ranges.some(function(range) {\n      return event.which >= this._getRangeFrom(range) && event.which <= this._getRangeTo(range);\n    }, this);\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  keys() {\n    let keys = [];\n    this.ranges.forEach(function(range) {\n      let from = this._getRangeFrom(range);\n      let to = this._getRangeTo(range);\n\n      for (let which = from; which <= to; which++) {\n        keys.push(new Key(this, which));\n      }\n    }, this);\n\n    return keys;\n  }\n\n  _getRangeFrom(range) {\n    return (typeof range.from === 'function' ? range.from() : range.from);\n  }\n\n  _getRangeTo(range) {\n    return (typeof range.to === 'function' ? range.to() : range.to);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,GAAG,EAAEC,SAAS,QAAO,UAAU;;AAEvC;AACA;AACA;AACA,eAAe,MAAMC,cAAc,SAASD,SAAS,CAAC;EAEpDE,WAAW,GAAG;IACZ,KAAK,EAAE;IACP,IAAI,CAACC,MAAM,GAAG,EAAE;EAClB;EAEAC,aAAa,CAACC,IAAI,EAAEC,EAAE,EAAE;IACtB,IAAI,CAACH,MAAM,CAACI,IAAI,CAAC;MACfF,IAAI,EAAEA,IAAI;MACVC,EAAE,EAAEA;IACN,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACEE,OAAO,CAACC,KAAK,EAAE;IACb;IACA,IAAI,CAACA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,OAAO,MAAM,IAAI,CAACC,IAAI,IAChDH,KAAK,CAACI,MAAM,KAAK,IAAI,CAACC,GAAG,IACzBL,KAAK,CAACM,QAAQ,KAAK,IAAI,CAACC,KAAK,EAC7B;MACA,OAAO,KAAK;IACd;IAEA,OAAO,IAAI,CAACb,MAAM,CAACc,IAAI,CAAC,UAASC,KAAK,EAAE;MACtC,OAAOT,KAAK,CAACU,KAAK,IAAI,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC,IAAIT,KAAK,CAACU,KAAK,IAAI,IAAI,CAACE,WAAW,CAACH,KAAK,CAAC;IAC3F,CAAC,EAAE,IAAI,CAAC;EACV;;EAEA;AACF;AACA;EACEI,IAAI,GAAG;IACL,IAAIA,IAAI,GAAG,EAAE;IACb,IAAI,CAACnB,MAAM,CAACoB,OAAO,CAAC,UAASL,KAAK,EAAE;MAClC,IAAIb,IAAI,GAAG,IAAI,CAACe,aAAa,CAACF,KAAK,CAAC;MACpC,IAAIZ,EAAE,GAAG,IAAI,CAACe,WAAW,CAACH,KAAK,CAAC;MAEhC,KAAK,IAAIC,KAAK,GAAGd,IAAI,EAAEc,KAAK,IAAIb,EAAE,EAAEa,KAAK,EAAE,EAAE;QAC3CG,IAAI,CAACf,IAAI,CAAC,IAAIR,GAAG,CAAC,IAAI,EAAEoB,KAAK,CAAC,CAAC;MACjC;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAOG,IAAI;EACb;EAEAF,aAAa,CAACF,KAAK,EAAE;IACnB,OAAQ,OAAOA,KAAK,CAACb,IAAI,KAAK,UAAU,GAAGa,KAAK,CAACb,IAAI,EAAE,GAAGa,KAAK,CAACb,IAAI;EACtE;EAEAgB,WAAW,CAACH,KAAK,EAAE;IACjB,OAAQ,OAAOA,KAAK,CAACZ,EAAE,KAAK,UAAU,GAAGY,KAAK,CAACZ,EAAE,EAAE,GAAGY,KAAK,CAACZ,EAAE;EAChE;AACF"},"metadata":{},"sourceType":"module"}