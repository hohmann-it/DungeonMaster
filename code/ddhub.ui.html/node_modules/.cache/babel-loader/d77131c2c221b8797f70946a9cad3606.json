{"ast":null,"code":"/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { dates, Device, HtmlComponent, scrollbars, TimePickerTouchPopup, Widget } from '../index';\nimport $ from 'jquery';\nexport default class TimePicker extends Widget {\n  constructor() {\n    super();\n\n    // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n    this.preselectedTime = null;\n    this.selectedTime = null;\n    this.resolution = null;\n    this.$scrollable = null;\n  }\n  _init(options) {\n    super._init(options);\n    this.resolution = options.timeResolution;\n  }\n  _render() {\n    this.$container = this.$parent.appendDiv('time-picker').toggleClass('touch-only', Device.get().supportsOnlyTouch());\n    this.$parent.appendDiv('time-picker-separator');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this._renderTimeSelection();\n    this._installScrollbars();\n  }\n  _renderTimeSelection() {\n    let i,\n      date = dates.trunc(new Date()),\n      now = dates.ceil(new Date(), this.resolution),\n      currentHours = 0,\n      $hourRow,\n      $time;\n    let $box = this.$parent.makeDiv('day-table');\n    for (i = 0; i < 24; i++) {\n      // reset minutes always every hour line starts with 00\n      date.setMinutes(0);\n      currentHours = date.getHours();\n      $hourRow = $box.appendDiv('hour-row');\n      let $hour = $hourRow.appendDiv('cell  hours').data('time', new Date(date)).on('click', this._onTimeClick.bind(this));\n      if (now.getHours() === date.getHours()) {\n        $hour.addClass('now');\n      }\n      $hour.appendSpan('text').text(dates.format(date, this.session.locale, 'HH'));\n      while (currentHours === date.getHours()) {\n        $time = $hourRow.appendDiv('cell minutes').data('time', new Date(date)).on('click', this._onTimeClick.bind(this));\n        $time.appendSpan('text').text(dates.format(date, this.session.locale, 'mm'));\n        if (dates.isSameTime(now, date)) {\n          $time.addClass('now');\n        }\n        date.setMinutes(date.getMinutes() + this.resolution);\n      }\n    }\n    $box.appendTo(this.$container);\n    return $box;\n  }\n\n  /**\n   * @override\n   */\n  _installScrollbars(options) {\n    this._uninstallScrollbars();\n    super._installScrollbars({\n      axis: 'y'\n    });\n  }\n  _scrollTo($scrollTo) {\n    if (!$scrollTo) {\n      return;\n    }\n    if (this.parent instanceof TimePickerTouchPopup) {\n      // setTimeout seems to be necessary on ios\n      setTimeout(() => {\n        if (this.rendered) {\n          scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n        }\n      });\n    } else {\n      scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n    }\n  }\n  preselectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setSelectedTime(null);\n    }\n    this.setPreselectedTime(time);\n  }\n\n  /**\n   * @internal, use preselectDate to preselect a date\n   */\n  setPreselectedTime(preselectedTime) {\n    this.setProperty('preselectedTime', preselectedTime);\n  }\n  _renderPreselectedTime() {\n    let $scrollTo;\n    this.$container.find('.cell').each((i, elem) => {\n      let $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('preselected');\n      if (this.preselectedTime) {\n        if ($time.hasClass('hours') && this.preselectedTime.getHours() === time.getHours()) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.preselectedTime, time)) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        }\n      }\n    });\n    this._scrollTo($scrollTo);\n  }\n  selectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setPreselectedTime(null);\n    }\n    this.setSelectedTime(time);\n  }\n\n  /**\n   * @internal, use selectDate to select a date\n   */\n  setSelectedTime(selectedTime) {\n    this.setProperty('selectedTime', selectedTime);\n  }\n  _renderSelectedTime() {\n    let $scrollTo;\n    this.$container.find('.cell').each((i, elem) => {\n      let $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('selected');\n      if (this.selectedTime) {\n        if ($time.hasClass('hours') && this.selectedTime.getHours() === time.getHours()) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.selectedTime, time)) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        }\n      }\n    });\n    this._scrollTo($scrollTo);\n  }\n  shiftViewDate(years, months, days) {\n    let date = this.viewDate;\n    date = dates.shift(date, years, months, days);\n    this.showDate(date);\n  }\n  shiftSelectedTime(hourUnits, minuteUnits, secondUnits) {\n    let time = this.preselectedTime;\n    if (this.selectedTime) {\n      time = dates.shiftTime(this.selectedTime, hourUnits, minuteUnits * this.resolution, secondUnits);\n    }\n    if (!time) {\n      return; // do nothing when no date was found\n    }\n\n    this.selectTime(this._snapToTimeGrid(time));\n  }\n  _snapToTimeGrid(time) {\n    if (!time) {\n      return time;\n    }\n    let min = time.getMinutes();\n    min = parseInt(min / this.resolution) * this.resolution;\n    time.setMinutes(min);\n    return time;\n  }\n  _onNavigationMouseDown(event) {\n    let $target = $(event.currentTarget);\n    let diff = $target.data('shift');\n    this.shiftViewDate(0, diff, 0);\n  }\n  _onTimeClick(event) {\n    let $target = $(event.currentTarget);\n    let time = new Date($target.data('time'));\n    this.selectTime(time);\n    this.trigger('timeSelect', {\n      time: time\n    });\n  }\n  _onMouseWheel(event) {\n    event = event.originalEvent || this.$container.window(true).event.originalEvent;\n    let wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n    let diff = wheelData >= 0 ? -1 : 1;\n    this.shiftViewDate(0, diff, 0);\n    event.preventDefault();\n  }\n}","map":{"version":3,"names":["dates","Device","HtmlComponent","scrollbars","TimePickerTouchPopup","Widget","$","TimePicker","constructor","preselectedTime","selectedTime","resolution","$scrollable","_init","options","timeResolution","_render","$container","$parent","appendDiv","toggleClass","get","supportsOnlyTouch","htmlComp","install","session","_renderTimeSelection","_installScrollbars","i","date","trunc","Date","now","ceil","currentHours","$hourRow","$time","$box","makeDiv","setMinutes","getHours","$hour","data","on","_onTimeClick","bind","addClass","appendSpan","text","format","locale","isSameTime","getMinutes","appendTo","_uninstallScrollbars","axis","_scrollTo","$scrollTo","parent","setTimeout","rendered","scrollTo","preselectTime","time","setSelectedTime","setPreselectedTime","setProperty","_renderPreselectedTime","find","each","elem","removeClass","hasClass","selectTime","_renderSelectedTime","shiftViewDate","years","months","days","viewDate","shift","showDate","shiftSelectedTime","hourUnits","minuteUnits","secondUnits","shiftTime","_snapToTimeGrid","min","parseInt","_onNavigationMouseDown","event","$target","currentTarget","diff","trigger","_onMouseWheel","originalEvent","window","wheelData","wheelDelta","detail","preventDefault"],"sources":["C:/git/d-d-hub/code/node_modules/.pnpm/@eclipse-scout+core@22.0.41/node_modules/@eclipse-scout/core/src/timepicker/TimePicker.js"],"sourcesContent":["/*\n * Copyright (c) 2010-2021 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {dates, Device, HtmlComponent, scrollbars, TimePickerTouchPopup, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TimePicker extends Widget {\n\n  constructor() {\n    super();\n\n    // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n    this.preselectedTime = null;\n    this.selectedTime = null;\n    this.resolution = null;\n    this.$scrollable = null;\n  }\n\n  _init(options) {\n    super._init(options);\n    this.resolution = options.timeResolution;\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('time-picker')\n      .toggleClass('touch-only', Device.get().supportsOnlyTouch());\n    this.$parent.appendDiv('time-picker-separator');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this._renderTimeSelection();\n    this._installScrollbars();\n  }\n\n  _renderTimeSelection() {\n    let i,\n      date = dates.trunc(new Date()),\n      now = dates.ceil(new Date(), this.resolution),\n      currentHours = 0,\n      $hourRow,\n      $time;\n    let $box = this.$parent.makeDiv('day-table');\n    for (i = 0; i < 24; i++) {\n      // reset minutes always every hour line starts with 00\n      date.setMinutes(0);\n      currentHours = date.getHours();\n\n      $hourRow = $box.appendDiv('hour-row');\n      let $hour = $hourRow.appendDiv('cell  hours')\n        .data('time', new Date(date))\n        .on('click', this._onTimeClick.bind(this));\n      if (now.getHours() === date.getHours()) {\n        $hour.addClass('now');\n      }\n      $hour.appendSpan('text')\n        .text(dates.format(date, this.session.locale, 'HH'));\n\n      while (currentHours === date.getHours()) {\n        $time = $hourRow.appendDiv('cell minutes')\n          .data('time', new Date(date))\n          .on('click', this._onTimeClick.bind(this));\n\n        $time.appendSpan('text').text(dates.format(date, this.session.locale, 'mm'));\n        if (dates.isSameTime(now, date)) {\n          $time.addClass('now');\n        }\n        date.setMinutes(date.getMinutes() + this.resolution);\n      }\n    }\n    $box.appendTo(this.$container);\n    return $box;\n  }\n\n  /**\n   * @override\n   */\n  _installScrollbars(options) {\n    this._uninstallScrollbars();\n\n    super._installScrollbars({\n      axis: 'y'\n    });\n  }\n\n  _scrollTo($scrollTo) {\n    if (!$scrollTo) {\n      return;\n    }\n    if (this.parent instanceof TimePickerTouchPopup) {\n      // setTimeout seems to be necessary on ios\n      setTimeout(() => {\n        if (this.rendered) {\n          scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n        }\n      });\n    } else {\n      scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n    }\n  }\n\n  preselectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setSelectedTime(null);\n    }\n    this.setPreselectedTime(time);\n  }\n\n  /**\n   * @internal, use preselectDate to preselect a date\n   */\n  setPreselectedTime(preselectedTime) {\n    this.setProperty('preselectedTime', preselectedTime);\n  }\n\n  _renderPreselectedTime() {\n    let $scrollTo;\n    this.$container.find('.cell').each((i, elem) => {\n      let $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('preselected');\n      if (this.preselectedTime) {\n        if ($time.hasClass('hours') && this.preselectedTime.getHours() === time.getHours()) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.preselectedTime, time)) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        }\n      }\n    });\n    this._scrollTo($scrollTo);\n  }\n\n  selectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setPreselectedTime(null);\n    }\n    this.setSelectedTime(time);\n  }\n\n  /**\n   * @internal, use selectDate to select a date\n   */\n  setSelectedTime(selectedTime) {\n    this.setProperty('selectedTime', selectedTime);\n  }\n\n  _renderSelectedTime() {\n\n    let $scrollTo;\n    this.$container.find('.cell').each((i, elem) => {\n      let $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('selected');\n      if (this.selectedTime) {\n        if ($time.hasClass('hours') && this.selectedTime.getHours() === time.getHours()) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.selectedTime, time)) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        }\n      }\n    });\n    this._scrollTo($scrollTo);\n  }\n\n  shiftViewDate(years, months, days) {\n    let date = this.viewDate;\n    date = dates.shift(date, years, months, days);\n    this.showDate(date);\n  }\n\n  shiftSelectedTime(hourUnits, minuteUnits, secondUnits) {\n    let time = this.preselectedTime;\n    if (this.selectedTime) {\n      time = dates.shiftTime(this.selectedTime, hourUnits, minuteUnits * this.resolution, secondUnits);\n    }\n    if (!time) {\n      return; // do nothing when no date was found\n    }\n    this.selectTime(this._snapToTimeGrid(time));\n  }\n\n  _snapToTimeGrid(time) {\n    if (!time) {\n      return time;\n    }\n    let min = time.getMinutes();\n    min = (parseInt(min / this.resolution) * this.resolution);\n    time.setMinutes(min);\n    return time;\n\n  }\n\n  _onNavigationMouseDown(event) {\n    let $target = $(event.currentTarget);\n    let diff = $target.data('shift');\n    this.shiftViewDate(0, diff, 0);\n  }\n\n  _onTimeClick(event) {\n    let $target = $(event.currentTarget);\n    let time = new Date($target.data('time'));\n    this.selectTime(time);\n    this.trigger('timeSelect', {\n      time: time\n    });\n  }\n\n  _onMouseWheel(event) {\n    event = event.originalEvent || this.$container.window(true).event.originalEvent;\n    let wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n    let diff = (wheelData >= 0 ? -1 : 1);\n    this.shiftViewDate(0, diff, 0);\n    event.preventDefault();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}