package com.hohmannit.dungeonmaster.shared.zauberbuch;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "com.hohmannit.dungeonmaster.client.zauberbuch.ZauberForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class ZauberFormData extends AbstractFormData {
	private static final long serialVersionUID = 1L;

	public Beschreibung getBeschreibung() {
		return getFieldByClass(Beschreibung.class);
	}

	public Gestik getGestik() {
		return getFieldByClass(Gestik.class);
	}

	public Grad getGrad() {
		return getFieldByClass(Grad.class);
	}

	public Hoeheregrade getHoeheregrade() {
		return getFieldByClass(Hoeheregrade.class);
	}

	public Material getMaterial() {
		return getFieldByClass(Material.class);
	}

	public Name getName() {
		return getFieldByClass(Name.class);
	}

	public Reichweite getReichweite() {
		return getFieldByClass(Reichweite.class);
	}

	public Reichweitetyp getReichweitetyp() {
		return getFieldByClass(Reichweitetyp.class);
	}

	public Ritual getRitual() {
		return getFieldByClass(Ritual.class);
	}

	public Verbal getVerbal() {
		return getFieldByClass(Verbal.class);
	}

	public Wirkungsdauer getWirkungsdauer() {
		return getFieldByClass(Wirkungsdauer.class);
	}

	public Wirkungsdauertyp getWirkungsdauertyp() {
		return getFieldByClass(Wirkungsdauertyp.class);
	}

	/**
	 * access method for property ZauberId.
	 */
	public Long getZauberId() {
		return getZauberIdProperty().getValue();
	}

	/**
	 * access method for property ZauberId.
	 */
	public void setZauberId(Long zauberId) {
		getZauberIdProperty().setValue(zauberId);
	}

	public ZauberIdProperty getZauberIdProperty() {
		return getPropertyByClass(ZauberIdProperty.class);
	}

	public Zaubertyp getZaubertyp() {
		return getFieldByClass(Zaubertyp.class);
	}

	public ZaubkomponentenTable getZaubkomponentenTable() {
		return getFieldByClass(ZaubkomponentenTable.class);
	}

	public Zeitaufwand getZeitaufwand() {
		return getFieldByClass(Zeitaufwand.class);
	}

	public Zeitaufwandtyp getZeitaufwandtyp() {
		return getFieldByClass(Zeitaufwandtyp.class);
	}

	public static class Beschreibung extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Gestik extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class Grad extends AbstractValueFieldData<Integer> {
		private static final long serialVersionUID = 1L;
	}

	public static class Hoeheregrade extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Material extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class Name extends AbstractValueFieldData<String> {
		private static final long serialVersionUID = 1L;
	}

	public static class Reichweite extends AbstractValueFieldData<Integer> {
		private static final long serialVersionUID = 1L;
	}

	public static class Reichweitetyp extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class Ritual extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class Verbal extends AbstractValueFieldData<Boolean> {
		private static final long serialVersionUID = 1L;
	}

	public static class Wirkungsdauer extends AbstractValueFieldData<Integer> {
		private static final long serialVersionUID = 1L;
	}

	public static class Wirkungsdauertyp extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class ZauberIdProperty extends AbstractPropertyData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class Zaubertyp extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}

	public static class ZaubkomponentenTable extends AbstractTableFieldBeanData {
		private static final long serialVersionUID = 1L;

		@Override
		public ZaubkomponentenTableRowData addRow() {
			return (ZaubkomponentenTableRowData) super.addRow();
		}

		@Override
		public ZaubkomponentenTableRowData addRow(int rowState) {
			return (ZaubkomponentenTableRowData) super.addRow(rowState);
		}

		@Override
		public ZaubkomponentenTableRowData createRow() {
			return new ZaubkomponentenTableRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return ZaubkomponentenTableRowData.class;
		}

		@Override
		public ZaubkomponentenTableRowData[] getRows() {
			return (ZaubkomponentenTableRowData[]) super.getRows();
		}

		@Override
		public ZaubkomponentenTableRowData rowAt(int index) {
			return (ZaubkomponentenTableRowData) super.rowAt(index);
		}

		public void setRows(ZaubkomponentenTableRowData[] rows) {
			super.setRows(rows);
		}

		public static class ZaubkomponentenTableRowData extends AbstractTableRowData {
			private static final long serialVersionUID = 1L;
			public static final String id = "id";
			public static final String name = "name";
			public static final String wert = "wert";
			public static final String ersatz = "ersatz";
			private String m_id;
			private Long m_name;
			private String m_wert;
			private Long m_ersatz;

			public String getId() {
				return m_id;
			}

			public void setId(String newId) {
				m_id = newId;
			}

			public Long getName() {
				return m_name;
			}

			public void setName(Long newName) {
				m_name = newName;
			}

			public String getWert() {
				return m_wert;
			}

			public void setWert(String newWert) {
				m_wert = newWert;
			}

			public Long getErsatz() {
				return m_ersatz;
			}

			public void setErsatz(Long newErsatz) {
				m_ersatz = newErsatz;
			}
		}
	}

	public static class Zeitaufwand extends AbstractValueFieldData<Integer> {
		private static final long serialVersionUID = 1L;
	}

	public static class Zeitaufwandtyp extends AbstractValueFieldData<Long> {
		private static final long serialVersionUID = 1L;
	}
}
