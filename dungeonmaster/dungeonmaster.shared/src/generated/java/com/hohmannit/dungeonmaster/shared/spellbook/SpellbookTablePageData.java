package com.hohmannit.dungeonmaster.shared.spellbook;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.page.AbstractTablePageData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "com.hohmannit.dungeonmaster.client.spellbook.SpellbookTablePage", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class SpellbookTablePageData extends AbstractTablePageData {
	private static final long serialVersionUID = 1L;

	@Override
	public SpellbookTableRowData addRow() {
		return (SpellbookTableRowData) super.addRow();
	}

	@Override
	public SpellbookTableRowData addRow(int rowState) {
		return (SpellbookTableRowData) super.addRow(rowState);
	}

	@Override
	public SpellbookTableRowData createRow() {
		return new SpellbookTableRowData();
	}

	@Override
	public Class<? extends AbstractTableRowData> getRowType() {
		return SpellbookTableRowData.class;
	}

	@Override
	public SpellbookTableRowData[] getRows() {
		return (SpellbookTableRowData[]) super.getRows();
	}

	@Override
	public SpellbookTableRowData rowAt(int index) {
		return (SpellbookTableRowData) super.rowAt(index);
	}

	public void setRows(SpellbookTableRowData[] rows) {
		super.setRows(rows);
	}

	public static class SpellbookTableRowData extends AbstractTableRowData {
		private static final long serialVersionUID = 1L;
	}
}
